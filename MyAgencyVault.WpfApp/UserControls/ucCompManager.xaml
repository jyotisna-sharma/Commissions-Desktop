<UserControl x:Class="MyAgencyVault.WinApp.UserControls.ucCompManager"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:toolkit="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit"
    xmlns:local="clr-namespace:MyAgencyVault.WinApp.Common"
    xmlns:Conver="clr-namespace:MyAgencyVault.ViewModel.Converters;assembly=MyAgencyVault.VM" 
    xmlns:conv="clr-namespace:MyAgencyVault.ViewModel.Converters;assembly=MyAgencyVault.VM"
    xmlns:dg= "http://schemas.microsoft.com/wpf/2008/toolkit"  
    xmlns:toolkitExt="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended"
    Height="auto" Width="793" Loaded="UserControl_Loaded">
    
    <UserControl.Resources>
        <Conver:PercentageConverter x:Key="percentageConv"/> 
    </UserControl.Resources>
    
    <Border BorderBrush="#6F9DD9" BorderThickness="1" Margin="0,0,0,0" Padding="4,4,4,4">

        <Grid Height="773.089" >
            <Grid.Resources>
                <conv:Int2StringConverter x:Key="NumberToStringConv"/>
                <conv:VisibleConverter x:Key="VisibleConverter1"/>
                <!-- Simple Expander Button's Template-->
                <ControlTemplate x:Key="SimpleExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
                    <Border x:Name="ExpanderButtonBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="Transparent"
                               Grid.ColumnSpan="2"/>
                            <Ellipse Name="Circle"
                         Grid.Column="0"
                         Stroke="DarkGray"
                         Width="20"
                         Height="20"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         />
                            <Path x:Name="Sign"
                      Grid.Column="0"
                      Data="M 0,5 H 10 M 5,0 V 10 Z"
                      Stroke="#FF666666"
                      Width="10"
                      Height="10"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5"
                      />
                            <ContentPresenter x:Name="HeaderContent"
                                  Grid.Column="1"
                                  Margin="4,0,0,0"
                                  ContentSource="Content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--Change the sign to minus when toggled-->
                        <Trigger Property="IsChecked"
                         Value="True">
                            <Setter Property="Data" TargetName="Sign" Value="M 0,5 H 10 Z"/>
                        </Trigger>

                        <!-- MouseOver, Pressed behaviours-->
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="Circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="Sign"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="Circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="Circle"/>
                            <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="Sign"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

                <!-- Simple Expander Template-->
                <ControlTemplate x:Key="SimpleExpanderTemp" TargetType="{x:Type Expander}">
                    <DockPanel>
                        <ToggleButton x:Name="ExpanderButton" 
                              DockPanel.Dock="Top"
                              Template="{StaticResource SimpleExpanderButtonTemp}"
                              Content="{TemplateBinding Header}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Padding="1.5,0">
                        </ToggleButton>
                        <ContentPresenter x:Name="ExpanderContent"
                                  Grid.Row="1" 
                                  Visibility="Collapsed"
                                  DockPanel.Dock="Bottom"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

                <!-- Animated Expander Button's Template-->
                <ControlTemplate x:Key="AnimatedExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
                    <Border x:Name="ExpanderButtonBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="Transparent"
                               Grid.ColumnSpan="2"/>
                            <Ellipse Name="Circle"
                         Grid.Column="0"
                         Stroke="DarkGray"
                         Width="20"
                         Height="20"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         />
                            <Path x:Name="Arrow"
                      Grid.Column="0"
                      Data="M 1,1.5 L 4.5,5 8,1.5"
                      Stroke="#FF666666"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5"
                      >
                                <Path.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Path.RenderTransform>
                            </Path>
                            <ContentPresenter x:Name="HeaderContent"
                                      Grid.Column="1"
                                      Margin="4,0,0,0"
                                      ContentSource="Content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Animate arrow when toggled-->
                        <Trigger Property="IsChecked"
                         Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="180"
                                                 Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!-- MouseOver, Pressed behaviours-->
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="Circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="Circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="Circle"/>
                            <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

                <!-- Stretch Out Content Expander's Template,
        Uses: AnimatedExpanderButtonTemp from above-->
                <ControlTemplate x:Key="StretchyExpanderTemp" TargetType="{x:Type Expander}">
                    <DockPanel>
                        <ToggleButton x:Name="ExpanderButton" 
                              DockPanel.Dock="Top"
                              Template="{StaticResource AnimatedExpanderButtonTemp}"
                              Content="{TemplateBinding Header}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Padding="1.5,0">
                        </ToggleButton>
                        <ContentPresenter x:Name="ExpanderContent"
                                  ContentSource="Content"
                                  DockPanel.Dock="Bottom"
                                  >
                            <ContentPresenter.LayoutTransform>
                                <ScaleTransform ScaleY="0"/>
                            </ContentPresenter.LayoutTransform>
                        </ContentPresenter>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"                                                 
                                                 To="1"
                                                 Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>

                <!-- Slide Out Content Expander's Template, 
        Uses: AnimatedExpanderButtonTemp from above, 
              MultiplyConverter in codebehind-->
                
                <ControlTemplate x:Key="RevealExpanderTemp" TargetType="{x:Type Expander}">
                    <DockPanel>
                        <ToggleButton x:Name="ExpanderButton" 
                              DockPanel.Dock="Top"
                              Template="{StaticResource AnimatedExpanderButtonTemp}"
                              Content="{TemplateBinding Header}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Padding="1.5,0">
                        </ToggleButton>
                        <ScrollViewer x:Name="ExpanderContentScrollView" DockPanel.Dock="Bottom"
                              HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden"
                              HorizontalContentAlignment="Stretch"
                              VerticalContentAlignment="Bottom"
                              >
                            <ScrollViewer.Tag>
                                <sys:Double>0.0</sys:Double>
                            </ScrollViewer.Tag>
                            <ScrollViewer.Height>
                                <MultiBinding Converter="{StaticResource multiplyConverter}">
                                    <Binding Path="ActualHeight" ElementName="ExpanderContent"/>
                                    <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </ScrollViewer.Height>
                            <ContentPresenter x:Name="ExpanderContent" ContentSource="Content"/>
                        </ScrollViewer>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView"
                                                 Storyboard.TargetProperty="Tag"                                                 
                                                 To="1"
                                                 Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView"
                                                 Storyboard.TargetProperty="Tag"                                                 
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Grid.Resources>
            <TabControl  Margin="0,0,0,0" Name="tabControl1" HorizontalAlignment="Left" VerticalAlignment="Top">
                <TabItem Header="Batch Manager" Name="tabBatchManager" local:EyeCandy.Image="..\Images/Icons/flash_yellow.png" HeaderTemplate ="{StaticResource ImageBindingTabControlItems}">
                    <toolkitExt:BusyIndicator IsBusy="{Binding IsBusy,UpdateSourceTrigger=PropertyChanged}" BusyContent="Uploading...">
                    <Grid Height="550" Width="760" Margin="0,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                            <ColumnDefinition ></ColumnDefinition>
                            <ColumnDefinition Width="150"></ColumnDefinition>
                            <ColumnDefinition Width="8"></ColumnDefinition>
                            <ColumnDefinition ></ColumnDefinition>
                            <ColumnDefinition ></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition ></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition  Width="8"></ColumnDefinition>
                            <ColumnDefinition Width="120"></ColumnDefinition>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10"></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition Height="0"></RowDefinition>
                            <RowDefinition  ></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition Height="10"></RowDefinition>
                        </Grid.RowDefinitions>
                        
                        <Grid Grid.Column="1" VerticalAlignment="Center" Grid.Row="1" Grid.ColumnSpan="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <Button Margin="2" Grid.Column="0" Style="{StaticResource ImageButtonSave}" local:EyeCandy.Image="..\Images\Icons\flash_yellow.png" Command="{Binding UploadBatch}" Width="80" HorizontalAlignment="Left">Upload</Button>
                            <Label Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right" Name="lblBrocker">Agency</Label>
                                <ComboBox Margin="2" IsEnabled="{Binding AgencyBatchComboEnable}" Grid.Column="2" ItemsSource="{Binding SharedVMData.Licensees}" SelectedItem="{Binding SharedVMData.SelectedLicensee}"  HorizontalAlignment="Left" Name="cmbBrocker" Width="146" IsSynchronizedWithCurrentItem="True" >
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text= "{Binding Company}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>                            
                        </Grid>

                        <Grid Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label VerticalAlignment="Center" Name="lblYear" Grid.Column="0">Year</Label>
                            <ComboBox ItemsSource="{Binding BatchDate}" SelectedItem="{Binding SelectedBatchDate}" Grid.Column="1" HorizontalAlignment="Left"  Name="cmbYear" SelectedIndex="0" Width="120"  IsSynchronizedWithCurrentItem="True" Margin="3">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Year}"></TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </Grid>
                        
                        <toolkit:DataGrid Name="dgPolicies" AutoGenerateColumns="False" ItemsSource="{Binding BatchLst,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalScrollBarVisibility="Auto" 
                                          SelectedItem="{Binding SelectedBatch}" Grid.Column="1" Grid.ColumnSpan="2" 
                                          Grid.RowSpan="15" CanUserAddRows="false" Grid.Row="4"  GridLinesVisibility="None" Background="White" IsReadOnly="True">
                            <toolkit:DataGrid.Columns>
                                <!--<toolkit:DataGridTextColumn Header="Created" Binding="{Binding CreatedDate,StringFormat=MM/dd/yy}" ></toolkit:DataGridTextColumn>-->
                                <toolkit:DataGridTextColumn Header="Created" Width="50"  Binding="{Binding CreatedDate,StringFormat=MM/dd}" ></toolkit:DataGridTextColumn>
                                
                                <toolkit:DataGridTextColumn CanUserResize="False" Width="45" Header="Batch#" Binding="{Binding BatchNumber}" EditingElementStyle="{StaticResource RightAlignedEditCell}" 
                                             ElementStyle="{StaticResource RightAlignedCell}">
                                </toolkit:DataGridTextColumn>
                                
                                <!--<toolkit:DataGridTextColumn Header="Agency" Binding="{Binding LicenseeName}"></toolkit:DataGridTextColumn>-->
                                    <toolkit:DataGridTextColumn Header="Balance" Width="60" Visibility="Visible" Binding="{Binding TotalStatementAmount,StringFormat=C2}" EditingElementStyle="{StaticResource RightAlignedEditCell}" 
                                             ElementStyle="{StaticResource RightAlignedCell}">
                                        
                                </toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Status" Width="65"  Binding="{Binding EntryStatus,Converter={StaticResource NumberToStringConv},ConverterParameter=BatchStatus}"></toolkit:DataGridTextColumn>

                            </toolkit:DataGrid.Columns>
                        </toolkit:DataGrid>
                        <toolkit:DataGrid Name="dgPolicies1" Grid.ColumnSpan="7" Grid.RowSpan="8" Grid.Column="4" CanUserAddRows="True"  AutoGenerateColumns="False" ItemsSource="{Binding BatchStatementLst,Mode=TwoWay}" SelectedItem="{Binding BatchSelectedStatement}" GridLinesVisibility="None"  Background="White" Grid.Row="4" IsReadOnly="True" HorizontalScrollBarVisibility="Hidden">
                            <toolkit:DataGrid.Columns>
                                <toolkit:DataGridTextColumn Header="Payor" Visibility="Visible" Binding="{Binding PayorNickName}"  ></toolkit:DataGridTextColumn>
                                <toolkit:DataGridTextColumn Header="Stmnt#" CanUserResize="False" Visibility="Visible" Binding="{Binding StatmentNumber}" EditingElementStyle="{StaticResource RightAlignedEditCell}" 
                                                            
                                             ElementStyle="{StaticResource RightAlignedCell}">
                                </toolkit:DataGridTextColumn>
                                <toolkit:DataGridTextColumn Header="ChkAmt" Visibility="Visible" Binding="{Binding CheckAmount,StringFormat=C2}"
                                                            EditingElementStyle="{StaticResource RightAlignedEditCell}" 
                                             ElementStyle="{StaticResource RightAlignedCell}"></toolkit:DataGridTextColumn>
                                <toolkit:DataGridTextColumn Header="House"   Visibility="Visible" Binding="{Binding House,StringFormat=C2}"
                                                            EditingElementStyle="{StaticResource RightAlignedEditCell}" 
                                             ElementStyle="{StaticResource RightAlignedCell}"></toolkit:DataGridTextColumn>
                                <toolkit:DataGridTextColumn Header="Remaining" Visibility="Visible" Binding="{Binding Remaining,StringFormat=C2}"
                                                            EditingElementStyle="{StaticResource RightAlignedEditCell}" 
                                             ElementStyle="{StaticResource RightAlignedCell}"></toolkit:DataGridTextColumn>
                                <toolkit:DataGridTextColumn Header="Done"   Visibility="Visible" Binding="{Binding DonePer,StringFormat=p0}"
                                                            EditingElementStyle="{StaticResource RightAlignedEditCell}" 
                                             ElementStyle="{StaticResource RightAlignedCell}"></toolkit:DataGridTextColumn>
                                <toolkit:DataGridTextColumn Header="Entries" Visibility="Visible" Binding="{Binding Entries}"
                                                            EditingElementStyle="{StaticResource RightAlignedEditCell}" 
                                             ElementStyle="{StaticResource RightAlignedCell}"></toolkit:DataGridTextColumn>
                                <toolkit:DataGridTextColumn Header="Status"   Visibility="Visible" Binding="{Binding StmtStatus,Converter={StaticResource NumberToStringConv},ConverterParameter=StatementStatus}"></toolkit:DataGridTextColumn>
                            </toolkit:DataGrid.Columns>
                        </toolkit:DataGrid>
                        <toolkit:DataGrid Name="dgPolicies2" AutoGenerateColumns="False" CanUserResizeColumns="False" ItemsSource="{Binding BatchInsuredRecoredLst,Mode=TwoWay}" SelectedItem="{Binding BatchSelectedInsuredRecored}" Grid.RowSpan="6" Grid.Column="4" CanUserAddRows="True" Grid.ColumnSpan="7"  GridLinesVisibility="None"  Background="White" Grid.Row="13" IsReadOnly="True" HorizontalScrollBarVisibility="Hidden">
                            <toolkit:DataGrid.Columns>
                                <toolkit:DataGridTextColumn Header="Insured" Width="8*"  Visibility="Visible" Binding="{Binding ClientName}" ></toolkit:DataGridTextColumn>
                                <toolkit:DataGridTextColumn Header="Payment" Width="2*" Visibility="Visible" Binding="{Binding PaymentRecived,StringFormat=C2}"
                                                            EditingElementStyle="{StaticResource RightAlignedEditCell}" 
                                             ElementStyle="{StaticResource RightAlignedCell}"></toolkit:DataGridTextColumn>
                            </toolkit:DataGrid.Columns>
                        </toolkit:DataGrid>
                                                
                        <StackPanel Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="19" Orientation="Horizontal">
                            <Button HorizontalAlignment="Left" Style="{StaticResource ImageButtonSave}" local:EyeCandy.Image="..\Images\Icons\Document_view.png" Command="{Binding ViewFile}" Margin="0,0,16,0">View File</Button>
                            <Button HorizontalAlignment="Center" Style="{StaticResource ImageButtonSave}" local:EyeCandy.Image="..\Images\Icons\export.png" Command="{Binding ExportFile}" Margin="0,0,16,0">Export</Button>
                            <Button HorizontalAlignment="Right" Command="{Binding DeleteBatch}" Style="{StaticResource ImageButtonSave}" local:EyeCandy.Image="..\Images\Icons\delete.png">Delete</Button>
                        </StackPanel>

                        <StackPanel Grid.Column="5" Grid.ColumnSpan="2" Grid.Row="12" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Command="{Binding ShowPayments}"  Style="{StaticResource ImageButtonSave}" HorizontalAlignment="Right" IsEnabled="{Binding btnSatementEnable}" >
                                Show Payments
                            </Button>
                        </StackPanel>
                        <StackPanel Grid.Column="7" Grid.ColumnSpan="2" Grid.Row="12" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Command="{Binding DeleteStatement}"  Style="{StaticResource ImageButtonSave}" local:EyeCandy.Image="..\Images\Icons\delete.png" HorizontalAlignment="Right" IsEnabled="{Binding btnSatementEnable}" >
                                Delete Statement
                            </Button>
                        </StackPanel>
                          
                            <Label Content="Batch Note" VerticalAlignment="Center"  Grid.Column="1" Grid.Row="20" Grid.RowSpan="2"  HorizontalAlignment="Left" Margin="0,12,0,0" Name="label1"  />
                            <TextBox Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="20" Grid.RowSpan="2" Height="23" Text="{Binding batchNotecontent,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  Margin="10,0,0,0" Name="textBox1" VerticalAlignment="Bottom" Width="105" />
                            <Button Grid.Column="2" ToolTip="Save batch notes" Grid.ColumnSpan="3" Height="23" Style="{StaticResource SaveButton}" Grid.Row="20"  Command="{Binding SaveBatch}" HorizontalAlignment="Left" Margin="100,0,0,0" Name="button1" VerticalAlignment="Bottom"  Grid.RowSpan="2" >
                                
                            </Button>
                        </Grid>
</toolkitExt:BusyIndicator>

                </TabItem>
                <TabItem Visibility="{Binding LinkPaymentToPolicyTab}" Margin="0,0,0,0" HorizontalAlignment="Stretch"   VerticalAlignment="Top" Header="Link Payment To Policies" Name="tabLinkPayment" local:EyeCandy.Image="..\Images/Icons/link.png" HeaderTemplate ="{StaticResource ImageBindingTabControlItems}">
                    <TabItem.Content >
                        <Grid Visibility="{Binding LinkPaymentToPolicyTab}" Margin="5,5,5,5" HorizontalAlignment="Stretch"  VerticalAlignment="Top" Width="762">
                            <Grid.RowDefinitions>
                                <!--<RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="200"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="5"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="352"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>-->
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="276"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="5"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="276"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition> 
                            </Grid.RowDefinitions>
                            <Border BorderBrush="#6F9DD9" BorderThickness="1" Margin="-5,0,-5,0" Padding="4,4,4,4" Grid.Row="0" Grid.RowSpan="3"></Border>
                            <Border Grid.Row="4" BorderBrush="#6F9DD9" BorderThickness="1" Margin="-5,0,-5,-5" Padding="4,4,4,4" Grid.RowSpan="3"></Border>
                            <WrapPanel Grid.Row="0" Margin="1,0,0,0" VerticalAlignment="Center">
                                <Label HorizontalAlignment="Left" Name="lblHeader1" Width="auto" Foreground="DarkGray" VerticalAlignment="Center">Pending Policies/Payments</Label>
                                <Separator Visibility="Hidden" Width="400"></Separator>
                                <Label HorizontalAlignment="Left" Name="lblAgency" Width="auto" Foreground="DarkGray" VerticalAlignment="Center">Agency</Label>
                                <Separator Visibility="Hidden" Width="5"></Separator>
                                <ComboBox IsEnabled="{Binding AgencyLinkPaymentToPolicyComboEnable}" ItemsSource="{Binding SharedVMData.Licensees}" 
                                     SelectedItem="{Binding SharedVMData.SelectedLicensee, UpdateSourceTrigger=PropertyChanged}" 
                                          Width="150" Text="Choose Agency" VerticalAlignment="Center">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Foreground="DarkGray"  Text="{Binding Company}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>

                                </ComboBox>
                            </WrapPanel>
                            <toolkit:DataGrid Grid.Row="1" IsReadOnly="True"   RowDetailsVisibilityMode="Collapsed" x:Name="ParentLink"
                                     GridLinesVisibility="None"  Background="White" AutoGenerateColumns="False" SelectionChanged="ParentLink_SelectionChanged"                                      
                                      ItemsSource="{Binding LinkPaymentPendingPoliciesLst}"
                                              SelectedItem="{Binding LinkPaymentSelectedPendingPolicies}" >

                                <toolkit:DataGrid.Columns>
                                    <!--<toolkit:DataGridTemplateColumn>
                                        <toolkit:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>-->
                                                <!--<Expander IsExpanded="True" Header="+"> 
                                                    
                                                </Expander>-->
                                                <!--<ToggleButton Margin="10,0,0,0" IsChecked="{Binding Converter={StaticResource VisibleConverter1}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=DetailsVisibility }">

                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked}" Value="false">
                                                                    <Setter Property="Content"  Value="+"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked}" Value="true">
                                                                    <Setter Property="Content" Value="-"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>-->
                                            <!--</DataTemplate>
                                        </toolkit:DataGridTemplateColumn.CellTemplate>
                                    </toolkit:DataGridTemplateColumn>-->
                                    <toolkit:DataGridTemplateColumn>
                                        <toolkit:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>

                                                <Button Content="+" x:Name="BtnPlus" Click="BtnPlus_Click" CommandParameter="{Binding Path=ID}" />

                                            </DataTemplate>
                                        </toolkit:DataGridTemplateColumn.CellTemplate>

                                    </toolkit:DataGridTemplateColumn>

                                    <toolkit:DataGridTextColumn Header="Payor" Width="83" Binding="{Binding PayorName}"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Client" Width="83" Binding="{Binding ClientName}"></toolkit:DataGridTextColumn>                                    
                                    <toolkit:DataGridTextColumn Header="Policy #" Width="78" Binding="{Binding PolicyNumber}"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Insured/Div" Width="100" Binding="{Binding Insured}"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Carrier" Width="100" Binding="{Binding CarrierName}"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Product" Width="100" Binding="{Binding ProductName}"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Comp Type" Width="100" Binding="{Binding CompTypeName}"></toolkit:DataGridTextColumn>
                                    <!--Acme commmented and added below <toolkit:DataGridTextColumn Header="Comp Schedule" Width="95" Binding="{Binding CompScheduleTypeName}"></toolkit:DataGridTextColumn>-->
                                    <toolkit:DataGridTextColumn Header="Product Type" Width="95" Binding="{Binding ProductType}"></toolkit:DataGridTextColumn>

                                </toolkit:DataGrid.Columns>
                                
                                <toolkit:DataGrid.RowDetailsTemplate>
                                     <DataTemplate>
                                          <toolkit:DataGrid x:Name="ChildLink" Margin="81,0,135,0" SelectionMode="Extended" IsReadOnly="True" ItemsSource="{Binding Entries}" SelectedItem="{Binding SelectedEntries}" Height="85"  AutoGenerateColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">                            
                                            <toolkit:DataGrid.Resources>
                                                <Style TargetType="{x:Type dg:DataGridColumnHeader}">
                                                    <Setter Property="Background" >
                                                        <Setter.Value>
                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">

                                                                <GradientStop Color="DarkGray" Offset="0.194" />
                                                                <GradientStop Color="DarkGray" Offset="0.194" />
                                                                <GradientStop Color="DarkGray" Offset="0.194" />
                                                                <GradientStop Color="DarkGray" Offset="0.521" />

                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Height" Value="22"/>
                                                    <!--New One Starts-->
                                                    <Setter Property="BorderBrush" Value="Black"/>
                                                    <!--New One Ends-->
                                                    <!--<Setter Property="BorderBrush" Value="Black"/>-->
                                                    <Setter Property="BorderThickness" Value="0.5"/>
                                                    <Setter Property="Padding" Value="1"></Setter>
                                                    <Setter Property="FontFamily" Value="Tahoma"></Setter>
                                                    <Setter Property="FontSize" Value="11"></Setter>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                                                    <!--New Design Starts-->
                                                    <!--<Setter Property="Foreground" Value="White"></Setter>-->
                                                    <Setter Property="Foreground" Value="White"></Setter>
                                                    
                                                </Style>

                                                <Style TargetType="{x:Type dg:DataGridRow}">
                                                    <Setter Property="Background" >
                                                        <Setter.Value>
                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                <GradientStop Color="DarkGray" Offset="0.194" />
                                                                <GradientStop Color="DarkGray" Offset="0.194" />
                                                                <GradientStop Color="DarkGray" Offset="0.194" />
                                                                <GradientStop Color="DarkGray" Offset="0.521" />
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Height" Value="22"/>
                                                    <!--New One Starts-->
                                                    <Setter Property="BorderBrush" Value="Black"/>
                                                    <!--New One Ends-->
                                                    <!--<Setter Property="BorderBrush" Value="Black"/>-->
                                                    <Setter Property="BorderThickness" Value="0.5"/>
                                                    <Setter Property="Padding" Value="1"></Setter>

                                                    <Setter Property="FontFamily" Value="Tahoma"></Setter>
                                                    <Setter Property="FontSize" Value="11"></Setter>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                                                    <!--New Design Starts-->
                                                    <!--<Setter Property="Foreground" Value="White"></Setter>-->
                                                    <Setter Property="Foreground" Value="Black"></Setter>

                                                </Style>

                                                <Style TargetType="CheckBox" x:Key="InnerBox">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <Setter Property="IsChecked" Value="False" />
                                                    <Style.Triggers>
                                                        <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=Tag}">
                                                            <Setter Property="IsChecked" Value="True" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>

                                            </toolkit:DataGrid.Resources>
                                            <toolkit:DataGrid.Columns>
                                                    <toolkit:DataGridTemplateColumn>                                                        
                                                    <!--<toolkit:DataGridColumn.HeaderTemplate>                                                       
                                                        <DataTemplate>
                                                            <CheckBox Content="Type" x:Name="chkHeader" Checked="chkAll_Checked" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=Tag, Mode=OneWayToSource}"/> 
                                                        </DataTemplate>
                                                    </toolkit:DataGridColumn.HeaderTemplate>-->
                                                    <toolkit:DataGridTemplateColumn.Header>
                                                        <CheckBox Name="ChkAll" Click="ChkAll_Click_1" IsChecked="True"></CheckBox>

                                                    </toolkit:DataGridTemplateColumn.Header>
                                                    <toolkit:DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <CheckBox Name="ChkeckBoxToLink"  IsChecked="{Binding Path=IsSelected,Mode=TwoWay}"/>
                                                        </DataTemplate>
                                                    </toolkit:DataGridTemplateColumn.CellTemplate>

                                                </toolkit:DataGridTemplateColumn>
                                               <toolkit:DataGridTextColumn Header="Invoice Date" Binding="{Binding InvoiceDate,StringFormat=MM/dd/yyyy}" Width="80" SortDirection="Descending" >
                                                </toolkit:DataGridTextColumn>

                                                <toolkit:DataGridTextColumn Header="    Amount" Binding="{Binding Path=PaymentRecived,StringFormat=c}" Width="80"
                                                                            EditingElementStyle="{StaticResource RightAlignedEditCell}"  ElementStyle="{StaticResource RightAlignedCell}">
                                                    
                                                </toolkit:DataGridTextColumn>
                                                <toolkit:DataGridTextColumn Header="    Incoming %" Binding="{Binding Path=CommissionPercentage,Converter={StaticResource percentageConv},StringFormat=p}"
                                                                            EditingElementStyle="{StaticResource RightAlignedEditCell}" ElementStyle="{StaticResource RightAlignedCell}" Width="80">
                                                    
                                                </toolkit:DataGridTextColumn>
                                                <toolkit:DataGridTextColumn Header="             Units" Binding="{Binding Path=NumberOfUnits}" Width="77"
                                                                            EditingElementStyle="{StaticResource RightAlignedEditCell}" ElementStyle="{StaticResource RightAlignedCell}">
                                                    
                                                </toolkit:DataGridTextColumn>
                                                <toolkit:DataGridTextColumn Header="              Fee" Binding="{Binding Path=Fee,StringFormat=c}" Width="76"
                                                                            EditingElementStyle="{StaticResource RightAlignedEditCell}" ElementStyle="{StaticResource RightAlignedCell}">
                                                    
                                                </toolkit:DataGridTextColumn>
                                                <toolkit:DataGridTextColumn Header="        Share Per" Binding="{Binding Path=SplitPer,Converter={StaticResource percentageConv},StringFormat=p}" Width="80"
                                                                            EditingElementStyle="{StaticResource RightAlignedEditCell}" ElementStyle="{StaticResource RightAlignedCell}">
                                                    
                                                </toolkit:DataGridTextColumn>
                                                <toolkit:DataGridTextColumn Header="  Total Payment" Binding="{Binding Path=TotalPayment,StringFormat=c}" Width="81"
                                                                            EditingElementStyle="{StaticResource RightAlignedEditCell}" ElementStyle="{StaticResource RightAlignedCell}">
                                                    
                                                </toolkit:DataGridTextColumn>

                                            </toolkit:DataGrid.Columns>
                                        </toolkit:DataGrid>
                                     </DataTemplate> 
                                    
                                </toolkit:DataGrid.RowDetailsTemplate>
                                <!--<toolkit:DataGrid.RowHeaderTemplate>
                                    <DataTemplate>
                                        <ToggleButton IsChecked="{Binding Converter={StaticResource VisibleConverter1}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=DetailsVisibility}">
                                            <Image>
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked}" Value="false">
                                                                <Setter Property="Image.Source" Value="D:\plus.png" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked}" Value="true">
                                                                <Setter Property="Image.Source" Value="D:\minus.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </ToggleButton>
                                    </DataTemplate>
                                    </toolkit:DataGrid.RowHeaderTemplate>-->

                            </toolkit:DataGrid>
                            <WrapPanel HorizontalAlignment="Center" Grid.Row="2" Margin="0,4,0,0">
                                <Button Command="{Binding LinkPendingPolicyCmd}" Style="{StaticResource ImageButtonSave}" local:EyeCandy.Image="..\Images\Icons\link_add.png" Content="Link Pending Policy/Payment To An Existing Policy"></Button>
                                <Separator Width="10" Visibility="Hidden"></Separator>
                                <Button Style="{StaticResource ImageButtonSave}" Command="{Binding OpenChangedClientDialog}" local:EyeCandy.Image="..\Images\Icons\link_new.png" Content="Create/Activate New Policy From Payments"></Button>
                            </WrapPanel>
                            <WrapPanel Grid.Row="4" Margin="1,0,0,0" VerticalAlignment="Center">
                                <Label HorizontalAlignment="Left"  Width="auto" VerticalAlignment="Center">Existing Policies:</Label>
                                <Separator Visibility="Hidden" Width="50"></Separator>
                                <Label HorizontalAlignment="Left" Width="auto" VerticalAlignment="Center" >Payor</Label>
                                <Separator Visibility="Hidden" Width="5"></Separator>
                                <ComboBox Width="150" Text="Choose Payor" ItemsSource="{Binding LinkPaymentPayorLst}" SelectedItem="{Binding LinkPaymentSelecetedPayor}" VerticalAlignment="Center">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text= "{Binding PayorName}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Separator Visibility="Hidden" Width="20"></Separator>
                                <Label HorizontalAlignment="Left" Width="auto" VerticalAlignment="Center" >Client</Label>
                                <Separator Visibility="Hidden" Width="5"></Separator>
                                <ComboBox Width="150" Text="Choose Client" ItemsSource="{Binding LinkPaymentClientLst}" SelectedItem="{Binding LinkPaymentSelectedClient}" VerticalAlignment="Center">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text= "{Binding Name}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </WrapPanel>
                            <toolkit:DataGrid Name="grdPolicyDetail" Grid.Row="5" CanUserAddRows="True" IsReadOnly="True"  AutoGenerateColumns="False" GridLinesVisibility="None"  Background="White"
                                               ItemsSource="{Binding LinkPaymentActivePoliciesLst}"
                                              SelectedItem="{Binding LinkPaymentSelectedActivePolicies}">
                                <toolkit:DataGrid.Columns>
                                    <toolkit:DataGridTextColumn Header="Client" Width="80" Binding="{Binding ClientName}"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Payor" Width="80" Binding="{Binding PayorName}"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Policy#" Width="80" Binding="{Binding PolicyNumber}"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Insured/Div" Width="80" Binding="{Binding Insured}"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Carrier" Width="80" Binding="{Binding CarrierName}"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Product" Width="80" Binding="{Binding ProductName}"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Status" Binding="{Binding StatusName}"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Comp Type" Width="70" Binding="{Binding CompTypeName}"></toolkit:DataGridTextColumn>
                                    <!--Acme commented and added below<toolkit:DataGridTextColumn Header="Comp Schedule" Width="80" Binding="{Binding CompScheduleTypeName}"></toolkit:DataGridTextColumn>-->
                                    <toolkit:DataGridTextColumn Header="Product Type" Width="80" Binding="{Binding ProductType}"></toolkit:DataGridTextColumn>

                                    <toolkit:DataGridTextColumn Header="Effective" Width="69" Binding="{Binding OriginalEffDate,StringFormat=MM/dd/yyyy}"></toolkit:DataGridTextColumn>
                                    <!--<toolkit:DataGridTextColumn Header="First Yr"></toolkit:DataGridTextColumn>
                                    <toolkit:DataGridTextColumn Header="Renew"></toolkit:DataGridTextColumn>-->
                                </toolkit:DataGrid.Columns>
                            </toolkit:DataGrid>
                            <!--<Grid Grid.Row="6" Height="30" HorizontalAlignment="Center" Margin="0,5,0,0" Name="gridLastRow" VerticalAlignment="Top" Width="700">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="350.50*" />
                                <ColumnDefinition Width="350.50*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" HorizontalAlignment="Right" Margin=" 0,5,20,0"   Name="textBlock3" Width="auto"  Cursor="Hand" IsHyphenationEnabled="True">
                            <Hyperlink>Active Only</Hyperlink>
                            </TextBlock>
                            <TextBlock Grid.Column="1" HorizontalAlignment="Left"  Margin=" 20,5,0,0" Name="textBlock4" Width="auto" Cursor="Hand" IsHyphenationEnabled="True">
                            <Hyperlink >All Status</Hyperlink>
                            </TextBlock>
                        </Grid>-->
                        </Grid>
                    </TabItem.Content>
                </TabItem>

            </TabControl>
        </Grid>
    </Border>
</UserControl>
