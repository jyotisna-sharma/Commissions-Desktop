//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyAgencyVault.VM.MyAgencyVaultSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatementDates", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class StatementDates : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorStatementDateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatementDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorStatementDateID {
            get {
                return this.PayorStatementDateIDField;
            }
            set {
                if ((this.PayorStatementDateIDField.Equals(value) != true)) {
                    this.PayorStatementDateIDField = value;
                    this.RaisePropertyChanged("PayorStatementDateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatementDate {
            get {
                return this.StatementDateField;
            }
            set {
                if ((this.StatementDateField.Equals(value) != true)) {
                    this.StatementDateField = value;
                    this.RaisePropertyChanged("StatementDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssueResults", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class IssueResults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultsNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultsID {
            get {
                return this.ResultsIDField;
            }
            set {
                if ((this.ResultsIDField.Equals(value) != true)) {
                    this.ResultsIDField = value;
                    this.RaisePropertyChanged("ResultsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultsName {
            get {
                return this.ResultsNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsNameField, value) != true)) {
                    this.ResultsNameField = value;
                    this.RaisePropertyChanged("ResultsName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComDeptService", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ComDeptService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultServChargeTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinimumCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Range1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Range2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultServChargeTypeId {
            get {
                return this.DefaultServChargeTypeIdField;
            }
            set {
                if ((this.DefaultServChargeTypeIdField.Equals(value) != true)) {
                    this.DefaultServChargeTypeIdField = value;
                    this.RaisePropertyChanged("DefaultServChargeTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTaxable {
            get {
                return this.IsTaxableField;
            }
            set {
                if ((this.IsTaxableField.Equals(value) != true)) {
                    this.IsTaxableField = value;
                    this.RaisePropertyChanged("IsTaxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumCost {
            get {
                return this.MinimumCostField;
            }
            set {
                if ((this.MinimumCostField.Equals(value) != true)) {
                    this.MinimumCostField = value;
                    this.RaisePropertyChanged("MinimumCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Range1 {
            get {
                return this.Range1Field;
            }
            set {
                if ((this.Range1Field.Equals(value) != true)) {
                    this.Range1Field = value;
                    this.RaisePropertyChanged("Range1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Range2 {
            get {
                return this.Range2Field;
            }
            set {
                if ((this.Range2Field.Equals(value) != true)) {
                    this.Range2Field = value;
                    this.RaisePropertyChanged("Range2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LogInUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuredName {
            get {
                return this.InsuredNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredNameField, value) != true)) {
                    this.InsuredNameField = value;
                    this.RaisePropertyChanged("InsuredName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LogInUserId {
            get {
                return this.LogInUserIdField;
            }
            set {
                if ((this.LogInUserIdField.Equals(value) != true)) {
                    this.LogInUserIdField = value;
                    this.RaisePropertyChanged("LogInUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyDetailsData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicyDetailsData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccoutExecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdvanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CarrierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompSchuduleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CoverageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomDateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> DuplicateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EligibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnrolledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IncomingPaymentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCustomBasicScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsIncomingBasicScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsOutGoingBasicScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSavedPolicyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsTieredScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTrackIncomingPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTrackMissingMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTrackPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastFollowUpRunsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData LearnedFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ModeAvgPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OldPolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OriginalEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyIncomingPayTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule> PolicyIncomingSchedulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PolicyLicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PolicyModeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> PolicyNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule> PolicyOutGoingSchedulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailPreviousData PolicyPreviousDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PolicyStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PolicyTerminationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PrimaryAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RenewalPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ReplacedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] RowVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SplitPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubmittedThroughField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TerminationReasonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TrackFromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> UserCredentialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> policyPaymentEntriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccoutExec {
            get {
                return this.AccoutExecField;
            }
            set {
                if ((object.ReferenceEquals(this.AccoutExecField, value) != true)) {
                    this.AccoutExecField = value;
                    this.RaisePropertyChanged("AccoutExec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Advance {
            get {
                return this.AdvanceField;
            }
            set {
                if ((this.AdvanceField.Equals(value) != true)) {
                    this.AdvanceField = value;
                    this.RaisePropertyChanged("Advance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CarrierID {
            get {
                return this.CarrierIDField;
            }
            set {
                if ((this.CarrierIDField.Equals(value) != true)) {
                    this.CarrierIDField = value;
                    this.RaisePropertyChanged("CarrierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompSchuduleType {
            get {
                return this.CompSchuduleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompSchuduleTypeField, value) != true)) {
                    this.CompSchuduleTypeField = value;
                    this.RaisePropertyChanged("CompSchuduleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompType {
            get {
                return this.CompTypeField;
            }
            set {
                if ((this.CompTypeField.Equals(value) != true)) {
                    this.CompTypeField = value;
                    this.RaisePropertyChanged("CompType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CoverageId {
            get {
                return this.CoverageIdField;
            }
            set {
                if ((this.CoverageIdField.Equals(value) != true)) {
                    this.CoverageIdField = value;
                    this.RaisePropertyChanged("CoverageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverageName {
            get {
                return this.CoverageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverageNameField, value) != true)) {
                    this.CoverageNameField = value;
                    this.RaisePropertyChanged("CoverageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomDateType {
            get {
                return this.CustomDateTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomDateTypeField, value) != true)) {
                    this.CustomDateTypeField = value;
                    this.RaisePropertyChanged("CustomDateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> DuplicateFrom {
            get {
                return this.DuplicateFromField;
            }
            set {
                if ((this.DuplicateFromField.Equals(value) != true)) {
                    this.DuplicateFromField = value;
                    this.RaisePropertyChanged("DuplicateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Eligible {
            get {
                return this.EligibleField;
            }
            set {
                if ((object.ReferenceEquals(this.EligibleField, value) != true)) {
                    this.EligibleField = value;
                    this.RaisePropertyChanged("Eligible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Enrolled {
            get {
                return this.EnrolledField;
            }
            set {
                if ((object.ReferenceEquals(this.EnrolledField, value) != true)) {
                    this.EnrolledField = value;
                    this.RaisePropertyChanged("Enrolled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IncomingPaymentTypeId {
            get {
                return this.IncomingPaymentTypeIdField;
            }
            set {
                if ((this.IncomingPaymentTypeIdField.Equals(value) != true)) {
                    this.IncomingPaymentTypeIdField = value;
                    this.RaisePropertyChanged("IncomingPaymentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insured {
            get {
                return this.InsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredField, value) != true)) {
                    this.InsuredField = value;
                    this.RaisePropertyChanged("Insured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsCustomBasicSchedule {
            get {
                return this.IsCustomBasicScheduleField;
            }
            set {
                if ((this.IsCustomBasicScheduleField.Equals(value) != true)) {
                    this.IsCustomBasicScheduleField = value;
                    this.RaisePropertyChanged("IsCustomBasicSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsIncomingBasicSchedule {
            get {
                return this.IsIncomingBasicScheduleField;
            }
            set {
                if ((this.IsIncomingBasicScheduleField.Equals(value) != true)) {
                    this.IsIncomingBasicScheduleField = value;
                    this.RaisePropertyChanged("IsIncomingBasicSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsOutGoingBasicSchedule {
            get {
                return this.IsOutGoingBasicScheduleField;
            }
            set {
                if ((this.IsOutGoingBasicScheduleField.Equals(value) != true)) {
                    this.IsOutGoingBasicScheduleField = value;
                    this.RaisePropertyChanged("IsOutGoingBasicSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSavedPolicy {
            get {
                return this.IsSavedPolicyField;
            }
            set {
                if ((this.IsSavedPolicyField.Equals(value) != true)) {
                    this.IsSavedPolicyField = value;
                    this.RaisePropertyChanged("IsSavedPolicy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsTieredSchedule {
            get {
                return this.IsTieredScheduleField;
            }
            set {
                if ((this.IsTieredScheduleField.Equals(value) != true)) {
                    this.IsTieredScheduleField = value;
                    this.RaisePropertyChanged("IsTieredSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrackIncomingPercentage {
            get {
                return this.IsTrackIncomingPercentageField;
            }
            set {
                if ((this.IsTrackIncomingPercentageField.Equals(value) != true)) {
                    this.IsTrackIncomingPercentageField = value;
                    this.RaisePropertyChanged("IsTrackIncomingPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrackMissingMonth {
            get {
                return this.IsTrackMissingMonthField;
            }
            set {
                if ((this.IsTrackMissingMonthField.Equals(value) != true)) {
                    this.IsTrackMissingMonthField = value;
                    this.RaisePropertyChanged("IsTrackMissingMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrackPayment {
            get {
                return this.IsTrackPaymentField;
            }
            set {
                if ((this.IsTrackPaymentField.Equals(value) != true)) {
                    this.IsTrackPaymentField = value;
                    this.RaisePropertyChanged("IsTrackPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastFollowUpRuns {
            get {
                return this.LastFollowUpRunsField;
            }
            set {
                if ((this.LastFollowUpRunsField.Equals(value) != true)) {
                    this.LastFollowUpRunsField = value;
                    this.RaisePropertyChanged("LastFollowUpRuns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData LearnedFields {
            get {
                return this.LearnedFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.LearnedFieldsField, value) != true)) {
                    this.LearnedFieldsField = value;
                    this.RaisePropertyChanged("LearnedFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ModeAvgPremium {
            get {
                return this.ModeAvgPremiumField;
            }
            set {
                if ((this.ModeAvgPremiumField.Equals(value) != true)) {
                    this.ModeAvgPremiumField = value;
                    this.RaisePropertyChanged("ModeAvgPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OldPolicyId {
            get {
                return this.OldPolicyIdField;
            }
            set {
                if ((this.OldPolicyIdField.Equals(value) != true)) {
                    this.OldPolicyIdField = value;
                    this.RaisePropertyChanged("OldPolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OriginalEffectiveDate {
            get {
                return this.OriginalEffectiveDateField;
            }
            set {
                if ((this.OriginalEffectiveDateField.Equals(value) != true)) {
                    this.OriginalEffectiveDateField = value;
                    this.RaisePropertyChanged("OriginalEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorName {
            get {
                return this.PayorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNameField, value) != true)) {
                    this.PayorNameField = value;
                    this.RaisePropertyChanged("PayorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorNickName {
            get {
                return this.PayorNickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNickNameField, value) != true)) {
                    this.PayorNickNameField = value;
                    this.RaisePropertyChanged("PayorNickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyIncomingPayType {
            get {
                return this.PolicyIncomingPayTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyIncomingPayTypeField, value) != true)) {
                    this.PolicyIncomingPayTypeField = value;
                    this.RaisePropertyChanged("PolicyIncomingPayType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule> PolicyIncomingSchedules {
            get {
                return this.PolicyIncomingSchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyIncomingSchedulesField, value) != true)) {
                    this.PolicyIncomingSchedulesField = value;
                    this.RaisePropertyChanged("PolicyIncomingSchedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PolicyLicenseeId {
            get {
                return this.PolicyLicenseeIdField;
            }
            set {
                if ((this.PolicyLicenseeIdField.Equals(value) != true)) {
                    this.PolicyLicenseeIdField = value;
                    this.RaisePropertyChanged("PolicyLicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PolicyModeId {
            get {
                return this.PolicyModeIdField;
            }
            set {
                if ((this.PolicyModeIdField.Equals(value) != true)) {
                    this.PolicyModeIdField = value;
                    this.RaisePropertyChanged("PolicyModeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> PolicyNotes {
            get {
                return this.PolicyNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNotesField, value) != true)) {
                    this.PolicyNotesField = value;
                    this.RaisePropertyChanged("PolicyNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule> PolicyOutGoingSchedules {
            get {
                return this.PolicyOutGoingSchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyOutGoingSchedulesField, value) != true)) {
                    this.PolicyOutGoingSchedulesField = value;
                    this.RaisePropertyChanged("PolicyOutGoingSchedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailPreviousData PolicyPreviousData {
            get {
                return this.PolicyPreviousDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyPreviousDataField, value) != true)) {
                    this.PolicyPreviousDataField = value;
                    this.RaisePropertyChanged("PolicyPreviousData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PolicyStatusId {
            get {
                return this.PolicyStatusIdField;
            }
            set {
                if ((this.PolicyStatusIdField.Equals(value) != true)) {
                    this.PolicyStatusIdField = value;
                    this.RaisePropertyChanged("PolicyStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyStatusName {
            get {
                return this.PolicyStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyStatusNameField, value) != true)) {
                    this.PolicyStatusNameField = value;
                    this.RaisePropertyChanged("PolicyStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PolicyTerminationDate {
            get {
                return this.PolicyTerminationDateField;
            }
            set {
                if ((this.PolicyTerminationDateField.Equals(value) != true)) {
                    this.PolicyTerminationDateField = value;
                    this.RaisePropertyChanged("PolicyTerminationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyType {
            get {
                return this.PolicyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTypeField, value) != true)) {
                    this.PolicyTypeField = value;
                    this.RaisePropertyChanged("PolicyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PrimaryAgent {
            get {
                return this.PrimaryAgentField;
            }
            set {
                if ((this.PrimaryAgentField.Equals(value) != true)) {
                    this.PrimaryAgentField = value;
                    this.RaisePropertyChanged("PrimaryAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RenewalPercentage {
            get {
                return this.RenewalPercentageField;
            }
            set {
                if ((object.ReferenceEquals(this.RenewalPercentageField, value) != true)) {
                    this.RenewalPercentageField = value;
                    this.RaisePropertyChanged("RenewalPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ReplacedBy {
            get {
                return this.ReplacedByField;
            }
            set {
                if ((this.ReplacedByField.Equals(value) != true)) {
                    this.ReplacedByField = value;
                    this.RaisePropertyChanged("ReplacedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SplitPercentage {
            get {
                return this.SplitPercentageField;
            }
            set {
                if ((this.SplitPercentageField.Equals(value) != true)) {
                    this.SplitPercentageField = value;
                    this.RaisePropertyChanged("SplitPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubmittedThrough {
            get {
                return this.SubmittedThroughField;
            }
            set {
                if ((object.ReferenceEquals(this.SubmittedThroughField, value) != true)) {
                    this.SubmittedThroughField = value;
                    this.RaisePropertyChanged("SubmittedThrough");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TerminationReasonId {
            get {
                return this.TerminationReasonIdField;
            }
            set {
                if ((this.TerminationReasonIdField.Equals(value) != true)) {
                    this.TerminationReasonIdField = value;
                    this.RaisePropertyChanged("TerminationReasonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TrackFromDate {
            get {
                return this.TrackFromDateField;
            }
            set {
                if ((this.TrackFromDateField.Equals(value) != true)) {
                    this.TrackFromDateField = value;
                    this.RaisePropertyChanged("TrackFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> UserCredentialId {
            get {
                return this.UserCredentialIdField;
            }
            set {
                if ((this.UserCredentialIdField.Equals(value) != true)) {
                    this.UserCredentialIdField = value;
                    this.RaisePropertyChanged("UserCredentialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> policyPaymentEntries {
            get {
                return this.policyPaymentEntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.policyPaymentEntriesField, value) != true)) {
                    this.policyPaymentEntriesField = value;
                    this.RaisePropertyChanged("policyPaymentEntries");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyLearnedFieldData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicyLearnedFieldData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdvanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AutoTerminationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CarrierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompScheduleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CoverageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverageNickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EligibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnrolledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImportPolicyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> LastModifiedUserCredentialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Link1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Link2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ModalAvgPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PACField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorSysIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PolicyModeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PreviousEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PreviousPolicyModeidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrevoiusTrackFromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RenewalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TrackFromField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Advance {
            get {
                return this.AdvanceField;
            }
            set {
                if ((this.AdvanceField.Equals(value) != true)) {
                    this.AdvanceField = value;
                    this.RaisePropertyChanged("Advance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AutoTerminationDate {
            get {
                return this.AutoTerminationDateField;
            }
            set {
                if ((this.AutoTerminationDateField.Equals(value) != true)) {
                    this.AutoTerminationDateField = value;
                    this.RaisePropertyChanged("AutoTerminationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CarrierId {
            get {
                return this.CarrierIdField;
            }
            set {
                if ((this.CarrierIdField.Equals(value) != true)) {
                    this.CarrierIdField = value;
                    this.RaisePropertyChanged("CarrierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierNickName {
            get {
                return this.CarrierNickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNickNameField, value) != true)) {
                    this.CarrierNickNameField = value;
                    this.RaisePropertyChanged("CarrierNickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompScheduleType {
            get {
                return this.CompScheduleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompScheduleTypeField, value) != true)) {
                    this.CompScheduleTypeField = value;
                    this.RaisePropertyChanged("CompScheduleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompTypeId {
            get {
                return this.CompTypeIdField;
            }
            set {
                if ((this.CompTypeIdField.Equals(value) != true)) {
                    this.CompTypeIdField = value;
                    this.RaisePropertyChanged("CompTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CoverageId {
            get {
                return this.CoverageIdField;
            }
            set {
                if ((this.CoverageIdField.Equals(value) != true)) {
                    this.CoverageIdField = value;
                    this.RaisePropertyChanged("CoverageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverageNickName {
            get {
                return this.CoverageNickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverageNickNameField, value) != true)) {
                    this.CoverageNickNameField = value;
                    this.RaisePropertyChanged("CoverageNickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Effective {
            get {
                return this.EffectiveField;
            }
            set {
                if ((this.EffectiveField.Equals(value) != true)) {
                    this.EffectiveField = value;
                    this.RaisePropertyChanged("Effective");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Eligible {
            get {
                return this.EligibleField;
            }
            set {
                if ((object.ReferenceEquals(this.EligibleField, value) != true)) {
                    this.EligibleField = value;
                    this.RaisePropertyChanged("Eligible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Enrolled {
            get {
                return this.EnrolledField;
            }
            set {
                if ((object.ReferenceEquals(this.EnrolledField, value) != true)) {
                    this.EnrolledField = value;
                    this.RaisePropertyChanged("Enrolled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImportPolicyID {
            get {
                return this.ImportPolicyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportPolicyIDField, value) != true)) {
                    this.ImportPolicyIDField = value;
                    this.RaisePropertyChanged("ImportPolicyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insured {
            get {
                return this.InsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredField, value) != true)) {
                    this.InsuredField = value;
                    this.RaisePropertyChanged("Insured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LastModifiedUserCredentialId {
            get {
                return this.LastModifiedUserCredentialIdField;
            }
            set {
                if ((this.LastModifiedUserCredentialIdField.Equals(value) != true)) {
                    this.LastModifiedUserCredentialIdField = value;
                    this.RaisePropertyChanged("LastModifiedUserCredentialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedUserName {
            get {
                return this.LastModifiedUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedUserNameField, value) != true)) {
                    this.LastModifiedUserNameField = value;
                    this.RaisePropertyChanged("LastModifiedUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link1 {
            get {
                return this.Link1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Link1Field, value) != true)) {
                    this.Link1Field = value;
                    this.RaisePropertyChanged("Link1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Link2 {
            get {
                return this.Link2Field;
            }
            set {
                if ((this.Link2Field.Equals(value) != true)) {
                    this.Link2Field = value;
                    this.RaisePropertyChanged("Link2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ModalAvgPremium {
            get {
                return this.ModalAvgPremiumField;
            }
            set {
                if ((this.ModalAvgPremiumField.Equals(value) != true)) {
                    this.ModalAvgPremiumField = value;
                    this.RaisePropertyChanged("ModalAvgPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PAC {
            get {
                return this.PACField;
            }
            set {
                if ((object.ReferenceEquals(this.PACField, value) != true)) {
                    this.PACField = value;
                    this.RaisePropertyChanged("PAC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMC {
            get {
                return this.PMCField;
            }
            set {
                if ((object.ReferenceEquals(this.PMCField, value) != true)) {
                    this.PMCField = value;
                    this.RaisePropertyChanged("PMC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorSysId {
            get {
                return this.PayorSysIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorSysIdField, value) != true)) {
                    this.PayorSysIdField = value;
                    this.RaisePropertyChanged("PayorSysId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PolicyModeId {
            get {
                return this.PolicyModeIdField;
            }
            set {
                if ((this.PolicyModeIdField.Equals(value) != true)) {
                    this.PolicyModeIdField = value;
                    this.RaisePropertyChanged("PolicyModeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PreviousEffectiveDate {
            get {
                return this.PreviousEffectiveDateField;
            }
            set {
                if ((this.PreviousEffectiveDateField.Equals(value) != true)) {
                    this.PreviousEffectiveDateField = value;
                    this.RaisePropertyChanged("PreviousEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PreviousPolicyModeid {
            get {
                return this.PreviousPolicyModeidField;
            }
            set {
                if ((this.PreviousPolicyModeidField.Equals(value) != true)) {
                    this.PreviousPolicyModeidField = value;
                    this.RaisePropertyChanged("PreviousPolicyModeid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PrevoiusTrackFromDate {
            get {
                return this.PrevoiusTrackFromDateField;
            }
            set {
                if ((this.PrevoiusTrackFromDateField.Equals(value) != true)) {
                    this.PrevoiusTrackFromDateField = value;
                    this.RaisePropertyChanged("PrevoiusTrackFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Renewal {
            get {
                return this.RenewalField;
            }
            set {
                if ((object.ReferenceEquals(this.RenewalField, value) != true)) {
                    this.RenewalField = value;
                    this.RaisePropertyChanged("Renewal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TrackFrom {
            get {
                return this.TrackFromField;
            }
            set {
                if ((this.TrackFromField.Equals(value) != true)) {
                    this.TrackFromField = value;
                    this.RaisePropertyChanged("TrackFrom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyDetailPreviousData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicyDetailPreviousData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTrackIncomingPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTrackMissingMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OriginalEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PolicyModeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PolicyTermdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TrackFromDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrackIncomingPercentage {
            get {
                return this.IsTrackIncomingPercentageField;
            }
            set {
                if ((this.IsTrackIncomingPercentageField.Equals(value) != true)) {
                    this.IsTrackIncomingPercentageField = value;
                    this.RaisePropertyChanged("IsTrackIncomingPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrackMissingMonth {
            get {
                return this.IsTrackMissingMonthField;
            }
            set {
                if ((this.IsTrackMissingMonthField.Equals(value) != true)) {
                    this.IsTrackMissingMonthField = value;
                    this.RaisePropertyChanged("IsTrackMissingMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OriginalEffectiveDate {
            get {
                return this.OriginalEffectiveDateField;
            }
            set {
                if ((this.OriginalEffectiveDateField.Equals(value) != true)) {
                    this.OriginalEffectiveDateField = value;
                    this.RaisePropertyChanged("OriginalEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PolicyModeId {
            get {
                return this.PolicyModeIdField;
            }
            set {
                if ((this.PolicyModeIdField.Equals(value) != true)) {
                    this.PolicyModeIdField = value;
                    this.RaisePropertyChanged("PolicyModeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PolicyTermdateDate {
            get {
                return this.PolicyTermdateDateField;
            }
            set {
                if ((this.PolicyTermdateDateField.Equals(value) != true)) {
                    this.PolicyTermdateDateField = value;
                    this.RaisePropertyChanged("PolicyTermdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TrackFromDate {
            get {
                return this.TrackFromDateField;
            }
            set {
                if ((this.TrackFromDateField.Equals(value) != true)) {
                    this.TrackFromDateField = value;
                    this.RaisePropertyChanged("TrackFromDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyIncomingSchedule", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicyIncomingSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingScheduleEntry> IncomingScheduleListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingScheduleEntry> IncomingScheduleList {
            get {
                return this.IncomingScheduleListField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomingScheduleListField, value) != true)) {
                    this.IncomingScheduleListField = value;
                    this.RaisePropertyChanged("IncomingScheduleList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsModified {
            get {
                return this.IsModifiedField;
            }
            set {
                if ((this.IsModifiedField.Equals(value) != true)) {
                    this.IsModifiedField = value;
                    this.RaisePropertyChanged("IsModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleTypeId {
            get {
                return this.ScheduleTypeIdField;
            }
            set {
                if ((this.ScheduleTypeIdField.Equals(value) != true)) {
                    this.ScheduleTypeIdField = value;
                    this.RaisePropertyChanged("ScheduleTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleTypeName {
            get {
                return this.ScheduleTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleTypeNameField, value) != true)) {
                    this.ScheduleTypeNameField = value;
                    this.RaisePropertyChanged("ScheduleTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyNotes", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicyNotes : MyAgencyVault.VM.MyAgencyVaultSvc.Note {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyID {
            get {
                return this.PolicyIDField;
            }
            set {
                if ((this.PolicyIDField.Equals(value) != true)) {
                    this.PolicyIDField = value;
                    this.RaisePropertyChanged("PolicyID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyOutgoingSchedule", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicyOutgoingSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutgoingScheduleEntry> OutgoingScheduleListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutgoingScheduleEntry> OutgoingScheduleList {
            get {
                return this.OutgoingScheduleListField;
            }
            set {
                if ((object.ReferenceEquals(this.OutgoingScheduleListField, value) != true)) {
                    this.OutgoingScheduleListField = value;
                    this.RaisePropertyChanged("OutgoingScheduleList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleTypeId {
            get {
                return this.ScheduleTypeIdField;
            }
            set {
                if ((this.ScheduleTypeIdField.Equals(value) != true)) {
                    this.ScheduleTypeIdField = value;
                    this.RaisePropertyChanged("ScheduleTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleTypeName {
            get {
                return this.ScheduleTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleTypeNameField, value) != true)) {
                    this.ScheduleTypeNameField = value;
                    this.RaisePropertyChanged("ScheduleTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyPaymentEntriesPost", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicyPaymentEntriesPost : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BonusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CommissionPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> DEUEntryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DollerPerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EntryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FollowUpIssueResolveOrClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> FollowUpVarIssueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsLinkPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PagenoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PaymentEntryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentRecivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PostStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SplitPerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StmtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StmtNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPaymentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchNumber {
            get {
                return this.BatchNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchNumberField, value) != true)) {
                    this.BatchNumberField = value;
                    this.RaisePropertyChanged("BatchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((this.BonusField.Equals(value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CommissionPercentage {
            get {
                return this.CommissionPercentageField;
            }
            set {
                if ((this.CommissionPercentageField.Equals(value) != true)) {
                    this.CommissionPercentageField = value;
                    this.RaisePropertyChanged("CommissionPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> DEUEntryId {
            get {
                return this.DEUEntryIdField;
            }
            set {
                if ((this.DEUEntryIdField.Equals(value) != true)) {
                    this.DEUEntryIdField = value;
                    this.RaisePropertyChanged("DEUEntryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DollerPerUnit {
            get {
                return this.DollerPerUnitField;
            }
            set {
                if ((this.DollerPerUnitField.Equals(value) != true)) {
                    this.DollerPerUnitField = value;
                    this.RaisePropertyChanged("DollerPerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EntryDate {
            get {
                return this.EntryDateField;
            }
            set {
                if ((this.EntryDateField.Equals(value) != true)) {
                    this.EntryDateField = value;
                    this.RaisePropertyChanged("EntryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FollowUpIssueResolveOrClosed {
            get {
                return this.FollowUpIssueResolveOrClosedField;
            }
            set {
                if ((this.FollowUpIssueResolveOrClosedField.Equals(value) != true)) {
                    this.FollowUpIssueResolveOrClosedField = value;
                    this.RaisePropertyChanged("FollowUpIssueResolveOrClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> FollowUpVarIssueId {
            get {
                return this.FollowUpVarIssueIdField;
            }
            set {
                if ((this.FollowUpVarIssueIdField.Equals(value) != true)) {
                    this.FollowUpVarIssueIdField = value;
                    this.RaisePropertyChanged("FollowUpVarIssueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsLinkPayment {
            get {
                return this.IsLinkPaymentField;
            }
            set {
                if ((this.IsLinkPaymentField.Equals(value) != true)) {
                    this.IsLinkPaymentField = value;
                    this.RaisePropertyChanged("IsLinkPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfUnits {
            get {
                return this.NumberOfUnitsField;
            }
            set {
                if ((this.NumberOfUnitsField.Equals(value) != true)) {
                    this.NumberOfUnitsField = value;
                    this.RaisePropertyChanged("NumberOfUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pageno {
            get {
                return this.PagenoField;
            }
            set {
                if ((object.ReferenceEquals(this.PagenoField, value) != true)) {
                    this.PagenoField = value;
                    this.RaisePropertyChanged("Pageno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PaymentEntryID {
            get {
                return this.PaymentEntryIDField;
            }
            set {
                if ((this.PaymentEntryIDField.Equals(value) != true)) {
                    this.PaymentEntryIDField = value;
                    this.RaisePropertyChanged("PaymentEntryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentRecived {
            get {
                return this.PaymentRecivedField;
            }
            set {
                if ((this.PaymentRecivedField.Equals(value) != true)) {
                    this.PaymentRecivedField = value;
                    this.RaisePropertyChanged("PaymentRecived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyID {
            get {
                return this.PolicyIDField;
            }
            set {
                if ((this.PolicyIDField.Equals(value) != true)) {
                    this.PolicyIDField = value;
                    this.RaisePropertyChanged("PolicyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PostStatusID {
            get {
                return this.PostStatusIDField;
            }
            set {
                if ((this.PostStatusIDField.Equals(value) != true)) {
                    this.PostStatusIDField = value;
                    this.RaisePropertyChanged("PostStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SplitPer {
            get {
                return this.SplitPerField;
            }
            set {
                if ((this.SplitPerField.Equals(value) != true)) {
                    this.SplitPerField = value;
                    this.RaisePropertyChanged("SplitPer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StmtID {
            get {
                return this.StmtIDField;
            }
            set {
                if ((this.StmtIDField.Equals(value) != true)) {
                    this.StmtIDField = value;
                    this.RaisePropertyChanged("StmtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StmtNumber {
            get {
                return this.StmtNumberField;
            }
            set {
                if ((this.StmtNumberField.Equals(value) != true)) {
                    this.StmtNumberField = value;
                    this.RaisePropertyChanged("StmtNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPayment {
            get {
                return this.TotalPaymentField;
            }
            set {
                if ((this.TotalPaymentField.Equals(value) != true)) {
                    this.TotalPaymentField = value;
                    this.RaisePropertyChanged("TotalPayment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncomingScheduleEntry", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class IncomingScheduleEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CoveragesScheduleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveFromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveToDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> FromRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ToRangeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CoveragesScheduleId {
            get {
                return this.CoveragesScheduleIdField;
            }
            set {
                if ((this.CoveragesScheduleIdField.Equals(value) != true)) {
                    this.CoveragesScheduleIdField = value;
                    this.RaisePropertyChanged("CoveragesScheduleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveFromDate {
            get {
                return this.EffectiveFromDateField;
            }
            set {
                if ((this.EffectiveFromDateField.Equals(value) != true)) {
                    this.EffectiveFromDateField = value;
                    this.RaisePropertyChanged("EffectiveFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveToDate {
            get {
                return this.EffectiveToDateField;
            }
            set {
                if ((this.EffectiveToDateField.Equals(value) != true)) {
                    this.EffectiveToDateField = value;
                    this.RaisePropertyChanged("EffectiveToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> FromRange {
            get {
                return this.FromRangeField;
            }
            set {
                if ((this.FromRangeField.Equals(value) != true)) {
                    this.FromRangeField = value;
                    this.RaisePropertyChanged("FromRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ToRange {
            get {
                return this.ToRangeField;
            }
            set {
                if ((this.ToRangeField.Equals(value) != true)) {
                    this.ToRangeField = value;
                    this.RaisePropertyChanged("ToRange");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Note", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes))]
    public partial class Note : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid NoteIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid NoteID {
            get {
                return this.NoteIDField;
            }
            set {
                if ((this.NoteIDField.Equals(value) != true)) {
                    this.NoteIDField = value;
                    this.RaisePropertyChanged("NoteID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutgoingScheduleEntry", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class OutgoingScheduleEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CoveragesScheduleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveFromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveToDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> FromRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrimaryAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayeeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayeeUserCredentialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ToRangeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CoveragesScheduleId {
            get {
                return this.CoveragesScheduleIdField;
            }
            set {
                if ((this.CoveragesScheduleIdField.Equals(value) != true)) {
                    this.CoveragesScheduleIdField = value;
                    this.RaisePropertyChanged("CoveragesScheduleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveFromDate {
            get {
                return this.EffectiveFromDateField;
            }
            set {
                if ((this.EffectiveFromDateField.Equals(value) != true)) {
                    this.EffectiveFromDateField = value;
                    this.RaisePropertyChanged("EffectiveFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveToDate {
            get {
                return this.EffectiveToDateField;
            }
            set {
                if ((this.EffectiveToDateField.Equals(value) != true)) {
                    this.EffectiveToDateField = value;
                    this.RaisePropertyChanged("EffectiveToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> FromRange {
            get {
                return this.FromRangeField;
            }
            set {
                if ((this.FromRangeField.Equals(value) != true)) {
                    this.FromRangeField = value;
                    this.RaisePropertyChanged("FromRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrimaryAgent {
            get {
                return this.IsPrimaryAgentField;
            }
            set {
                if ((this.IsPrimaryAgentField.Equals(value) != true)) {
                    this.IsPrimaryAgentField = value;
                    this.RaisePropertyChanged("IsPrimaryAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayeeName {
            get {
                return this.PayeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayeeNameField, value) != true)) {
                    this.PayeeNameField = value;
                    this.RaisePropertyChanged("PayeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayeeUserCredentialId {
            get {
                return this.PayeeUserCredentialIdField;
            }
            set {
                if ((this.PayeeUserCredentialIdField.Equals(value) != true)) {
                    this.PayeeUserCredentialIdField = value;
                    this.RaisePropertyChanged("PayeeUserCredentialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ToRange {
            get {
                return this.ToRangeField;
            }
            set {
                if ((this.ToRangeField.Equals(value) != true)) {
                    this.ToRangeField = value;
                    this.RaisePropertyChanged("ToRange");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssueStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class IssueStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorSiteLoginInfo", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PayorSiteLoginInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> LicenseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogInNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LicenseID {
            get {
                return this.LicenseIDField;
            }
            set {
                if ((this.LicenseIDField.Equals(value) != true)) {
                    this.LicenseIDField = value;
                    this.RaisePropertyChanged("LicenseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogInName {
            get {
                return this.LogInNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogInNameField, value) != true)) {
                    this.LogInNameField = value;
                    this.RaisePropertyChanged("LogInName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payor", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Payor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> CarriersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact> ContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults DefaultInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ISGlobalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.IncomingSchedule IncomingScheduleInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<string> IssuedFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PayorLicenseeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayorRegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayorTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.Region RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SourceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> UserWebSiteInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> Carriers {
            get {
                return this.CarriersField;
            }
            set {
                if ((object.ReferenceEquals(this.CarriersField, value) != true)) {
                    this.CarriersField = value;
                    this.RaisePropertyChanged("Carriers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact> Contacts {
            get {
                return this.ContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactsField, value) != true)) {
                    this.ContactsField = value;
                    this.RaisePropertyChanged("Contacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults DefaultInfo {
            get {
                return this.DefaultInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultInfoField, value) != true)) {
                    this.DefaultInfoField = value;
                    this.RaisePropertyChanged("DefaultInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ISGlobal {
            get {
                return this.ISGlobalField;
            }
            set {
                if ((this.ISGlobalField.Equals(value) != true)) {
                    this.ISGlobalField = value;
                    this.RaisePropertyChanged("ISGlobal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.IncomingSchedule IncomingScheduleInfo {
            get {
                return this.IncomingScheduleInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomingScheduleInfoField, value) != true)) {
                    this.IncomingScheduleInfoField = value;
                    this.RaisePropertyChanged("IncomingScheduleInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> IssuedFiles {
            get {
                return this.IssuedFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuedFilesField, value) != true)) {
                    this.IssuedFilesField = value;
                    this.RaisePropertyChanged("IssuedFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PayorLicensee {
            get {
                return this.PayorLicenseeField;
            }
            set {
                if ((this.PayorLicenseeField.Equals(value) != true)) {
                    this.PayorLicenseeField = value;
                    this.RaisePropertyChanged("PayorLicensee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorName {
            get {
                return this.PayorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNameField, value) != true)) {
                    this.PayorNameField = value;
                    this.RaisePropertyChanged("PayorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayorRegionID {
            get {
                return this.PayorRegionIDField;
            }
            set {
                if ((this.PayorRegionIDField.Equals(value) != true)) {
                    this.PayorRegionIDField = value;
                    this.RaisePropertyChanged("PayorRegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayorTypeID {
            get {
                return this.PayorTypeIDField;
            }
            set {
                if ((this.PayorTypeIDField.Equals(value) != true)) {
                    this.PayorTypeIDField = value;
                    this.RaisePropertyChanged("PayorTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Region Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SourceType {
            get {
                return this.SourceTypeField;
            }
            set {
                if ((this.SourceTypeField.Equals(value) != true)) {
                    this.SourceTypeField = value;
                    this.RaisePropertyChanged("SourceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> UserWebSiteInfo {
            get {
                return this.UserWebSiteInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserWebSiteInfoField, value) != true)) {
                    this.UserWebSiteInfoField = value;
                    this.RaisePropertyChanged("UserWebSiteInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorDefaults", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PayorDefaults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FieldNamesRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FirstPaymentOnRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GlobalPayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTotalExistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LocationColumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LocationRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavigationInstructionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorDefaultSettingsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates PayorDefaultStatementDatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebSiteUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FieldNamesRow {
            get {
                return this.FieldNamesRowField;
            }
            set {
                if ((this.FieldNamesRowField.Equals(value) != true)) {
                    this.FieldNamesRowField = value;
                    this.RaisePropertyChanged("FieldNamesRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileTypeId {
            get {
                return this.FileTypeIdField;
            }
            set {
                if ((this.FileTypeIdField.Equals(value) != true)) {
                    this.FileTypeIdField = value;
                    this.RaisePropertyChanged("FileTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FirstPaymentOnRow {
            get {
                return this.FirstPaymentOnRowField;
            }
            set {
                if ((this.FirstPaymentOnRowField.Equals(value) != true)) {
                    this.FirstPaymentOnRowField = value;
                    this.RaisePropertyChanged("FirstPaymentOnRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GlobalPayorId {
            get {
                return this.GlobalPayorIdField;
            }
            set {
                if ((this.GlobalPayorIdField.Equals(value) != true)) {
                    this.GlobalPayorIdField = value;
                    this.RaisePropertyChanged("GlobalPayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTotalExists {
            get {
                return this.IsTotalExistsField;
            }
            set {
                if ((this.IsTotalExistsField.Equals(value) != true)) {
                    this.IsTotalExistsField = value;
                    this.RaisePropertyChanged("IsTotalExists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LocationColumn {
            get {
                return this.LocationColumnField;
            }
            set {
                if ((this.LocationColumnField.Equals(value) != true)) {
                    this.LocationColumnField = value;
                    this.RaisePropertyChanged("LocationColumn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LocationRow {
            get {
                return this.LocationRowField;
            }
            set {
                if ((this.LocationRowField.Equals(value) != true)) {
                    this.LocationRowField = value;
                    this.RaisePropertyChanged("LocationRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginControl {
            get {
                return this.LoginControlField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginControlField, value) != true)) {
                    this.LoginControlField = value;
                    this.RaisePropertyChanged("LoginControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NavigationInstructions {
            get {
                return this.NavigationInstructionsField;
            }
            set {
                if ((object.ReferenceEquals(this.NavigationInstructionsField, value) != true)) {
                    this.NavigationInstructionsField = value;
                    this.RaisePropertyChanged("NavigationInstructions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordControl {
            get {
                return this.PasswordControlField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordControlField, value) != true)) {
                    this.PasswordControlField = value;
                    this.RaisePropertyChanged("PasswordControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorDefaultSettingsId {
            get {
                return this.PayorDefaultSettingsIdField;
            }
            set {
                if ((this.PayorDefaultSettingsIdField.Equals(value) != true)) {
                    this.PayorDefaultSettingsIdField = value;
                    this.RaisePropertyChanged("PayorDefaultSettingsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates PayorDefaultStatementDates {
            get {
                return this.PayorDefaultStatementDatesField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorDefaultStatementDatesField, value) != true)) {
                    this.PayorDefaultStatementDatesField = value;
                    this.RaisePropertyChanged("PayorDefaultStatementDates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebSiteUrl {
            get {
                return this.WebSiteUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.WebSiteUrlField, value) != true)) {
                    this.WebSiteUrlField = value;
                    this.RaisePropertyChanged("WebSiteUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncomingSchedule", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class IncomingSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CarrierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CoverageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingScheduleEntry> IncomingScheduleListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarrierId {
            get {
                return this.CarrierIdField;
            }
            set {
                if ((this.CarrierIdField.Equals(value) != true)) {
                    this.CarrierIdField = value;
                    this.RaisePropertyChanged("CarrierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CoverageId {
            get {
                return this.CoverageIdField;
            }
            set {
                if ((this.CoverageIdField.Equals(value) != true)) {
                    this.CoverageIdField = value;
                    this.RaisePropertyChanged("CoverageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingScheduleEntry> IncomingScheduleList {
            get {
                return this.IncomingScheduleListField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomingScheduleListField, value) != true)) {
                    this.IncomingScheduleListField = value;
                    this.RaisePropertyChanged("IncomingScheduleList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsModified {
            get {
                return this.IsModifiedField;
            }
            set {
                if ((this.IsModifiedField.Equals(value) != true)) {
                    this.IsModifiedField = value;
                    this.RaisePropertyChanged("IsModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleTypeId {
            get {
                return this.ScheduleTypeIdField;
            }
            set {
                if ((this.ScheduleTypeIdField.Equals(value) != true)) {
                    this.ScheduleTypeIdField = value;
                    this.RaisePropertyChanged("ScheduleTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleTypeName {
            get {
                return this.ScheduleTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleTypeNameField, value) != true)) {
                    this.ScheduleTypeNameField = value;
                    this.RaisePropertyChanged("ScheduleTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Region", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class Region : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Carrier", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Carrier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CarrierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> CoveragesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGlobalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTrackIncomingPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTrackMissingMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarrierId {
            get {
                return this.CarrierIdField;
            }
            set {
                if ((this.CarrierIdField.Equals(value) != true)) {
                    this.CarrierIdField = value;
                    this.RaisePropertyChanged("CarrierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> Coverages {
            get {
                return this.CoveragesField;
            }
            set {
                if ((object.ReferenceEquals(this.CoveragesField, value) != true)) {
                    this.CoveragesField = value;
                    this.RaisePropertyChanged("Coverages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGlobal {
            get {
                return this.IsGlobalField;
            }
            set {
                if ((this.IsGlobalField.Equals(value) != true)) {
                    this.IsGlobalField = value;
                    this.RaisePropertyChanged("IsGlobal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrackIncomingPercentage {
            get {
                return this.IsTrackIncomingPercentageField;
            }
            set {
                if ((this.IsTrackIncomingPercentageField.Equals(value) != true)) {
                    this.IsTrackIncomingPercentageField = value;
                    this.RaisePropertyChanged("IsTrackIncomingPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrackMissingMonth {
            get {
                return this.IsTrackMissingMonthField;
            }
            set {
                if ((this.IsTrackMissingMonthField.Equals(value) != true)) {
                    this.IsTrackMissingMonthField = value;
                    this.RaisePropertyChanged("IsTrackMissingMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayerId {
            get {
                return this.PayerIdField;
            }
            set {
                if ((this.PayerIdField.Equals(value) != true)) {
                    this.PayerIdField = value;
                    this.RaisePropertyChanged("PayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlobalPayorContact", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class GlobalPayorContact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPrefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GlobalPayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPref {
            get {
                return this.ContactPrefField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPrefField, value) != true)) {
                    this.ContactPrefField = value;
                    this.RaisePropertyChanged("ContactPref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GlobalPayorId {
            get {
                return this.GlobalPayorIdField;
            }
            set {
                if ((this.GlobalPayorIdField.Equals(value) != true)) {
                    this.GlobalPayorIdField = value;
                    this.RaisePropertyChanged("GlobalPayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficePhone {
            get {
                return this.OfficePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficePhoneField, value) != true)) {
                    this.OfficePhoneField = value;
                    this.RaisePropertyChanged("OfficePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorContactId {
            get {
                return this.PayorContactIdField;
            }
            set {
                if ((this.PayorContactIdField.Equals(value) != true)) {
                    this.PayorContactIdField = value;
                    this.RaisePropertyChanged("PayorContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Coverage", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Coverage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CarrierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CoverageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule IncomingScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGlobalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarrierID {
            get {
                return this.CarrierIDField;
            }
            set {
                if ((this.CarrierIDField.Equals(value) != true)) {
                    this.CarrierIDField = value;
                    this.RaisePropertyChanged("CarrierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CoverageID {
            get {
                return this.CoverageIDField;
            }
            set {
                if ((this.CoverageIDField.Equals(value) != true)) {
                    this.CoverageIDField = value;
                    this.RaisePropertyChanged("CoverageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule IncomingSchedule {
            get {
                return this.IncomingScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomingScheduleField, value) != true)) {
                    this.IncomingScheduleField = value;
                    this.RaisePropertyChanged("IncomingSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGlobal {
            get {
                return this.IsGlobalField;
            }
            set {
                if ((this.IsGlobalField.Equals(value) != true)) {
                    this.IsGlobalField = value;
                    this.RaisePropertyChanged("IsGlobal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlobalIncomingSchedule", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class GlobalIncomingSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CarrierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CoverageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingScheduleEntry> IncomingScheduleListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarrierId {
            get {
                return this.CarrierIdField;
            }
            set {
                if ((this.CarrierIdField.Equals(value) != true)) {
                    this.CarrierIdField = value;
                    this.RaisePropertyChanged("CarrierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CoverageId {
            get {
                return this.CoverageIdField;
            }
            set {
                if ((this.CoverageIdField.Equals(value) != true)) {
                    this.CoverageIdField = value;
                    this.RaisePropertyChanged("CoverageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingScheduleEntry> IncomingScheduleList {
            get {
                return this.IncomingScheduleListField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomingScheduleListField, value) != true)) {
                    this.IncomingScheduleListField = value;
                    this.RaisePropertyChanged("IncomingScheduleList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsModified {
            get {
                return this.IsModifiedField;
            }
            set {
                if ((this.IsModifiedField.Equals(value) != true)) {
                    this.IsModifiedField = value;
                    this.RaisePropertyChanged("IsModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleTypeId {
            get {
                return this.ScheduleTypeIdField;
            }
            set {
                if ((this.ScheduleTypeIdField.Equals(value) != true)) {
                    this.ScheduleTypeIdField = value;
                    this.RaisePropertyChanged("ScheduleTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleTypeName {
            get {
                return this.ScheduleTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleTypeNameField, value) != true)) {
                    this.ScheduleTypeNameField = value;
                    this.RaisePropertyChanged("ScheduleTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Operation", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum Operation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Add = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Upadte = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ReturnStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCarrierOrCoverageRemovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCarrierOrCoverageRemoved {
            get {
                return this.IsCarrierOrCoverageRemovedField;
            }
            set {
                if ((this.IsCarrierOrCoverageRemovedField.Equals(value) != true)) {
                    this.IsCarrierOrCoverageRemovedField = value;
                    this.RaisePropertyChanged("IsCarrierOrCoverageRemoved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsError {
            get {
                return this.IsErrorField;
            }
            set {
                if ((this.IsErrorField.Equals(value) != true)) {
                    this.IsErrorField = value;
                    this.RaisePropertyChanged("IsError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorFillInfo", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PayorFillInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCarriersRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsContactsRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCoveragesRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWebsiteLoginsRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.PayorStatus PayorStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCarriersRequired {
            get {
                return this.IsCarriersRequiredField;
            }
            set {
                if ((this.IsCarriersRequiredField.Equals(value) != true)) {
                    this.IsCarriersRequiredField = value;
                    this.RaisePropertyChanged("IsCarriersRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsContactsRequired {
            get {
                return this.IsContactsRequiredField;
            }
            set {
                if ((this.IsContactsRequiredField.Equals(value) != true)) {
                    this.IsContactsRequiredField = value;
                    this.RaisePropertyChanged("IsContactsRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCoveragesRequired {
            get {
                return this.IsCoveragesRequiredField;
            }
            set {
                if ((this.IsCoveragesRequiredField.Equals(value) != true)) {
                    this.IsCoveragesRequiredField = value;
                    this.RaisePropertyChanged("IsCoveragesRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWebsiteLoginsRequired {
            get {
                return this.IsWebsiteLoginsRequiredField;
            }
            set {
                if ((this.IsWebsiteLoginsRequiredField.Equals(value) != true)) {
                    this.IsWebsiteLoginsRequiredField = value;
                    this.RaisePropertyChanged("IsWebsiteLoginsRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorStatus PayorStatus {
            get {
                return this.PayorStatusField;
            }
            set {
                if ((this.PayorStatusField.Equals(value) != true)) {
                    this.PayorStatusField = value;
                    this.RaisePropertyChanged("PayorStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum PayorStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InActive = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileType", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class FileType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileTypeId {
            get {
                return this.FileTypeIdField;
            }
            set {
                if ((this.FileTypeIdField.Equals(value) != true)) {
                    this.FileTypeIdField = value;
                    this.RaisePropertyChanged("FileTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchDownloadStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class BatchDownloadStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchDownloadStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchDownloadStatusId {
            get {
                return this.BatchDownloadStatusIdField;
            }
            set {
                if ((this.BatchDownloadStatusIdField.Equals(value) != true)) {
                    this.BatchDownloadStatusIdField = value;
                    this.RaisePropertyChanged("BatchDownloadStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desc {
            get {
                return this.DescField;
            }
            set {
                if ((object.ReferenceEquals(this.DescField, value) != true)) {
                    this.DescField = value;
                    this.RaisePropertyChanged("Desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseeStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class LicenseeStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorToolIncomingFieldType", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class PayorToolIncomingFieldType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IncomingFieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string incomingFieldNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IncomingFieldID {
            get {
                return this.IncomingFieldIDField;
            }
            set {
                if ((this.IncomingFieldIDField.Equals(value) != true)) {
                    this.IncomingFieldIDField = value;
                    this.RaisePropertyChanged("IncomingFieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string incomingFieldName {
            get {
                return this.incomingFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.incomingFieldNameField, value) != true)) {
                    this.incomingFieldNameField = value;
                    this.RaisePropertyChanged("incomingFieldName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorToolLearnedlFieldType", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class PayorToolLearnedlFieldType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int learnFieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string learnFieldNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int learnFieldID {
            get {
                return this.learnFieldIDField;
            }
            set {
                if ((this.learnFieldIDField.Equals(value) != true)) {
                    this.learnFieldIDField = value;
                    this.RaisePropertyChanged("learnFieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string learnFieldName {
            get {
                return this.learnFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.learnFieldNameField, value) != true)) {
                    this.learnFieldNameField = value;
                    this.RaisePropertyChanged("learnFieldName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyIncomingPaymentType", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class PolicyIncomingPaymentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymenProcedureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymenProcedureName {
            get {
                return this.PaymenProcedureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymenProcedureNameField, value) != true)) {
                    this.PaymenProcedureNameField = value;
                    this.RaisePropertyChanged("PaymenProcedureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentTypeId {
            get {
                return this.PaymentTypeIdField;
            }
            set {
                if ((this.PaymentTypeIdField.Equals(value) != true)) {
                    this.PaymentTypeIdField = value;
                    this.RaisePropertyChanged("PaymentTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyIncomingScheduleType", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class PolicyIncomingScheduleType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleTypeId {
            get {
                return this.ScheduleTypeIdField;
            }
            set {
                if ((this.ScheduleTypeIdField.Equals(value) != true)) {
                    this.ScheduleTypeIdField = value;
                    this.RaisePropertyChanged("ScheduleTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyMode", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class PolicyMode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeField, value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModeId {
            get {
                return this.ModeIdField;
            }
            set {
                if ((this.ModeIdField.Equals(value) != true)) {
                    this.ModeIdField = value;
                    this.RaisePropertyChanged("ModeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyOutgoingScheduleType", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class PolicyOutgoingScheduleType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleTypeId {
            get {
                return this.ScheduleTypeIdField;
            }
            set {
                if ((this.ScheduleTypeIdField.Equals(value) != true)) {
                    this.ScheduleTypeIdField = value;
                    this.RaisePropertyChanged("ScheduleTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class PolicyStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyTerminationReason", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class PolicyTerminationReason : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerminationReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TerminationReasonIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerminationReason {
            get {
                return this.TerminationReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminationReasonField, value) != true)) {
                    this.TerminationReasonField = value;
                    this.RaisePropertyChanged("TerminationReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TerminationReasonId {
            get {
                return this.TerminationReasonIdField;
            }
            set {
                if ((this.TerminationReasonIdField.Equals(value) != true)) {
                    this.TerminationReasonIdField = value;
                    this.RaisePropertyChanged("TerminationReasonId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionText {
            get {
                return this.QuestionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionTextField, value) != true)) {
                    this.QuestionTextField = value;
                    this.RaisePropertyChanged("QuestionText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemConstant", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class SystemConstant : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Key {
            get {
                return this.KeyField;
            }
            set {
                if ((this.KeyField.Equals(value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Zip", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class Zip : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorToolMaskedFieldType", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class PayorToolMaskedFieldType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaskNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int maskFieldIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaskName {
            get {
                return this.MaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaskNameField, value) != true)) {
                    this.MaskNameField = value;
                    this.RaisePropertyChanged("MaskName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int maskFieldID {
            get {
                return this.maskFieldIDField;
            }
            set {
                if ((this.maskFieldIDField.Equals(value) != true)) {
                    this.maskFieldIDField = value;
                    this.RaisePropertyChanged("maskFieldID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyDetailMasterData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class PolicyDetailMasterData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingScheduleType> IncomingAdvanceScheduleTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType> IncomingPaymentTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory> IssueCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons> IssueReasonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults> IssueResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus> IssueStatusesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType> LearnedMasterIncomingPaymentTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> LearnedMasterPaymentsModesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> ModesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingScheduleType> OutgoingAdvanceScheduleTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyStatus> StatusesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> TerminationReasonsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingScheduleType> IncomingAdvanceScheduleTypes {
            get {
                return this.IncomingAdvanceScheduleTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomingAdvanceScheduleTypesField, value) != true)) {
                    this.IncomingAdvanceScheduleTypesField = value;
                    this.RaisePropertyChanged("IncomingAdvanceScheduleTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType> IncomingPaymentTypes {
            get {
                return this.IncomingPaymentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomingPaymentTypesField, value) != true)) {
                    this.IncomingPaymentTypesField = value;
                    this.RaisePropertyChanged("IncomingPaymentTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory> IssueCategories {
            get {
                return this.IssueCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueCategoriesField, value) != true)) {
                    this.IssueCategoriesField = value;
                    this.RaisePropertyChanged("IssueCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons> IssueReasons {
            get {
                return this.IssueReasonsField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueReasonsField, value) != true)) {
                    this.IssueReasonsField = value;
                    this.RaisePropertyChanged("IssueReasons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults> IssueResults {
            get {
                return this.IssueResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueResultsField, value) != true)) {
                    this.IssueResultsField = value;
                    this.RaisePropertyChanged("IssueResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus> IssueStatuses {
            get {
                return this.IssueStatusesField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueStatusesField, value) != true)) {
                    this.IssueStatusesField = value;
                    this.RaisePropertyChanged("IssueStatuses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType> LearnedMasterIncomingPaymentTypes {
            get {
                return this.LearnedMasterIncomingPaymentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.LearnedMasterIncomingPaymentTypesField, value) != true)) {
                    this.LearnedMasterIncomingPaymentTypesField = value;
                    this.RaisePropertyChanged("LearnedMasterIncomingPaymentTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> LearnedMasterPaymentsModes {
            get {
                return this.LearnedMasterPaymentsModesField;
            }
            set {
                if ((object.ReferenceEquals(this.LearnedMasterPaymentsModesField, value) != true)) {
                    this.LearnedMasterPaymentsModesField = value;
                    this.RaisePropertyChanged("LearnedMasterPaymentsModes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> Modes {
            get {
                return this.ModesField;
            }
            set {
                if ((object.ReferenceEquals(this.ModesField, value) != true)) {
                    this.ModesField = value;
                    this.RaisePropertyChanged("Modes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingScheduleType> OutgoingAdvanceScheduleTypes {
            get {
                return this.OutgoingAdvanceScheduleTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.OutgoingAdvanceScheduleTypesField, value) != true)) {
                    this.OutgoingAdvanceScheduleTypesField = value;
                    this.RaisePropertyChanged("OutgoingAdvanceScheduleTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyStatus> Statuses {
            get {
                return this.StatusesField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusesField, value) != true)) {
                    this.StatusesField = value;
                    this.RaisePropertyChanged("Statuses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> TerminationReasons {
            get {
                return this.TerminationReasonsField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminationReasonsField, value) != true)) {
                    this.TerminationReasonsField = value;
                    this.RaisePropertyChanged("TerminationReasons");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssueCategory", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class IssueCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssueReasons", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class IssueReasons : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReasonsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonsNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReasonsID {
            get {
                return this.ReasonsIDField;
            }
            set {
                if ((this.ReasonsIDField.Equals(value) != true)) {
                    this.ReasonsIDField = value;
                    this.RaisePropertyChanged("ReasonsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonsName {
            get {
                return this.ReasonsNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonsNameField, value) != true)) {
                    this.ReasonsNameField = value;
                    this.RaisePropertyChanged("ReasonsName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempFolderDetails", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.WcfService")]
    [System.SerializableAttribute()]
    public partial class TempFolderDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileSizeToBeDeletedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowDelete {
            get {
                return this.AllowDeleteField;
            }
            set {
                if ((this.AllowDeleteField.Equals(value) != true)) {
                    this.AllowDeleteField = value;
                    this.RaisePropertyChanged("AllowDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileSizeToBeDeleted {
            get {
                return this.FileSizeToBeDeletedField;
            }
            set {
                if ((object.ReferenceEquals(this.FileSizeToBeDeletedField, value) != true)) {
                    this.FileSizeToBeDeletedField = value;
                    this.RaisePropertyChanged("FileSizeToBeDeleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationSet", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class OperationSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.Operation MainOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.Operation NickNameOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PreviousCarrierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PreviousCoverageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string previousCovarageNickNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Operation MainOperation {
            get {
                return this.MainOperationField;
            }
            set {
                if ((this.MainOperationField.Equals(value) != true)) {
                    this.MainOperationField = value;
                    this.RaisePropertyChanged("MainOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Operation NickNameOperation {
            get {
                return this.NickNameOperationField;
            }
            set {
                if ((this.NickNameOperationField.Equals(value) != true)) {
                    this.NickNameOperationField = value;
                    this.RaisePropertyChanged("NickNameOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PreviousCarrierId {
            get {
                return this.PreviousCarrierIdField;
            }
            set {
                if ((this.PreviousCarrierIdField.Equals(value) != true)) {
                    this.PreviousCarrierIdField = value;
                    this.RaisePropertyChanged("PreviousCarrierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PreviousCoverageId {
            get {
                return this.PreviousCoverageIdField;
            }
            set {
                if ((this.PreviousCoverageIdField.Equals(value) != true)) {
                    this.PreviousCoverageIdField = value;
                    this.RaisePropertyChanged("PreviousCoverageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string previousCovarageNickName {
            get {
                return this.previousCovarageNickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.previousCovarageNickNameField, value) != true)) {
                    this.previousCovarageNickNameField = value;
                    this.RaisePropertyChanged("previousCovarageNickName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayedCarrier", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class DisplayedCarrier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CarrierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> CoveragesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGlobalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarrierId {
            get {
                return this.CarrierIdField;
            }
            set {
                if ((this.CarrierIdField.Equals(value) != true)) {
                    this.CarrierIdField = value;
                    this.RaisePropertyChanged("CarrierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> Coverages {
            get {
                return this.CoveragesField;
            }
            set {
                if ((object.ReferenceEquals(this.CoveragesField, value) != true)) {
                    this.CoveragesField = value;
                    this.RaisePropertyChanged("Coverages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGlobal {
            get {
                return this.IsGlobalField;
            }
            set {
                if ((this.IsGlobalField.Equals(value) != true)) {
                    this.IsGlobalField = value;
                    this.RaisePropertyChanged("IsGlobal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchStatmentRecords", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class BatchStatmentRecords : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BalAdjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CheckAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DonePerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EnterAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RemainingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StatmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatmentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StmtStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> BalAdj {
            get {
                return this.BalAdjField;
            }
            set {
                if ((this.BalAdjField.Equals(value) != true)) {
                    this.BalAdjField = value;
                    this.RaisePropertyChanged("BalAdj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CheckAmount {
            get {
                return this.CheckAmountField;
            }
            set {
                if ((this.CheckAmountField.Equals(value) != true)) {
                    this.CheckAmountField = value;
                    this.RaisePropertyChanged("CheckAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DonePer {
            get {
                return this.DonePerField;
            }
            set {
                if ((this.DonePerField.Equals(value) != true)) {
                    this.DonePerField = value;
                    this.RaisePropertyChanged("DonePer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EnterAmount {
            get {
                return this.EnterAmountField;
            }
            set {
                if ((this.EnterAmountField.Equals(value) != true)) {
                    this.EnterAmountField = value;
                    this.RaisePropertyChanged("EnterAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((this.EntriesField.Equals(value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> House {
            get {
                return this.HouseField;
            }
            set {
                if ((this.HouseField.Equals(value) != true)) {
                    this.HouseField = value;
                    this.RaisePropertyChanged("House");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorName {
            get {
                return this.PayorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNameField, value) != true)) {
                    this.PayorNameField = value;
                    this.RaisePropertyChanged("PayorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorNickName {
            get {
                return this.PayorNickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNickNameField, value) != true)) {
                    this.PayorNickNameField = value;
                    this.RaisePropertyChanged("PayorNickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Remaining {
            get {
                return this.RemainingField;
            }
            set {
                if ((this.RemainingField.Equals(value) != true)) {
                    this.RemainingField = value;
                    this.RaisePropertyChanged("Remaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StatmentId {
            get {
                return this.StatmentIdField;
            }
            set {
                if ((this.StatmentIdField.Equals(value) != true)) {
                    this.StatmentIdField = value;
                    this.RaisePropertyChanged("StatmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatmentNumber {
            get {
                return this.StatmentNumberField;
            }
            set {
                if ((this.StatmentNumberField.Equals(value) != true)) {
                    this.StatmentNumberField = value;
                    this.RaisePropertyChanged("StatmentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StmtStatus {
            get {
                return this.StmtStatusField;
            }
            set {
                if ((this.StmtStatusField.Equals(value) != true)) {
                    this.StmtStatusField = value;
                    this.RaisePropertyChanged("StmtStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillingDetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillingDetail {
            get {
                return this.BillingDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingDetailField, value) != true)) {
                    this.BillingDetailField = value;
                    this.RaisePropertyChanged("BillingDetail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillingLineDetail", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class BillingLineDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EstimatedChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Range1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Range2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType ServiceChargeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EstimatedCharge {
            get {
                return this.EstimatedChargeField;
            }
            set {
                if ((this.EstimatedChargeField.Equals(value) != true)) {
                    this.EstimatedChargeField = value;
                    this.RaisePropertyChanged("EstimatedCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTaxable {
            get {
                return this.IsTaxableField;
            }
            set {
                if ((this.IsTaxableField.Equals(value) != true)) {
                    this.IsTaxableField = value;
                    this.RaisePropertyChanged("IsTaxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeID {
            get {
                return this.LicenseeIDField;
            }
            set {
                if ((this.LicenseeIDField.Equals(value) != true)) {
                    this.LicenseeIDField = value;
                    this.RaisePropertyChanged("LicenseeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeServiceID {
            get {
                return this.LicenseeServiceIDField;
            }
            set {
                if ((this.LicenseeServiceIDField.Equals(value) != true)) {
                    this.LicenseeServiceIDField = value;
                    this.RaisePropertyChanged("LicenseeServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Min {
            get {
                return this.MinField;
            }
            set {
                if ((this.MinField.Equals(value) != true)) {
                    this.MinField = value;
                    this.RaisePropertyChanged("Min");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Range1 {
            get {
                return this.Range1Field;
            }
            set {
                if ((this.Range1Field.Equals(value) != true)) {
                    this.Range1Field = value;
                    this.RaisePropertyChanged("Range1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Range2 {
            get {
                return this.Range2Field;
            }
            set {
                if ((this.Range2Field.Equals(value) != true)) {
                    this.Range2Field = value;
                    this.RaisePropertyChanged("Range2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType ServiceChargeType {
            get {
                return this.ServiceChargeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceChargeTypeField, value) != true)) {
                    this.ServiceChargeTypeField = value;
                    this.RaisePropertyChanged("ServiceChargeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceProduct", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class ServiceProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceDescription {
            get {
                return this.ServiceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceDescriptionField, value) != true)) {
                    this.ServiceDescriptionField = value;
                    this.RaisePropertyChanged("ServiceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceID {
            get {
                return this.ServiceIDField;
            }
            set {
                if ((this.ServiceIDField.Equals(value) != true)) {
                    this.ServiceIDField = value;
                    this.RaisePropertyChanged("ServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceChargeType", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class ServiceChargeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceChargeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceChargeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceChargeTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceChargeDescription {
            get {
                return this.ServiceChargeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceChargeDescriptionField, value) != true)) {
                    this.ServiceChargeDescriptionField = value;
                    this.RaisePropertyChanged("ServiceChargeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceChargeName {
            get {
                return this.ServiceChargeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceChargeNameField, value) != true)) {
                    this.ServiceChargeNameField = value;
                    this.RaisePropertyChanged("ServiceChargeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceChargeTypeID {
            get {
                return this.ServiceChargeTypeIDField;
            }
            set {
                if ((this.ServiceChargeTypeIDField.Equals(value) != true)) {
                    this.ServiceChargeTypeIDField = value;
                    this.RaisePropertyChanged("ServiceChargeTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UniqueIdenitfier", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class UniqueIdenitfier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaskedTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaskedText {
            get {
                return this.MaskedTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MaskedTextField, value) != true)) {
                    this.MaskedTextField = value;
                    this.RaisePropertyChanged("MaskedText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeuSearchedPolicy", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class DeuSearchedPolicy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PaymentModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PolicyStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompSchedule {
            get {
                return this.CompScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.CompScheduleField, value) != true)) {
                    this.CompScheduleField = value;
                    this.RaisePropertyChanged("CompSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompType {
            get {
                return this.CompTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompTypeField, value) != true)) {
                    this.CompTypeField = value;
                    this.RaisePropertyChanged("CompType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insured {
            get {
                return this.InsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredField, value) != true)) {
                    this.InsuredField = value;
                    this.RaisePropertyChanged("Insured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PaymentMode {
            get {
                return this.PaymentModeField;
            }
            set {
                if ((this.PaymentModeField.Equals(value) != true)) {
                    this.PaymentModeField = value;
                    this.RaisePropertyChanged("PaymentMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PolicyStatus {
            get {
                return this.PolicyStatusField;
            }
            set {
                if ((this.PolicyStatusField.Equals(value) != true)) {
                    this.PolicyStatusField = value;
                    this.RaisePropertyChanged("PolicyStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostEntryProcess", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum PostEntryProcess : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstPost = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RePost = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DEUFields", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class DEUFields : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CurrentUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.DEU DeuDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeuEntryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DataEntryField> DeuFieldDataCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy> SearchedPolicyListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy SelectedPolicyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StatementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TemplateIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((this.BatchIdField.Equals(value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CurrentUser {
            get {
                return this.CurrentUserField;
            }
            set {
                if ((this.CurrentUserField.Equals(value) != true)) {
                    this.CurrentUserField = value;
                    this.RaisePropertyChanged("CurrentUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.DEU DeuData {
            get {
                return this.DeuDataField;
            }
            set {
                if ((object.ReferenceEquals(this.DeuDataField, value) != true)) {
                    this.DeuDataField = value;
                    this.RaisePropertyChanged("DeuData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeuEntryId {
            get {
                return this.DeuEntryIdField;
            }
            set {
                if ((this.DeuEntryIdField.Equals(value) != true)) {
                    this.DeuEntryIdField = value;
                    this.RaisePropertyChanged("DeuEntryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DataEntryField> DeuFieldDataCollection {
            get {
                return this.DeuFieldDataCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DeuFieldDataCollectionField, value) != true)) {
                    this.DeuFieldDataCollectionField = value;
                    this.RaisePropertyChanged("DeuFieldDataCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferenceNo {
            get {
                return this.ReferenceNoField;
            }
            set {
                if ((this.ReferenceNoField.Equals(value) != true)) {
                    this.ReferenceNoField = value;
                    this.RaisePropertyChanged("ReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy> SearchedPolicyList {
            get {
                return this.SearchedPolicyListField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchedPolicyListField, value) != true)) {
                    this.SearchedPolicyListField = value;
                    this.RaisePropertyChanged("SearchedPolicyList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy SelectedPolicy {
            get {
                return this.SelectedPolicyField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedPolicyField, value) != true)) {
                    this.SelectedPolicyField = value;
                    this.RaisePropertyChanged("SelectedPolicy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StatementId {
            get {
                return this.StatementIdField;
            }
            set {
                if ((this.StatementIdField.Equals(value) != true)) {
                    this.StatementIdField = value;
                    this.RaisePropertyChanged("StatementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DEU", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class DEU : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BonusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CarrierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CommissionPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CommissionTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompScheduleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CoverageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverageNickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DEUENtryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DollerPerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EligibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnrolledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EntryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> GuidCarrierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEntrybyCommissiondashBoardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Link1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ModalAvgPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NoOfUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OriginalEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PACField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PaymentRecivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorSysIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PolicyModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PostCompleteStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PostStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RenewalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SplitPerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> StmtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TemplateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TrackFromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnlinkClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.XmlFields XmlDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((this.BonusField.Equals(value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CarrierID {
            get {
                return this.CarrierIDField;
            }
            set {
                if ((this.CarrierIDField.Equals(value) != true)) {
                    this.CarrierIDField = value;
                    this.RaisePropertyChanged("CarrierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierNickName {
            get {
                return this.CarrierNickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNickNameField, value) != true)) {
                    this.CarrierNickNameField = value;
                    this.RaisePropertyChanged("CarrierNickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CommissionPercentage {
            get {
                return this.CommissionPercentageField;
            }
            set {
                if ((this.CommissionPercentageField.Equals(value) != true)) {
                    this.CommissionPercentageField = value;
                    this.RaisePropertyChanged("CommissionPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CommissionTotal {
            get {
                return this.CommissionTotalField;
            }
            set {
                if ((this.CommissionTotalField.Equals(value) != true)) {
                    this.CommissionTotalField = value;
                    this.RaisePropertyChanged("CommissionTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompScheduleType {
            get {
                return this.CompScheduleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompScheduleTypeField, value) != true)) {
                    this.CompScheduleTypeField = value;
                    this.RaisePropertyChanged("CompScheduleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompTypeID {
            get {
                return this.CompTypeIDField;
            }
            set {
                if ((this.CompTypeIDField.Equals(value) != true)) {
                    this.CompTypeIDField = value;
                    this.RaisePropertyChanged("CompTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CoverageID {
            get {
                return this.CoverageIDField;
            }
            set {
                if ((this.CoverageIDField.Equals(value) != true)) {
                    this.CoverageIDField = value;
                    this.RaisePropertyChanged("CoverageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverageNickName {
            get {
                return this.CoverageNickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverageNickNameField, value) != true)) {
                    this.CoverageNickNameField = value;
                    this.RaisePropertyChanged("CoverageNickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DEUENtryID {
            get {
                return this.DEUENtryIDField;
            }
            set {
                if ((this.DEUENtryIDField.Equals(value) != true)) {
                    this.DEUENtryIDField = value;
                    this.RaisePropertyChanged("DEUENtryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DollerPerUnit {
            get {
                return this.DollerPerUnitField;
            }
            set {
                if ((this.DollerPerUnitField.Equals(value) != true)) {
                    this.DollerPerUnitField = value;
                    this.RaisePropertyChanged("DollerPerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Eligible {
            get {
                return this.EligibleField;
            }
            set {
                if ((object.ReferenceEquals(this.EligibleField, value) != true)) {
                    this.EligibleField = value;
                    this.RaisePropertyChanged("Eligible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Enrolled {
            get {
                return this.EnrolledField;
            }
            set {
                if ((object.ReferenceEquals(this.EnrolledField, value) != true)) {
                    this.EnrolledField = value;
                    this.RaisePropertyChanged("Enrolled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EntryDate {
            get {
                return this.EntryDateField;
            }
            set {
                if ((this.EntryDateField.Equals(value) != true)) {
                    this.EntryDateField = value;
                    this.RaisePropertyChanged("EntryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> GuidCarrierID {
            get {
                return this.GuidCarrierIDField;
            }
            set {
                if ((this.GuidCarrierIDField.Equals(value) != true)) {
                    this.GuidCarrierIDField = value;
                    this.RaisePropertyChanged("GuidCarrierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insured {
            get {
                return this.InsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredField, value) != true)) {
                    this.InsuredField = value;
                    this.RaisePropertyChanged("Insured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEntrybyCommissiondashBoard {
            get {
                return this.IsEntrybyCommissiondashBoardField;
            }
            set {
                if ((this.IsEntrybyCommissiondashBoardField.Equals(value) != true)) {
                    this.IsEntrybyCommissiondashBoardField = value;
                    this.RaisePropertyChanged("IsEntrybyCommissiondashBoard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link1 {
            get {
                return this.Link1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Link1Field, value) != true)) {
                    this.Link1Field = value;
                    this.RaisePropertyChanged("Link1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ModalAvgPremium {
            get {
                return this.ModalAvgPremiumField;
            }
            set {
                if ((this.ModalAvgPremiumField.Equals(value) != true)) {
                    this.ModalAvgPremiumField = value;
                    this.RaisePropertyChanged("ModalAvgPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NoOfUnits {
            get {
                return this.NoOfUnitsField;
            }
            set {
                if ((this.NoOfUnitsField.Equals(value) != true)) {
                    this.NoOfUnitsField = value;
                    this.RaisePropertyChanged("NoOfUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OriginalEffectiveDate {
            get {
                return this.OriginalEffectiveDateField;
            }
            set {
                if ((this.OriginalEffectiveDateField.Equals(value) != true)) {
                    this.OriginalEffectiveDateField = value;
                    this.RaisePropertyChanged("OriginalEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PAC {
            get {
                return this.PACField;
            }
            set {
                if ((object.ReferenceEquals(this.PACField, value) != true)) {
                    this.PACField = value;
                    this.RaisePropertyChanged("PAC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMC {
            get {
                return this.PMCField;
            }
            set {
                if ((object.ReferenceEquals(this.PMCField, value) != true)) {
                    this.PMCField = value;
                    this.RaisePropertyChanged("PMC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PaymentRecived {
            get {
                return this.PaymentRecivedField;
            }
            set {
                if ((this.PaymentRecivedField.Equals(value) != true)) {
                    this.PaymentRecivedField = value;
                    this.RaisePropertyChanged("PaymentRecived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorSysID {
            get {
                return this.PayorSysIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorSysIDField, value) != true)) {
                    this.PayorSysIDField = value;
                    this.RaisePropertyChanged("PayorSysID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PolicyMode {
            get {
                return this.PolicyModeField;
            }
            set {
                if ((this.PolicyModeField.Equals(value) != true)) {
                    this.PolicyModeField = value;
                    this.RaisePropertyChanged("PolicyMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PostCompleteStatus {
            get {
                return this.PostCompleteStatusField;
            }
            set {
                if ((this.PostCompleteStatusField.Equals(value) != true)) {
                    this.PostCompleteStatusField = value;
                    this.RaisePropertyChanged("PostCompleteStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PostStatusID {
            get {
                return this.PostStatusIDField;
            }
            set {
                if ((this.PostStatusIDField.Equals(value) != true)) {
                    this.PostStatusIDField = value;
                    this.RaisePropertyChanged("PostStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Renewal {
            get {
                return this.RenewalField;
            }
            set {
                if ((object.ReferenceEquals(this.RenewalField, value) != true)) {
                    this.RenewalField = value;
                    this.RaisePropertyChanged("Renewal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SplitPer {
            get {
                return this.SplitPerField;
            }
            set {
                if ((this.SplitPerField.Equals(value) != true)) {
                    this.SplitPerField = value;
                    this.RaisePropertyChanged("SplitPer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> StmtID {
            get {
                return this.StmtIDField;
            }
            set {
                if ((this.StmtIDField.Equals(value) != true)) {
                    this.StmtIDField = value;
                    this.RaisePropertyChanged("StmtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TrackFromDate {
            get {
                return this.TrackFromDateField;
            }
            set {
                if ((this.TrackFromDateField.Equals(value) != true)) {
                    this.TrackFromDateField = value;
                    this.RaisePropertyChanged("TrackFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnlinkClientName {
            get {
                return this.UnlinkClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UnlinkClientNameField, value) != true)) {
                    this.UnlinkClientNameField = value;
                    this.RaisePropertyChanged("UnlinkClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.XmlFields XmlData {
            get {
                return this.XmlDataField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlDataField, value) != true)) {
                    this.XmlDataField = value;
                    this.RaisePropertyChanged("XmlData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataEntryField", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class DataEntryField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeuFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DeuFieldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeuFieldValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeuFieldName {
            get {
                return this.DeuFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeuFieldNameField, value) != true)) {
                    this.DeuFieldNameField = value;
                    this.RaisePropertyChanged("DeuFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte DeuFieldType {
            get {
                return this.DeuFieldTypeField;
            }
            set {
                if ((this.DeuFieldTypeField.Equals(value) != true)) {
                    this.DeuFieldTypeField = value;
                    this.RaisePropertyChanged("DeuFieldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeuFieldValue {
            get {
                return this.DeuFieldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DeuFieldValueField, value) != true)) {
                    this.DeuFieldValueField = value;
                    this.RaisePropertyChanged("DeuFieldValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XmlFields", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class XmlFields : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum UserRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuperAdmin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Administrator = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Agent = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEP = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HO = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostProcessReturnStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PostProcessReturnStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.ModifiyableBatchStatementData BatchStatementDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeuEntryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsClientDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OldDeuEntryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess PostEntryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferenceNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ModifiyableBatchStatementData BatchStatementData {
            get {
                return this.BatchStatementDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchStatementDataField, value) != true)) {
                    this.BatchStatementDataField = value;
                    this.RaisePropertyChanged("BatchStatementData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeuEntryId {
            get {
                return this.DeuEntryIdField;
            }
            set {
                if ((this.DeuEntryIdField.Equals(value) != true)) {
                    this.DeuEntryIdField = value;
                    this.RaisePropertyChanged("DeuEntryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClientDeleted {
            get {
                return this.IsClientDeletedField;
            }
            set {
                if ((this.IsClientDeletedField.Equals(value) != true)) {
                    this.IsClientDeletedField = value;
                    this.RaisePropertyChanged("IsClientDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsComplete {
            get {
                return this.IsCompleteField;
            }
            set {
                if ((this.IsCompleteField.Equals(value) != true)) {
                    this.IsCompleteField = value;
                    this.RaisePropertyChanged("IsComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OldDeuEntryId {
            get {
                return this.OldDeuEntryIdField;
            }
            set {
                if ((this.OldDeuEntryIdField.Equals(value) != true)) {
                    this.OldDeuEntryIdField = value;
                    this.RaisePropertyChanged("OldDeuEntryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess PostEntryStatus {
            get {
                return this.PostEntryStatusField;
            }
            set {
                if ((this.PostEntryStatusField.Equals(value) != true)) {
                    this.PostEntryStatusField = value;
                    this.RaisePropertyChanged("PostEntryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferenceNo {
            get {
                return this.ReferenceNoField;
            }
            set {
                if ((this.ReferenceNoField.Equals(value) != true)) {
                    this.ReferenceNoField = value;
                    this.RaisePropertyChanged("ReferenceNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModifiyableBatchStatementData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ModifiyableBatchStatementData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.BasicInformationForProcess BasicInformationForProcessPolicyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableBatchData BatchDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU ExposedDeuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy SearchedPolicyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableStatementData StatementDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.BasicInformationForProcess BasicInformationForProcessPolicy {
            get {
                return this.BasicInformationForProcessPolicyField;
            }
            set {
                if ((object.ReferenceEquals(this.BasicInformationForProcessPolicyField, value) != true)) {
                    this.BasicInformationForProcessPolicyField = value;
                    this.RaisePropertyChanged("BasicInformationForProcessPolicy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableBatchData BatchData {
            get {
                return this.BatchDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchDataField, value) != true)) {
                    this.BatchDataField = value;
                    this.RaisePropertyChanged("BatchData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU ExposedDeu {
            get {
                return this.ExposedDeuField;
            }
            set {
                if ((object.ReferenceEquals(this.ExposedDeuField, value) != true)) {
                    this.ExposedDeuField = value;
                    this.RaisePropertyChanged("ExposedDeu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy SearchedPolicy {
            get {
                return this.SearchedPolicyField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchedPolicyField, value) != true)) {
                    this.SearchedPolicyField = value;
                    this.RaisePropertyChanged("SearchedPolicy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableStatementData StatementData {
            get {
                return this.StatementDataField;
            }
            set {
                if ((object.ReferenceEquals(this.StatementDataField, value) != true)) {
                    this.StatementDataField = value;
                    this.RaisePropertyChanged("StatementData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicInformationForProcess", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class BasicInformationForProcess : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAgencVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPaymentToHOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.PostStatus PostStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAgencVersion {
            get {
                return this.IsAgencVersionField;
            }
            set {
                if ((this.IsAgencVersionField.Equals(value) != true)) {
                    this.IsAgencVersionField = value;
                    this.RaisePropertyChanged("IsAgencVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPaymentToHO {
            get {
                return this.IsPaymentToHOField;
            }
            set {
                if ((this.IsPaymentToHOField.Equals(value) != true)) {
                    this.IsPaymentToHOField = value;
                    this.RaisePropertyChanged("IsPaymentToHO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostStatus PostStatus {
            get {
                return this.PostStatusField;
            }
            set {
                if ((this.PostStatusField.Equals(value) != true)) {
                    this.PostStatusField = value;
                    this.RaisePropertyChanged("PostStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModifiableBatchData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ModifiableBatchData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.EntryStatus EntryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((this.BatchIdField.Equals(value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.EntryStatus EntryStatus {
            get {
                return this.EntryStatusField;
            }
            set {
                if ((this.EntryStatusField.Equals(value) != true)) {
                    this.EntryStatusField = value;
                    this.RaisePropertyChanged("EntryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExposedDEU", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ExposedDEU : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CommissionPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CommissionTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverageNickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DEUENtryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EntryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> GuidCarrierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PaymentRecivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.PostCompleteStatusEnum PostStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SplitPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnlinkClientNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierNickName {
            get {
                return this.CarrierNickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNickNameField, value) != true)) {
                    this.CarrierNickNameField = value;
                    this.RaisePropertyChanged("CarrierNickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CommissionPercentage {
            get {
                return this.CommissionPercentageField;
            }
            set {
                if ((this.CommissionPercentageField.Equals(value) != true)) {
                    this.CommissionPercentageField = value;
                    this.RaisePropertyChanged("CommissionPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CommissionTotal {
            get {
                return this.CommissionTotalField;
            }
            set {
                if ((this.CommissionTotalField.Equals(value) != true)) {
                    this.CommissionTotalField = value;
                    this.RaisePropertyChanged("CommissionTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverageNickName {
            get {
                return this.CoverageNickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverageNickNameField, value) != true)) {
                    this.CoverageNickNameField = value;
                    this.RaisePropertyChanged("CoverageNickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DEUENtryID {
            get {
                return this.DEUENtryIDField;
            }
            set {
                if ((this.DEUENtryIDField.Equals(value) != true)) {
                    this.DEUENtryIDField = value;
                    this.RaisePropertyChanged("DEUENtryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EntryDate {
            get {
                return this.EntryDateField;
            }
            set {
                if ((this.EntryDateField.Equals(value) != true)) {
                    this.EntryDateField = value;
                    this.RaisePropertyChanged("EntryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> GuidCarrierID {
            get {
                return this.GuidCarrierIDField;
            }
            set {
                if ((this.GuidCarrierIDField.Equals(value) != true)) {
                    this.GuidCarrierIDField = value;
                    this.RaisePropertyChanged("GuidCarrierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insured {
            get {
                return this.InsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredField, value) != true)) {
                    this.InsuredField = value;
                    this.RaisePropertyChanged("Insured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PaymentRecived {
            get {
                return this.PaymentRecivedField;
            }
            set {
                if ((this.PaymentRecivedField.Equals(value) != true)) {
                    this.PaymentRecivedField = value;
                    this.RaisePropertyChanged("PaymentRecived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostCompleteStatusEnum PostStatus {
            get {
                return this.PostStatusField;
            }
            set {
                if ((this.PostStatusField.Equals(value) != true)) {
                    this.PostStatusField = value;
                    this.RaisePropertyChanged("PostStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SplitPercentage {
            get {
                return this.SplitPercentageField;
            }
            set {
                if ((this.SplitPercentageField.Equals(value) != true)) {
                    this.SplitPercentageField = value;
                    this.RaisePropertyChanged("SplitPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((this.UnitsField.Equals(value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnlinkClientName {
            get {
                return this.UnlinkClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UnlinkClientNameField, value) != true)) {
                    this.UnlinkClientNameField = value;
                    this.RaisePropertyChanged("UnlinkClientName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModifiableStatementData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ModifiableStatementData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CompletePercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EnteredAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StatementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CompletePercentage {
            get {
                return this.CompletePercentageField;
            }
            set {
                if ((this.CompletePercentageField.Equals(value) != true)) {
                    this.CompletePercentageField = value;
                    this.RaisePropertyChanged("CompletePercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EnteredAmount {
            get {
                return this.EnteredAmountField;
            }
            set {
                if ((this.EnteredAmountField.Equals(value) != true)) {
                    this.EnteredAmountField = value;
                    this.RaisePropertyChanged("EnteredAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((this.EntriesField.Equals(value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StatementId {
            get {
                return this.StatementIdField;
            }
            set {
                if ((this.StatementIdField.Equals(value) != true)) {
                    this.StatementIdField = value;
                    this.RaisePropertyChanged("StatementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum PostStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoLink = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAgency = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked_Agency = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ag_NoSplits = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ag_NoMSplits = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked_NoAg = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum EntryStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unassigned = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportPending = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportUnsuccessfull = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingDataEntry = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InDataEntry = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BatchCompleted = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartialUnpaid = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paid = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Importedfiletype = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostCompleteStatusEnum", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum PostCompleteStatusEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotStarted = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unsuccessful = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Successful = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyOutgoingDistribution", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicyOutgoingDistribution : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> OutGoingPerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OutgoingPaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PaidAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PaymentEntryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> RecipientUserCredentialIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPaid {
            get {
                return this.IsPaidField;
            }
            set {
                if ((this.IsPaidField.Equals(value) != true)) {
                    this.IsPaidField = value;
                    this.RaisePropertyChanged("IsPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> OutGoingPerUnit {
            get {
                return this.OutGoingPerUnitField;
            }
            set {
                if ((this.OutGoingPerUnitField.Equals(value) != true)) {
                    this.OutGoingPerUnitField = value;
                    this.RaisePropertyChanged("OutGoingPerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OutgoingPaymentId {
            get {
                return this.OutgoingPaymentIdField;
            }
            set {
                if ((this.OutgoingPaymentIdField.Equals(value) != true)) {
                    this.OutgoingPaymentIdField = value;
                    this.RaisePropertyChanged("OutgoingPaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PaidAmount {
            get {
                return this.PaidAmountField;
            }
            set {
                if ((this.PaidAmountField.Equals(value) != true)) {
                    this.PaidAmountField = value;
                    this.RaisePropertyChanged("PaidAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Payment {
            get {
                return this.PaymentField;
            }
            set {
                if ((this.PaymentField.Equals(value) != true)) {
                    this.PaymentField = value;
                    this.RaisePropertyChanged("Payment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PaymentEntryId {
            get {
                return this.PaymentEntryIdField;
            }
            set {
                if ((this.PaymentEntryIdField.Equals(value) != true)) {
                    this.PaymentEntryIdField = value;
                    this.RaisePropertyChanged("PaymentEntryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Premium {
            get {
                return this.PremiumField;
            }
            set {
                if ((this.PremiumField.Equals(value) != true)) {
                    this.PremiumField = value;
                    this.RaisePropertyChanged("Premium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> RecipientUserCredentialId {
            get {
                return this.RecipientUserCredentialIdField;
            }
            set {
                if ((this.RecipientUserCredentialIdField.Equals(value) != true)) {
                    this.RecipientUserCredentialIdField = value;
                    this.RaisePropertyChanged("RecipientUserCredentialId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayFollowupIssue", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class DisplayFollowupIssue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AutoTerminationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPMCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsTrackIncomingPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsTrackMissingMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsTrackPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IssueCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IssueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IssueReasonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IssueResultIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IssueStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IssueTrackNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NextFollowupDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyIssueNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PreviousStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ToDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> isDeletedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Agency {
            get {
                return this.AgencyField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyField, value) != true)) {
                    this.AgencyField = value;
                    this.RaisePropertyChanged("Agency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AutoTerminationDate {
            get {
                return this.AutoTerminationDateField;
            }
            set {
                if ((this.AutoTerminationDateField.Equals(value) != true)) {
                    this.AutoTerminationDateField = value;
                    this.RaisePropertyChanged("AutoTerminationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Content {
            get {
                return this.ContentField;
            }
            set {
                if ((this.ContentField.Equals(value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insured {
            get {
                return this.InsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredField, value) != true)) {
                    this.InsuredField = value;
                    this.RaisePropertyChanged("Insured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPMCVariance {
            get {
                return this.IsPMCVarianceField;
            }
            set {
                if ((this.IsPMCVarianceField.Equals(value) != true)) {
                    this.IsPMCVarianceField = value;
                    this.RaisePropertyChanged("IsPMCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsTrackIncomingPercentage {
            get {
                return this.IsTrackIncomingPercentageField;
            }
            set {
                if ((this.IsTrackIncomingPercentageField.Equals(value) != true)) {
                    this.IsTrackIncomingPercentageField = value;
                    this.RaisePropertyChanged("IsTrackIncomingPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsTrackMissingMonth {
            get {
                return this.IsTrackMissingMonthField;
            }
            set {
                if ((this.IsTrackMissingMonthField.Equals(value) != true)) {
                    this.IsTrackMissingMonthField = value;
                    this.RaisePropertyChanged("IsTrackMissingMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsTrackPayment {
            get {
                return this.IsTrackPaymentField;
            }
            set {
                if ((this.IsTrackPaymentField.Equals(value) != true)) {
                    this.IsTrackPaymentField = value;
                    this.RaisePropertyChanged("IsTrackPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IssueCategoryID {
            get {
                return this.IssueCategoryIDField;
            }
            set {
                if ((this.IssueCategoryIDField.Equals(value) != true)) {
                    this.IssueCategoryIDField = value;
                    this.RaisePropertyChanged("IssueCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IssueId {
            get {
                return this.IssueIdField;
            }
            set {
                if ((this.IssueIdField.Equals(value) != true)) {
                    this.IssueIdField = value;
                    this.RaisePropertyChanged("IssueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IssueReasonId {
            get {
                return this.IssueReasonIdField;
            }
            set {
                if ((this.IssueReasonIdField.Equals(value) != true)) {
                    this.IssueReasonIdField = value;
                    this.RaisePropertyChanged("IssueReasonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IssueResultId {
            get {
                return this.IssueResultIdField;
            }
            set {
                if ((this.IssueResultIdField.Equals(value) != true)) {
                    this.IssueResultIdField = value;
                    this.RaisePropertyChanged("IssueResultId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IssueStatusId {
            get {
                return this.IssueStatusIdField;
            }
            set {
                if ((this.IssueStatusIdField.Equals(value) != true)) {
                    this.IssueStatusIdField = value;
                    this.RaisePropertyChanged("IssueStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IssueTrackNumber {
            get {
                return this.IssueTrackNumberField;
            }
            set {
                if ((this.IssueTrackNumberField.Equals(value) != true)) {
                    this.IssueTrackNumberField = value;
                    this.RaisePropertyChanged("IssueTrackNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextFollowupDate {
            get {
                return this.NextFollowupDateField;
            }
            set {
                if ((this.NextFollowupDateField.Equals(value) != true)) {
                    this.NextFollowupDateField = value;
                    this.RaisePropertyChanged("NextFollowupDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Payment {
            get {
                return this.PaymentField;
            }
            set {
                if ((this.PaymentField.Equals(value) != true)) {
                    this.PaymentField = value;
                    this.RaisePropertyChanged("Payment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Payor {
            get {
                return this.PayorField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorField, value) != true)) {
                    this.PayorField = value;
                    this.RaisePropertyChanged("Payor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyIssueNote {
            get {
                return this.PolicyIssueNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyIssueNoteField, value) != true)) {
                    this.PolicyIssueNoteField = value;
                    this.RaisePropertyChanged("PolicyIssueNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PreviousStatusId {
            get {
                return this.PreviousStatusIdField;
            }
            set {
                if ((this.PreviousStatusIdField.Equals(value) != true)) {
                    this.PreviousStatusIdField = value;
                    this.RaisePropertyChanged("PreviousStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                if ((this.isDeletedField.Equals(value) != true)) {
                    this.isDeletedField = value;
                    this.RaisePropertyChanged("isDeleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FollowUpRunModules", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum FollowUpRunModules : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaymentEntered = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaymentDeleted = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncomingScheduleChange = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PolicyDetailChange = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolveIssue = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorIncomingSchedule", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule))]
    public partial class PayorIncomingSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdvanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CarrierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CoverageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.CustomMode CustomTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> FirstYearPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Graded> GradedScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IncomingPaymentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncomingPaymentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IncomingScheduleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNamedScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.Mode ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.NonGraded> NonGradedScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RenewalPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SplitPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringFirstYearPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringRenewalPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringSplitPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Advance {
            get {
                return this.AdvanceField;
            }
            set {
                if ((this.AdvanceField.Equals(value) != true)) {
                    this.AdvanceField = value;
                    this.RaisePropertyChanged("Advance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarrierID {
            get {
                return this.CarrierIDField;
            }
            set {
                if ((this.CarrierIDField.Equals(value) != true)) {
                    this.CarrierIDField = value;
                    this.RaisePropertyChanged("CarrierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CoverageID {
            get {
                return this.CoverageIDField;
            }
            set {
                if ((this.CoverageIDField.Equals(value) != true)) {
                    this.CoverageIDField = value;
                    this.RaisePropertyChanged("CoverageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverageName {
            get {
                return this.CoverageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverageNameField, value) != true)) {
                    this.CoverageNameField = value;
                    this.RaisePropertyChanged("CoverageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.CustomMode CustomType {
            get {
                return this.CustomTypeField;
            }
            set {
                if ((this.CustomTypeField.Equals(value) != true)) {
                    this.CustomTypeField = value;
                    this.RaisePropertyChanged("CustomType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> FirstYearPercentage {
            get {
                return this.FirstYearPercentageField;
            }
            set {
                if ((this.FirstYearPercentageField.Equals(value) != true)) {
                    this.FirstYearPercentageField = value;
                    this.RaisePropertyChanged("FirstYearPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Graded> GradedSchedule {
            get {
                return this.GradedScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.GradedScheduleField, value) != true)) {
                    this.GradedScheduleField = value;
                    this.RaisePropertyChanged("GradedSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IncomingPaymentTypeID {
            get {
                return this.IncomingPaymentTypeIDField;
            }
            set {
                if ((this.IncomingPaymentTypeIDField.Equals(value) != true)) {
                    this.IncomingPaymentTypeIDField = value;
                    this.RaisePropertyChanged("IncomingPaymentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncomingPaymentTypeName {
            get {
                return this.IncomingPaymentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomingPaymentTypeNameField, value) != true)) {
                    this.IncomingPaymentTypeNameField = value;
                    this.RaisePropertyChanged("IncomingPaymentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IncomingScheduleID {
            get {
                return this.IncomingScheduleIDField;
            }
            set {
                if ((this.IncomingScheduleIDField.Equals(value) != true)) {
                    this.IncomingScheduleIDField = value;
                    this.RaisePropertyChanged("IncomingScheduleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNamedSchedule {
            get {
                return this.IsNamedScheduleField;
            }
            set {
                if ((this.IsNamedScheduleField.Equals(value) != true)) {
                    this.IsNamedScheduleField = value;
                    this.RaisePropertyChanged("IsNamedSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeID {
            get {
                return this.LicenseeIDField;
            }
            set {
                if ((this.LicenseeIDField.Equals(value) != true)) {
                    this.LicenseeIDField = value;
                    this.RaisePropertyChanged("LicenseeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Mode Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((this.ModeField.Equals(value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.NonGraded> NonGradedSchedule {
            get {
                return this.NonGradedScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.NonGradedScheduleField, value) != true)) {
                    this.NonGradedScheduleField = value;
                    this.RaisePropertyChanged("NonGradedSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorName {
            get {
                return this.PayorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNameField, value) != true)) {
                    this.PayorNameField = value;
                    this.RaisePropertyChanged("PayorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> RenewalPercentage {
            get {
                return this.RenewalPercentageField;
            }
            set {
                if ((this.RenewalPercentageField.Equals(value) != true)) {
                    this.RenewalPercentageField = value;
                    this.RaisePropertyChanged("RenewalPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleType {
            get {
                return this.ScheduleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleTypeField, value) != true)) {
                    this.ScheduleTypeField = value;
                    this.RaisePropertyChanged("ScheduleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleTypeId {
            get {
                return this.ScheduleTypeIdField;
            }
            set {
                if ((this.ScheduleTypeIdField.Equals(value) != true)) {
                    this.ScheduleTypeIdField = value;
                    this.RaisePropertyChanged("ScheduleTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SplitPercentage {
            get {
                return this.SplitPercentageField;
            }
            set {
                if ((this.SplitPercentageField.Equals(value) != true)) {
                    this.SplitPercentageField = value;
                    this.RaisePropertyChanged("SplitPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringFirstYearPercentage {
            get {
                return this.StringFirstYearPercentageField;
            }
            set {
                if ((object.ReferenceEquals(this.StringFirstYearPercentageField, value) != true)) {
                    this.StringFirstYearPercentageField = value;
                    this.RaisePropertyChanged("StringFirstYearPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringRenewalPercentage {
            get {
                return this.StringRenewalPercentageField;
            }
            set {
                if ((object.ReferenceEquals(this.StringRenewalPercentageField, value) != true)) {
                    this.StringRenewalPercentageField = value;
                    this.RaisePropertyChanged("StringRenewalPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringSplitPercentage {
            get {
                return this.StringSplitPercentageField;
            }
            set {
                if ((object.ReferenceEquals(this.StringSplitPercentageField, value) != true)) {
                    this.StringSplitPercentageField = value;
                    this.RaisePropertyChanged("StringSplitPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyToolIncommingShedule", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicyToolIncommingShedule : MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IncomingScheduleId1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="IncomingScheduleId")]
        public System.Guid IncomingScheduleId1 {
            get {
                return this.IncomingScheduleId1Field;
            }
            set {
                if ((this.IncomingScheduleId1Field.Equals(value) != true)) {
                    this.IncomingScheduleId1Field = value;
                    this.RaisePropertyChanged("IncomingScheduleId1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomMode", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum CustomMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Graded = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonGraded = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Graded", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Graded : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mode", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum Mode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Standard = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NonGraded", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class NonGraded : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorToolAvailablelFieldType", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class PayorToolAvailablelFieldType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquivalentDeuFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquivalentIncomingFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquivalentLearnedFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldDiscriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool canDeletedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquivalentDeuField {
            get {
                return this.EquivalentDeuFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.EquivalentDeuFieldField, value) != true)) {
                    this.EquivalentDeuFieldField = value;
                    this.RaisePropertyChanged("EquivalentDeuField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquivalentIncomingField {
            get {
                return this.EquivalentIncomingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.EquivalentIncomingFieldField, value) != true)) {
                    this.EquivalentIncomingFieldField = value;
                    this.RaisePropertyChanged("EquivalentIncomingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquivalentLearnedField {
            get {
                return this.EquivalentLearnedFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.EquivalentLearnedFieldField, value) != true)) {
                    this.EquivalentLearnedFieldField = value;
                    this.RaisePropertyChanged("EquivalentLearnedField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldDiscription {
            get {
                return this.FieldDiscriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldDiscriptionField, value) != true)) {
                    this.FieldDiscriptionField = value;
                    this.RaisePropertyChanged("FieldDiscription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUsed {
            get {
                return this.IsUsedField;
            }
            set {
                if ((this.IsUsedField.Equals(value) != true)) {
                    this.IsUsedField = value;
                    this.RaisePropertyChanged("IsUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool canDeleted {
            get {
                return this.canDeletedField;
            }
            set {
                if ((this.canDeletedField.Equals(value) != true)) {
                    this.canDeletedField = value;
                    this.RaisePropertyChanged("canDeleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseeInvoiceJournal", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class LicenseeInvoiceJournal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ImportedBatchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManualEntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> JournalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> JournalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> LicenseeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TransactionDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeOfEntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> lnvoiceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ImportedBatchID {
            get {
                return this.ImportedBatchIDField;
            }
            set {
                if ((this.ImportedBatchIDField.Equals(value) != true)) {
                    this.ImportedBatchIDField = value;
                    this.RaisePropertyChanged("ImportedBatchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManualEntry {
            get {
                return this.IsManualEntryField;
            }
            set {
                if ((this.IsManualEntryField.Equals(value) != true)) {
                    this.IsManualEntryField = value;
                    this.RaisePropertyChanged("IsManualEntry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> JournalAmount {
            get {
                return this.JournalAmountField;
            }
            set {
                if ((this.JournalAmountField.Equals(value) != true)) {
                    this.JournalAmountField = value;
                    this.RaisePropertyChanged("JournalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> JournalId {
            get {
                return this.JournalIdField;
            }
            set {
                if ((this.JournalIdField.Equals(value) != true)) {
                    this.JournalIdField = value;
                    this.RaisePropertyChanged("JournalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LicenseeID {
            get {
                return this.LicenseeIDField;
            }
            set {
                if ((this.LicenseeIDField.Equals(value) != true)) {
                    this.LicenseeIDField = value;
                    this.RaisePropertyChanged("LicenseeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentTypeField, value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TransactionDateTime {
            get {
                return this.TransactionDateTimeField;
            }
            set {
                if ((this.TransactionDateTimeField.Equals(value) != true)) {
                    this.TransactionDateTimeField = value;
                    this.RaisePropertyChanged("TransactionDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIDField, value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeOfEntry {
            get {
                return this.TypeOfEntryField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeOfEntryField, value) != true)) {
                    this.TypeOfEntryField = value;
                    this.RaisePropertyChanged("TypeOfEntry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> lnvoiceId {
            get {
                return this.lnvoiceIdField;
            }
            set {
                if ((this.lnvoiceIdField.Equals(value) != true)) {
                    this.lnvoiceIdField = value;
                    this.RaisePropertyChanged("lnvoiceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExportDate", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ExportDate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CardPayeeExportDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CheckPayeeExportDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CardPayeeExportDate {
            get {
                return this.CardPayeeExportDateField;
            }
            set {
                if ((this.CardPayeeExportDateField.Equals(value) != true)) {
                    this.CardPayeeExportDateField = value;
                    this.RaisePropertyChanged("CardPayeeExportDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CheckPayeeExportDate {
            get {
                return this.CheckPayeeExportDateField;
            }
            set {
                if ((this.CheckPayeeExportDateField.Equals(value) != true)) {
                    this.CheckPayeeExportDateField = value;
                    this.RaisePropertyChanged("CheckPayeeExportDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdvancedPayee", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class AdvancedPayee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FirstYearRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromEffiectivDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RenewalRateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FirstYearRate {
            get {
                return this.FirstYearRateField;
            }
            set {
                if ((this.FirstYearRateField.Equals(value) != true)) {
                    this.FirstYearRateField = value;
                    this.RaisePropertyChanged("FirstYearRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FromEffiectivDate {
            get {
                return this.FromEffiectivDateField;
            }
            set {
                if ((this.FromEffiectivDateField.Equals(value) != true)) {
                    this.FromEffiectivDateField = value;
                    this.RaisePropertyChanged("FromEffiectivDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryAgent {
            get {
                return this.PrimaryAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryAgentField, value) != true)) {
                    this.PrimaryAgentField = value;
                    this.RaisePropertyChanged("PrimaryAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RenewalRate {
            get {
                return this.RenewalRateField;
            }
            set {
                if ((this.RenewalRateField.Equals(value) != true)) {
                    this.RenewalRateField = value;
                    this.RaisePropertyChanged("RenewalRate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payee", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Payee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FirstYearRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RenewalRateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FirstYearRate {
            get {
                return this.FirstYearRateField;
            }
            set {
                if ((this.FirstYearRateField.Equals(value) != true)) {
                    this.FirstYearRateField = value;
                    this.RaisePropertyChanged("FirstYearRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryAgent {
            get {
                return this.PrimaryAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryAgentField, value) != true)) {
                    this.PrimaryAgentField = value;
                    this.RaisePropertyChanged("PrimaryAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RenewalRate {
            get {
                return this.RenewalRateField;
            }
            set {
                if ((this.RenewalRateField.Equals(value) != true)) {
                    this.RenewalRateField = value;
                    this.RaisePropertyChanged("RenewalRate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Batch", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Batch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedDeuUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> BatchStatementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CreatedFromUploadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.EntryStatus EntryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsManuallyUploadedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalStatementAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.UploadStatus UploadStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedDeuUserName {
            get {
                return this.AssignedDeuUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedDeuUserNameField, value) != true)) {
                    this.AssignedDeuUserNameField = value;
                    this.RaisePropertyChanged("AssignedDeuUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((this.BatchIdField.Equals(value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchNote {
            get {
                return this.BatchNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchNoteField, value) != true)) {
                    this.BatchNoteField = value;
                    this.RaisePropertyChanged("BatchNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchNumber {
            get {
                return this.BatchNumberField;
            }
            set {
                if ((this.BatchNumberField.Equals(value) != true)) {
                    this.BatchNumberField = value;
                    this.RaisePropertyChanged("BatchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> BatchStatements {
            get {
                return this.BatchStatementsField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchStatementsField, value) != true)) {
                    this.BatchStatementsField = value;
                    this.RaisePropertyChanged("BatchStatements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CreatedFromUpload {
            get {
                return this.CreatedFromUploadField;
            }
            set {
                if ((this.CreatedFromUploadField.Equals(value) != true)) {
                    this.CreatedFromUploadField = value;
                    this.RaisePropertyChanged("CreatedFromUpload");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.EntryStatus EntryStatus {
            get {
                return this.EntryStatusField;
            }
            set {
                if ((this.EntryStatusField.Equals(value) != true)) {
                    this.EntryStatusField = value;
                    this.RaisePropertyChanged("EntryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsManuallyUploaded {
            get {
                return this.IsManuallyUploadedField;
            }
            set {
                if ((this.IsManuallyUploadedField.Equals(value) != true)) {
                    this.IsManuallyUploadedField = value;
                    this.RaisePropertyChanged("IsManuallyUploaded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseeName {
            get {
                return this.LicenseeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseeNameField, value) != true)) {
                    this.LicenseeNameField = value;
                    this.RaisePropertyChanged("LicenseeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalStatementAmount {
            get {
                return this.TotalStatementAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalStatementAmountField, value) != true)) {
                    this.TotalStatementAmountField = value;
                    this.RaisePropertyChanged("TotalStatementAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.UploadStatus UploadStatus {
            get {
                return this.UploadStatusField;
            }
            set {
                if ((this.UploadStatusField.Equals(value) != true)) {
                    this.UploadStatusField = value;
                    this.RaisePropertyChanged("UploadStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Statement", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Statement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BalanceForOrAdjustmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CheckAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CompletePercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByDEUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU> DeuEntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EnteredAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EntryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> NetAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StatementDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StatementIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatementNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TemplateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToPageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> BalanceForOrAdjustment {
            get {
                return this.BalanceForOrAdjustmentField;
            }
            set {
                if ((this.BalanceForOrAdjustmentField.Equals(value) != true)) {
                    this.BalanceForOrAdjustmentField = value;
                    this.RaisePropertyChanged("BalanceForOrAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((this.BatchIdField.Equals(value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CheckAmount {
            get {
                return this.CheckAmountField;
            }
            set {
                if ((this.CheckAmountField.Equals(value) != true)) {
                    this.CheckAmountField = value;
                    this.RaisePropertyChanged("CheckAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CompletePercentage {
            get {
                return this.CompletePercentageField;
            }
            set {
                if ((this.CompletePercentageField.Equals(value) != true)) {
                    this.CompletePercentageField = value;
                    this.RaisePropertyChanged("CompletePercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByDEU {
            get {
                return this.CreatedByDEUField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByDEUField, value) != true)) {
                    this.CreatedByDEUField = value;
                    this.RaisePropertyChanged("CreatedByDEU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU> DeuEntries {
            get {
                return this.DeuEntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.DeuEntriesField, value) != true)) {
                    this.DeuEntriesField = value;
                    this.RaisePropertyChanged("DeuEntries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EnteredAmount {
            get {
                return this.EnteredAmountField;
            }
            set {
                if ((this.EnteredAmountField.Equals(value) != true)) {
                    this.EnteredAmountField = value;
                    this.RaisePropertyChanged("EnteredAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((this.EntriesField.Equals(value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EntryDate {
            get {
                return this.EntryDateField;
            }
            set {
                if ((this.EntryDateField.Equals(value) != true)) {
                    this.EntryDateField = value;
                    this.RaisePropertyChanged("EntryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromPage {
            get {
                return this.FromPageField;
            }
            set {
                if ((object.ReferenceEquals(this.FromPageField, value) != true)) {
                    this.FromPageField = value;
                    this.RaisePropertyChanged("FromPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> NetAmount {
            get {
                return this.NetAmountField;
            }
            set {
                if ((this.NetAmountField.Equals(value) != true)) {
                    this.NetAmountField = value;
                    this.RaisePropertyChanged("NetAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Payor {
            get {
                return this.PayorField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorField, value) != true)) {
                    this.PayorField = value;
                    this.RaisePropertyChanged("Payor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StatementDate {
            get {
                return this.StatementDateField;
            }
            set {
                if ((this.StatementDateField.Equals(value) != true)) {
                    this.StatementDateField = value;
                    this.RaisePropertyChanged("StatementDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StatementID {
            get {
                return this.StatementIDField;
            }
            set {
                if ((this.StatementIDField.Equals(value) != true)) {
                    this.StatementIDField = value;
                    this.RaisePropertyChanged("StatementID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatementNumber {
            get {
                return this.StatementNumberField;
            }
            set {
                if ((this.StatementNumberField.Equals(value) != true)) {
                    this.StatementNumberField = value;
                    this.RaisePropertyChanged("StatementNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToPage {
            get {
                return this.ToPageField;
            }
            set {
                if ((object.ReferenceEquals(this.ToPageField, value) != true)) {
                    this.ToPageField = value;
                    this.RaisePropertyChanged("ToPage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum UploadStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Available = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Automatic = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportXls = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchAddOutput", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class BatchAddOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchNumber {
            get {
                return this.BatchNumberField;
            }
            set {
                if ((this.BatchNumberField.Equals(value) != true)) {
                    this.BatchNumberField = value;
                    this.RaisePropertyChanged("BatchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseeName {
            get {
                return this.LicenseeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseeNameField, value) != true)) {
                    this.LicenseeNameField = value;
                    this.RaisePropertyChanged("LicenseeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadBatch", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class DownloadBatch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.EntryStatus EntryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.UploadStatus UploadStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((this.BatchIdField.Equals(value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchNumber {
            get {
                return this.BatchNumberField;
            }
            set {
                if ((this.BatchNumberField.Equals(value) != true)) {
                    this.BatchNumberField = value;
                    this.RaisePropertyChanged("BatchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.EntryStatus EntryStatus {
            get {
                return this.EntryStatusField;
            }
            set {
                if ((this.EntryStatusField.Equals(value) != true)) {
                    this.EntryStatusField = value;
                    this.RaisePropertyChanged("EntryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseeName {
            get {
                return this.LicenseeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseeNameField, value) != true)) {
                    this.LicenseeNameField = value;
                    this.RaisePropertyChanged("LicenseeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorName {
            get {
                return this.PayorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNameField, value) != true)) {
                    this.PayorNameField = value;
                    this.RaisePropertyChanged("PayorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.UploadStatus UploadStatus {
            get {
                return this.UploadStatusField;
            }
            set {
                if ((this.UploadStatusField.Equals(value) != true)) {
                    this.UploadStatusField = value;
                    this.RaisePropertyChanged("UploadStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportFileData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ImportFileData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsImportedSuccessfullyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((this.BatchIdField.Equals(value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchNumber {
            get {
                return this.BatchNumberField;
            }
            set {
                if ((this.BatchNumberField.Equals(value) != true)) {
                    this.BatchNumberField = value;
                    this.RaisePropertyChanged("BatchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsImportedSuccessfully {
            get {
                return this.IsImportedSuccessfullyField;
            }
            set {
                if ((this.IsImportedSuccessfullyField.Equals(value) != true)) {
                    this.IsImportedSuccessfullyField = value;
                    this.RaisePropertyChanged("IsImportedSuccessfully");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicySavedStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicySavedStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsError {
            get {
                return this.IsErrorField;
            }
            set {
                if ((this.IsErrorField.Equals(value) != true)) {
                    this.IsErrorField = value;
                    this.RaisePropertyChanged("IsError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JSONResponse", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class JSONResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_PolicyImportStatus ImportStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResponseCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_PolicyImportStatus ImportStatus {
            get {
                return this.ImportStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportStatusField, value) != true)) {
                    this.ImportStatusField = value;
                    this.RaisePropertyChanged("ImportStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((this.ResponseCodeField.Equals(value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Benefits_PolicyImportStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Benefits_PolicyImportStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_ErrorMsg> ErrorListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCount {
            get {
                return this.ErrorCountField;
            }
            set {
                if ((this.ErrorCountField.Equals(value) != true)) {
                    this.ErrorCountField = value;
                    this.RaisePropertyChanged("ErrorCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_ErrorMsg> ErrorList {
            get {
                return this.ErrorListField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorListField, value) != true)) {
                    this.ErrorListField = value;
                    this.RaisePropertyChanged("ErrorList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewCount {
            get {
                return this.NewCountField;
            }
            set {
                if ((this.NewCountField.Equals(value) != true)) {
                    this.NewCountField = value;
                    this.RaisePropertyChanged("NewCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateCount {
            get {
                return this.UpdateCountField;
            }
            set {
                if ((this.UpdateCountField.Equals(value) != true)) {
                    this.UpdateCountField = value;
                    this.RaisePropertyChanged("UpdateCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Benefits_ErrorMsg", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Benefits_ErrorMsg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalPlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyPlanIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalPlanID {
            get {
                return this.OriginalPlanIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalPlanIDField, value) != true)) {
                    this.OriginalPlanIDField = value;
                    this.RaisePropertyChanged("OriginalPlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyPlanID {
            get {
                return this.PolicyPlanIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyPlanIDField, value) != true)) {
                    this.PolicyPlanIDField = value;
                    this.RaisePropertyChanged("PolicyPlanID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListResponse", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CarrierObject> CarrierListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorObject> PayorListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResponseCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CarrierObject> CarrierList {
            get {
                return this.CarrierListField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierListField, value) != true)) {
                    this.CarrierListField = value;
                    this.RaisePropertyChanged("CarrierList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorObject> PayorList {
            get {
                return this.PayorListField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorListField, value) != true)) {
                    this.PayorListField = value;
                    this.RaisePropertyChanged("PayorList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((this.ResponseCodeField.Equals(value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarrierObject", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class CarrierObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CarrierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarrierID {
            get {
                return this.CarrierIDField;
            }
            set {
                if ((this.CarrierIDField.Equals(value) != true)) {
                    this.CarrierIDField = value;
                    this.RaisePropertyChanged("CarrierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorObject", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PayorObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorName {
            get {
                return this.PayorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNameField, value) != true)) {
                    this.PayorNameField = value;
                    this.RaisePropertyChanged("PayorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddUserResponse", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class AddUserResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_UserResponseStatus ImportUsersStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResponseCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_UserResponseStatus ImportUsersStatus {
            get {
                return this.ImportUsersStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportUsersStatusField, value) != true)) {
                    this.ImportUsersStatusField = value;
                    this.RaisePropertyChanged("ImportUsersStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((this.ResponseCodeField.Equals(value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Benefits_UserResponseStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Benefits_UserResponseStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_UserMsg> ErrorUserListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCount {
            get {
                return this.ErrorCountField;
            }
            set {
                if ((this.ErrorCountField.Equals(value) != true)) {
                    this.ErrorCountField = value;
                    this.RaisePropertyChanged("ErrorCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_UserMsg> ErrorUserList {
            get {
                return this.ErrorUserListField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorUserListField, value) != true)) {
                    this.ErrorUserListField = value;
                    this.RaisePropertyChanged("ErrorUserList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewCount {
            get {
                return this.NewCountField;
            }
            set {
                if ((this.NewCountField.Equals(value) != true)) {
                    this.NewCountField = value;
                    this.RaisePropertyChanged("NewCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateCount {
            get {
                return this.UpdateCountField;
            }
            set {
                if ((this.UpdateCountField.Equals(value) != true)) {
                    this.UpdateCountField = value;
                    this.RaisePropertyChanged("UpdateCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Benefits_UserMsg", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Benefits_UserMsg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BGUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BGUserId {
            get {
                return this.BGUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BGUserIdField, value) != true)) {
                    this.BGUserIdField = value;
                    this.RaisePropertyChanged("BGUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="_PolicyStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum _PolicyStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Terminated = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Any = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class User : MyAgencyVault.VM.MyAgencyVaultSvc.UserDetail {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> AdminIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AttachedToLicenseeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BGUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DisableAgentEditingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> HouseOwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsAccountExecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeleted1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHouseAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsLicenseDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewsToFlashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> LinkedUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHintAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHintQField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UserPermissions> PermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RembStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> UserClientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserCredentialIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebDavPathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AdminId {
            get {
                return this.AdminIdField;
            }
            set {
                if ((this.AdminIdField.Equals(value) != true)) {
                    this.AdminIdField = value;
                    this.RaisePropertyChanged("AdminId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AttachedToLicensee {
            get {
                return this.AttachedToLicenseeField;
            }
            set {
                if ((this.AttachedToLicenseeField.Equals(value) != true)) {
                    this.AttachedToLicenseeField = value;
                    this.RaisePropertyChanged("AttachedToLicensee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BGUserId {
            get {
                return this.BGUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BGUserIdField, value) != true)) {
                    this.BGUserIdField = value;
                    this.RaisePropertyChanged("BGUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime CreateOn {
            get {
                return this.CreateOnField;
            }
            set {
                if ((this.CreateOnField.Equals(value) != true)) {
                    this.CreateOnField = value;
                    this.RaisePropertyChanged("CreateOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DisableAgentEditing {
            get {
                return this.DisableAgentEditingField;
            }
            set {
                if ((this.DisableAgentEditingField.Equals(value) != true)) {
                    this.DisableAgentEditingField = value;
                    this.RaisePropertyChanged("DisableAgentEditing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> HouseOwnerId {
            get {
                return this.HouseOwnerIdField;
            }
            set {
                if ((this.HouseOwnerIdField.Equals(value) != true)) {
                    this.HouseOwnerIdField = value;
                    this.RaisePropertyChanged("HouseOwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsAccountExec {
            get {
                return this.IsAccountExecField;
            }
            set {
                if ((this.IsAccountExecField.Equals(value) != true)) {
                    this.IsAccountExecField = value;
                    this.RaisePropertyChanged("IsAccountExec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="IsDeleted")]
        public bool IsDeleted1 {
            get {
                return this.IsDeleted1Field;
            }
            set {
                if ((this.IsDeleted1Field.Equals(value) != true)) {
                    this.IsDeleted1Field = value;
                    this.RaisePropertyChanged("IsDeleted1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHouseAccount {
            get {
                return this.IsHouseAccountField;
            }
            set {
                if ((this.IsHouseAccountField.Equals(value) != true)) {
                    this.IsHouseAccountField = value;
                    this.RaisePropertyChanged("IsHouseAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsLicenseDeleted {
            get {
                return this.IsLicenseDeletedField;
            }
            set {
                if ((this.IsLicenseDeletedField.Equals(value) != true)) {
                    this.IsLicenseDeletedField = value;
                    this.RaisePropertyChanged("IsLicenseDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewsToFlash {
            get {
                return this.IsNewsToFlashField;
            }
            set {
                if ((this.IsNewsToFlashField.Equals(value) != true)) {
                    this.IsNewsToFlashField = value;
                    this.RaisePropertyChanged("IsNewsToFlash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseeName {
            get {
                return this.LicenseeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseeNameField, value) != true)) {
                    this.LicenseeNameField = value;
                    this.RaisePropertyChanged("LicenseeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> LinkedUsers {
            get {
                return this.LinkedUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedUsersField, value) != true)) {
                    this.LinkedUsersField = value;
                    this.RaisePropertyChanged("LinkedUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHintA {
            get {
                return this.PasswordHintAField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHintAField, value) != true)) {
                    this.PasswordHintAField = value;
                    this.RaisePropertyChanged("PasswordHintA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHintQ {
            get {
                return this.PasswordHintQField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHintQField, value) != true)) {
                    this.PasswordHintQField = value;
                    this.RaisePropertyChanged("PasswordHintQ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UserPermissions> Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionsField, value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RembStatus {
            get {
                return this.RembStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RembStatusField, value) != true)) {
                    this.RembStatusField = value;
                    this.RaisePropertyChanged("RembStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.UserRole Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SStatus {
            get {
                return this.SStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SStatusField, value) != true)) {
                    this.SStatusField = value;
                    this.RaisePropertyChanged("SStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> UserClients {
            get {
                return this.UserClientsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserClientsField, value) != true)) {
                    this.UserClientsField = value;
                    this.RaisePropertyChanged("UserClients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserCredentialID {
            get {
                return this.UserCredentialIDField;
            }
            set {
                if ((this.UserCredentialIDField.Equals(value) != true)) {
                    this.UserCredentialIDField = value;
                    this.RaisePropertyChanged("UserCredentialID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebDavPath {
            get {
                return this.WebDavPathField;
            }
            set {
                if ((object.ReferenceEquals(this.WebDavPathField, value) != true)) {
                    this.WebDavPathField = value;
                    this.RaisePropertyChanged("WebDavPath");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetail", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.User))]
    public partial class UserDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FirstYearDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RenewalDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReportForEntireAgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReportForOwnBusinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhone {
            get {
                return this.CellPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneField, value) != true)) {
                    this.CellPhoneField = value;
                    this.RaisePropertyChanged("CellPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FirstYearDefault {
            get {
                return this.FirstYearDefaultField;
            }
            set {
                if ((this.FirstYearDefaultField.Equals(value) != true)) {
                    this.FirstYearDefaultField = value;
                    this.RaisePropertyChanged("FirstYearDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficePhone {
            get {
                return this.OfficePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficePhoneField, value) != true)) {
                    this.OfficePhoneField = value;
                    this.RaisePropertyChanged("OfficePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RenewalDefault {
            get {
                return this.RenewalDefaultField;
            }
            set {
                if ((this.RenewalDefaultField.Equals(value) != true)) {
                    this.RenewalDefaultField = value;
                    this.RaisePropertyChanged("RenewalDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReportForEntireAgency {
            get {
                return this.ReportForEntireAgencyField;
            }
            set {
                if ((this.ReportForEntireAgencyField.Equals(value) != true)) {
                    this.ReportForEntireAgencyField = value;
                    this.RaisePropertyChanged("ReportForEntireAgency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReportForOwnBusiness {
            get {
                return this.ReportForOwnBusinessField;
            }
            set {
                if ((this.ReportForOwnBusinessField.Equals(value) != true)) {
                    this.ReportForOwnBusinessField = value;
                    this.RaisePropertyChanged("ReportForOwnBusiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LinkedUser", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class LinkedUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BGUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConnectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BGUserId {
            get {
                return this.BGUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BGUserIdField, value) != true)) {
                    this.BGUserIdField = value;
                    this.RaisePropertyChanged("BGUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConnected {
            get {
                return this.IsConnectedField;
            }
            set {
                if ((this.IsConnectedField.Equals(value) != true)) {
                    this.IsConnectedField = value;
                    this.RaisePropertyChanged("IsConnected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPermissions", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class UserPermissions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.MasterModule ModuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.ModuleAccessRight PermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> UserPermissionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.MasterModule Module {
            get {
                return this.ModuleField;
            }
            set {
                if ((this.ModuleField.Equals(value) != true)) {
                    this.ModuleField = value;
                    this.RaisePropertyChanged("Module");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ModuleAccessRight Permission {
            get {
                return this.PermissionField;
            }
            set {
                if ((this.PermissionField.Equals(value) != true)) {
                    this.PermissionField = value;
                    this.RaisePropertyChanged("Permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> UserPermissionId {
            get {
                return this.UserPermissionIdField;
            }
            set {
                if ((this.UserPermissionIdField.Equals(value) != true)) {
                    this.UserPermissionIdField = value;
                    this.RaisePropertyChanged("UserPermissionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasterModule", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum MasterModule : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeopleManager = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PolicyManager = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Settings = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FollowUpManger = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HelpUpdate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompManager = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportManager = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dashboard = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleAccessRight", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum ModuleAccessRight : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Read = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Write = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAccess = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompType", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class CompType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IncomingPaymentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IncomingPaymentTypeID {
            get {
                return this.IncomingPaymentTypeIDField;
            }
            set {
                if ((this.IncomingPaymentTypeIDField.Equals(value) != true)) {
                    this.IncomingPaymentTypeIDField = value;
                    this.RaisePropertyChanged("IncomingPaymentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentTypeName {
            get {
                return this.PaymentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentTypeNameField, value) != true)) {
                    this.PaymentTypeNameField = value;
                    this.RaisePropertyChanged("PaymentTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyImportStatus", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicyImportStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<string> ErrorListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCount {
            get {
                return this.ErrorCountField;
            }
            set {
                if ((this.ErrorCountField.Equals(value) != true)) {
                    this.ErrorCountField = value;
                    this.RaisePropertyChanged("ErrorCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> ErrorList {
            get {
                return this.ErrorListField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorListField, value) != true)) {
                    this.ErrorListField = value;
                    this.RaisePropertyChanged("ErrorList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportCount {
            get {
                return this.ImportCountField;
            }
            set {
                if ((this.ImportCountField.Equals(value) != true)) {
                    this.ImportCountField = value;
                    this.RaisePropertyChanged("ImportCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateCount {
            get {
                return this.UpdateCountField;
            }
            set {
                if ((this.UpdateCountField.Equals(value) != true)) {
                    this.UpdateCountField = value;
                    this.RaisePropertyChanged("UpdateCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="News", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class News : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid NewsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsContent {
            get {
                return this.NewsContentField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsContentField, value) != true)) {
                    this.NewsContentField = value;
                    this.RaisePropertyChanged("NewsContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid NewsID {
            get {
                return this.NewsIDField;
            }
            set {
                if ((this.NewsIDField.Equals(value) != true)) {
                    this.NewsIDField = value;
                    this.RaisePropertyChanged("NewsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsTitle {
            get {
                return this.NewsTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTitleField, value) != true)) {
                    this.NewsTitleField = value;
                    this.RaisePropertyChanged("NewsTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LastViewPolicy", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class LastViewPolicy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ClientidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> UserCredentialIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> Clientid {
            get {
                return this.ClientidField;
            }
            set {
                if ((this.ClientidField.Equals(value) != true)) {
                    this.ClientidField = value;
                    this.RaisePropertyChanged("Clientid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SNo {
            get {
                return this.SNoField;
            }
            set {
                if ((this.SNoField.Equals(value) != true)) {
                    this.SNoField = value;
                    this.RaisePropertyChanged("SNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> UserCredentialId {
            get {
                return this.UserCredentialIdField;
            }
            set {
                if ((this.UserCredentialIdField.Equals(value) != true)) {
                    this.UserCredentialIdField = value;
                    this.RaisePropertyChanged("UserCredentialId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ApplicationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientAndPayment", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ClientAndPayment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalPaymentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalPayments {
            get {
                return this.TotalPaymentsField;
            }
            set {
                if ((this.TotalPaymentsField.Equals(value) != true)) {
                    this.TotalPaymentsField = value;
                    this.RaisePropertyChanged("TotalPayments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorToolField", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PayorToolField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllignedDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvailableFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.Formula CalculationFormulaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ControlHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ControlWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ControlXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ControlYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquivalentDeuFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquivalentIncomingFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquivalentLearnedFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldStatusValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> FormulaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HelpTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCalculatedFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNotVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOverrideOfCalcAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPartOfPrimaryKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPopulateIfLinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTabbedToNextFieldIfLinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsZeroorBlankAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelOnFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MaskFieldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaskFieldTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaskTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PTAvailableFieldIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorFieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorToolIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TemplateIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllignedDirection {
            get {
                return this.AllignedDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.AllignedDirectionField, value) != true)) {
                    this.AllignedDirectionField = value;
                    this.RaisePropertyChanged("AllignedDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvailableFieldName {
            get {
                return this.AvailableFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableFieldNameField, value) != true)) {
                    this.AvailableFieldNameField = value;
                    this.RaisePropertyChanged("AvailableFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Formula CalculationFormula {
            get {
                return this.CalculationFormulaField;
            }
            set {
                if ((object.ReferenceEquals(this.CalculationFormulaField, value) != true)) {
                    this.CalculationFormulaField = value;
                    this.RaisePropertyChanged("CalculationFormula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlHeight {
            get {
                return this.ControlHeightField;
            }
            set {
                if ((this.ControlHeightField.Equals(value) != true)) {
                    this.ControlHeightField = value;
                    this.RaisePropertyChanged("ControlHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlWidth {
            get {
                return this.ControlWidthField;
            }
            set {
                if ((this.ControlWidthField.Equals(value) != true)) {
                    this.ControlWidthField = value;
                    this.RaisePropertyChanged("ControlWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlX {
            get {
                return this.ControlXField;
            }
            set {
                if ((this.ControlXField.Equals(value) != true)) {
                    this.ControlXField = value;
                    this.RaisePropertyChanged("ControlX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlY {
            get {
                return this.ControlYField;
            }
            set {
                if ((this.ControlYField.Equals(value) != true)) {
                    this.ControlYField = value;
                    this.RaisePropertyChanged("ControlY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultValue {
            get {
                return this.DefaultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultValueField, value) != true)) {
                    this.DefaultValueField = value;
                    this.RaisePropertyChanged("DefaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquivalentDeuField {
            get {
                return this.EquivalentDeuFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.EquivalentDeuFieldField, value) != true)) {
                    this.EquivalentDeuFieldField = value;
                    this.RaisePropertyChanged("EquivalentDeuField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquivalentIncomingField {
            get {
                return this.EquivalentIncomingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.EquivalentIncomingFieldField, value) != true)) {
                    this.EquivalentIncomingFieldField = value;
                    this.RaisePropertyChanged("EquivalentIncomingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquivalentLearnedField {
            get {
                return this.EquivalentLearnedFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.EquivalentLearnedFieldField, value) != true)) {
                    this.EquivalentLearnedFieldField = value;
                    this.RaisePropertyChanged("EquivalentLearnedField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldOrder {
            get {
                return this.FieldOrderField;
            }
            set {
                if ((this.FieldOrderField.Equals(value) != true)) {
                    this.FieldOrderField = value;
                    this.RaisePropertyChanged("FieldOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldStatusValue {
            get {
                return this.FieldStatusValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldStatusValueField, value) != true)) {
                    this.FieldStatusValueField = value;
                    this.RaisePropertyChanged("FieldStatusValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldValue {
            get {
                return this.FieldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldValueField, value) != true)) {
                    this.FieldValueField = value;
                    this.RaisePropertyChanged("FieldValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> FormulaId {
            get {
                return this.FormulaIdField;
            }
            set {
                if ((this.FormulaIdField.Equals(value) != true)) {
                    this.FormulaIdField = value;
                    this.RaisePropertyChanged("FormulaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HelpText {
            get {
                return this.HelpTextField;
            }
            set {
                if ((object.ReferenceEquals(this.HelpTextField, value) != true)) {
                    this.HelpTextField = value;
                    this.RaisePropertyChanged("HelpText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCalculatedField {
            get {
                return this.IsCalculatedFieldField;
            }
            set {
                if ((this.IsCalculatedFieldField.Equals(value) != true)) {
                    this.IsCalculatedFieldField = value;
                    this.RaisePropertyChanged("IsCalculatedField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNotVisible {
            get {
                return this.IsNotVisibleField;
            }
            set {
                if ((this.IsNotVisibleField.Equals(value) != true)) {
                    this.IsNotVisibleField = value;
                    this.RaisePropertyChanged("IsNotVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOverrideOfCalcAllowed {
            get {
                return this.IsOverrideOfCalcAllowedField;
            }
            set {
                if ((this.IsOverrideOfCalcAllowedField.Equals(value) != true)) {
                    this.IsOverrideOfCalcAllowedField = value;
                    this.RaisePropertyChanged("IsOverrideOfCalcAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPartOfPrimaryKey {
            get {
                return this.IsPartOfPrimaryKeyField;
            }
            set {
                if ((this.IsPartOfPrimaryKeyField.Equals(value) != true)) {
                    this.IsPartOfPrimaryKeyField = value;
                    this.RaisePropertyChanged("IsPartOfPrimaryKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPopulateIfLinked {
            get {
                return this.IsPopulateIfLinkedField;
            }
            set {
                if ((this.IsPopulateIfLinkedField.Equals(value) != true)) {
                    this.IsPopulateIfLinkedField = value;
                    this.RaisePropertyChanged("IsPopulateIfLinked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTabbedToNextFieldIfLinked {
            get {
                return this.IsTabbedToNextFieldIfLinkedField;
            }
            set {
                if ((this.IsTabbedToNextFieldIfLinkedField.Equals(value) != true)) {
                    this.IsTabbedToNextFieldIfLinkedField = value;
                    this.RaisePropertyChanged("IsTabbedToNextFieldIfLinked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsZeroorBlankAllowed {
            get {
                return this.IsZeroorBlankAllowedField;
            }
            set {
                if ((this.IsZeroorBlankAllowedField.Equals(value) != true)) {
                    this.IsZeroorBlankAllowedField = value;
                    this.RaisePropertyChanged("IsZeroorBlankAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelOnField {
            get {
                return this.LabelOnFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelOnFieldField, value) != true)) {
                    this.LabelOnFieldField = value;
                    this.RaisePropertyChanged("LabelOnField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MaskFieldType {
            get {
                return this.MaskFieldTypeField;
            }
            set {
                if ((this.MaskFieldTypeField.Equals(value) != true)) {
                    this.MaskFieldTypeField = value;
                    this.RaisePropertyChanged("MaskFieldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaskFieldTypeId {
            get {
                return this.MaskFieldTypeIdField;
            }
            set {
                if ((this.MaskFieldTypeIdField.Equals(value) != true)) {
                    this.MaskFieldTypeIdField = value;
                    this.RaisePropertyChanged("MaskFieldTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaskText {
            get {
                return this.MaskTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MaskTextField, value) != true)) {
                    this.MaskTextField = value;
                    this.RaisePropertyChanged("MaskText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PTAvailableFieldId {
            get {
                return this.PTAvailableFieldIdField;
            }
            set {
                if ((this.PTAvailableFieldIdField.Equals(value) != true)) {
                    this.PTAvailableFieldIdField = value;
                    this.RaisePropertyChanged("PTAvailableFieldId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorFieldID {
            get {
                return this.PayorFieldIDField;
            }
            set {
                if ((this.PayorFieldIDField.Equals(value) != true)) {
                    this.PayorFieldIDField = value;
                    this.RaisePropertyChanged("PayorFieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorToolId {
            get {
                return this.PayorToolIdField;
            }
            set {
                if ((this.PayorToolIdField.Equals(value) != true)) {
                    this.PayorToolIdField = value;
                    this.RaisePropertyChanged("PayorToolId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Formula", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Formula : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormulaExpressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FormulaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormulaTtitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormulaExpression {
            get {
                return this.FormulaExpressionField;
            }
            set {
                if ((object.ReferenceEquals(this.FormulaExpressionField, value) != true)) {
                    this.FormulaExpressionField = value;
                    this.RaisePropertyChanged("FormulaExpression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FormulaID {
            get {
                return this.FormulaIDField;
            }
            set {
                if ((this.FormulaIDField.Equals(value) != true)) {
                    this.FormulaIDField = value;
                    this.RaisePropertyChanged("FormulaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormulaTtitle {
            get {
                return this.FormulaTtitleField;
            }
            set {
                if ((object.ReferenceEquals(this.FormulaTtitleField, value) != true)) {
                    this.FormulaTtitleField = value;
                    this.RaisePropertyChanged("FormulaTtitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorTool", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PayorTool : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChequeImageFilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorToolIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatementImageFilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TemplateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField> ToolFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebDevChequeImageFilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebDevStatementImageFilePathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChequeImageFilePath {
            get {
                return this.ChequeImageFilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ChequeImageFilePathField, value) != true)) {
                    this.ChequeImageFilePathField = value;
                    this.RaisePropertyChanged("ChequeImageFilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorToolId {
            get {
                return this.PayorToolIdField;
            }
            set {
                if ((this.PayorToolIdField.Equals(value) != true)) {
                    this.PayorToolIdField = value;
                    this.RaisePropertyChanged("PayorToolId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatementImageFilePath {
            get {
                return this.StatementImageFilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.StatementImageFilePathField, value) != true)) {
                    this.StatementImageFilePathField = value;
                    this.RaisePropertyChanged("StatementImageFilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField> ToolFields {
            get {
                return this.ToolFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolFieldsField, value) != true)) {
                    this.ToolFieldsField = value;
                    this.RaisePropertyChanged("ToolFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebDevChequeImageFilePath {
            get {
                return this.WebDevChequeImageFilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.WebDevChequeImageFilePathField, value) != true)) {
                    this.WebDevChequeImageFilePathField = value;
                    this.RaisePropertyChanged("WebDevChequeImageFilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebDevStatementImageFilePath {
            get {
                return this.WebDevStatementImageFilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.WebDevStatementImageFilePathField, value) != true)) {
                    this.WebDevStatementImageFilePathField = value;
                    this.RaisePropertyChanged("WebDevStatementImageFilePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tempalate", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Tempalate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TemplateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateName {
            get {
                return this.TemplateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateNameField, value) != true)) {
                    this.TemplateNameField = value;
                    this.RaisePropertyChanged("TemplateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LinkPaymentReciptRecords", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class LinkPaymentReciptRecords : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CommissionPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DollerPerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAllCheckedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PaymentEntryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PaymentRecivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SplitPerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPaymentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CommissionPercentage {
            get {
                return this.CommissionPercentageField;
            }
            set {
                if ((this.CommissionPercentageField.Equals(value) != true)) {
                    this.CommissionPercentageField = value;
                    this.RaisePropertyChanged("CommissionPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DollerPerUnit {
            get {
                return this.DollerPerUnitField;
            }
            set {
                if ((this.DollerPerUnitField.Equals(value) != true)) {
                    this.DollerPerUnitField = value;
                    this.RaisePropertyChanged("DollerPerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAllChecked {
            get {
                return this.IsAllCheckedField;
            }
            set {
                if ((this.IsAllCheckedField.Equals(value) != true)) {
                    this.IsAllCheckedField = value;
                    this.RaisePropertyChanged("IsAllChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfUnits {
            get {
                return this.NumberOfUnitsField;
            }
            set {
                if ((this.NumberOfUnitsField.Equals(value) != true)) {
                    this.NumberOfUnitsField = value;
                    this.RaisePropertyChanged("NumberOfUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PaymentEntryID {
            get {
                return this.PaymentEntryIDField;
            }
            set {
                if ((this.PaymentEntryIDField.Equals(value) != true)) {
                    this.PaymentEntryIDField = value;
                    this.RaisePropertyChanged("PaymentEntryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PaymentRecived {
            get {
                return this.PaymentRecivedField;
            }
            set {
                if ((this.PaymentRecivedField.Equals(value) != true)) {
                    this.PaymentRecivedField = value;
                    this.RaisePropertyChanged("PaymentRecived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SplitPer {
            get {
                return this.SplitPerField;
            }
            set {
                if ((this.SplitPerField.Equals(value) != true)) {
                    this.SplitPerField = value;
                    this.RaisePropertyChanged("SplitPer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPayment {
            get {
                return this.TotalPaymentField;
            }
            set {
                if ((this.TotalPaymentField.Equals(value) != true)) {
                    this.TotalPaymentField = value;
                    this.RaisePropertyChanged("TotalPayment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommissionEntry", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class CommissionEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CommissionPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DollarPerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IssueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NoOfUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PaymentEntryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PaymentRecivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SplitPerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid statementIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CommissionPercentage {
            get {
                return this.CommissionPercentageField;
            }
            set {
                if ((this.CommissionPercentageField.Equals(value) != true)) {
                    this.CommissionPercentageField = value;
                    this.RaisePropertyChanged("CommissionPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DollarPerUnit {
            get {
                return this.DollarPerUnitField;
            }
            set {
                if ((this.DollarPerUnitField.Equals(value) != true)) {
                    this.DollarPerUnitField = value;
                    this.RaisePropertyChanged("DollarPerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IssueID {
            get {
                return this.IssueIDField;
            }
            set {
                if ((this.IssueIDField.Equals(value) != true)) {
                    this.IssueIDField = value;
                    this.RaisePropertyChanged("IssueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NoOfUnit {
            get {
                return this.NoOfUnitField;
            }
            set {
                if ((this.NoOfUnitField.Equals(value) != true)) {
                    this.NoOfUnitField = value;
                    this.RaisePropertyChanged("NoOfUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PaymentEntryID {
            get {
                return this.PaymentEntryIDField;
            }
            set {
                if ((this.PaymentEntryIDField.Equals(value) != true)) {
                    this.PaymentEntryIDField = value;
                    this.RaisePropertyChanged("PaymentEntryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PaymentRecived {
            get {
                return this.PaymentRecivedField;
            }
            set {
                if ((this.PaymentRecivedField.Equals(value) != true)) {
                    this.PaymentRecivedField = value;
                    this.RaisePropertyChanged("PaymentRecived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SplitPer {
            get {
                return this.SplitPerField;
            }
            set {
                if ((this.SplitPerField.Equals(value) != true)) {
                    this.SplitPerField = value;
                    this.RaisePropertyChanged("SplitPer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPayment {
            get {
                return this.TotalPaymentField;
            }
            set {
                if ((this.TotalPaymentField.Equals(value) != true)) {
                    this.TotalPaymentField = value;
                    this.RaisePropertyChanged("TotalPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid statementID {
            get {
                return this.statementIDField;
            }
            set {
                if ((this.statementIDField.Equals(value) != true)) {
                    this.statementIDField = value;
                    this.RaisePropertyChanged("statementID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutGoingPayment", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class OutGoingPayment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CustomEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CustomStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> FirstYearPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditDisableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrimaryAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OutgoingScheduleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayeeUserCredentialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RenewalPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SplitPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TierNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CustomEndDate {
            get {
                return this.CustomEndDateField;
            }
            set {
                if ((this.CustomEndDateField.Equals(value) != true)) {
                    this.CustomEndDateField = value;
                    this.RaisePropertyChanged("CustomEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CustomStartDate {
            get {
                return this.CustomStartDateField;
            }
            set {
                if ((this.CustomStartDateField.Equals(value) != true)) {
                    this.CustomStartDateField = value;
                    this.RaisePropertyChanged("CustomStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> FirstYearPercentage {
            get {
                return this.FirstYearPercentageField;
            }
            set {
                if ((this.FirstYearPercentageField.Equals(value) != true)) {
                    this.FirstYearPercentageField = value;
                    this.RaisePropertyChanged("FirstYearPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEditDisable {
            get {
                return this.IsEditDisableField;
            }
            set {
                if ((this.IsEditDisableField.Equals(value) != true)) {
                    this.IsEditDisableField = value;
                    this.RaisePropertyChanged("IsEditDisable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrimaryAgent {
            get {
                return this.IsPrimaryAgentField;
            }
            set {
                if ((this.IsPrimaryAgentField.Equals(value) != true)) {
                    this.IsPrimaryAgentField = value;
                    this.RaisePropertyChanged("IsPrimaryAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OutgoingScheduleId {
            get {
                return this.OutgoingScheduleIdField;
            }
            set {
                if ((this.OutgoingScheduleIdField.Equals(value) != true)) {
                    this.OutgoingScheduleIdField = value;
                    this.RaisePropertyChanged("OutgoingScheduleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayeeUserCredentialId {
            get {
                return this.PayeeUserCredentialIdField;
            }
            set {
                if ((this.PayeeUserCredentialIdField.Equals(value) != true)) {
                    this.PayeeUserCredentialIdField = value;
                    this.RaisePropertyChanged("PayeeUserCredentialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Payor {
            get {
                return this.PayorField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorField, value) != true)) {
                    this.PayorField = value;
                    this.RaisePropertyChanged("Payor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> RenewalPercentage {
            get {
                return this.RenewalPercentageField;
            }
            set {
                if ((this.RenewalPercentageField.Equals(value) != true)) {
                    this.RenewalPercentageField = value;
                    this.RaisePropertyChanged("RenewalPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleTypeId {
            get {
                return this.ScheduleTypeIdField;
            }
            set {
                if ((this.ScheduleTypeIdField.Equals(value) != true)) {
                    this.ScheduleTypeIdField = value;
                    this.RaisePropertyChanged("ScheduleTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SplitPercent {
            get {
                return this.SplitPercentField;
            }
            set {
                if ((this.SplitPercentField.Equals(value) != true)) {
                    this.SplitPercentField = value;
                    this.RaisePropertyChanged("SplitPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TierNumber {
            get {
                return this.TierNumberField;
            }
            set {
                if ((this.TierNumberField.Equals(value) != true)) {
                    this.TierNumberField = value;
                    this.RaisePropertyChanged("TierNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LinkPaymentPolicies", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class LinkPaymentPolicies : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CarrierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompScheduleTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompScheduleTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords> EntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OriginalEffDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords SelectedEntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarrierId {
            get {
                return this.CarrierIdField;
            }
            set {
                if ((this.CarrierIdField.Equals(value) != true)) {
                    this.CarrierIdField = value;
                    this.RaisePropertyChanged("CarrierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompScheduleTypeId {
            get {
                return this.CompScheduleTypeIdField;
            }
            set {
                if ((this.CompScheduleTypeIdField.Equals(value) != true)) {
                    this.CompScheduleTypeIdField = value;
                    this.RaisePropertyChanged("CompScheduleTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompScheduleTypeName {
            get {
                return this.CompScheduleTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompScheduleTypeNameField, value) != true)) {
                    this.CompScheduleTypeNameField = value;
                    this.RaisePropertyChanged("CompScheduleTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompTypeId {
            get {
                return this.CompTypeIdField;
            }
            set {
                if ((this.CompTypeIdField.Equals(value) != true)) {
                    this.CompTypeIdField = value;
                    this.RaisePropertyChanged("CompTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompTypeName {
            get {
                return this.CompTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompTypeNameField, value) != true)) {
                    this.CompTypeNameField = value;
                    this.RaisePropertyChanged("CompTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords> Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntriesField, value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insured {
            get {
                return this.InsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredField, value) != true)) {
                    this.InsuredField = value;
                    this.RaisePropertyChanged("Insured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseId {
            get {
                return this.LicenseIdField;
            }
            set {
                if ((this.LicenseIdField.Equals(value) != true)) {
                    this.LicenseIdField = value;
                    this.RaisePropertyChanged("LicenseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OriginalEffDate {
            get {
                return this.OriginalEffDateField;
            }
            set {
                if ((this.OriginalEffDateField.Equals(value) != true)) {
                    this.OriginalEffDateField = value;
                    this.RaisePropertyChanged("OriginalEffDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorName {
            get {
                return this.PayorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNameField, value) != true)) {
                    this.PayorNameField = value;
                    this.RaisePropertyChanged("PayorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords SelectedEntries {
            get {
                return this.SelectedEntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedEntriesField, value) != true)) {
                    this.SelectedEntriesField = value;
                    this.RaisePropertyChanged("SelectedEntries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseeDisplayData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.JSONResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.AddUserResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_PolicyImportStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_ErrorMsg>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_ErrorMsg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CarrierObject>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.CarrierObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorObject>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_UserResponseStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_UserMsg>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Benefits_UserMsg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Client))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingScheduleEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingScheduleEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Note))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutgoingScheduleEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.OutgoingScheduleEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailPreviousData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Payor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Carrier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Coverage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingSchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Operation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCarrier>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCarrier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UniqueIdenitfier>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.UniqueIdenitfier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.DEU))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.XmlFields))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DataEntryField>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.DataEntryField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.UserRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ModifiyableBatchStatementData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.BasicInformationForProcess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PostStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableBatchData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.EntryStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PostCompleteStatusEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableStatementData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.FollowUpRunModules))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.CustomMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Graded>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Graded))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Mode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.NonGraded>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.NonGraded))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ExportDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Payee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Batch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Statement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.UploadStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.BatchAddOutput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ImportFileData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc._PolicyStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.UserDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UserPermissions>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.UserPermissions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.MasterModule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ModuleAccessRight))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.CompType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyImportStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.News))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.News>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ApplicationFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ClientAndPayment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ClientAndPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Formula))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Invoice>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatusEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeBalance>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeBalance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssuePolicyDetail>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.IssuePolicyDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowupIncomingPament>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.FollowupIncomingPament))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowUPPayorContacts>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.FollowUPPayorContacts))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.MasterIssuesOption))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineServiceData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineServiceData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLinePolicyData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLinePolicyData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineJournalData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineJournalData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchInsuredRecored>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.BatchInsuredRecored))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicySearched>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySearched))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CoverageNickName>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.CoverageNickName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableInputDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ExportBatchFile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableOutputDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.VariableCollection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceCharge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceCharge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExportCardPayeeInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ExportCardPayeeInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Report>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Report))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayeeStatementReport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PrintReportOutput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.AuditReport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ManagementReport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.MappedField>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.MappedField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.MaskFieldTypes>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.MaskFieldTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.TranslatorTypes>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.TranslatorTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolMasterStatementData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolMasterStatementData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ReportCustomFieldSettings>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ReportCustomFieldSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Region))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FileType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.FileType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchDownloadStatus>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.BatchDownloadStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatus>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolIncomingFieldType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolIncomingFieldType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolLearnedlFieldType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolLearnedlFieldType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingScheduleType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingScheduleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingScheduleType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingScheduleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyStatus>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Question>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Question))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Region>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SystemConstant>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.SystemConstant))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Zip>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.Zip))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolMaskedFieldType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolMaskedFieldType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailMasterData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupportData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupportData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<System.Guid>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, MyAgencyVault.VM.MyAgencyVaultSvc.VariableCollection>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.TempFolderDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.NewVersionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyAgencyVault.EmailFax.MailData))]
    public partial class LicenseeDisplayData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CommissionableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactFirstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactLastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CutOffDay1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CutOffDay2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DueBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<object> ExportedImportedFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsClientEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastUploadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LicensePaymentModeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Invoice> LicenseeInvoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice> LicenseeJournalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseeSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatusEnum LicenseeStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> LocalPayorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote> NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TaxRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TrackDateDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountCode {
            get {
                return this.AccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountCodeField, value) != true)) {
                    this.AccountCodeField = value;
                    this.RaisePropertyChanged("AccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Commissionable {
            get {
                return this.CommissionableField;
            }
            set {
                if ((this.CommissionableField.Equals(value) != true)) {
                    this.CommissionableField = value;
                    this.RaisePropertyChanged("Commissionable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactFirst {
            get {
                return this.ContactFirstField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactFirstField, value) != true)) {
                    this.ContactFirstField = value;
                    this.RaisePropertyChanged("ContactFirst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactLast {
            get {
                return this.ContactLastField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactLastField, value) != true)) {
                    this.ContactLastField = value;
                    this.RaisePropertyChanged("ContactLast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CutOffDay1 {
            get {
                return this.CutOffDay1Field;
            }
            set {
                if ((this.CutOffDay1Field.Equals(value) != true)) {
                    this.CutOffDay1Field = value;
                    this.RaisePropertyChanged("CutOffDay1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CutOffDay2 {
            get {
                return this.CutOffDay2Field;
            }
            set {
                if ((this.CutOffDay2Field.Equals(value) != true)) {
                    this.CutOffDay2Field = value;
                    this.RaisePropertyChanged("CutOffDay2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DueBalance {
            get {
                return this.DueBalanceField;
            }
            set {
                if ((this.DueBalanceField.Equals(value) != true)) {
                    this.DueBalanceField = value;
                    this.RaisePropertyChanged("DueBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<object> ExportedImportedFiles {
            get {
                return this.ExportedImportedFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExportedImportedFilesField, value) != true)) {
                    this.ExportedImportedFilesField = value;
                    this.RaisePropertyChanged("ExportedImportedFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsClientEnable {
            get {
                return this.IsClientEnableField;
            }
            set {
                if ((this.IsClientEnableField.Equals(value) != true)) {
                    this.IsClientEnableField = value;
                    this.RaisePropertyChanged("IsClientEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLogin {
            get {
                return this.LastLoginField;
            }
            set {
                if ((this.LastLoginField.Equals(value) != true)) {
                    this.LastLoginField = value;
                    this.RaisePropertyChanged("LastLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastUpload {
            get {
                return this.LastUploadField;
            }
            set {
                if ((this.LastUploadField.Equals(value) != true)) {
                    this.LastUploadField = value;
                    this.RaisePropertyChanged("LastUpload");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LicensePaymentModeId {
            get {
                return this.LicensePaymentModeIdField;
            }
            set {
                if ((this.LicensePaymentModeIdField.Equals(value) != true)) {
                    this.LicensePaymentModeIdField = value;
                    this.RaisePropertyChanged("LicensePaymentModeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Invoice> LicenseeInvoices {
            get {
                return this.LicenseeInvoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseeInvoicesField, value) != true)) {
                    this.LicenseeInvoicesField = value;
                    this.RaisePropertyChanged("LicenseeInvoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice> LicenseeJournals {
            get {
                return this.LicenseeJournalsField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseeJournalsField, value) != true)) {
                    this.LicenseeJournalsField = value;
                    this.RaisePropertyChanged("LicenseeJournals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseeSource {
            get {
                return this.LicenseeSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseeSourceField, value) != true)) {
                    this.LicenseeSourceField = value;
                    this.RaisePropertyChanged("LicenseeSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatusEnum LicenseeStatus {
            get {
                return this.LicenseeStatusField;
            }
            set {
                if ((this.LicenseeStatusField.Equals(value) != true)) {
                    this.LicenseeStatusField = value;
                    this.RaisePropertyChanged("LicenseeStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> LocalPayors {
            get {
                return this.LocalPayorsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalPayorsField, value) != true)) {
                    this.LocalPayorsField = value;
                    this.RaisePropertyChanged("LocalPayors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote> Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TaxRate {
            get {
                return this.TaxRateField;
            }
            set {
                if ((this.TaxRateField.Equals(value) != true)) {
                    this.TaxRateField = value;
                    this.RaisePropertyChanged("TaxRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TrackDateDefault {
            get {
                return this.TrackDateDefaultField;
            }
            set {
                if ((this.TrackDateDefaultField.Equals(value) != true)) {
                    this.TrackDateDefaultField = value;
                    this.RaisePropertyChanged("TrackDateDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseeInvoice", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class LicenseeInvoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BillingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BillingEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BillingStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DueBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ExportedBatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> InvoiceAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceGeneratedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InvoiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> LicenseeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BillingDate {
            get {
                return this.BillingDateField;
            }
            set {
                if ((this.BillingDateField.Equals(value) != true)) {
                    this.BillingDateField = value;
                    this.RaisePropertyChanged("BillingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BillingEndDate {
            get {
                return this.BillingEndDateField;
            }
            set {
                if ((this.BillingEndDateField.Equals(value) != true)) {
                    this.BillingEndDateField = value;
                    this.RaisePropertyChanged("BillingEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingPeriod {
            get {
                return this.BillingPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingPeriodField, value) != true)) {
                    this.BillingPeriodField = value;
                    this.RaisePropertyChanged("BillingPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BillingStartDate {
            get {
                return this.BillingStartDateField;
            }
            set {
                if ((this.BillingStartDateField.Equals(value) != true)) {
                    this.BillingStartDateField = value;
                    this.RaisePropertyChanged("BillingStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DueBalance {
            get {
                return this.DueBalanceField;
            }
            set {
                if ((this.DueBalanceField.Equals(value) != true)) {
                    this.DueBalanceField = value;
                    this.RaisePropertyChanged("DueBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ExportedBatchId {
            get {
                return this.ExportedBatchIdField;
            }
            set {
                if ((this.ExportedBatchIdField.Equals(value) != true)) {
                    this.ExportedBatchIdField = value;
                    this.RaisePropertyChanged("ExportedBatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> InvoiceAmount {
            get {
                return this.InvoiceAmountField;
            }
            set {
                if ((this.InvoiceAmountField.Equals(value) != true)) {
                    this.InvoiceAmountField = value;
                    this.RaisePropertyChanged("InvoiceAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceGeneratedOn {
            get {
                return this.InvoiceGeneratedOnField;
            }
            set {
                if ((this.InvoiceGeneratedOnField.Equals(value) != true)) {
                    this.InvoiceGeneratedOnField = value;
                    this.RaisePropertyChanged("InvoiceGeneratedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InvoiceId {
            get {
                return this.InvoiceIdField;
            }
            set {
                if ((this.InvoiceIdField.Equals(value) != true)) {
                    this.InvoiceIdField = value;
                    this.RaisePropertyChanged("InvoiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseeStatusEnum", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum LicenseeStatusEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InActive = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveAndPending = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseeNote", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class LicenseeNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid NoteIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid NoteID {
            get {
                return this.NoteIDField;
            }
            set {
                if ((this.NoteIDField.Equals(value) != true)) {
                    this.NoteIDField = value;
                    this.RaisePropertyChanged("NoteID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseeBalance", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class LicenseeBalance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DueBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DueBalance {
            get {
                return this.DueBalanceField;
            }
            set {
                if ((this.DueBalanceField.Equals(value) != true)) {
                    this.DueBalanceField = value;
                    this.RaisePropertyChanged("DueBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssuePolicyDetail", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class IssuePolicyDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutoTrmDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EffectiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Enroll_EligibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ModalPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTermDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPayeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SharePercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatementNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrmReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoTrmDate {
            get {
                return this.AutoTrmDateField;
            }
            set {
                if ((object.ReferenceEquals(this.AutoTrmDateField, value) != true)) {
                    this.AutoTrmDateField = value;
                    this.RaisePropertyChanged("AutoTrmDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Carrier {
            get {
                return this.CarrierField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierField, value) != true)) {
                    this.CarrierField = value;
                    this.RaisePropertyChanged("Carrier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedField, value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Effective {
            get {
                return this.EffectiveField;
            }
            set {
                if ((object.ReferenceEquals(this.EffectiveField, value) != true)) {
                    this.EffectiveField = value;
                    this.RaisePropertyChanged("Effective");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Enroll_Eligible {
            get {
                return this.Enroll_EligibleField;
            }
            set {
                if ((object.ReferenceEquals(this.Enroll_EligibleField, value) != true)) {
                    this.Enroll_EligibleField = value;
                    this.RaisePropertyChanged("Enroll_Eligible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insured {
            get {
                return this.InsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredField, value) != true)) {
                    this.InsuredField = value;
                    this.RaisePropertyChanged("Insured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdate {
            get {
                return this.LastUpdateField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdateField, value) != true)) {
                    this.LastUpdateField = value;
                    this.RaisePropertyChanged("LastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUser {
            get {
                return this.LastUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUserField, value) != true)) {
                    this.LastUserField = value;
                    this.RaisePropertyChanged("LastUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ModalPremium {
            get {
                return this.ModalPremiumField;
            }
            set {
                if ((this.ModalPremiumField.Equals(value) != true)) {
                    this.ModalPremiumField = value;
                    this.RaisePropertyChanged("ModalPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeField, value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Payment {
            get {
                return this.PaymentField;
            }
            set {
                if ((this.PaymentField.Equals(value) != true)) {
                    this.PaymentField = value;
                    this.RaisePropertyChanged("Payment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyTermDate {
            get {
                return this.PolicyTermDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTermDateField, value) != true)) {
                    this.PolicyTermDateField = value;
                    this.RaisePropertyChanged("PolicyTermDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPayee {
            get {
                return this.PrimaryPayeeField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPayeeField, value) != true)) {
                    this.PrimaryPayeeField = value;
                    this.RaisePropertyChanged("PrimaryPayee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Schedule {
            get {
                return this.ScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleField, value) != true)) {
                    this.ScheduleField = value;
                    this.RaisePropertyChanged("Schedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SharePercentage {
            get {
                return this.SharePercentageField;
            }
            set {
                if ((this.SharePercentageField.Equals(value) != true)) {
                    this.SharePercentageField = value;
                    this.RaisePropertyChanged("SharePercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatementNumber {
            get {
                return this.StatementNumberField;
            }
            set {
                if ((this.StatementNumberField.Equals(value) != true)) {
                    this.StatementNumberField = value;
                    this.RaisePropertyChanged("StatementNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackFrom {
            get {
                return this.TrackFromField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackFromField, value) != true)) {
                    this.TrackFromField = value;
                    this.RaisePropertyChanged("TrackFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackingNumber {
            get {
                return this.TrackingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingNumberField, value) != true)) {
                    this.TrackingNumberField = value;
                    this.RaisePropertyChanged("TrackingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrmReason {
            get {
                return this.TrmReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.TrmReasonField, value) != true)) {
                    this.TrmReasonField = value;
                    this.RaisePropertyChanged("TrmReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FollowupIncomingPament", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class FollowupIncomingPament : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CommissionPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DollerPerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PaymentRecivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SplitPerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPaymentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Batch {
            get {
                return this.BatchField;
            }
            set {
                if ((this.BatchField.Equals(value) != true)) {
                    this.BatchField = value;
                    this.RaisePropertyChanged("Batch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CommissionPercentage {
            get {
                return this.CommissionPercentageField;
            }
            set {
                if ((this.CommissionPercentageField.Equals(value) != true)) {
                    this.CommissionPercentageField = value;
                    this.RaisePropertyChanged("CommissionPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DollerPerUnit {
            get {
                return this.DollerPerUnitField;
            }
            set {
                if ((this.DollerPerUnitField.Equals(value) != true)) {
                    this.DollerPerUnitField = value;
                    this.RaisePropertyChanged("DollerPerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfUnits {
            get {
                return this.NumberOfUnitsField;
            }
            set {
                if ((this.NumberOfUnitsField.Equals(value) != true)) {
                    this.NumberOfUnitsField = value;
                    this.RaisePropertyChanged("NumberOfUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PaymentRecived {
            get {
                return this.PaymentRecivedField;
            }
            set {
                if ((this.PaymentRecivedField.Equals(value) != true)) {
                    this.PaymentRecivedField = value;
                    this.RaisePropertyChanged("PaymentRecived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SplitPer {
            get {
                return this.SplitPerField;
            }
            set {
                if ((this.SplitPerField.Equals(value) != true)) {
                    this.SplitPerField = value;
                    this.RaisePropertyChanged("SplitPer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Statement {
            get {
                return this.StatementField;
            }
            set {
                if ((this.StatementField.Equals(value) != true)) {
                    this.StatementField = value;
                    this.RaisePropertyChanged("Statement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPayment {
            get {
                return this.TotalPaymentField;
            }
            set {
                if ((this.TotalPaymentField.Equals(value) != true)) {
                    this.TotalPaymentField = value;
                    this.RaisePropertyChanged("TotalPayment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FollowUPPayorContacts", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class FollowUPPayorContacts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConatcPerfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> zipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConatcPerf {
            get {
                return this.ConatcPerfField;
            }
            set {
                if ((object.ReferenceEquals(this.ConatcPerfField, value) != true)) {
                    this.ConatcPerfField = value;
                    this.RaisePropertyChanged("ConatcPerf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> zip {
            get {
                return this.zipField;
            }
            set {
                if ((this.zipField.Equals(value) != true)) {
                    this.zipField = value;
                    this.RaisePropertyChanged("zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasterIssuesOption", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class MasterIssuesOption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory> IssueCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons> IssueReasonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults> IssueResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus> IssueStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory> IssueCategories {
            get {
                return this.IssueCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueCategoriesField, value) != true)) {
                    this.IssueCategoriesField = value;
                    this.RaisePropertyChanged("IssueCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons> IssueReasons {
            get {
                return this.IssueReasonsField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueReasonsField, value) != true)) {
                    this.IssueReasonsField = value;
                    this.RaisePropertyChanged("IssueReasons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults> IssueResults {
            get {
                return this.IssueResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueResultsField, value) != true)) {
                    this.IssueResultsField = value;
                    this.RaisePropertyChanged("IssueResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus> IssueStatus {
            get {
                return this.IssueStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueStatusField, value) != true)) {
                    this.IssueStatusField = value;
                    this.RaisePropertyChanged("IssueStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorSource", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PayorSource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWebsiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigNotes {
            get {
                return this.ConfigNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigNotesField, value) != true)) {
                    this.ConfigNotesField = value;
                    this.RaisePropertyChanged("ConfigNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWebsite {
            get {
                return this.IsWebsiteField;
            }
            set {
                if ((this.IsWebsiteField.Equals(value) != true)) {
                    this.IsWebsiteField = value;
                    this.RaisePropertyChanged("IsWebsite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceLine", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class InvoiceLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InvoiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineServiceData> InvoiceServiceLineDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InvoiceID {
            get {
                return this.InvoiceIDField;
            }
            set {
                if ((this.InvoiceIDField.Equals(value) != true)) {
                    this.InvoiceIDField = value;
                    this.RaisePropertyChanged("InvoiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineServiceData> InvoiceServiceLineData {
            get {
                return this.InvoiceServiceLineDataField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceServiceLineDataField, value) != true)) {
                    this.InvoiceServiceLineDataField = value;
                    this.RaisePropertyChanged("InvoiceServiceLineData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeID {
            get {
                return this.LicenseeIDField;
            }
            set {
                if ((this.LicenseeIDField.Equals(value) != true)) {
                    this.LicenseeIDField = value;
                    this.RaisePropertyChanged("LicenseeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceLineServiceData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class InvoiceLineServiceData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsumedUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid InvoiceLineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLinePolicyData> InvoicePolicyLineDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceChargeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsumedUnit {
            get {
                return this.ConsumedUnitField;
            }
            set {
                if ((this.ConsumedUnitField.Equals(value) != true)) {
                    this.ConsumedUnitField = value;
                    this.RaisePropertyChanged("ConsumedUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid InvoiceLineID {
            get {
                return this.InvoiceLineIDField;
            }
            set {
                if ((this.InvoiceLineIDField.Equals(value) != true)) {
                    this.InvoiceLineIDField = value;
                    this.RaisePropertyChanged("InvoiceLineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLinePolicyData> InvoicePolicyLineData {
            get {
                return this.InvoicePolicyLineDataField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoicePolicyLineDataField, value) != true)) {
                    this.InvoicePolicyLineDataField = value;
                    this.RaisePropertyChanged("InvoicePolicyLineData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceChargeType {
            get {
                return this.ServiceChargeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceChargeTypeField, value) != true)) {
                    this.ServiceChargeTypeField = value;
                    this.RaisePropertyChanged("ServiceChargeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubTotal {
            get {
                return this.SubTotalField;
            }
            set {
                if ((this.SubTotalField.Equals(value) != true)) {
                    this.SubTotalField = value;
                    this.RaisePropertyChanged("SubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((this.TaxField.Equals(value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceLinePolicyData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class InvoiceLinePolicyData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsumedUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsumedUnit {
            get {
                return this.ConsumedUnitField;
            }
            set {
                if ((this.ConsumedUnitField.Equals(value) != true)) {
                    this.ConsumedUnitField = value;
                    this.RaisePropertyChanged("ConsumedUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceLineJournalData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class InvoiceLineJournalData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BillingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsumedUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InvoiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceChargeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BillingDate {
            get {
                return this.BillingDateField;
            }
            set {
                if ((this.BillingDateField.Equals(value) != true)) {
                    this.BillingDateField = value;
                    this.RaisePropertyChanged("BillingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsumedUnit {
            get {
                return this.ConsumedUnitField;
            }
            set {
                if ((this.ConsumedUnitField.Equals(value) != true)) {
                    this.ConsumedUnitField = value;
                    this.RaisePropertyChanged("ConsumedUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InvoiceID {
            get {
                return this.InvoiceIDField;
            }
            set {
                if ((this.InvoiceIDField.Equals(value) != true)) {
                    this.InvoiceIDField = value;
                    this.RaisePropertyChanged("InvoiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyID {
            get {
                return this.PolicyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyIDField, value) != true)) {
                    this.PolicyIDField = value;
                    this.RaisePropertyChanged("PolicyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceChargeType {
            get {
                return this.ServiceChargeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceChargeTypeField, value) != true)) {
                    this.ServiceChargeTypeField = value;
                    this.RaisePropertyChanged("ServiceChargeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubTotal {
            get {
                return this.SubTotalField;
            }
            set {
                if ((this.SubTotalField.Equals(value) != true)) {
                    this.SubTotalField = value;
                    this.RaisePropertyChanged("SubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((this.TaxField.Equals(value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchFiles", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class BatchFiles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeletable {
            get {
                return this.IsDeletableField;
            }
            set {
                if ((this.IsDeletableField.Equals(value) != true)) {
                    this.IsDeletableField = value;
                    this.RaisePropertyChanged("IsDeletable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchInsuredRecored", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class BatchInsuredRecored : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PaymentEntryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PaymentRecivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insured {
            get {
                return this.InsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredField, value) != true)) {
                    this.InsuredField = value;
                    this.RaisePropertyChanged("Insured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PaymentEntryId {
            get {
                return this.PaymentEntryIdField;
            }
            set {
                if ((this.PaymentEntryIdField.Equals(value) != true)) {
                    this.PaymentEntryIdField = value;
                    this.RaisePropertyChanged("PaymentEntryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PaymentRecived {
            get {
                return this.PaymentRecivedField;
            }
            set {
                if ((this.PaymentRecivedField.Equals(value) != true)) {
                    this.PaymentRecivedField = value;
                    this.RaisePropertyChanged("PaymentRecived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsuredPayment", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class InsuredPayment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PaymentRecivedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PaymentRecived {
            get {
                return this.PaymentRecivedField;
            }
            set {
                if ((this.PaymentRecivedField.Equals(value) != true)) {
                    this.PaymentRecivedField = value;
                    this.RaisePropertyChanged("PaymentRecived");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicySettings", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicySettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTrackIncomingPaymentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTrackMissingMonthsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrackIncomingPayments {
            get {
                return this.IsTrackIncomingPaymentsField;
            }
            set {
                if ((this.IsTrackIncomingPaymentsField.Equals(value) != true)) {
                    this.IsTrackIncomingPaymentsField = value;
                    this.RaisePropertyChanged("IsTrackIncomingPayments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrackMissingMonths {
            get {
                return this.IsTrackMissingMonthsField;
            }
            set {
                if ((this.IsTrackMissingMonthsField.Equals(value) != true)) {
                    this.IsTrackMissingMonthsField = value;
                    this.RaisePropertyChanged("IsTrackMissingMonths");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicySearched", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PolicySearched : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClienIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserCredIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Carrier {
            get {
                return this.CarrierField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierField, value) != true)) {
                    this.CarrierField = value;
                    this.RaisePropertyChanged("Carrier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClienID {
            get {
                return this.ClienIDField;
            }
            set {
                if ((this.ClienIDField.Equals(value) != true)) {
                    this.ClienIDField = value;
                    this.RaisePropertyChanged("ClienID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompSchedule {
            get {
                return this.CompScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.CompScheduleField, value) != true)) {
                    this.CompScheduleField = value;
                    this.RaisePropertyChanged("CompSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompType {
            get {
                return this.CompTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompTypeField, value) != true)) {
                    this.CompTypeField = value;
                    this.RaisePropertyChanged("CompType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insured {
            get {
                return this.InsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredField, value) != true)) {
                    this.InsuredField = value;
                    this.RaisePropertyChanged("Insured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeField, value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorName {
            get {
                return this.PayorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNameField, value) != true)) {
                    this.PayorNameField = value;
                    this.RaisePropertyChanged("PayorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PolicyId {
            get {
                return this.PolicyIdField;
            }
            set {
                if ((this.PolicyIdField.Equals(value) != true)) {
                    this.PolicyIdField = value;
                    this.RaisePropertyChanged("PolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserCredId {
            get {
                return this.UserCredIdField;
            }
            set {
                if ((this.UserCredIdField.Equals(value) != true)) {
                    this.UserCredIdField = value;
                    this.RaisePropertyChanged("UserCredId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncomingPament", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class IncomingPament : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayedCoverage", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class DisplayedCoverage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CoverageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGlobalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CoverageID {
            get {
                return this.CoverageIDField;
            }
            set {
                if ((this.CoverageIDField.Equals(value) != true)) {
                    this.CoverageIDField = value;
                    this.RaisePropertyChanged("CoverageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGlobal {
            get {
                return this.IsGlobalField;
            }
            set {
                if ((this.IsGlobalField.Equals(value) != true)) {
                    this.IsGlobalField = value;
                    this.RaisePropertyChanged("IsGlobal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoverageNickName", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class CoverageNickName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CarrierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CoverageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGlobalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CarrierID {
            get {
                return this.CarrierIDField;
            }
            set {
                if ((this.CarrierIDField.Equals(value) != true)) {
                    this.CarrierIDField = value;
                    this.RaisePropertyChanged("CarrierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CoverageID {
            get {
                return this.CoverageIDField;
            }
            set {
                if ((this.CoverageIDField.Equals(value) != true)) {
                    this.CoverageIDField = value;
                    this.RaisePropertyChanged("CoverageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGlobal {
            get {
                return this.IsGlobalField;
            }
            set {
                if ((this.IsGlobalField.Equals(value) != true)) {
                    this.IsGlobalField = value;
                    this.RaisePropertyChanged("IsGlobal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseeVariableInputDetail", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class LicenseeVariableInputDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.ExportBatchFile BatchFileInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<System.Guid> LicenseesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string selectedInvoiceMonthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ExportBatchFile BatchFileInfo {
            get {
                return this.BatchFileInfoField;
            }
            set {
                if ((this.BatchFileInfoField.Equals(value) != true)) {
                    this.BatchFileInfoField = value;
                    this.RaisePropertyChanged("BatchFileInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> Licensees {
            get {
                return this.LicenseesField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseesField, value) != true)) {
                    this.LicenseesField = value;
                    this.RaisePropertyChanged("Licensees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string selectedInvoiceMonth {
            get {
                return this.selectedInvoiceMonthField;
            }
            set {
                if ((object.ReferenceEquals(this.selectedInvoiceMonthField, value) != true)) {
                    this.selectedInvoiceMonthField = value;
                    this.RaisePropertyChanged("selectedInvoiceMonth");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExportBatchFile", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    public enum ExportBatchFile : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportCardPayee = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportCheckPayee = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Refresh = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseeVariableOutputDetail", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class LicenseeVariableOutputDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAgencyVault.VM.MyAgencyVaultSvc.ExportBatchFile BatchFileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<System.Guid, MyAgencyVault.VM.MyAgencyVaultSvc.VariableCollection> LicenseesValueDictionaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ExportBatchFile BatchFileType {
            get {
                return this.BatchFileTypeField;
            }
            set {
                if ((this.BatchFileTypeField.Equals(value) != true)) {
                    this.BatchFileTypeField = value;
                    this.RaisePropertyChanged("BatchFileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<System.Guid, MyAgencyVault.VM.MyAgencyVaultSvc.VariableCollection> LicenseesValueDictionary {
            get {
                return this.LicenseesValueDictionaryField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseesValueDictionaryField, value) != true)) {
                    this.LicenseesValueDictionaryField = value;
                    this.RaisePropertyChanged("LicenseesValueDictionary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VariableCollection", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class VariableCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayorsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PolicyCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceCharge> ServiceChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackableMonthCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnbilledAdjustmentCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnbilledEDICountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnbilledEntrieCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnbilledTrackableMonthCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnbilledWebStatementCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsersCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayorsCount {
            get {
                return this.PayorsCountField;
            }
            set {
                if ((this.PayorsCountField.Equals(value) != true)) {
                    this.PayorsCountField = value;
                    this.RaisePropertyChanged("PayorsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PolicyCount {
            get {
                return this.PolicyCountField;
            }
            set {
                if ((this.PolicyCountField.Equals(value) != true)) {
                    this.PolicyCountField = value;
                    this.RaisePropertyChanged("PolicyCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceCharge> ServiceCharges {
            get {
                return this.ServiceChargesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceChargesField, value) != true)) {
                    this.ServiceChargesField = value;
                    this.RaisePropertyChanged("ServiceCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrackableMonthCount {
            get {
                return this.TrackableMonthCountField;
            }
            set {
                if ((this.TrackableMonthCountField.Equals(value) != true)) {
                    this.TrackableMonthCountField = value;
                    this.RaisePropertyChanged("TrackableMonthCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnbilledAdjustmentCount {
            get {
                return this.UnbilledAdjustmentCountField;
            }
            set {
                if ((this.UnbilledAdjustmentCountField.Equals(value) != true)) {
                    this.UnbilledAdjustmentCountField = value;
                    this.RaisePropertyChanged("UnbilledAdjustmentCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnbilledEDICount {
            get {
                return this.UnbilledEDICountField;
            }
            set {
                if ((this.UnbilledEDICountField.Equals(value) != true)) {
                    this.UnbilledEDICountField = value;
                    this.RaisePropertyChanged("UnbilledEDICount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnbilledEntrieCount {
            get {
                return this.UnbilledEntrieCountField;
            }
            set {
                if ((this.UnbilledEntrieCountField.Equals(value) != true)) {
                    this.UnbilledEntrieCountField = value;
                    this.RaisePropertyChanged("UnbilledEntrieCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnbilledTrackableMonthCount {
            get {
                return this.UnbilledTrackableMonthCountField;
            }
            set {
                if ((this.UnbilledTrackableMonthCountField.Equals(value) != true)) {
                    this.UnbilledTrackableMonthCountField = value;
                    this.RaisePropertyChanged("UnbilledTrackableMonthCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnbilledWebStatementCount {
            get {
                return this.UnbilledWebStatementCountField;
            }
            set {
                if ((this.UnbilledWebStatementCountField.Equals(value) != true)) {
                    this.UnbilledWebStatementCountField = value;
                    this.RaisePropertyChanged("UnbilledWebStatementCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsersCount {
            get {
                return this.UsersCountField;
            }
            set {
                if ((this.UsersCountField.Equals(value) != true)) {
                    this.UsersCountField = value;
                    this.RaisePropertyChanged("UsersCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceCharge", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ServiceCharge : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Charge {
            get {
                return this.ChargeField;
            }
            set {
                if ((this.ChargeField.Equals(value) != true)) {
                    this.ChargeField = value;
                    this.RaisePropertyChanged("Charge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExportCardPayeeInfo", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ExportCardPayeeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorizationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankABARoutingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditCardExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditCardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountField, value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationCode {
            get {
                return this.AuthorizationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationCodeField, value) != true)) {
                    this.AuthorizationCodeField = value;
                    this.RaisePropertyChanged("AuthorizationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankABARoutingCode {
            get {
                return this.BankABARoutingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankABARoutingCodeField, value) != true)) {
                    this.BankABARoutingCodeField = value;
                    this.RaisePropertyChanged("BankABARoutingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccountNumber {
            get {
                return this.BankAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccountNumberField, value) != true)) {
                    this.BankAccountNumberField = value;
                    this.RaisePropertyChanged("BankAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccountType {
            get {
                return this.BankAccountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccountTypeField, value) != true)) {
                    this.BankAccountTypeField = value;
                    this.RaisePropertyChanged("BankAccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankName {
            get {
                return this.BankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankNameField, value) != true)) {
                    this.BankNameField = value;
                    this.RaisePropertyChanged("BankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCardExpirationDate {
            get {
                return this.CreditCardExpirationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCardExpirationDateField, value) != true)) {
                    this.CreditCardExpirationDateField = value;
                    this.RaisePropertyChanged("CreditCardExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCardNumber {
            get {
                return this.CreditCardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCardNumberField, value) != true)) {
                    this.CreditCardNumberField = value;
                    this.RaisePropertyChanged("CreditCardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerAddress {
            get {
                return this.CustomerAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerAddressField, value) != true)) {
                    this.CustomerAddressField = value;
                    this.RaisePropertyChanged("CustomerAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCity {
            get {
                return this.CustomerCityField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCityField, value) != true)) {
                    this.CustomerCityField = value;
                    this.RaisePropertyChanged("CustomerCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCompany {
            get {
                return this.CustomerCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCompanyField, value) != true)) {
                    this.CustomerCompanyField = value;
                    this.RaisePropertyChanged("CustomerCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerEmail {
            get {
                return this.CustomerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerEmailField, value) != true)) {
                    this.CustomerEmailField = value;
                    this.RaisePropertyChanged("CustomerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerFax {
            get {
                return this.CustomerFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerFaxField, value) != true)) {
                    this.CustomerFaxField = value;
                    this.RaisePropertyChanged("CustomerFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerFirstName {
            get {
                return this.CustomerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerFirstNameField, value) != true)) {
                    this.CustomerFirstNameField = value;
                    this.RaisePropertyChanged("CustomerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerLastName {
            get {
                return this.CustomerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerLastNameField, value) != true)) {
                    this.CustomerLastNameField = value;
                    this.RaisePropertyChanged("CustomerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerPhone {
            get {
                return this.CustomerPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerPhoneField, value) != true)) {
                    this.CustomerPhoneField = value;
                    this.RaisePropertyChanged("CustomerPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerState {
            get {
                return this.CustomerStateField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerStateField, value) != true)) {
                    this.CustomerStateField = value;
                    this.RaisePropertyChanged("CustomerState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerZIP {
            get {
                return this.CustomerZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerZIPField, value) != true)) {
                    this.CustomerZIPField = value;
                    this.RaisePropertyChanged("CustomerZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumber {
            get {
                return this.InvoiceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumberField, value) != true)) {
                    this.InvoiceNumberField = value;
                    this.RaisePropertyChanged("InvoiceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentMethod {
            get {
                return this.PaymentMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentMethodField, value) != true)) {
                    this.PaymentMethodField = value;
                    this.RaisePropertyChanged("PaymentMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIDField, value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionType {
            get {
                return this.TransactionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionTypeField, value) != true)) {
                    this.TransactionTypeField = value;
                    this.RaisePropertyChanged("TransactionType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Report", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class Report : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayeeStatementReport", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PayeeStatementReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatcheIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsZeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportNamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentIds {
            get {
                return this.AgentIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentIdsField, value) != true)) {
                    this.AgentIdsField = value;
                    this.RaisePropertyChanged("AgentIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatcheIds {
            get {
                return this.BatcheIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.BatcheIdsField, value) != true)) {
                    this.BatcheIdsField = value;
                    this.RaisePropertyChanged("BatcheIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSubTotal {
            get {
                return this.IsSubTotalField;
            }
            set {
                if ((this.IsSubTotalField.Equals(value) != true)) {
                    this.IsSubTotalField = value;
                    this.RaisePropertyChanged("IsSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsZero {
            get {
                return this.IsZeroField;
            }
            set {
                if ((this.IsZeroField.Equals(value) != true)) {
                    this.IsZeroField = value;
                    this.RaisePropertyChanged("IsZero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentTypeField, value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ReportId {
            get {
                return this.ReportIdField;
            }
            set {
                if ((this.ReportIdField.Equals(value) != true)) {
                    this.ReportIdField = value;
                    this.RaisePropertyChanged("ReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportNames {
            get {
                return this.ReportNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportNamesField, value) != true)) {
                    this.ReportNamesField = value;
                    this.RaisePropertyChanged("ReportNames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrintReportOutput", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PrintReportOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowPaidPopupField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds {
            get {
                return this.BatchIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchIdsField, value) != true)) {
                    this.BatchIdsField = value;
                    this.RaisePropertyChanged("BatchIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowPaidPopup {
            get {
                return this.ShowPaidPopupField;
            }
            set {
                if ((this.ShowPaidPopupField.Equals(value) != true)) {
                    this.ShowPaidPopupField = value;
                    this.RaisePropertyChanged("ShowPaidPopup");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditReport", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class AuditReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilterByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FromInvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ToInvoiceDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentIds {
            get {
                return this.AgentIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentIdsField, value) != true)) {
                    this.AgentIdsField = value;
                    this.RaisePropertyChanged("AgentIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilterBy {
            get {
                return this.FilterByField;
            }
            set {
                if ((this.FilterByField.Equals(value) != true)) {
                    this.FilterByField = value;
                    this.RaisePropertyChanged("FilterBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FromInvoiceDate {
            get {
                return this.FromInvoiceDateField;
            }
            set {
                if ((this.FromInvoiceDateField.Equals(value) != true)) {
                    this.FromInvoiceDateField = value;
                    this.RaisePropertyChanged("FromInvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorIds {
            get {
                return this.PayorIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorIdsField, value) != true)) {
                    this.PayorIdsField = value;
                    this.RaisePropertyChanged("PayorIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ReportId {
            get {
                return this.ReportIdField;
            }
            set {
                if ((this.ReportIdField.Equals(value) != true)) {
                    this.ReportIdField = value;
                    this.RaisePropertyChanged("ReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportNames {
            get {
                return this.ReportNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportNamesField, value) != true)) {
                    this.ReportNamesField = value;
                    this.RaisePropertyChanged("ReportNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ToInvoiceDate {
            get {
                return this.ToInvoiceDateField;
            }
            set {
                if ((this.ToInvoiceDateField.Equals(value) != true)) {
                    this.ToInvoiceDateField = value;
                    this.RaisePropertyChanged("ToInvoiceDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManagementReport", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ManagementReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BeginEligibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BeginEnrolledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BeginPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EffectiveMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EndEligibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EndEnrolledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EndPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FromEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FromTermDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FromTrackDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTermReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ToEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ToTermDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ToTrackDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackPaymentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentIds {
            get {
                return this.AgentIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentIdsField, value) != true)) {
                    this.AgentIdsField = value;
                    this.RaisePropertyChanged("AgentIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BeginEligible {
            get {
                return this.BeginEligibleField;
            }
            set {
                if ((this.BeginEligibleField.Equals(value) != true)) {
                    this.BeginEligibleField = value;
                    this.RaisePropertyChanged("BeginEligible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BeginEnrolled {
            get {
                return this.BeginEnrolledField;
            }
            set {
                if ((this.BeginEnrolledField.Equals(value) != true)) {
                    this.BeginEnrolledField = value;
                    this.RaisePropertyChanged("BeginEnrolled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> BeginPremium {
            get {
                return this.BeginPremiumField;
            }
            set {
                if ((this.BeginPremiumField.Equals(value) != true)) {
                    this.BeginPremiumField = value;
                    this.RaisePropertyChanged("BeginPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierIds {
            get {
                return this.CarrierIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierIdsField, value) != true)) {
                    this.CarrierIdsField = value;
                    this.RaisePropertyChanged("CarrierIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EffectiveMonth {
            get {
                return this.EffectiveMonthField;
            }
            set {
                if ((this.EffectiveMonthField.Equals(value) != true)) {
                    this.EffectiveMonthField = value;
                    this.RaisePropertyChanged("EffectiveMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EndEligible {
            get {
                return this.EndEligibleField;
            }
            set {
                if ((this.EndEligibleField.Equals(value) != true)) {
                    this.EndEligibleField = value;
                    this.RaisePropertyChanged("EndEligible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EndEnrolled {
            get {
                return this.EndEnrolledField;
            }
            set {
                if ((this.EndEnrolledField.Equals(value) != true)) {
                    this.EndEnrolledField = value;
                    this.RaisePropertyChanged("EndEnrolled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EndPremium {
            get {
                return this.EndPremiumField;
            }
            set {
                if ((this.EndPremiumField.Equals(value) != true)) {
                    this.EndPremiumField = value;
                    this.RaisePropertyChanged("EndPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FromEffectiveDate {
            get {
                return this.FromEffectiveDateField;
            }
            set {
                if ((this.FromEffectiveDateField.Equals(value) != true)) {
                    this.FromEffectiveDateField = value;
                    this.RaisePropertyChanged("FromEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FromTermDate {
            get {
                return this.FromTermDateField;
            }
            set {
                if ((this.FromTermDateField.Equals(value) != true)) {
                    this.FromTermDateField = value;
                    this.RaisePropertyChanged("FromTermDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FromTrackDate {
            get {
                return this.FromTrackDateField;
            }
            set {
                if ((this.FromTrackDateField.Equals(value) != true)) {
                    this.FromTrackDateField = value;
                    this.RaisePropertyChanged("FromTrackDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceFrom {
            get {
                return this.InvoiceFromField;
            }
            set {
                if ((this.InvoiceFromField.Equals(value) != true)) {
                    this.InvoiceFromField = value;
                    this.RaisePropertyChanged("InvoiceFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceTo {
            get {
                return this.InvoiceToField;
            }
            set {
                if ((this.InvoiceToField.Equals(value) != true)) {
                    this.InvoiceToField = value;
                    this.RaisePropertyChanged("InvoiceTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseeId {
            get {
                return this.LicenseeIdField;
            }
            set {
                if ((this.LicenseeIdField.Equals(value) != true)) {
                    this.LicenseeIdField = value;
                    this.RaisePropertyChanged("LicenseeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorIds {
            get {
                return this.PayorIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorIdsField, value) != true)) {
                    this.PayorIdsField = value;
                    this.RaisePropertyChanged("PayorIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyMode {
            get {
                return this.PolicyModeField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyModeField, value) != true)) {
                    this.PolicyModeField = value;
                    this.RaisePropertyChanged("PolicyMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyTermReason {
            get {
                return this.PolicyTermReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTermReasonField, value) != true)) {
                    this.PolicyTermReasonField = value;
                    this.RaisePropertyChanged("PolicyTermReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyType {
            get {
                return this.PolicyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTypeField, value) != true)) {
                    this.PolicyTypeField = value;
                    this.RaisePropertyChanged("PolicyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductIds {
            get {
                return this.ProductIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIdsField, value) != true)) {
                    this.ProductIdsField = value;
                    this.RaisePropertyChanged("ProductIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ReportId {
            get {
                return this.ReportIdField;
            }
            set {
                if ((this.ReportIdField.Equals(value) != true)) {
                    this.ReportIdField = value;
                    this.RaisePropertyChanged("ReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportNames {
            get {
                return this.ReportNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportNamesField, value) != true)) {
                    this.ReportNamesField = value;
                    this.RaisePropertyChanged("ReportNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ToEffectiveDate {
            get {
                return this.ToEffectiveDateField;
            }
            set {
                if ((this.ToEffectiveDateField.Equals(value) != true)) {
                    this.ToEffectiveDateField = value;
                    this.RaisePropertyChanged("ToEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ToTermDate {
            get {
                return this.ToTermDateField;
            }
            set {
                if ((this.ToTermDateField.Equals(value) != true)) {
                    this.ToTermDateField = value;
                    this.RaisePropertyChanged("ToTermDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ToTrackDate {
            get {
                return this.ToTrackDateField;
            }
            set {
                if ((this.ToTrackDateField.Equals(value) != true)) {
                    this.ToTrackDateField = value;
                    this.RaisePropertyChanged("ToTrackDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackPayment {
            get {
                return this.TrackPaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackPaymentField, value) != true)) {
                    this.TrackPaymentField = value;
                    this.RaisePropertyChanged("TrackPayment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayorTemplate", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class PayorTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataStartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastRowSkipCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.MappedField> MappedFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SheetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XlsColumnListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataStartIndex {
            get {
                return this.DataStartIndexField;
            }
            set {
                if ((this.DataStartIndexField.Equals(value) != true)) {
                    this.DataStartIndexField = value;
                    this.RaisePropertyChanged("DataStartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastRowSkipCount {
            get {
                return this.LastRowSkipCountField;
            }
            set {
                if ((this.LastRowSkipCountField.Equals(value) != true)) {
                    this.LastRowSkipCountField = value;
                    this.RaisePropertyChanged("LastRowSkipCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.MappedField> MappedFields {
            get {
                return this.MappedFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.MappedFieldsField, value) != true)) {
                    this.MappedFieldsField = value;
                    this.RaisePropertyChanged("MappedFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorId {
            get {
                return this.PayorIdField;
            }
            set {
                if ((this.PayorIdField.Equals(value) != true)) {
                    this.PayorIdField = value;
                    this.RaisePropertyChanged("PayorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SheetName {
            get {
                return this.SheetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SheetNameField, value) != true)) {
                    this.SheetNameField = value;
                    this.RaisePropertyChanged("SheetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XlsColumnList {
            get {
                return this.XlsColumnListField;
            }
            set {
                if ((object.ReferenceEquals(this.XlsColumnListField, value) != true)) {
                    this.XlsColumnListField = value;
                    this.RaisePropertyChanged("XlsColumnList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MappedField", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class MappedField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DBFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcelFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcelFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DBField {
            get {
                return this.DBFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.DBFieldField, value) != true)) {
                    this.DBFieldField = value;
                    this.RaisePropertyChanged("DBField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelField {
            get {
                return this.ExcelFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelFieldField, value) != true)) {
                    this.ExcelFieldField = value;
                    this.RaisePropertyChanged("ExcelField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelFieldName {
            get {
                return this.ExcelFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelFieldNameField, value) != true)) {
                    this.ExcelFieldNameField = value;
                    this.RaisePropertyChanged("ExcelFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Format {
            get {
                return this.FormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatField, value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportToolPayorPhrase", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ImportToolPayorPhrase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixedColLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixedRowLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorPhrasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativeColLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativeRowLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativeSearchTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TemplateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> intPhraseCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileFormat {
            get {
                return this.FileFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FileFormatField, value) != true)) {
                    this.FileFormatField = value;
                    this.RaisePropertyChanged("FileFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FixedColLocation {
            get {
                return this.FixedColLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedColLocationField, value) != true)) {
                    this.FixedColLocationField = value;
                    this.RaisePropertyChanged("FixedColLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FixedRowLocation {
            get {
                return this.FixedRowLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedRowLocationField, value) != true)) {
                    this.FixedRowLocationField = value;
                    this.RaisePropertyChanged("FixedRowLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorName {
            get {
                return this.PayorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNameField, value) != true)) {
                    this.PayorNameField = value;
                    this.RaisePropertyChanged("PayorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorPhrases {
            get {
                return this.PayorPhrasesField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorPhrasesField, value) != true)) {
                    this.PayorPhrasesField = value;
                    this.RaisePropertyChanged("PayorPhrases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativeColLocation {
            get {
                return this.RelativeColLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativeColLocationField, value) != true)) {
                    this.RelativeColLocationField = value;
                    this.RaisePropertyChanged("RelativeColLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativeRowLocation {
            get {
                return this.RelativeRowLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativeRowLocationField, value) != true)) {
                    this.RelativeRowLocationField = value;
                    this.RaisePropertyChanged("RelativeRowLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativeSearchText {
            get {
                return this.RelativeSearchTextField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativeSearchTextField, value) != true)) {
                    this.RelativeSearchTextField = value;
                    this.RaisePropertyChanged("RelativeSearchText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateName {
            get {
                return this.TemplateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateNameField, value) != true)) {
                    this.TemplateNameField = value;
                    this.RaisePropertyChanged("TemplateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> intPhraseCount {
            get {
                return this.intPhraseCountField;
            }
            set {
                if ((this.intPhraseCountField.Equals(value) != true)) {
                    this.intPhraseCountField = value;
                    this.RaisePropertyChanged("intPhraseCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportToolStatementDataSettings", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ImportToolStatementDataSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlankFieldsIndicatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixedColLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixedRowLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsBlankFieldsIndicatorAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MasterStatementDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativeColLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativeRowLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativeSearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TemplateIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlankFieldsIndicator {
            get {
                return this.BlankFieldsIndicatorField;
            }
            set {
                if ((object.ReferenceEquals(this.BlankFieldsIndicatorField, value) != true)) {
                    this.BlankFieldsIndicatorField = value;
                    this.RaisePropertyChanged("BlankFieldsIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FixedColLocation {
            get {
                return this.FixedColLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedColLocationField, value) != true)) {
                    this.FixedColLocationField = value;
                    this.RaisePropertyChanged("FixedColLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FixedRowLocation {
            get {
                return this.FixedRowLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedRowLocationField, value) != true)) {
                    this.FixedRowLocationField = value;
                    this.RaisePropertyChanged("FixedRowLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsBlankFieldsIndicatorAvailable {
            get {
                return this.IsBlankFieldsIndicatorAvailableField;
            }
            set {
                if ((this.IsBlankFieldsIndicatorAvailableField.Equals(value) != true)) {
                    this.IsBlankFieldsIndicatorAvailableField = value;
                    this.RaisePropertyChanged("IsBlankFieldsIndicatorAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MasterStatementDataID {
            get {
                return this.MasterStatementDataIDField;
            }
            set {
                if ((this.MasterStatementDataIDField.Equals(value) != true)) {
                    this.MasterStatementDataIDField = value;
                    this.RaisePropertyChanged("MasterStatementDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativeColLocation {
            get {
                return this.RelativeColLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativeColLocationField, value) != true)) {
                    this.RelativeColLocationField = value;
                    this.RaisePropertyChanged("RelativeColLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativeRowLocation {
            get {
                return this.RelativeRowLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativeRowLocationField, value) != true)) {
                    this.RelativeRowLocationField = value;
                    this.RaisePropertyChanged("RelativeRowLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativeSearch {
            get {
                return this.RelativeSearchField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativeSearchField, value) != true)) {
                    this.RelativeSearchField = value;
                    this.RaisePropertyChanged("RelativeSearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MaskFieldTypes", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class MaskFieldTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PTMaskFieldTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PTMaskFieldTypeId {
            get {
                return this.PTMaskFieldTypeIdField;
            }
            set {
                if ((this.PTMaskFieldTypeIdField.Equals(value) != true)) {
                    this.PTMaskFieldTypeIdField = value;
                    this.RaisePropertyChanged("PTMaskFieldTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TranslatorTypes", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class TranslatorTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransID {
            get {
                return this.TransIDField;
            }
            set {
                if ((this.TransIDField.Equals(value) != true)) {
                    this.TransIDField = value;
                    this.RaisePropertyChanged("TransID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportToolPaymentDataFieldsSettings", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ImportToolPaymentDataFieldsSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalculatedFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldsNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixedColLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixedRowLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormulaExpressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderSearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartOfPrimaryKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayorToolAvailableFeildsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayorToolMaskFieldTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativeColLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativeRowLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TemplateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TransIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string selectedPaymentDataEndColValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string selectedPaymentDataEndRowValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string selectedPaymentDataStartColValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string selectedPaymentDataStartRowValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strDefaultTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalculatedFields {
            get {
                return this.CalculatedFieldsField;
            }
            set {
                if ((this.CalculatedFieldsField.Equals(value) != true)) {
                    this.CalculatedFieldsField = value;
                    this.RaisePropertyChanged("CalculatedFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldsID {
            get {
                return this.FieldsIDField;
            }
            set {
                if ((this.FieldsIDField.Equals(value) != true)) {
                    this.FieldsIDField = value;
                    this.RaisePropertyChanged("FieldsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldsName {
            get {
                return this.FieldsNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldsNameField, value) != true)) {
                    this.FieldsNameField = value;
                    this.RaisePropertyChanged("FieldsName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FixedColLocation {
            get {
                return this.FixedColLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedColLocationField, value) != true)) {
                    this.FixedColLocationField = value;
                    this.RaisePropertyChanged("FixedColLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FixedRowLocation {
            get {
                return this.FixedRowLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedRowLocationField, value) != true)) {
                    this.FixedRowLocationField = value;
                    this.RaisePropertyChanged("FixedRowLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormulaExpression {
            get {
                return this.FormulaExpressionField;
            }
            set {
                if ((object.ReferenceEquals(this.FormulaExpressionField, value) != true)) {
                    this.FormulaExpressionField = value;
                    this.RaisePropertyChanged("FormulaExpression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HeaderSearch {
            get {
                return this.HeaderSearchField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderSearchField, value) != true)) {
                    this.HeaderSearchField = value;
                    this.RaisePropertyChanged("HeaderSearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartOfPrimaryKey {
            get {
                return this.PartOfPrimaryKeyField;
            }
            set {
                if ((this.PartOfPrimaryKeyField.Equals(value) != true)) {
                    this.PartOfPrimaryKeyField = value;
                    this.RaisePropertyChanged("PartOfPrimaryKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayorToolAvailableFeildsID {
            get {
                return this.PayorToolAvailableFeildsIDField;
            }
            set {
                if ((this.PayorToolAvailableFeildsIDField.Equals(value) != true)) {
                    this.PayorToolAvailableFeildsIDField = value;
                    this.RaisePropertyChanged("PayorToolAvailableFeildsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayorToolMaskFieldTypeId {
            get {
                return this.PayorToolMaskFieldTypeIdField;
            }
            set {
                if ((this.PayorToolMaskFieldTypeIdField.Equals(value) != true)) {
                    this.PayorToolMaskFieldTypeIdField = value;
                    this.RaisePropertyChanged("PayorToolMaskFieldTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativeColLocation {
            get {
                return this.RelativeColLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativeColLocationField, value) != true)) {
                    this.RelativeColLocationField = value;
                    this.RaisePropertyChanged("RelativeColLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativeRowLocation {
            get {
                return this.RelativeRowLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativeRowLocationField, value) != true)) {
                    this.RelativeRowLocationField = value;
                    this.RaisePropertyChanged("RelativeRowLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TransID {
            get {
                return this.TransIDField;
            }
            set {
                if ((this.TransIDField.Equals(value) != true)) {
                    this.TransIDField = value;
                    this.RaisePropertyChanged("TransID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransName {
            get {
                return this.TransNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TransNameField, value) != true)) {
                    this.TransNameField = value;
                    this.RaisePropertyChanged("TransName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string selectedPaymentDataEndColValue {
            get {
                return this.selectedPaymentDataEndColValueField;
            }
            set {
                if ((object.ReferenceEquals(this.selectedPaymentDataEndColValueField, value) != true)) {
                    this.selectedPaymentDataEndColValueField = value;
                    this.RaisePropertyChanged("selectedPaymentDataEndColValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string selectedPaymentDataEndRowValue {
            get {
                return this.selectedPaymentDataEndRowValueField;
            }
            set {
                if ((object.ReferenceEquals(this.selectedPaymentDataEndRowValueField, value) != true)) {
                    this.selectedPaymentDataEndRowValueField = value;
                    this.RaisePropertyChanged("selectedPaymentDataEndRowValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string selectedPaymentDataStartColValue {
            get {
                return this.selectedPaymentDataStartColValueField;
            }
            set {
                if ((object.ReferenceEquals(this.selectedPaymentDataStartColValueField, value) != true)) {
                    this.selectedPaymentDataStartColValueField = value;
                    this.RaisePropertyChanged("selectedPaymentDataStartColValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string selectedPaymentDataStartRowValue {
            get {
                return this.selectedPaymentDataStartRowValueField;
            }
            set {
                if ((object.ReferenceEquals(this.selectedPaymentDataStartRowValueField, value) != true)) {
                    this.selectedPaymentDataStartRowValueField = value;
                    this.RaisePropertyChanged("selectedPaymentDataStartRowValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strDefaultText {
            get {
                return this.strDefaultTextField;
            }
            set {
                if ((object.ReferenceEquals(this.strDefaultTextField, value) != true)) {
                    this.strDefaultTextField = value;
                    this.RaisePropertyChanged("strDefaultText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportToolSeletedPaymentData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ImportToolSeletedPaymentData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayorToolAvailableFeildsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TemplateIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayorToolAvailableFeildsID {
            get {
                return this.PayorToolAvailableFeildsIDField;
            }
            set {
                if ((this.PayorToolAvailableFeildsIDField.Equals(value) != true)) {
                    this.PayorToolAvailableFeildsIDField = value;
                    this.RaisePropertyChanged("PayorToolAvailableFeildsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayedPayor", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class DisplayedPayor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayorTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorName {
            get {
                return this.PayorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNameField, value) != true)) {
                    this.PayorNameField = value;
                    this.RaisePropertyChanged("PayorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayorTypeID {
            get {
                return this.PayorTypeIDField;
            }
            set {
                if ((this.PayorTypeIDField.Equals(value) != true)) {
                    this.PayorTypeIDField = value;
                    this.RaisePropertyChanged("PayorTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfigDisplayedPayor", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ConfigDisplayedPayor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorName {
            get {
                return this.PayorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNameField, value) != true)) {
                    this.PayorNameField = value;
                    this.RaisePropertyChanged("PayorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingDisplayedPayor", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class SettingDisplayedPayor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGlobalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PayorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGlobal {
            get {
                return this.IsGlobalField;
            }
            set {
                if ((this.IsGlobalField.Equals(value) != true)) {
                    this.IsGlobalField = value;
                    this.RaisePropertyChanged("IsGlobal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PayorID {
            get {
                return this.PayorIDField;
            }
            set {
                if ((this.PayorIDField.Equals(value) != true)) {
                    this.PayorIDField = value;
                    this.RaisePropertyChanged("PayorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayorName {
            get {
                return this.PayorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayorNameField, value) != true)) {
                    this.PayorNameField = value;
                    this.RaisePropertyChanged("PayorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceType {
            get {
                return this.SourceTypeField;
            }
            set {
                if ((this.SourceTypeField.Equals(value) != true)) {
                    this.SourceTypeField = value;
                    this.RaisePropertyChanged("SourceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayBrokerCode", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class DisplayBrokerCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dtCreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dtModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> licenseeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> payorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dtCreatedDate {
            get {
                return this.dtCreatedDateField;
            }
            set {
                if ((this.dtCreatedDateField.Equals(value) != true)) {
                    this.dtCreatedDateField = value;
                    this.RaisePropertyChanged("dtCreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dtModifiedDate {
            get {
                return this.dtModifiedDateField;
            }
            set {
                if ((this.dtModifiedDateField.Equals(value) != true)) {
                    this.dtModifiedDateField = value;
                    this.RaisePropertyChanged("dtModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> licenseeID {
            get {
                return this.licenseeIDField;
            }
            set {
                if ((this.licenseeIDField.Equals(value) != true)) {
                    this.licenseeIDField = value;
                    this.RaisePropertyChanged("licenseeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> payorID {
            get {
                return this.payorIDField;
            }
            set {
                if ((this.payorIDField.Equals(value) != true)) {
                    this.payorIDField = value;
                    this.RaisePropertyChanged("payorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportToolBrokerSetting", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ImportToolBrokerSetting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixedColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixedRowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativeColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativeRowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativeSearchtextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FixedColumns {
            get {
                return this.FixedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedColumnsField, value) != true)) {
                    this.FixedColumnsField = value;
                    this.RaisePropertyChanged("FixedColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FixedRows {
            get {
                return this.FixedRowsField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedRowsField, value) != true)) {
                    this.FixedRowsField = value;
                    this.RaisePropertyChanged("FixedRows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativeColumns {
            get {
                return this.RelativeColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativeColumnsField, value) != true)) {
                    this.RelativeColumnsField = value;
                    this.RaisePropertyChanged("RelativeColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativeRows {
            get {
                return this.RelativeRowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativeRowsField, value) != true)) {
                    this.RelativeRowsField = value;
                    this.RaisePropertyChanged("RelativeRows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativeSearchtext {
            get {
                return this.RelativeSearchtextField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativeSearchtextField, value) != true)) {
                    this.RelativeSearchtextField = value;
                    this.RaisePropertyChanged("RelativeSearchtext");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportToolMasterStatementData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ImportToolMasterStatementData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatementDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatementdataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatementDataType {
            get {
                return this.StatementDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatementDataTypeField, value) != true)) {
                    this.StatementDataTypeField = value;
                    this.RaisePropertyChanged("StatementDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Statementdata {
            get {
                return this.StatementdataField;
            }
            set {
                if ((object.ReferenceEquals(this.StatementdataField, value) != true)) {
                    this.StatementdataField = value;
                    this.RaisePropertyChanged("Statementdata");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportCustomFieldSettings", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
    [System.SerializableAttribute()]
    public partial class ReportCustomFieldSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsModifiableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsModifiable {
            get {
                return this.IsModifiableField;
            }
            set {
                if ((this.IsModifiableField.Equals(value) != true)) {
                    this.IsModifiableField = value;
                    this.RaisePropertyChanged("IsModifiable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComDeptSupport", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class ComDeptSupport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComDeptSupportData", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary.Masters")]
    [System.SerializableAttribute()]
    public partial class ComDeptSupportData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileDate {
            get {
                return this.FileDateField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDateField, value) != true)) {
                    this.FileDateField = value;
                    this.RaisePropertyChanged("FileDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.WcfService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewVersionInfo", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.WcfService")]
    [System.SerializableAttribute()]
    public partial class NewVersionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewVersionRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerURLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewVersionRequired {
            get {
                return this.IsNewVersionRequiredField;
            }
            set {
                if ((this.IsNewVersionRequiredField.Equals(value) != true)) {
                    this.IsNewVersionRequiredField = value;
                    this.RaisePropertyChanged("IsNewVersionRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerURL {
            get {
                return this.ServerURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerURLField, value) != true)) {
                    this.ServerURLField = value;
                    this.RaisePropertyChanged("ServerURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ITestRest")]
    public interface ITestRest {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestRest/GetDataRest", ReplyAction="http://tempuri.org/ITestRest/GetDataRestResponse")]
        string GetDataRest(string s);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITestRest/GetDataRest", ReplyAction="http://tempuri.org/ITestRest/GetDataRestResponse")]
        System.IAsyncResult BeginGetDataRest(string s, System.AsyncCallback callback, object asyncState);
        
        string EndGetDataRest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestRest/ImportPolicyService", ReplyAction="http://tempuri.org/ITestRest/ImportPolicyServiceResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.JSONResponse ImportPolicyService(string PolicyTable, System.Guid LicenseeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITestRest/ImportPolicyService", ReplyAction="http://tempuri.org/ITestRest/ImportPolicyServiceResponse")]
        System.IAsyncResult BeginImportPolicyService(string PolicyTable, System.Guid LicenseeID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.JSONResponse EndImportPolicyService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestRest/GetPayorCarrierList", ReplyAction="http://tempuri.org/ITestRest/GetPayorCarrierListResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ListResponse GetPayorCarrierList(string StartDate, string EndDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITestRest/GetPayorCarrierList", ReplyAction="http://tempuri.org/ITestRest/GetPayorCarrierListResponse")]
        System.IAsyncResult BeginGetPayorCarrierList(string StartDate, string EndDate, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ListResponse EndGetPayorCarrierList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestRest/SaveBenefitUserInfo", ReplyAction="http://tempuri.org/ITestRest/SaveBenefitUserInfoResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.AddUserResponse SaveBenefitUserInfo(string UserDetails, System.Guid LicenseeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITestRest/SaveBenefitUserInfo", ReplyAction="http://tempuri.org/ITestRest/SaveBenefitUserInfoResponse")]
        System.IAsyncResult BeginSaveBenefitUserInfo(string UserDetails, System.Guid LicenseeID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.AddUserResponse EndSaveBenefitUserInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITestRestChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ITestRest, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataRestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataRestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportPolicyServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ImportPolicyServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.JSONResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.JSONResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorCarrierListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorCarrierListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ListResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ListResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveBenefitUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveBenefitUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.AddUserResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.AddUserResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestRestClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ITestRest>, MyAgencyVault.VM.MyAgencyVaultSvc.ITestRest {
        
        private BeginOperationDelegate onBeginGetDataRestDelegate;
        
        private EndOperationDelegate onEndGetDataRestDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataRestCompletedDelegate;
        
        private BeginOperationDelegate onBeginImportPolicyServiceDelegate;
        
        private EndOperationDelegate onEndImportPolicyServiceDelegate;
        
        private System.Threading.SendOrPostCallback onImportPolicyServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorCarrierListDelegate;
        
        private EndOperationDelegate onEndGetPayorCarrierListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorCarrierListCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveBenefitUserInfoDelegate;
        
        private EndOperationDelegate onEndSaveBenefitUserInfoDelegate;
        
        private System.Threading.SendOrPostCallback onSaveBenefitUserInfoCompletedDelegate;
        
        public TestRestClient() {
        }
        
        public TestRestClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestRestClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestRestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestRestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetDataRestCompletedEventArgs> GetDataRestCompleted;
        
        public event System.EventHandler<ImportPolicyServiceCompletedEventArgs> ImportPolicyServiceCompleted;
        
        public event System.EventHandler<GetPayorCarrierListCompletedEventArgs> GetPayorCarrierListCompleted;
        
        public event System.EventHandler<SaveBenefitUserInfoCompletedEventArgs> SaveBenefitUserInfoCompleted;
        
        public string GetDataRest(string s) {
            return base.Channel.GetDataRest(s);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDataRest(string s, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataRest(s, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDataRest(System.IAsyncResult result) {
            return base.Channel.EndGetDataRest(result);
        }
        
        private System.IAsyncResult OnBeginGetDataRest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string s = ((string)(inValues[0]));
            return this.BeginGetDataRest(s, callback, asyncState);
        }
        
        private object[] OnEndGetDataRest(System.IAsyncResult result) {
            string retVal = this.EndGetDataRest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataRestCompleted(object state) {
            if ((this.GetDataRestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataRestCompleted(this, new GetDataRestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataRestAsync(string s) {
            this.GetDataRestAsync(s, null);
        }
        
        public void GetDataRestAsync(string s, object userState) {
            if ((this.onBeginGetDataRestDelegate == null)) {
                this.onBeginGetDataRestDelegate = new BeginOperationDelegate(this.OnBeginGetDataRest);
            }
            if ((this.onEndGetDataRestDelegate == null)) {
                this.onEndGetDataRestDelegate = new EndOperationDelegate(this.OnEndGetDataRest);
            }
            if ((this.onGetDataRestCompletedDelegate == null)) {
                this.onGetDataRestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataRestCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataRestDelegate, new object[] {
                        s}, this.onEndGetDataRestDelegate, this.onGetDataRestCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.JSONResponse ImportPolicyService(string PolicyTable, System.Guid LicenseeID) {
            return base.Channel.ImportPolicyService(PolicyTable, LicenseeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginImportPolicyService(string PolicyTable, System.Guid LicenseeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImportPolicyService(PolicyTable, LicenseeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.JSONResponse EndImportPolicyService(System.IAsyncResult result) {
            return base.Channel.EndImportPolicyService(result);
        }
        
        private System.IAsyncResult OnBeginImportPolicyService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string PolicyTable = ((string)(inValues[0]));
            System.Guid LicenseeID = ((System.Guid)(inValues[1]));
            return this.BeginImportPolicyService(PolicyTable, LicenseeID, callback, asyncState);
        }
        
        private object[] OnEndImportPolicyService(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.JSONResponse retVal = this.EndImportPolicyService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnImportPolicyServiceCompleted(object state) {
            if ((this.ImportPolicyServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImportPolicyServiceCompleted(this, new ImportPolicyServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImportPolicyServiceAsync(string PolicyTable, System.Guid LicenseeID) {
            this.ImportPolicyServiceAsync(PolicyTable, LicenseeID, null);
        }
        
        public void ImportPolicyServiceAsync(string PolicyTable, System.Guid LicenseeID, object userState) {
            if ((this.onBeginImportPolicyServiceDelegate == null)) {
                this.onBeginImportPolicyServiceDelegate = new BeginOperationDelegate(this.OnBeginImportPolicyService);
            }
            if ((this.onEndImportPolicyServiceDelegate == null)) {
                this.onEndImportPolicyServiceDelegate = new EndOperationDelegate(this.OnEndImportPolicyService);
            }
            if ((this.onImportPolicyServiceCompletedDelegate == null)) {
                this.onImportPolicyServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImportPolicyServiceCompleted);
            }
            base.InvokeAsync(this.onBeginImportPolicyServiceDelegate, new object[] {
                        PolicyTable,
                        LicenseeID}, this.onEndImportPolicyServiceDelegate, this.onImportPolicyServiceCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ListResponse GetPayorCarrierList(string StartDate, string EndDate) {
            return base.Channel.GetPayorCarrierList(StartDate, EndDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorCarrierList(string StartDate, string EndDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorCarrierList(StartDate, EndDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ListResponse EndGetPayorCarrierList(System.IAsyncResult result) {
            return base.Channel.EndGetPayorCarrierList(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorCarrierList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string StartDate = ((string)(inValues[0]));
            string EndDate = ((string)(inValues[1]));
            return this.BeginGetPayorCarrierList(StartDate, EndDate, callback, asyncState);
        }
        
        private object[] OnEndGetPayorCarrierList(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ListResponse retVal = this.EndGetPayorCarrierList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorCarrierListCompleted(object state) {
            if ((this.GetPayorCarrierListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorCarrierListCompleted(this, new GetPayorCarrierListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorCarrierListAsync(string StartDate, string EndDate) {
            this.GetPayorCarrierListAsync(StartDate, EndDate, null);
        }
        
        public void GetPayorCarrierListAsync(string StartDate, string EndDate, object userState) {
            if ((this.onBeginGetPayorCarrierListDelegate == null)) {
                this.onBeginGetPayorCarrierListDelegate = new BeginOperationDelegate(this.OnBeginGetPayorCarrierList);
            }
            if ((this.onEndGetPayorCarrierListDelegate == null)) {
                this.onEndGetPayorCarrierListDelegate = new EndOperationDelegate(this.OnEndGetPayorCarrierList);
            }
            if ((this.onGetPayorCarrierListCompletedDelegate == null)) {
                this.onGetPayorCarrierListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorCarrierListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorCarrierListDelegate, new object[] {
                        StartDate,
                        EndDate}, this.onEndGetPayorCarrierListDelegate, this.onGetPayorCarrierListCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.AddUserResponse SaveBenefitUserInfo(string UserDetails, System.Guid LicenseeID) {
            return base.Channel.SaveBenefitUserInfo(UserDetails, LicenseeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveBenefitUserInfo(string UserDetails, System.Guid LicenseeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveBenefitUserInfo(UserDetails, LicenseeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.AddUserResponse EndSaveBenefitUserInfo(System.IAsyncResult result) {
            return base.Channel.EndSaveBenefitUserInfo(result);
        }
        
        private System.IAsyncResult OnBeginSaveBenefitUserInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserDetails = ((string)(inValues[0]));
            System.Guid LicenseeID = ((System.Guid)(inValues[1]));
            return this.BeginSaveBenefitUserInfo(UserDetails, LicenseeID, callback, asyncState);
        }
        
        private object[] OnEndSaveBenefitUserInfo(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.AddUserResponse retVal = this.EndSaveBenefitUserInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveBenefitUserInfoCompleted(object state) {
            if ((this.SaveBenefitUserInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveBenefitUserInfoCompleted(this, new SaveBenefitUserInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveBenefitUserInfoAsync(string UserDetails, System.Guid LicenseeID) {
            this.SaveBenefitUserInfoAsync(UserDetails, LicenseeID, null);
        }
        
        public void SaveBenefitUserInfoAsync(string UserDetails, System.Guid LicenseeID, object userState) {
            if ((this.onBeginSaveBenefitUserInfoDelegate == null)) {
                this.onBeginSaveBenefitUserInfoDelegate = new BeginOperationDelegate(this.OnBeginSaveBenefitUserInfo);
            }
            if ((this.onEndSaveBenefitUserInfoDelegate == null)) {
                this.onEndSaveBenefitUserInfoDelegate = new EndOperationDelegate(this.OnEndSaveBenefitUserInfo);
            }
            if ((this.onSaveBenefitUserInfoCompletedDelegate == null)) {
                this.onSaveBenefitUserInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveBenefitUserInfoCompleted);
            }
            base.InvokeAsync(this.onBeginSaveBenefitUserInfoDelegate, new object[] {
                        UserDetails,
                        LicenseeID}, this.onEndSaveBenefitUserInfoDelegate, this.onSaveBenefitUserInfoCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IStatementDates")]
    public interface IStatementDates {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatementDates/AddUpdateStatementDates", ReplyAction="http://tempuri.org/IStatementDates/AddUpdateStatementDatesResponse")]
        void AddUpdateStatementDates(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatementDates/AddUpdateStatementDates", ReplyAction="http://tempuri.org/IStatementDates/AddUpdateStatementDatesResponse")]
        System.IAsyncResult BeginAddUpdateStatementDates(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateStatementDates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatementDates/DeleteStatementDates", ReplyAction="http://tempuri.org/IStatementDates/DeleteStatementDatesResponse")]
        void DeleteStatementDates(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatementDates/DeleteStatementDates", ReplyAction="http://tempuri.org/IStatementDates/DeleteStatementDatesResponse")]
        System.IAsyncResult BeginDeleteStatementDates(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteStatementDates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatementDates/GetStatementDates", ReplyAction="http://tempuri.org/IStatementDates/GetStatementDatesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> GetStatementDates();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatementDates/GetStatementDates", ReplyAction="http://tempuri.org/IStatementDates/GetStatementDatesResponse")]
        System.IAsyncResult BeginGetStatementDates(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> EndGetStatementDates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatementDates/GetActiveStatementDates", ReplyAction="http://tempuri.org/IStatementDates/GetActiveStatementDatesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> GetActiveStatementDates();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatementDates/GetActiveStatementDates", ReplyAction="http://tempuri.org/IStatementDates/GetActiveStatementDatesResponse")]
        System.IAsyncResult BeginGetActiveStatementDates(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> EndGetActiveStatementDates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatementDates/MarkAsBatchGenerated", ReplyAction="http://tempuri.org/IStatementDates/MarkAsBatchGeneratedResponse")]
        void MarkAsBatchGenerated(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> Dates);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatementDates/MarkAsBatchGenerated", ReplyAction="http://tempuri.org/IStatementDates/MarkAsBatchGeneratedResponse")]
        System.IAsyncResult BeginMarkAsBatchGenerated(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> Dates, System.AsyncCallback callback, object asyncState);
        
        void EndMarkAsBatchGenerated(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStatementDatesChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IStatementDates, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStatementDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatementDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetActiveStatementDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetActiveStatementDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatementDatesClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IStatementDates>, MyAgencyVault.VM.MyAgencyVaultSvc.IStatementDates {
        
        private BeginOperationDelegate onBeginAddUpdateStatementDatesDelegate;
        
        private EndOperationDelegate onEndAddUpdateStatementDatesDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateStatementDatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteStatementDatesDelegate;
        
        private EndOperationDelegate onEndDeleteStatementDatesDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteStatementDatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStatementDatesDelegate;
        
        private EndOperationDelegate onEndGetStatementDatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatementDatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetActiveStatementDatesDelegate;
        
        private EndOperationDelegate onEndGetActiveStatementDatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetActiveStatementDatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarkAsBatchGeneratedDelegate;
        
        private EndOperationDelegate onEndMarkAsBatchGeneratedDelegate;
        
        private System.Threading.SendOrPostCallback onMarkAsBatchGeneratedCompletedDelegate;
        
        public StatementDatesClient() {
        }
        
        public StatementDatesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatementDatesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatementDatesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatementDatesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateStatementDatesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteStatementDatesCompleted;
        
        public event System.EventHandler<GetStatementDatesCompletedEventArgs> GetStatementDatesCompleted;
        
        public event System.EventHandler<GetActiveStatementDatesCompletedEventArgs> GetActiveStatementDatesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MarkAsBatchGeneratedCompleted;
        
        public void AddUpdateStatementDates(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate) {
            base.Channel.AddUpdateStatementDates(StatementDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateStatementDates(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateStatementDates(StatementDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateStatementDates(System.IAsyncResult result) {
            base.Channel.EndAddUpdateStatementDates(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateStatementDates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate = ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates>)(inValues[0]));
            return this.BeginAddUpdateStatementDates(StatementDate, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateStatementDates(System.IAsyncResult result) {
            this.EndAddUpdateStatementDates(result);
            return null;
        }
        
        private void OnAddUpdateStatementDatesCompleted(object state) {
            if ((this.AddUpdateStatementDatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateStatementDatesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateStatementDatesAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate) {
            this.AddUpdateStatementDatesAsync(StatementDate, null);
        }
        
        public void AddUpdateStatementDatesAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate, object userState) {
            if ((this.onBeginAddUpdateStatementDatesDelegate == null)) {
                this.onBeginAddUpdateStatementDatesDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateStatementDates);
            }
            if ((this.onEndAddUpdateStatementDatesDelegate == null)) {
                this.onEndAddUpdateStatementDatesDelegate = new EndOperationDelegate(this.OnEndAddUpdateStatementDates);
            }
            if ((this.onAddUpdateStatementDatesCompletedDelegate == null)) {
                this.onAddUpdateStatementDatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateStatementDatesCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateStatementDatesDelegate, new object[] {
                        StatementDate}, this.onEndAddUpdateStatementDatesDelegate, this.onAddUpdateStatementDatesCompletedDelegate, userState);
        }
        
        public void DeleteStatementDates(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate) {
            base.Channel.DeleteStatementDates(StatementDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteStatementDates(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteStatementDates(StatementDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteStatementDates(System.IAsyncResult result) {
            base.Channel.EndDeleteStatementDates(result);
        }
        
        private System.IAsyncResult OnBeginDeleteStatementDates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate = ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates>)(inValues[0]));
            return this.BeginDeleteStatementDates(StatementDate, callback, asyncState);
        }
        
        private object[] OnEndDeleteStatementDates(System.IAsyncResult result) {
            this.EndDeleteStatementDates(result);
            return null;
        }
        
        private void OnDeleteStatementDatesCompleted(object state) {
            if ((this.DeleteStatementDatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteStatementDatesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteStatementDatesAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate) {
            this.DeleteStatementDatesAsync(StatementDate, null);
        }
        
        public void DeleteStatementDatesAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> StatementDate, object userState) {
            if ((this.onBeginDeleteStatementDatesDelegate == null)) {
                this.onBeginDeleteStatementDatesDelegate = new BeginOperationDelegate(this.OnBeginDeleteStatementDates);
            }
            if ((this.onEndDeleteStatementDatesDelegate == null)) {
                this.onEndDeleteStatementDatesDelegate = new EndOperationDelegate(this.OnEndDeleteStatementDates);
            }
            if ((this.onDeleteStatementDatesCompletedDelegate == null)) {
                this.onDeleteStatementDatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteStatementDatesCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteStatementDatesDelegate, new object[] {
                        StatementDate}, this.onEndDeleteStatementDatesDelegate, this.onDeleteStatementDatesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> GetStatementDates() {
            return base.Channel.GetStatementDates();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStatementDates(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStatementDates(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> EndGetStatementDates(System.IAsyncResult result) {
            return base.Channel.EndGetStatementDates(result);
        }
        
        private System.IAsyncResult OnBeginGetStatementDates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetStatementDates(callback, asyncState);
        }
        
        private object[] OnEndGetStatementDates(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> retVal = this.EndGetStatementDates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatementDatesCompleted(object state) {
            if ((this.GetStatementDatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatementDatesCompleted(this, new GetStatementDatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatementDatesAsync() {
            this.GetStatementDatesAsync(null);
        }
        
        public void GetStatementDatesAsync(object userState) {
            if ((this.onBeginGetStatementDatesDelegate == null)) {
                this.onBeginGetStatementDatesDelegate = new BeginOperationDelegate(this.OnBeginGetStatementDates);
            }
            if ((this.onEndGetStatementDatesDelegate == null)) {
                this.onEndGetStatementDatesDelegate = new EndOperationDelegate(this.OnEndGetStatementDates);
            }
            if ((this.onGetStatementDatesCompletedDelegate == null)) {
                this.onGetStatementDatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatementDatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatementDatesDelegate, null, this.onEndGetStatementDatesDelegate, this.onGetStatementDatesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> GetActiveStatementDates() {
            return base.Channel.GetActiveStatementDates();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetActiveStatementDates(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetActiveStatementDates(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> EndGetActiveStatementDates(System.IAsyncResult result) {
            return base.Channel.EndGetActiveStatementDates(result);
        }
        
        private System.IAsyncResult OnBeginGetActiveStatementDates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetActiveStatementDates(callback, asyncState);
        }
        
        private object[] OnEndGetActiveStatementDates(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> retVal = this.EndGetActiveStatementDates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetActiveStatementDatesCompleted(object state) {
            if ((this.GetActiveStatementDatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetActiveStatementDatesCompleted(this, new GetActiveStatementDatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetActiveStatementDatesAsync() {
            this.GetActiveStatementDatesAsync(null);
        }
        
        public void GetActiveStatementDatesAsync(object userState) {
            if ((this.onBeginGetActiveStatementDatesDelegate == null)) {
                this.onBeginGetActiveStatementDatesDelegate = new BeginOperationDelegate(this.OnBeginGetActiveStatementDates);
            }
            if ((this.onEndGetActiveStatementDatesDelegate == null)) {
                this.onEndGetActiveStatementDatesDelegate = new EndOperationDelegate(this.OnEndGetActiveStatementDates);
            }
            if ((this.onGetActiveStatementDatesCompletedDelegate == null)) {
                this.onGetActiveStatementDatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetActiveStatementDatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetActiveStatementDatesDelegate, null, this.onEndGetActiveStatementDatesDelegate, this.onGetActiveStatementDatesCompletedDelegate, userState);
        }
        
        public void MarkAsBatchGenerated(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> Dates) {
            base.Channel.MarkAsBatchGenerated(Dates);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMarkAsBatchGenerated(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> Dates, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarkAsBatchGenerated(Dates, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndMarkAsBatchGenerated(System.IAsyncResult result) {
            base.Channel.EndMarkAsBatchGenerated(result);
        }
        
        private System.IAsyncResult OnBeginMarkAsBatchGenerated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> Dates = ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates>)(inValues[0]));
            return this.BeginMarkAsBatchGenerated(Dates, callback, asyncState);
        }
        
        private object[] OnEndMarkAsBatchGenerated(System.IAsyncResult result) {
            this.EndMarkAsBatchGenerated(result);
            return null;
        }
        
        private void OnMarkAsBatchGeneratedCompleted(object state) {
            if ((this.MarkAsBatchGeneratedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarkAsBatchGeneratedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarkAsBatchGeneratedAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> Dates) {
            this.MarkAsBatchGeneratedAsync(Dates, null);
        }
        
        public void MarkAsBatchGeneratedAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.StatementDates> Dates, object userState) {
            if ((this.onBeginMarkAsBatchGeneratedDelegate == null)) {
                this.onBeginMarkAsBatchGeneratedDelegate = new BeginOperationDelegate(this.OnBeginMarkAsBatchGenerated);
            }
            if ((this.onEndMarkAsBatchGeneratedDelegate == null)) {
                this.onEndMarkAsBatchGeneratedDelegate = new EndOperationDelegate(this.OnEndMarkAsBatchGenerated);
            }
            if ((this.onMarkAsBatchGeneratedCompletedDelegate == null)) {
                this.onMarkAsBatchGeneratedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarkAsBatchGeneratedCompleted);
            }
            base.InvokeAsync(this.onBeginMarkAsBatchGeneratedDelegate, new object[] {
                        Dates}, this.onEndMarkAsBatchGeneratedDelegate, this.onMarkAsBatchGeneratedCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IIssueResults")]
    public interface IIssueResults {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIssueResults/GetResults", ReplyAction="http://tempuri.org/IIssueResults/GetResultsResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults GetResults(int ResultsID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIssueResults/GetResults", ReplyAction="http://tempuri.org/IIssueResults/GetResultsResponse")]
        System.IAsyncResult BeginGetResults(int ResultsID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults EndGetResults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIssueResults/GetAllResults", ReplyAction="http://tempuri.org/IIssueResults/GetAllResultsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults> GetAllResults();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIssueResults/GetAllResults", ReplyAction="http://tempuri.org/IIssueResults/GetAllResultsResponse")]
        System.IAsyncResult BeginGetAllResults(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults> EndGetAllResults(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIssueResultsChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IIssueResults, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IssueResultsClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IIssueResults>, MyAgencyVault.VM.MyAgencyVaultSvc.IIssueResults {
        
        private BeginOperationDelegate onBeginGetResultsDelegate;
        
        private EndOperationDelegate onEndGetResultsDelegate;
        
        private System.Threading.SendOrPostCallback onGetResultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllResultsDelegate;
        
        private EndOperationDelegate onEndGetAllResultsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllResultsCompletedDelegate;
        
        public IssueResultsClient() {
        }
        
        public IssueResultsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IssueResultsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IssueResultsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IssueResultsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetResultsCompletedEventArgs> GetResultsCompleted;
        
        public event System.EventHandler<GetAllResultsCompletedEventArgs> GetAllResultsCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults GetResults(int ResultsID) {
            return base.Channel.GetResults(ResultsID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetResults(int ResultsID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetResults(ResultsID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults EndGetResults(System.IAsyncResult result) {
            return base.Channel.EndGetResults(result);
        }
        
        private System.IAsyncResult OnBeginGetResults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ResultsID = ((int)(inValues[0]));
            return this.BeginGetResults(ResultsID, callback, asyncState);
        }
        
        private object[] OnEndGetResults(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults retVal = this.EndGetResults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetResultsCompleted(object state) {
            if ((this.GetResultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResultsCompleted(this, new GetResultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResultsAsync(int ResultsID) {
            this.GetResultsAsync(ResultsID, null);
        }
        
        public void GetResultsAsync(int ResultsID, object userState) {
            if ((this.onBeginGetResultsDelegate == null)) {
                this.onBeginGetResultsDelegate = new BeginOperationDelegate(this.OnBeginGetResults);
            }
            if ((this.onEndGetResultsDelegate == null)) {
                this.onEndGetResultsDelegate = new EndOperationDelegate(this.OnEndGetResults);
            }
            if ((this.onGetResultsCompletedDelegate == null)) {
                this.onGetResultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResultsCompleted);
            }
            base.InvokeAsync(this.onBeginGetResultsDelegate, new object[] {
                        ResultsID}, this.onEndGetResultsDelegate, this.onGetResultsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults> GetAllResults() {
            return base.Channel.GetAllResults();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllResults(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllResults(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults> EndGetAllResults(System.IAsyncResult result) {
            return base.Channel.EndGetAllResults(result);
        }
        
        private System.IAsyncResult OnBeginGetAllResults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllResults(callback, asyncState);
        }
        
        private object[] OnEndGetAllResults(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueResults> retVal = this.EndGetAllResults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllResultsCompleted(object state) {
            if ((this.GetAllResultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllResultsCompleted(this, new GetAllResultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllResultsAsync() {
            this.GetAllResultsAsync(null);
        }
        
        public void GetAllResultsAsync(object userState) {
            if ((this.onBeginGetAllResultsDelegate == null)) {
                this.onBeginGetAllResultsDelegate = new BeginOperationDelegate(this.OnBeginGetAllResults);
            }
            if ((this.onEndGetAllResultsDelegate == null)) {
                this.onEndGetAllResultsDelegate = new EndOperationDelegate(this.OnEndGetAllResults);
            }
            if ((this.onGetAllResultsCompletedDelegate == null)) {
                this.onGetAllResultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllResultsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllResultsDelegate, null, this.onEndGetAllResultsDelegate, this.onGetAllResultsCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IComDeptService")]
    public interface IComDeptService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComDeptService/AddUpdateComDeptService", ReplyAction="http://tempuri.org/IComDeptService/AddUpdateComDeptServiceResponse")]
        void AddUpdateComDeptService(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IComDeptService/AddUpdateComDeptService", ReplyAction="http://tempuri.org/IComDeptService/AddUpdateComDeptServiceResponse")]
        System.IAsyncResult BeginAddUpdateComDeptService(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateComDeptService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComDeptService/DeleteComDeptService", ReplyAction="http://tempuri.org/IComDeptService/DeleteComDeptServiceResponse")]
        void DeleteComDeptService(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IComDeptService/DeleteComDeptService", ReplyAction="http://tempuri.org/IComDeptService/DeleteComDeptServiceResponse")]
        System.IAsyncResult BeginDeleteComDeptService(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteComDeptService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComDeptService/GetComDeptService", ReplyAction="http://tempuri.org/IComDeptService/GetComDeptServiceResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService GetComDeptService();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IComDeptService/GetComDeptService", ReplyAction="http://tempuri.org/IComDeptService/GetComDeptServiceResponse")]
        System.IAsyncResult BeginGetComDeptService(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService EndGetComDeptService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComDeptService/IsValidComDeptService", ReplyAction="http://tempuri.org/IComDeptService/IsValidComDeptServiceResponse")]
        bool IsValidComDeptService(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IComDeptService/IsValidComDeptService", ReplyAction="http://tempuri.org/IComDeptService/IsValidComDeptServiceResponse")]
        System.IAsyncResult BeginIsValidComDeptService(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidComDeptService(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IComDeptServiceChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IComDeptService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetComDeptServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetComDeptServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidComDeptServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidComDeptServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComDeptServiceClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IComDeptService>, MyAgencyVault.VM.MyAgencyVaultSvc.IComDeptService {
        
        private BeginOperationDelegate onBeginAddUpdateComDeptServiceDelegate;
        
        private EndOperationDelegate onEndAddUpdateComDeptServiceDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateComDeptServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteComDeptServiceDelegate;
        
        private EndOperationDelegate onEndDeleteComDeptServiceDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteComDeptServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetComDeptServiceDelegate;
        
        private EndOperationDelegate onEndGetComDeptServiceDelegate;
        
        private System.Threading.SendOrPostCallback onGetComDeptServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidComDeptServiceDelegate;
        
        private EndOperationDelegate onEndIsValidComDeptServiceDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidComDeptServiceCompletedDelegate;
        
        public ComDeptServiceClient() {
        }
        
        public ComDeptServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ComDeptServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComDeptServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComDeptServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateComDeptServiceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteComDeptServiceCompleted;
        
        public event System.EventHandler<GetComDeptServiceCompletedEventArgs> GetComDeptServiceCompleted;
        
        public event System.EventHandler<IsValidComDeptServiceCompletedEventArgs> IsValidComDeptServiceCompleted;
        
        public void AddUpdateComDeptService(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService) {
            base.Channel.AddUpdateComDeptService(ComDptService);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateComDeptService(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateComDeptService(ComDptService, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateComDeptService(System.IAsyncResult result) {
            base.Channel.EndAddUpdateComDeptService(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateComDeptService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService = ((MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService)(inValues[0]));
            return this.BeginAddUpdateComDeptService(ComDptService, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateComDeptService(System.IAsyncResult result) {
            this.EndAddUpdateComDeptService(result);
            return null;
        }
        
        private void OnAddUpdateComDeptServiceCompleted(object state) {
            if ((this.AddUpdateComDeptServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateComDeptServiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateComDeptServiceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService) {
            this.AddUpdateComDeptServiceAsync(ComDptService, null);
        }
        
        public void AddUpdateComDeptServiceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService, object userState) {
            if ((this.onBeginAddUpdateComDeptServiceDelegate == null)) {
                this.onBeginAddUpdateComDeptServiceDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateComDeptService);
            }
            if ((this.onEndAddUpdateComDeptServiceDelegate == null)) {
                this.onEndAddUpdateComDeptServiceDelegate = new EndOperationDelegate(this.OnEndAddUpdateComDeptService);
            }
            if ((this.onAddUpdateComDeptServiceCompletedDelegate == null)) {
                this.onAddUpdateComDeptServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateComDeptServiceCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateComDeptServiceDelegate, new object[] {
                        ComDptService}, this.onEndAddUpdateComDeptServiceDelegate, this.onAddUpdateComDeptServiceCompletedDelegate, userState);
        }
        
        public void DeleteComDeptService(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService) {
            base.Channel.DeleteComDeptService(ComDptService);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteComDeptService(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteComDeptService(ComDptService, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteComDeptService(System.IAsyncResult result) {
            base.Channel.EndDeleteComDeptService(result);
        }
        
        private System.IAsyncResult OnBeginDeleteComDeptService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService = ((MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService)(inValues[0]));
            return this.BeginDeleteComDeptService(ComDptService, callback, asyncState);
        }
        
        private object[] OnEndDeleteComDeptService(System.IAsyncResult result) {
            this.EndDeleteComDeptService(result);
            return null;
        }
        
        private void OnDeleteComDeptServiceCompleted(object state) {
            if ((this.DeleteComDeptServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteComDeptServiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteComDeptServiceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService) {
            this.DeleteComDeptServiceAsync(ComDptService, null);
        }
        
        public void DeleteComDeptServiceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService, object userState) {
            if ((this.onBeginDeleteComDeptServiceDelegate == null)) {
                this.onBeginDeleteComDeptServiceDelegate = new BeginOperationDelegate(this.OnBeginDeleteComDeptService);
            }
            if ((this.onEndDeleteComDeptServiceDelegate == null)) {
                this.onEndDeleteComDeptServiceDelegate = new EndOperationDelegate(this.OnEndDeleteComDeptService);
            }
            if ((this.onDeleteComDeptServiceCompletedDelegate == null)) {
                this.onDeleteComDeptServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteComDeptServiceCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteComDeptServiceDelegate, new object[] {
                        ComDptService}, this.onEndDeleteComDeptServiceDelegate, this.onDeleteComDeptServiceCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService GetComDeptService() {
            return base.Channel.GetComDeptService();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetComDeptService(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetComDeptService(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService EndGetComDeptService(System.IAsyncResult result) {
            return base.Channel.EndGetComDeptService(result);
        }
        
        private System.IAsyncResult OnBeginGetComDeptService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetComDeptService(callback, asyncState);
        }
        
        private object[] OnEndGetComDeptService(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService retVal = this.EndGetComDeptService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetComDeptServiceCompleted(object state) {
            if ((this.GetComDeptServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetComDeptServiceCompleted(this, new GetComDeptServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetComDeptServiceAsync() {
            this.GetComDeptServiceAsync(null);
        }
        
        public void GetComDeptServiceAsync(object userState) {
            if ((this.onBeginGetComDeptServiceDelegate == null)) {
                this.onBeginGetComDeptServiceDelegate = new BeginOperationDelegate(this.OnBeginGetComDeptService);
            }
            if ((this.onEndGetComDeptServiceDelegate == null)) {
                this.onEndGetComDeptServiceDelegate = new EndOperationDelegate(this.OnEndGetComDeptService);
            }
            if ((this.onGetComDeptServiceCompletedDelegate == null)) {
                this.onGetComDeptServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetComDeptServiceCompleted);
            }
            base.InvokeAsync(this.onBeginGetComDeptServiceDelegate, null, this.onEndGetComDeptServiceDelegate, this.onGetComDeptServiceCompletedDelegate, userState);
        }
        
        public bool IsValidComDeptService(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService) {
            return base.Channel.IsValidComDeptService(ComDptService);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidComDeptService(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidComDeptService(ComDptService, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidComDeptService(System.IAsyncResult result) {
            return base.Channel.EndIsValidComDeptService(result);
        }
        
        private System.IAsyncResult OnBeginIsValidComDeptService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService = ((MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService)(inValues[0]));
            return this.BeginIsValidComDeptService(ComDptService, callback, asyncState);
        }
        
        private object[] OnEndIsValidComDeptService(System.IAsyncResult result) {
            bool retVal = this.EndIsValidComDeptService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidComDeptServiceCompleted(object state) {
            if ((this.IsValidComDeptServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidComDeptServiceCompleted(this, new IsValidComDeptServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidComDeptServiceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService) {
            this.IsValidComDeptServiceAsync(ComDptService, null);
        }
        
        public void IsValidComDeptServiceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptService ComDptService, object userState) {
            if ((this.onBeginIsValidComDeptServiceDelegate == null)) {
                this.onBeginIsValidComDeptServiceDelegate = new BeginOperationDelegate(this.OnBeginIsValidComDeptService);
            }
            if ((this.onEndIsValidComDeptServiceDelegate == null)) {
                this.onEndIsValidComDeptServiceDelegate = new EndOperationDelegate(this.OnEndIsValidComDeptService);
            }
            if ((this.onIsValidComDeptServiceCompletedDelegate == null)) {
                this.onIsValidComDeptServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidComDeptServiceCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidComDeptServiceDelegate, new object[] {
                        ComDptService}, this.onEndIsValidComDeptServiceDelegate, this.onIsValidComDeptServiceCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IClient")]
    public interface IClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/AddUpdateClient", ReplyAction="http://tempuri.org/IClient/AddUpdateClientResponse")]
        void AddUpdateClient(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/AddUpdateClient", ReplyAction="http://tempuri.org/IClient/AddUpdateClientResponse")]
        System.IAsyncResult BeginAddUpdateClient(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/DeleteClients", ReplyAction="http://tempuri.org/IClient/DeleteClientsResponse")]
        void DeleteClients(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/DeleteClients", ReplyAction="http://tempuri.org/IClient/DeleteClientsResponse")]
        System.IAsyncResult BeginDeleteClients(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteClients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClient", ReplyAction="http://tempuri.org/IClient/GetClientResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Client GetClient();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/GetClient", ReplyAction="http://tempuri.org/IClient/GetClientResponse")]
        System.IAsyncResult BeginGetClient(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Client EndGetClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/IsValidClient", ReplyAction="http://tempuri.org/IClient/IsValidClientResponse")]
        bool IsValidClient(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/IsValidClient", ReplyAction="http://tempuri.org/IClient/IsValidClientResponse")]
        System.IAsyncResult BeginIsValidClient(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientList", ReplyAction="http://tempuri.org/IClient/GetClientListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> GetClientList(System.Nullable<System.Guid> LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/GetClientList", ReplyAction="http://tempuri.org/IClient/GetClientListResponse")]
        System.IAsyncResult BeginGetClientList(System.Nullable<System.Guid> LicenseeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> EndGetClientList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetRefreshedClientList", ReplyAction="http://tempuri.org/IClient/GetRefreshedClientListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> GetRefreshedClientList(System.Guid LicenseeId, System.Collections.ObjectModel.ObservableCollection<System.Guid> ClientIds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/GetRefreshedClientList", ReplyAction="http://tempuri.org/IClient/GetRefreshedClientListResponse")]
        System.IAsyncResult BeginGetRefreshedClientList(System.Guid LicenseeId, System.Collections.ObjectModel.ObservableCollection<System.Guid> ClientIds, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> EndGetRefreshedClientList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllClientList", ReplyAction="http://tempuri.org/IClient/GetAllClientListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> GetAllClientList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/GetAllClientList", ReplyAction="http://tempuri.org/IClient/GetAllClientListResponse")]
        System.IAsyncResult BeginGetAllClientList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> EndGetAllClientList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientPolicies", ReplyAction="http://tempuri.org/IClient/GetClientPoliciesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> GetClientPolicies(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/GetClientPolicies", ReplyAction="http://tempuri.org/IClient/GetClientPoliciesResponse")]
        System.IAsyncResult BeginGetClientPolicies(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> EndGetClientPolicies(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/CheckClientPolicyIssueExists", ReplyAction="http://tempuri.org/IClient/CheckClientPolicyIssueExistsResponse")]
        bool CheckClientPolicyIssueExists(System.Guid ClientId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/CheckClientPolicyIssueExists", ReplyAction="http://tempuri.org/IClient/CheckClientPolicyIssueExistsResponse")]
        System.IAsyncResult BeginCheckClientPolicyIssueExists(System.Guid ClientId, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckClientPolicyIssueExists(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientByClientName", ReplyAction="http://tempuri.org/IClient/GetClientByClientNameResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Client GetClientByClientName(string strClientName, System.Guid LicID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/GetClientByClientName", ReplyAction="http://tempuri.org/IClient/GetClientByClientNameResponse")]
        System.IAsyncResult BeginGetClientByClientName(string strClientName, System.Guid LicID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Client EndGetClientByClientName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientByClientNameTest", ReplyAction="http://tempuri.org/IClient/GetClientByClientNameTestResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Client GetClientByClientNameTest(string strClientName, System.Guid LicID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/GetClientByClientNameTest", ReplyAction="http://tempuri.org/IClient/GetClientByClientNameTestResponse")]
        System.IAsyncResult BeginGetClientByClientNameTest(string strClientName, System.Guid LicID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Client EndGetClientByClientNameTest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientByClientID", ReplyAction="http://tempuri.org/IClient/GetClientByClientIDResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Client GetClientByClientID(System.Guid ClientID, System.Guid LicID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/GetClientByClientID", ReplyAction="http://tempuri.org/IClient/GetClientByClientIDResponse")]
        System.IAsyncResult BeginGetClientByClientID(System.Guid ClientID, System.Guid LicID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Client EndGetClientByClientID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllClientCountinLic", ReplyAction="http://tempuri.org/IClient/GetAllClientCountinLicResponse")]
        int GetAllClientCountinLic(System.Guid LicID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/GetAllClientCountinLic", ReplyAction="http://tempuri.org/IClient/GetAllClientCountinLicResponse")]
        System.IAsyncResult BeginGetAllClientCountinLic(System.Guid LicID, System.AsyncCallback callback, object asyncState);
        
        int EndGetAllClientCountinLic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllClientCount", ReplyAction="http://tempuri.org/IClient/GetAllClientCountResponse")]
        int GetAllClientCount();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/GetAllClientCount", ReplyAction="http://tempuri.org/IClient/GetAllClientCountResponse")]
        System.IAsyncResult BeginGetAllClientCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetAllClientCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllClientByLicChunck", ReplyAction="http://tempuri.org/IClient/GetAllClientByLicChunckResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> GetAllClientByLicChunck(System.Guid LicenseeId, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClient/GetAllClientByLicChunck", ReplyAction="http://tempuri.org/IClient/GetAllClientByLicChunckResponse")]
        System.IAsyncResult BeginGetAllClientByLicChunck(System.Guid LicenseeId, int skip, int take, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> EndGetAllClientByLicChunck(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Client Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Client)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRefreshedClientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRefreshedClientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllClientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllClientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientPoliciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientPoliciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckClientPolicyIssueExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckClientPolicyIssueExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientByClientNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientByClientNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Client Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Client)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientByClientNameTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientByClientNameTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Client Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Client)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientByClientIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientByClientIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Client Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Client)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllClientCountinLicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllClientCountinLicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllClientCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllClientCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllClientByLicChunckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllClientByLicChunckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IClient>, MyAgencyVault.VM.MyAgencyVaultSvc.IClient {
        
        private BeginOperationDelegate onBeginAddUpdateClientDelegate;
        
        private EndOperationDelegate onEndAddUpdateClientDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteClientsDelegate;
        
        private EndOperationDelegate onEndDeleteClientsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteClientsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClientDelegate;
        
        private EndOperationDelegate onEndGetClientDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidClientDelegate;
        
        private EndOperationDelegate onEndIsValidClientDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClientListDelegate;
        
        private EndOperationDelegate onEndGetClientListDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRefreshedClientListDelegate;
        
        private EndOperationDelegate onEndGetRefreshedClientListDelegate;
        
        private System.Threading.SendOrPostCallback onGetRefreshedClientListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllClientListDelegate;
        
        private EndOperationDelegate onEndGetAllClientListDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllClientListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClientPoliciesDelegate;
        
        private EndOperationDelegate onEndGetClientPoliciesDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientPoliciesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckClientPolicyIssueExistsDelegate;
        
        private EndOperationDelegate onEndCheckClientPolicyIssueExistsDelegate;
        
        private System.Threading.SendOrPostCallback onCheckClientPolicyIssueExistsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClientByClientNameDelegate;
        
        private EndOperationDelegate onEndGetClientByClientNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientByClientNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClientByClientNameTestDelegate;
        
        private EndOperationDelegate onEndGetClientByClientNameTestDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientByClientNameTestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClientByClientIDDelegate;
        
        private EndOperationDelegate onEndGetClientByClientIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientByClientIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllClientCountinLicDelegate;
        
        private EndOperationDelegate onEndGetAllClientCountinLicDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllClientCountinLicCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllClientCountDelegate;
        
        private EndOperationDelegate onEndGetAllClientCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllClientCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllClientByLicChunckDelegate;
        
        private EndOperationDelegate onEndGetAllClientByLicChunckDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllClientByLicChunckCompletedDelegate;
        
        public ClientClient() {
        }
        
        public ClientClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateClientCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteClientsCompleted;
        
        public event System.EventHandler<GetClientCompletedEventArgs> GetClientCompleted;
        
        public event System.EventHandler<IsValidClientCompletedEventArgs> IsValidClientCompleted;
        
        public event System.EventHandler<GetClientListCompletedEventArgs> GetClientListCompleted;
        
        public event System.EventHandler<GetRefreshedClientListCompletedEventArgs> GetRefreshedClientListCompleted;
        
        public event System.EventHandler<GetAllClientListCompletedEventArgs> GetAllClientListCompleted;
        
        public event System.EventHandler<GetClientPoliciesCompletedEventArgs> GetClientPoliciesCompleted;
        
        public event System.EventHandler<CheckClientPolicyIssueExistsCompletedEventArgs> CheckClientPolicyIssueExistsCompleted;
        
        public event System.EventHandler<GetClientByClientNameCompletedEventArgs> GetClientByClientNameCompleted;
        
        public event System.EventHandler<GetClientByClientNameTestCompletedEventArgs> GetClientByClientNameTestCompleted;
        
        public event System.EventHandler<GetClientByClientIDCompletedEventArgs> GetClientByClientIDCompleted;
        
        public event System.EventHandler<GetAllClientCountinLicCompletedEventArgs> GetAllClientCountinLicCompleted;
        
        public event System.EventHandler<GetAllClientCountCompletedEventArgs> GetAllClientCountCompleted;
        
        public event System.EventHandler<GetAllClientByLicChunckCompletedEventArgs> GetAllClientByLicChunckCompleted;
        
        public void AddUpdateClient(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt) {
            base.Channel.AddUpdateClient(Clnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateClient(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateClient(Clnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateClient(System.IAsyncResult result) {
            base.Channel.EndAddUpdateClient(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.Client)(inValues[0]));
            return this.BeginAddUpdateClient(Clnt, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateClient(System.IAsyncResult result) {
            this.EndAddUpdateClient(result);
            return null;
        }
        
        private void OnAddUpdateClientCompleted(object state) {
            if ((this.AddUpdateClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateClientAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt) {
            this.AddUpdateClientAsync(Clnt, null);
        }
        
        public void AddUpdateClientAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt, object userState) {
            if ((this.onBeginAddUpdateClientDelegate == null)) {
                this.onBeginAddUpdateClientDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateClient);
            }
            if ((this.onEndAddUpdateClientDelegate == null)) {
                this.onEndAddUpdateClientDelegate = new EndOperationDelegate(this.OnEndAddUpdateClient);
            }
            if ((this.onAddUpdateClientCompletedDelegate == null)) {
                this.onAddUpdateClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateClientCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateClientDelegate, new object[] {
                        Clnt}, this.onEndAddUpdateClientDelegate, this.onAddUpdateClientCompletedDelegate, userState);
        }
        
        public void DeleteClients(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt) {
            base.Channel.DeleteClients(Clnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteClients(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteClients(Clnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteClients(System.IAsyncResult result) {
            base.Channel.EndDeleteClients(result);
        }
        
        private System.IAsyncResult OnBeginDeleteClients(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.Client)(inValues[0]));
            return this.BeginDeleteClients(Clnt, callback, asyncState);
        }
        
        private object[] OnEndDeleteClients(System.IAsyncResult result) {
            this.EndDeleteClients(result);
            return null;
        }
        
        private void OnDeleteClientsCompleted(object state) {
            if ((this.DeleteClientsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteClientsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteClientsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt) {
            this.DeleteClientsAsync(Clnt, null);
        }
        
        public void DeleteClientsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt, object userState) {
            if ((this.onBeginDeleteClientsDelegate == null)) {
                this.onBeginDeleteClientsDelegate = new BeginOperationDelegate(this.OnBeginDeleteClients);
            }
            if ((this.onEndDeleteClientsDelegate == null)) {
                this.onEndDeleteClientsDelegate = new EndOperationDelegate(this.OnEndDeleteClients);
            }
            if ((this.onDeleteClientsCompletedDelegate == null)) {
                this.onDeleteClientsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteClientsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteClientsDelegate, new object[] {
                        Clnt}, this.onEndDeleteClientsDelegate, this.onDeleteClientsCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Client GetClient() {
            return base.Channel.GetClient();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetClient(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClient(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Client EndGetClient(System.IAsyncResult result) {
            return base.Channel.EndGetClient(result);
        }
        
        private System.IAsyncResult OnBeginGetClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetClient(callback, asyncState);
        }
        
        private object[] OnEndGetClient(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Client retVal = this.EndGetClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientCompleted(object state) {
            if ((this.GetClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientCompleted(this, new GetClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientAsync() {
            this.GetClientAsync(null);
        }
        
        public void GetClientAsync(object userState) {
            if ((this.onBeginGetClientDelegate == null)) {
                this.onBeginGetClientDelegate = new BeginOperationDelegate(this.OnBeginGetClient);
            }
            if ((this.onEndGetClientDelegate == null)) {
                this.onEndGetClientDelegate = new EndOperationDelegate(this.OnEndGetClient);
            }
            if ((this.onGetClientCompletedDelegate == null)) {
                this.onGetClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientDelegate, null, this.onEndGetClientDelegate, this.onGetClientCompletedDelegate, userState);
        }
        
        public bool IsValidClient(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt) {
            return base.Channel.IsValidClient(Clnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidClient(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidClient(Clnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidClient(System.IAsyncResult result) {
            return base.Channel.EndIsValidClient(result);
        }
        
        private System.IAsyncResult OnBeginIsValidClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.Client)(inValues[0]));
            return this.BeginIsValidClient(Clnt, callback, asyncState);
        }
        
        private object[] OnEndIsValidClient(System.IAsyncResult result) {
            bool retVal = this.EndIsValidClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidClientCompleted(object state) {
            if ((this.IsValidClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidClientCompleted(this, new IsValidClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidClientAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt) {
            this.IsValidClientAsync(Clnt, null);
        }
        
        public void IsValidClientAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt, object userState) {
            if ((this.onBeginIsValidClientDelegate == null)) {
                this.onBeginIsValidClientDelegate = new BeginOperationDelegate(this.OnBeginIsValidClient);
            }
            if ((this.onEndIsValidClientDelegate == null)) {
                this.onEndIsValidClientDelegate = new EndOperationDelegate(this.OnEndIsValidClient);
            }
            if ((this.onIsValidClientCompletedDelegate == null)) {
                this.onIsValidClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidClientCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidClientDelegate, new object[] {
                        Clnt}, this.onEndIsValidClientDelegate, this.onIsValidClientCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> GetClientList(System.Nullable<System.Guid> LicenseeId) {
            return base.Channel.GetClientList(LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetClientList(System.Nullable<System.Guid> LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClientList(LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> EndGetClientList(System.IAsyncResult result) {
            return base.Channel.EndGetClientList(result);
        }
        
        private System.IAsyncResult OnBeginGetClientList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            return this.BeginGetClientList(LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndGetClientList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> retVal = this.EndGetClientList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientListCompleted(object state) {
            if ((this.GetClientListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientListCompleted(this, new GetClientListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientListAsync(System.Nullable<System.Guid> LicenseeId) {
            this.GetClientListAsync(LicenseeId, null);
        }
        
        public void GetClientListAsync(System.Nullable<System.Guid> LicenseeId, object userState) {
            if ((this.onBeginGetClientListDelegate == null)) {
                this.onBeginGetClientListDelegate = new BeginOperationDelegate(this.OnBeginGetClientList);
            }
            if ((this.onEndGetClientListDelegate == null)) {
                this.onEndGetClientListDelegate = new EndOperationDelegate(this.OnEndGetClientList);
            }
            if ((this.onGetClientListCompletedDelegate == null)) {
                this.onGetClientListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientListCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientListDelegate, new object[] {
                        LicenseeId}, this.onEndGetClientListDelegate, this.onGetClientListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> GetRefreshedClientList(System.Guid LicenseeId, System.Collections.ObjectModel.ObservableCollection<System.Guid> ClientIds) {
            return base.Channel.GetRefreshedClientList(LicenseeId, ClientIds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRefreshedClientList(System.Guid LicenseeId, System.Collections.ObjectModel.ObservableCollection<System.Guid> ClientIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRefreshedClientList(LicenseeId, ClientIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> EndGetRefreshedClientList(System.IAsyncResult result) {
            return base.Channel.EndGetRefreshedClientList(result);
        }
        
        private System.IAsyncResult OnBeginGetRefreshedClientList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<System.Guid> ClientIds = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[1]));
            return this.BeginGetRefreshedClientList(LicenseeId, ClientIds, callback, asyncState);
        }
        
        private object[] OnEndGetRefreshedClientList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> retVal = this.EndGetRefreshedClientList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRefreshedClientListCompleted(object state) {
            if ((this.GetRefreshedClientListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRefreshedClientListCompleted(this, new GetRefreshedClientListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRefreshedClientListAsync(System.Guid LicenseeId, System.Collections.ObjectModel.ObservableCollection<System.Guid> ClientIds) {
            this.GetRefreshedClientListAsync(LicenseeId, ClientIds, null);
        }
        
        public void GetRefreshedClientListAsync(System.Guid LicenseeId, System.Collections.ObjectModel.ObservableCollection<System.Guid> ClientIds, object userState) {
            if ((this.onBeginGetRefreshedClientListDelegate == null)) {
                this.onBeginGetRefreshedClientListDelegate = new BeginOperationDelegate(this.OnBeginGetRefreshedClientList);
            }
            if ((this.onEndGetRefreshedClientListDelegate == null)) {
                this.onEndGetRefreshedClientListDelegate = new EndOperationDelegate(this.OnEndGetRefreshedClientList);
            }
            if ((this.onGetRefreshedClientListCompletedDelegate == null)) {
                this.onGetRefreshedClientListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRefreshedClientListCompleted);
            }
            base.InvokeAsync(this.onBeginGetRefreshedClientListDelegate, new object[] {
                        LicenseeId,
                        ClientIds}, this.onEndGetRefreshedClientListDelegate, this.onGetRefreshedClientListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> GetAllClientList() {
            return base.Channel.GetAllClientList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllClientList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllClientList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> EndGetAllClientList(System.IAsyncResult result) {
            return base.Channel.EndGetAllClientList(result);
        }
        
        private System.IAsyncResult OnBeginGetAllClientList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllClientList(callback, asyncState);
        }
        
        private object[] OnEndGetAllClientList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> retVal = this.EndGetAllClientList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllClientListCompleted(object state) {
            if ((this.GetAllClientListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllClientListCompleted(this, new GetAllClientListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllClientListAsync() {
            this.GetAllClientListAsync(null);
        }
        
        public void GetAllClientListAsync(object userState) {
            if ((this.onBeginGetAllClientListDelegate == null)) {
                this.onBeginGetAllClientListDelegate = new BeginOperationDelegate(this.OnBeginGetAllClientList);
            }
            if ((this.onEndGetAllClientListDelegate == null)) {
                this.onEndGetAllClientListDelegate = new EndOperationDelegate(this.OnEndGetAllClientList);
            }
            if ((this.onGetAllClientListCompletedDelegate == null)) {
                this.onGetAllClientListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClientListCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllClientListDelegate, null, this.onEndGetAllClientListDelegate, this.onGetAllClientListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> GetClientPolicies(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt) {
            return base.Channel.GetClientPolicies(Clnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetClientPolicies(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClientPolicies(Clnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> EndGetClientPolicies(System.IAsyncResult result) {
            return base.Channel.EndGetClientPolicies(result);
        }
        
        private System.IAsyncResult OnBeginGetClientPolicies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.Client)(inValues[0]));
            return this.BeginGetClientPolicies(Clnt, callback, asyncState);
        }
        
        private object[] OnEndGetClientPolicies(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> retVal = this.EndGetClientPolicies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientPoliciesCompleted(object state) {
            if ((this.GetClientPoliciesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientPoliciesCompleted(this, new GetClientPoliciesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientPoliciesAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt) {
            this.GetClientPoliciesAsync(Clnt, null);
        }
        
        public void GetClientPoliciesAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Client Clnt, object userState) {
            if ((this.onBeginGetClientPoliciesDelegate == null)) {
                this.onBeginGetClientPoliciesDelegate = new BeginOperationDelegate(this.OnBeginGetClientPolicies);
            }
            if ((this.onEndGetClientPoliciesDelegate == null)) {
                this.onEndGetClientPoliciesDelegate = new EndOperationDelegate(this.OnEndGetClientPolicies);
            }
            if ((this.onGetClientPoliciesCompletedDelegate == null)) {
                this.onGetClientPoliciesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientPoliciesCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientPoliciesDelegate, new object[] {
                        Clnt}, this.onEndGetClientPoliciesDelegate, this.onGetClientPoliciesCompletedDelegate, userState);
        }
        
        public bool CheckClientPolicyIssueExists(System.Guid ClientId) {
            return base.Channel.CheckClientPolicyIssueExists(ClientId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckClientPolicyIssueExists(System.Guid ClientId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckClientPolicyIssueExists(ClientId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckClientPolicyIssueExists(System.IAsyncResult result) {
            return base.Channel.EndCheckClientPolicyIssueExists(result);
        }
        
        private System.IAsyncResult OnBeginCheckClientPolicyIssueExists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid ClientId = ((System.Guid)(inValues[0]));
            return this.BeginCheckClientPolicyIssueExists(ClientId, callback, asyncState);
        }
        
        private object[] OnEndCheckClientPolicyIssueExists(System.IAsyncResult result) {
            bool retVal = this.EndCheckClientPolicyIssueExists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckClientPolicyIssueExistsCompleted(object state) {
            if ((this.CheckClientPolicyIssueExistsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckClientPolicyIssueExistsCompleted(this, new CheckClientPolicyIssueExistsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckClientPolicyIssueExistsAsync(System.Guid ClientId) {
            this.CheckClientPolicyIssueExistsAsync(ClientId, null);
        }
        
        public void CheckClientPolicyIssueExistsAsync(System.Guid ClientId, object userState) {
            if ((this.onBeginCheckClientPolicyIssueExistsDelegate == null)) {
                this.onBeginCheckClientPolicyIssueExistsDelegate = new BeginOperationDelegate(this.OnBeginCheckClientPolicyIssueExists);
            }
            if ((this.onEndCheckClientPolicyIssueExistsDelegate == null)) {
                this.onEndCheckClientPolicyIssueExistsDelegate = new EndOperationDelegate(this.OnEndCheckClientPolicyIssueExists);
            }
            if ((this.onCheckClientPolicyIssueExistsCompletedDelegate == null)) {
                this.onCheckClientPolicyIssueExistsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckClientPolicyIssueExistsCompleted);
            }
            base.InvokeAsync(this.onBeginCheckClientPolicyIssueExistsDelegate, new object[] {
                        ClientId}, this.onEndCheckClientPolicyIssueExistsDelegate, this.onCheckClientPolicyIssueExistsCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Client GetClientByClientName(string strClientName, System.Guid LicID) {
            return base.Channel.GetClientByClientName(strClientName, LicID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetClientByClientName(string strClientName, System.Guid LicID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClientByClientName(strClientName, LicID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Client EndGetClientByClientName(System.IAsyncResult result) {
            return base.Channel.EndGetClientByClientName(result);
        }
        
        private System.IAsyncResult OnBeginGetClientByClientName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strClientName = ((string)(inValues[0]));
            System.Guid LicID = ((System.Guid)(inValues[1]));
            return this.BeginGetClientByClientName(strClientName, LicID, callback, asyncState);
        }
        
        private object[] OnEndGetClientByClientName(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Client retVal = this.EndGetClientByClientName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientByClientNameCompleted(object state) {
            if ((this.GetClientByClientNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientByClientNameCompleted(this, new GetClientByClientNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientByClientNameAsync(string strClientName, System.Guid LicID) {
            this.GetClientByClientNameAsync(strClientName, LicID, null);
        }
        
        public void GetClientByClientNameAsync(string strClientName, System.Guid LicID, object userState) {
            if ((this.onBeginGetClientByClientNameDelegate == null)) {
                this.onBeginGetClientByClientNameDelegate = new BeginOperationDelegate(this.OnBeginGetClientByClientName);
            }
            if ((this.onEndGetClientByClientNameDelegate == null)) {
                this.onEndGetClientByClientNameDelegate = new EndOperationDelegate(this.OnEndGetClientByClientName);
            }
            if ((this.onGetClientByClientNameCompletedDelegate == null)) {
                this.onGetClientByClientNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientByClientNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientByClientNameDelegate, new object[] {
                        strClientName,
                        LicID}, this.onEndGetClientByClientNameDelegate, this.onGetClientByClientNameCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Client GetClientByClientNameTest(string strClientName, System.Guid LicID) {
            return base.Channel.GetClientByClientNameTest(strClientName, LicID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetClientByClientNameTest(string strClientName, System.Guid LicID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClientByClientNameTest(strClientName, LicID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Client EndGetClientByClientNameTest(System.IAsyncResult result) {
            return base.Channel.EndGetClientByClientNameTest(result);
        }
        
        private System.IAsyncResult OnBeginGetClientByClientNameTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strClientName = ((string)(inValues[0]));
            System.Guid LicID = ((System.Guid)(inValues[1]));
            return this.BeginGetClientByClientNameTest(strClientName, LicID, callback, asyncState);
        }
        
        private object[] OnEndGetClientByClientNameTest(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Client retVal = this.EndGetClientByClientNameTest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientByClientNameTestCompleted(object state) {
            if ((this.GetClientByClientNameTestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientByClientNameTestCompleted(this, new GetClientByClientNameTestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientByClientNameTestAsync(string strClientName, System.Guid LicID) {
            this.GetClientByClientNameTestAsync(strClientName, LicID, null);
        }
        
        public void GetClientByClientNameTestAsync(string strClientName, System.Guid LicID, object userState) {
            if ((this.onBeginGetClientByClientNameTestDelegate == null)) {
                this.onBeginGetClientByClientNameTestDelegate = new BeginOperationDelegate(this.OnBeginGetClientByClientNameTest);
            }
            if ((this.onEndGetClientByClientNameTestDelegate == null)) {
                this.onEndGetClientByClientNameTestDelegate = new EndOperationDelegate(this.OnEndGetClientByClientNameTest);
            }
            if ((this.onGetClientByClientNameTestCompletedDelegate == null)) {
                this.onGetClientByClientNameTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientByClientNameTestCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientByClientNameTestDelegate, new object[] {
                        strClientName,
                        LicID}, this.onEndGetClientByClientNameTestDelegate, this.onGetClientByClientNameTestCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Client GetClientByClientID(System.Guid ClientID, System.Guid LicID) {
            return base.Channel.GetClientByClientID(ClientID, LicID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetClientByClientID(System.Guid ClientID, System.Guid LicID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClientByClientID(ClientID, LicID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Client EndGetClientByClientID(System.IAsyncResult result) {
            return base.Channel.EndGetClientByClientID(result);
        }
        
        private System.IAsyncResult OnBeginGetClientByClientID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid ClientID = ((System.Guid)(inValues[0]));
            System.Guid LicID = ((System.Guid)(inValues[1]));
            return this.BeginGetClientByClientID(ClientID, LicID, callback, asyncState);
        }
        
        private object[] OnEndGetClientByClientID(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Client retVal = this.EndGetClientByClientID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientByClientIDCompleted(object state) {
            if ((this.GetClientByClientIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientByClientIDCompleted(this, new GetClientByClientIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientByClientIDAsync(System.Guid ClientID, System.Guid LicID) {
            this.GetClientByClientIDAsync(ClientID, LicID, null);
        }
        
        public void GetClientByClientIDAsync(System.Guid ClientID, System.Guid LicID, object userState) {
            if ((this.onBeginGetClientByClientIDDelegate == null)) {
                this.onBeginGetClientByClientIDDelegate = new BeginOperationDelegate(this.OnBeginGetClientByClientID);
            }
            if ((this.onEndGetClientByClientIDDelegate == null)) {
                this.onEndGetClientByClientIDDelegate = new EndOperationDelegate(this.OnEndGetClientByClientID);
            }
            if ((this.onGetClientByClientIDCompletedDelegate == null)) {
                this.onGetClientByClientIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientByClientIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientByClientIDDelegate, new object[] {
                        ClientID,
                        LicID}, this.onEndGetClientByClientIDDelegate, this.onGetClientByClientIDCompletedDelegate, userState);
        }
        
        public int GetAllClientCountinLic(System.Guid LicID) {
            return base.Channel.GetAllClientCountinLic(LicID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllClientCountinLic(System.Guid LicID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllClientCountinLic(LicID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetAllClientCountinLic(System.IAsyncResult result) {
            return base.Channel.EndGetAllClientCountinLic(result);
        }
        
        private System.IAsyncResult OnBeginGetAllClientCountinLic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicID = ((System.Guid)(inValues[0]));
            return this.BeginGetAllClientCountinLic(LicID, callback, asyncState);
        }
        
        private object[] OnEndGetAllClientCountinLic(System.IAsyncResult result) {
            int retVal = this.EndGetAllClientCountinLic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllClientCountinLicCompleted(object state) {
            if ((this.GetAllClientCountinLicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllClientCountinLicCompleted(this, new GetAllClientCountinLicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllClientCountinLicAsync(System.Guid LicID) {
            this.GetAllClientCountinLicAsync(LicID, null);
        }
        
        public void GetAllClientCountinLicAsync(System.Guid LicID, object userState) {
            if ((this.onBeginGetAllClientCountinLicDelegate == null)) {
                this.onBeginGetAllClientCountinLicDelegate = new BeginOperationDelegate(this.OnBeginGetAllClientCountinLic);
            }
            if ((this.onEndGetAllClientCountinLicDelegate == null)) {
                this.onEndGetAllClientCountinLicDelegate = new EndOperationDelegate(this.OnEndGetAllClientCountinLic);
            }
            if ((this.onGetAllClientCountinLicCompletedDelegate == null)) {
                this.onGetAllClientCountinLicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClientCountinLicCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllClientCountinLicDelegate, new object[] {
                        LicID}, this.onEndGetAllClientCountinLicDelegate, this.onGetAllClientCountinLicCompletedDelegate, userState);
        }
        
        public int GetAllClientCount() {
            return base.Channel.GetAllClientCount();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllClientCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllClientCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetAllClientCount(System.IAsyncResult result) {
            return base.Channel.EndGetAllClientCount(result);
        }
        
        private System.IAsyncResult OnBeginGetAllClientCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllClientCount(callback, asyncState);
        }
        
        private object[] OnEndGetAllClientCount(System.IAsyncResult result) {
            int retVal = this.EndGetAllClientCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllClientCountCompleted(object state) {
            if ((this.GetAllClientCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllClientCountCompleted(this, new GetAllClientCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllClientCountAsync() {
            this.GetAllClientCountAsync(null);
        }
        
        public void GetAllClientCountAsync(object userState) {
            if ((this.onBeginGetAllClientCountDelegate == null)) {
                this.onBeginGetAllClientCountDelegate = new BeginOperationDelegate(this.OnBeginGetAllClientCount);
            }
            if ((this.onEndGetAllClientCountDelegate == null)) {
                this.onEndGetAllClientCountDelegate = new EndOperationDelegate(this.OnEndGetAllClientCount);
            }
            if ((this.onGetAllClientCountCompletedDelegate == null)) {
                this.onGetAllClientCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClientCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllClientCountDelegate, null, this.onEndGetAllClientCountDelegate, this.onGetAllClientCountCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> GetAllClientByLicChunck(System.Guid LicenseeId, int skip, int take) {
            return base.Channel.GetAllClientByLicChunck(LicenseeId, skip, take);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllClientByLicChunck(System.Guid LicenseeId, int skip, int take, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllClientByLicChunck(LicenseeId, skip, take, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> EndGetAllClientByLicChunck(System.IAsyncResult result) {
            return base.Channel.EndGetAllClientByLicChunck(result);
        }
        
        private System.IAsyncResult OnBeginGetAllClientByLicChunck(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            int skip = ((int)(inValues[1]));
            int take = ((int)(inValues[2]));
            return this.BeginGetAllClientByLicChunck(LicenseeId, skip, take, callback, asyncState);
        }
        
        private object[] OnEndGetAllClientByLicChunck(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Client> retVal = this.EndGetAllClientByLicChunck(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllClientByLicChunckCompleted(object state) {
            if ((this.GetAllClientByLicChunckCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllClientByLicChunckCompleted(this, new GetAllClientByLicChunckCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllClientByLicChunckAsync(System.Guid LicenseeId, int skip, int take) {
            this.GetAllClientByLicChunckAsync(LicenseeId, skip, take, null);
        }
        
        public void GetAllClientByLicChunckAsync(System.Guid LicenseeId, int skip, int take, object userState) {
            if ((this.onBeginGetAllClientByLicChunckDelegate == null)) {
                this.onBeginGetAllClientByLicChunckDelegate = new BeginOperationDelegate(this.OnBeginGetAllClientByLicChunck);
            }
            if ((this.onEndGetAllClientByLicChunckDelegate == null)) {
                this.onEndGetAllClientByLicChunckDelegate = new EndOperationDelegate(this.OnEndGetAllClientByLicChunck);
            }
            if ((this.onGetAllClientByLicChunckCompletedDelegate == null)) {
                this.onGetAllClientByLicChunckCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClientByLicChunckCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllClientByLicChunckDelegate, new object[] {
                        LicenseeId,
                        skip,
                        take}, this.onEndGetAllClientByLicChunckDelegate, this.onGetAllClientByLicChunckCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IImportTransactionFile")]
    public interface IImportTransactionFile {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImportTransactionFile/fillImportInfo", ReplyAction="http://tempuri.org/IImportTransactionFile/fillImportInfoResponse")]
        void fillImportInfo(string FileName, System.Collections.ObjectModel.ObservableCollection<string> transactionLines);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IImportTransactionFile/fillImportInfo", ReplyAction="http://tempuri.org/IImportTransactionFile/fillImportInfoResponse")]
        System.IAsyncResult BeginfillImportInfo(string FileName, System.Collections.ObjectModel.ObservableCollection<string> transactionLines, System.AsyncCallback callback, object asyncState);
        
        void EndfillImportInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImportTransactionFileChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IImportTransactionFile, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportTransactionFileClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IImportTransactionFile>, MyAgencyVault.VM.MyAgencyVaultSvc.IImportTransactionFile {
        
        private BeginOperationDelegate onBeginfillImportInfoDelegate;
        
        private EndOperationDelegate onEndfillImportInfoDelegate;
        
        private System.Threading.SendOrPostCallback onfillImportInfoCompletedDelegate;
        
        public ImportTransactionFileClient() {
        }
        
        public ImportTransactionFileClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImportTransactionFileClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImportTransactionFileClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImportTransactionFileClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> fillImportInfoCompleted;
        
        public void fillImportInfo(string FileName, System.Collections.ObjectModel.ObservableCollection<string> transactionLines) {
            base.Channel.fillImportInfo(FileName, transactionLines);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginfillImportInfo(string FileName, System.Collections.ObjectModel.ObservableCollection<string> transactionLines, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginfillImportInfo(FileName, transactionLines, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndfillImportInfo(System.IAsyncResult result) {
            base.Channel.EndfillImportInfo(result);
        }
        
        private System.IAsyncResult OnBeginfillImportInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FileName = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<string> transactionLines = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[1]));
            return this.BeginfillImportInfo(FileName, transactionLines, callback, asyncState);
        }
        
        private object[] OnEndfillImportInfo(System.IAsyncResult result) {
            this.EndfillImportInfo(result);
            return null;
        }
        
        private void OnfillImportInfoCompleted(object state) {
            if ((this.fillImportInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.fillImportInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void fillImportInfoAsync(string FileName, System.Collections.ObjectModel.ObservableCollection<string> transactionLines) {
            this.fillImportInfoAsync(FileName, transactionLines, null);
        }
        
        public void fillImportInfoAsync(string FileName, System.Collections.ObjectModel.ObservableCollection<string> transactionLines, object userState) {
            if ((this.onBeginfillImportInfoDelegate == null)) {
                this.onBeginfillImportInfoDelegate = new BeginOperationDelegate(this.OnBeginfillImportInfo);
            }
            if ((this.onEndfillImportInfoDelegate == null)) {
                this.onEndfillImportInfoDelegate = new EndOperationDelegate(this.OnEndfillImportInfo);
            }
            if ((this.onfillImportInfoCompletedDelegate == null)) {
                this.onfillImportInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnfillImportInfoCompleted);
            }
            base.InvokeAsync(this.onBeginfillImportInfoDelegate, new object[] {
                        FileName,
                        transactionLines}, this.onEndfillImportInfoDelegate, this.onfillImportInfoCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IIssueStatus")]
    public interface IIssueStatus {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIssueStatus/GetStatus", ReplyAction="http://tempuri.org/IIssueStatus/GetStatusResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus GetStatus(int StatusID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIssueStatus/GetStatus", ReplyAction="http://tempuri.org/IIssueStatus/GetStatusResponse")]
        System.IAsyncResult BeginGetStatus(int StatusID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus EndGetStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIssueStatus/GetAllStatus", ReplyAction="http://tempuri.org/IIssueStatus/GetAllStatusResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus> GetAllStatus();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIssueStatus/GetAllStatus", ReplyAction="http://tempuri.org/IIssueStatus/GetAllStatusResponse")]
        System.IAsyncResult BeginGetAllStatus(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus> EndGetAllStatus(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIssueStatusChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IIssueStatus, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IssueStatusClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IIssueStatus>, MyAgencyVault.VM.MyAgencyVaultSvc.IIssueStatus {
        
        private BeginOperationDelegate onBeginGetStatusDelegate;
        
        private EndOperationDelegate onEndGetStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllStatusDelegate;
        
        private EndOperationDelegate onEndGetAllStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllStatusCompletedDelegate;
        
        public IssueStatusClient() {
        }
        
        public IssueStatusClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IssueStatusClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IssueStatusClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IssueStatusClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetStatusCompletedEventArgs> GetStatusCompleted;
        
        public event System.EventHandler<GetAllStatusCompletedEventArgs> GetAllStatusCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus GetStatus(int StatusID) {
            return base.Channel.GetStatus(StatusID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStatus(int StatusID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStatus(StatusID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus EndGetStatus(System.IAsyncResult result) {
            return base.Channel.EndGetStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int StatusID = ((int)(inValues[0]));
            return this.BeginGetStatus(StatusID, callback, asyncState);
        }
        
        private object[] OnEndGetStatus(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus retVal = this.EndGetStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatusCompleted(object state) {
            if ((this.GetStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatusAsync(int StatusID) {
            this.GetStatusAsync(StatusID, null);
        }
        
        public void GetStatusAsync(int StatusID, object userState) {
            if ((this.onBeginGetStatusDelegate == null)) {
                this.onBeginGetStatusDelegate = new BeginOperationDelegate(this.OnBeginGetStatus);
            }
            if ((this.onEndGetStatusDelegate == null)) {
                this.onEndGetStatusDelegate = new EndOperationDelegate(this.OnEndGetStatus);
            }
            if ((this.onGetStatusCompletedDelegate == null)) {
                this.onGetStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatusDelegate, new object[] {
                        StatusID}, this.onEndGetStatusDelegate, this.onGetStatusCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus> GetAllStatus() {
            return base.Channel.GetAllStatus();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllStatus(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllStatus(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus> EndGetAllStatus(System.IAsyncResult result) {
            return base.Channel.EndGetAllStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetAllStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllStatus(callback, asyncState);
        }
        
        private object[] OnEndGetAllStatus(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueStatus> retVal = this.EndGetAllStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllStatusCompleted(object state) {
            if ((this.GetAllStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllStatusCompleted(this, new GetAllStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllStatusAsync() {
            this.GetAllStatusAsync(null);
        }
        
        public void GetAllStatusAsync(object userState) {
            if ((this.onBeginGetAllStatusDelegate == null)) {
                this.onBeginGetAllStatusDelegate = new BeginOperationDelegate(this.OnBeginGetAllStatus);
            }
            if ((this.onEndGetAllStatusDelegate == null)) {
                this.onEndGetAllStatusDelegate = new EndOperationDelegate(this.OnEndGetAllStatus);
            }
            if ((this.onGetAllStatusCompletedDelegate == null)) {
                this.onGetAllStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllStatusDelegate, null, this.onEndGetAllStatusDelegate, this.onGetAllStatusCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPayorUserWebSite")]
    public interface IPayorUserWebSite {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorUserWebSite/AddUpdatePayorUserWebSite", ReplyAction="http://tempuri.org/IPayorUserWebSite/AddUpdatePayorUserWebSiteResponse")]
        void AddUpdatePayorUserWebSite(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorUserWebSite/AddUpdatePayorUserWebSite", ReplyAction="http://tempuri.org/IPayorUserWebSite/AddUpdatePayorUserWebSiteResponse")]
        System.IAsyncResult BeginAddUpdatePayorUserWebSite(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePayorUserWebSite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorUserWebSite/DeletePayorUserWebSite", ReplyAction="http://tempuri.org/IPayorUserWebSite/DeletePayorUserWebSiteResponse")]
        void DeletePayorUserWebSite(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorUserWebSite/DeletePayorUserWebSite", ReplyAction="http://tempuri.org/IPayorUserWebSite/DeletePayorUserWebSiteResponse")]
        System.IAsyncResult BeginDeletePayorUserWebSite(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePayorUserWebSite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorUserWebSite/GetPayorUsers", ReplyAction="http://tempuri.org/IPayorUserWebSite/GetPayorUsersResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> GetPayorUsers(System.Guid licId, System.Guid payorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorUserWebSite/GetPayorUsers", ReplyAction="http://tempuri.org/IPayorUserWebSite/GetPayorUsersResponse")]
        System.IAsyncResult BeginGetPayorUsers(System.Guid licId, System.Guid payorId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> EndGetPayorUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorUserWebSite/GetLicenseeUsers", ReplyAction="http://tempuri.org/IPayorUserWebSite/GetLicenseeUsersResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> GetLicenseeUsers(System.Guid licId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorUserWebSite/GetLicenseeUsers", ReplyAction="http://tempuri.org/IPayorUserWebSite/GetLicenseeUsersResponse")]
        System.IAsyncResult BeginGetLicenseeUsers(System.Guid licId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> EndGetLicenseeUsers(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPayorUserWebSiteChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPayorUserWebSite, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLicenseeUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLicenseeUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayorUserWebSiteClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPayorUserWebSite>, MyAgencyVault.VM.MyAgencyVaultSvc.IPayorUserWebSite {
        
        private BeginOperationDelegate onBeginAddUpdatePayorUserWebSiteDelegate;
        
        private EndOperationDelegate onEndAddUpdatePayorUserWebSiteDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePayorUserWebSiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePayorUserWebSiteDelegate;
        
        private EndOperationDelegate onEndDeletePayorUserWebSiteDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePayorUserWebSiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorUsersDelegate;
        
        private EndOperationDelegate onEndGetPayorUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLicenseeUsersDelegate;
        
        private EndOperationDelegate onEndGetLicenseeUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetLicenseeUsersCompletedDelegate;
        
        public PayorUserWebSiteClient() {
        }
        
        public PayorUserWebSiteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PayorUserWebSiteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorUserWebSiteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorUserWebSiteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePayorUserWebSiteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePayorUserWebSiteCompleted;
        
        public event System.EventHandler<GetPayorUsersCompletedEventArgs> GetPayorUsersCompleted;
        
        public event System.EventHandler<GetLicenseeUsersCompletedEventArgs> GetLicenseeUsersCompleted;
        
        public void AddUpdatePayorUserWebSite(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo) {
            base.Channel.AddUpdatePayorUserWebSite(plSiteinfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePayorUserWebSite(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePayorUserWebSite(plSiteinfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePayorUserWebSite(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePayorUserWebSite(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePayorUserWebSite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo)(inValues[0]));
            return this.BeginAddUpdatePayorUserWebSite(plSiteinfo, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePayorUserWebSite(System.IAsyncResult result) {
            this.EndAddUpdatePayorUserWebSite(result);
            return null;
        }
        
        private void OnAddUpdatePayorUserWebSiteCompleted(object state) {
            if ((this.AddUpdatePayorUserWebSiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePayorUserWebSiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePayorUserWebSiteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo) {
            this.AddUpdatePayorUserWebSiteAsync(plSiteinfo, null);
        }
        
        public void AddUpdatePayorUserWebSiteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo, object userState) {
            if ((this.onBeginAddUpdatePayorUserWebSiteDelegate == null)) {
                this.onBeginAddUpdatePayorUserWebSiteDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePayorUserWebSite);
            }
            if ((this.onEndAddUpdatePayorUserWebSiteDelegate == null)) {
                this.onEndAddUpdatePayorUserWebSiteDelegate = new EndOperationDelegate(this.OnEndAddUpdatePayorUserWebSite);
            }
            if ((this.onAddUpdatePayorUserWebSiteCompletedDelegate == null)) {
                this.onAddUpdatePayorUserWebSiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePayorUserWebSiteCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePayorUserWebSiteDelegate, new object[] {
                        plSiteinfo}, this.onEndAddUpdatePayorUserWebSiteDelegate, this.onAddUpdatePayorUserWebSiteCompletedDelegate, userState);
        }
        
        public void DeletePayorUserWebSite(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo) {
            base.Channel.DeletePayorUserWebSite(plSiteinfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePayorUserWebSite(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePayorUserWebSite(plSiteinfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePayorUserWebSite(System.IAsyncResult result) {
            base.Channel.EndDeletePayorUserWebSite(result);
        }
        
        private System.IAsyncResult OnBeginDeletePayorUserWebSite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo)(inValues[0]));
            return this.BeginDeletePayorUserWebSite(plSiteinfo, callback, asyncState);
        }
        
        private object[] OnEndDeletePayorUserWebSite(System.IAsyncResult result) {
            this.EndDeletePayorUserWebSite(result);
            return null;
        }
        
        private void OnDeletePayorUserWebSiteCompleted(object state) {
            if ((this.DeletePayorUserWebSiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePayorUserWebSiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePayorUserWebSiteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo) {
            this.DeletePayorUserWebSiteAsync(plSiteinfo, null);
        }
        
        public void DeletePayorUserWebSiteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo plSiteinfo, object userState) {
            if ((this.onBeginDeletePayorUserWebSiteDelegate == null)) {
                this.onBeginDeletePayorUserWebSiteDelegate = new BeginOperationDelegate(this.OnBeginDeletePayorUserWebSite);
            }
            if ((this.onEndDeletePayorUserWebSiteDelegate == null)) {
                this.onEndDeletePayorUserWebSiteDelegate = new EndOperationDelegate(this.OnEndDeletePayorUserWebSite);
            }
            if ((this.onDeletePayorUserWebSiteCompletedDelegate == null)) {
                this.onDeletePayorUserWebSiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePayorUserWebSiteCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePayorUserWebSiteDelegate, new object[] {
                        plSiteinfo}, this.onEndDeletePayorUserWebSiteDelegate, this.onDeletePayorUserWebSiteCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> GetPayorUsers(System.Guid licId, System.Guid payorId) {
            return base.Channel.GetPayorUsers(licId, payorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorUsers(System.Guid licId, System.Guid payorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorUsers(licId, payorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> EndGetPayorUsers(System.IAsyncResult result) {
            return base.Channel.EndGetPayorUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licId = ((System.Guid)(inValues[0]));
            System.Guid payorId = ((System.Guid)(inValues[1]));
            return this.BeginGetPayorUsers(licId, payorId, callback, asyncState);
        }
        
        private object[] OnEndGetPayorUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> retVal = this.EndGetPayorUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorUsersCompleted(object state) {
            if ((this.GetPayorUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorUsersCompleted(this, new GetPayorUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorUsersAsync(System.Guid licId, System.Guid payorId) {
            this.GetPayorUsersAsync(licId, payorId, null);
        }
        
        public void GetPayorUsersAsync(System.Guid licId, System.Guid payorId, object userState) {
            if ((this.onBeginGetPayorUsersDelegate == null)) {
                this.onBeginGetPayorUsersDelegate = new BeginOperationDelegate(this.OnBeginGetPayorUsers);
            }
            if ((this.onEndGetPayorUsersDelegate == null)) {
                this.onEndGetPayorUsersDelegate = new EndOperationDelegate(this.OnEndGetPayorUsers);
            }
            if ((this.onGetPayorUsersCompletedDelegate == null)) {
                this.onGetPayorUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorUsersDelegate, new object[] {
                        licId,
                        payorId}, this.onEndGetPayorUsersDelegate, this.onGetPayorUsersCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> GetLicenseeUsers(System.Guid licId) {
            return base.Channel.GetLicenseeUsers(licId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLicenseeUsers(System.Guid licId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLicenseeUsers(licId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> EndGetLicenseeUsers(System.IAsyncResult result) {
            return base.Channel.EndGetLicenseeUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetLicenseeUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licId = ((System.Guid)(inValues[0]));
            return this.BeginGetLicenseeUsers(licId, callback, asyncState);
        }
        
        private object[] OnEndGetLicenseeUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorSiteLoginInfo> retVal = this.EndGetLicenseeUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLicenseeUsersCompleted(object state) {
            if ((this.GetLicenseeUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLicenseeUsersCompleted(this, new GetLicenseeUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLicenseeUsersAsync(System.Guid licId) {
            this.GetLicenseeUsersAsync(licId, null);
        }
        
        public void GetLicenseeUsersAsync(System.Guid licId, object userState) {
            if ((this.onBeginGetLicenseeUsersDelegate == null)) {
                this.onBeginGetLicenseeUsersDelegate = new BeginOperationDelegate(this.OnBeginGetLicenseeUsers);
            }
            if ((this.onEndGetLicenseeUsersDelegate == null)) {
                this.onEndGetLicenseeUsersDelegate = new EndOperationDelegate(this.OnEndGetLicenseeUsers);
            }
            if ((this.onGetLicenseeUsersCompletedDelegate == null)) {
                this.onGetLicenseeUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLicenseeUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetLicenseeUsersDelegate, new object[] {
                        licId}, this.onEndGetLicenseeUsersDelegate, this.onGetLicenseeUsersCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPayor")]
    public interface IPayor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayor/AddUpdateDeletePayor", ReplyAction="http://tempuri.org/IPayor/AddUpdateDeletePayorResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus AddUpdateDeletePayor(MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj, MyAgencyVault.VM.MyAgencyVaultSvc.Operation operationType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayor/AddUpdateDeletePayor", ReplyAction="http://tempuri.org/IPayor/AddUpdateDeletePayorResponse")]
        System.IAsyncResult BeginAddUpdateDeletePayor(MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj, MyAgencyVault.VM.MyAgencyVaultSvc.Operation operationType, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndAddUpdateDeletePayor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayor/DeletePayor", ReplyAction="http://tempuri.org/IPayor/DeletePayorResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus DeletePayor(System.Guid PayorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayor/DeletePayor", ReplyAction="http://tempuri.org/IPayor/DeletePayorResponse")]
        System.IAsyncResult BeginDeletePayor(System.Guid PayorId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndDeletePayor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayor/GetPayors", ReplyAction="http://tempuri.org/IPayor/GetPayorsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> GetPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayor/GetPayors", ReplyAction="http://tempuri.org/IPayor/GetPayorsResponse")]
        System.IAsyncResult BeginGetPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> EndGetPayors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayor/GetPayorCount", ReplyAction="http://tempuri.org/IPayor/GetPayorCountResponse")]
        int GetPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayor/GetPayorCount", ReplyAction="http://tempuri.org/IPayor/GetPayorCountResponse")]
        System.IAsyncResult BeginGetPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState);
        
        int EndGetPayorCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayor/GetPayorsInChunk", ReplyAction="http://tempuri.org/IPayor/GetPayorsInChunkResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> GetPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayor/GetPayorsInChunk", ReplyAction="http://tempuri.org/IPayor/GetPayorsInChunkResponse")]
        System.IAsyncResult BeginGetPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> EndGetPayorsInChunk(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayor/GetPayorByID", ReplyAction="http://tempuri.org/IPayor/GetPayorByIDResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Payor GetPayorByID(System.Guid PayorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayor/GetPayorByID", ReplyAction="http://tempuri.org/IPayor/GetPayorByIDResponse")]
        System.IAsyncResult BeginGetPayorByID(System.Guid PayorId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Payor EndGetPayorByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayor/GetPayorIDbyNickName", ReplyAction="http://tempuri.org/IPayor/GetPayorIDbyNickNameResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Payor GetPayorIDbyNickName(string nickName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayor/GetPayorIDbyNickName", ReplyAction="http://tempuri.org/IPayor/GetPayorIDbyNickNameResponse")]
        System.IAsyncResult BeginGetPayorIDbyNickName(string nickName, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Payor EndGetPayorIDbyNickName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayor/ValdateLocalPayor", ReplyAction="http://tempuri.org/IPayor/ValdateLocalPayorResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus ValdateLocalPayor(MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj, string strPayorName, string strNickName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayor/ValdateLocalPayor", ReplyAction="http://tempuri.org/IPayor/ValdateLocalPayorResponse")]
        System.IAsyncResult BeginValdateLocalPayor(MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj, string strPayorName, string strNickName, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndValdateLocalPayor(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPayorChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPayor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdateDeletePayorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdateDeletePayorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePayorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePayorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorsInChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorsInChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Payor Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Payor)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorIDbyNickNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorIDbyNickNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Payor Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Payor)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValdateLocalPayorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValdateLocalPayorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayorClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPayor>, MyAgencyVault.VM.MyAgencyVaultSvc.IPayor {
        
        private BeginOperationDelegate onBeginAddUpdateDeletePayorDelegate;
        
        private EndOperationDelegate onEndAddUpdateDeletePayorDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateDeletePayorCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePayorDelegate;
        
        private EndOperationDelegate onEndDeletePayorDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePayorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorsDelegate;
        
        private EndOperationDelegate onEndGetPayorsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorCountDelegate;
        
        private EndOperationDelegate onEndGetPayorCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorsInChunkDelegate;
        
        private EndOperationDelegate onEndGetPayorsInChunkDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorsInChunkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorByIDDelegate;
        
        private EndOperationDelegate onEndGetPayorByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorIDbyNickNameDelegate;
        
        private EndOperationDelegate onEndGetPayorIDbyNickNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorIDbyNickNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginValdateLocalPayorDelegate;
        
        private EndOperationDelegate onEndValdateLocalPayorDelegate;
        
        private System.Threading.SendOrPostCallback onValdateLocalPayorCompletedDelegate;
        
        public PayorClient() {
        }
        
        public PayorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PayorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<AddUpdateDeletePayorCompletedEventArgs> AddUpdateDeletePayorCompleted;
        
        public event System.EventHandler<DeletePayorCompletedEventArgs> DeletePayorCompleted;
        
        public event System.EventHandler<GetPayorsCompletedEventArgs> GetPayorsCompleted;
        
        public event System.EventHandler<GetPayorCountCompletedEventArgs> GetPayorCountCompleted;
        
        public event System.EventHandler<GetPayorsInChunkCompletedEventArgs> GetPayorsInChunkCompleted;
        
        public event System.EventHandler<GetPayorByIDCompletedEventArgs> GetPayorByIDCompleted;
        
        public event System.EventHandler<GetPayorIDbyNickNameCompletedEventArgs> GetPayorIDbyNickNameCompleted;
        
        public event System.EventHandler<ValdateLocalPayorCompletedEventArgs> ValdateLocalPayorCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus AddUpdateDeletePayor(MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj, MyAgencyVault.VM.MyAgencyVaultSvc.Operation operationType) {
            return base.Channel.AddUpdateDeletePayor(pObj, operationType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateDeletePayor(MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj, MyAgencyVault.VM.MyAgencyVaultSvc.Operation operationType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateDeletePayor(pObj, operationType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndAddUpdateDeletePayor(System.IAsyncResult result) {
            return base.Channel.EndAddUpdateDeletePayor(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateDeletePayor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj = ((MyAgencyVault.VM.MyAgencyVaultSvc.Payor)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.Operation operationType = ((MyAgencyVault.VM.MyAgencyVaultSvc.Operation)(inValues[1]));
            return this.BeginAddUpdateDeletePayor(pObj, operationType, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateDeletePayor(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus retVal = this.EndAddUpdateDeletePayor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdateDeletePayorCompleted(object state) {
            if ((this.AddUpdateDeletePayorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateDeletePayorCompleted(this, new AddUpdateDeletePayorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateDeletePayorAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj, MyAgencyVault.VM.MyAgencyVaultSvc.Operation operationType) {
            this.AddUpdateDeletePayorAsync(pObj, operationType, null);
        }
        
        public void AddUpdateDeletePayorAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj, MyAgencyVault.VM.MyAgencyVaultSvc.Operation operationType, object userState) {
            if ((this.onBeginAddUpdateDeletePayorDelegate == null)) {
                this.onBeginAddUpdateDeletePayorDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateDeletePayor);
            }
            if ((this.onEndAddUpdateDeletePayorDelegate == null)) {
                this.onEndAddUpdateDeletePayorDelegate = new EndOperationDelegate(this.OnEndAddUpdateDeletePayor);
            }
            if ((this.onAddUpdateDeletePayorCompletedDelegate == null)) {
                this.onAddUpdateDeletePayorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateDeletePayorCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateDeletePayorDelegate, new object[] {
                        pObj,
                        operationType}, this.onEndAddUpdateDeletePayorDelegate, this.onAddUpdateDeletePayorCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus DeletePayor(System.Guid PayorId) {
            return base.Channel.DeletePayor(PayorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePayor(System.Guid PayorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePayor(PayorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndDeletePayor(System.IAsyncResult result) {
            return base.Channel.EndDeletePayor(result);
        }
        
        private System.IAsyncResult OnBeginDeletePayor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            return this.BeginDeletePayor(PayorId, callback, asyncState);
        }
        
        private object[] OnEndDeletePayor(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus retVal = this.EndDeletePayor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePayorCompleted(object state) {
            if ((this.DeletePayorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePayorCompleted(this, new DeletePayorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePayorAsync(System.Guid PayorId) {
            this.DeletePayorAsync(PayorId, null);
        }
        
        public void DeletePayorAsync(System.Guid PayorId, object userState) {
            if ((this.onBeginDeletePayorDelegate == null)) {
                this.onBeginDeletePayorDelegate = new BeginOperationDelegate(this.OnBeginDeletePayor);
            }
            if ((this.onEndDeletePayorDelegate == null)) {
                this.onEndDeletePayorDelegate = new EndOperationDelegate(this.OnEndDeletePayor);
            }
            if ((this.onDeletePayorCompletedDelegate == null)) {
                this.onDeletePayorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePayorCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePayorDelegate, new object[] {
                        PayorId}, this.onEndDeletePayorDelegate, this.onDeletePayorCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> GetPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            return base.Channel.GetPayors(LicenseeId, PayerfillInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayors(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> EndGetPayors(System.IAsyncResult result) {
            return base.Channel.EndGetPayors(result);
        }
        
        private System.IAsyncResult OnBeginGetPayors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo)(inValues[1]));
            return this.BeginGetPayors(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        private object[] OnEndGetPayors(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> retVal = this.EndGetPayors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorsCompleted(object state) {
            if ((this.GetPayorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorsCompleted(this, new GetPayorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorsAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            this.GetPayorsAsync(LicenseeId, PayerfillInfo, null);
        }
        
        public void GetPayorsAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, object userState) {
            if ((this.onBeginGetPayorsDelegate == null)) {
                this.onBeginGetPayorsDelegate = new BeginOperationDelegate(this.OnBeginGetPayors);
            }
            if ((this.onEndGetPayorsDelegate == null)) {
                this.onEndGetPayorsDelegate = new EndOperationDelegate(this.OnEndGetPayors);
            }
            if ((this.onGetPayorsCompletedDelegate == null)) {
                this.onGetPayorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorsDelegate, new object[] {
                        LicenseeId,
                        PayerfillInfo}, this.onEndGetPayorsDelegate, this.onGetPayorsCompletedDelegate, userState);
        }
        
        public int GetPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            return base.Channel.GetPayorCount(LicenseeId, PayerfillInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorCount(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetPayorCount(System.IAsyncResult result) {
            return base.Channel.EndGetPayorCount(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo)(inValues[1]));
            return this.BeginGetPayorCount(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        private object[] OnEndGetPayorCount(System.IAsyncResult result) {
            int retVal = this.EndGetPayorCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorCountCompleted(object state) {
            if ((this.GetPayorCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorCountCompleted(this, new GetPayorCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorCountAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            this.GetPayorCountAsync(LicenseeId, PayerfillInfo, null);
        }
        
        public void GetPayorCountAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, object userState) {
            if ((this.onBeginGetPayorCountDelegate == null)) {
                this.onBeginGetPayorCountDelegate = new BeginOperationDelegate(this.OnBeginGetPayorCount);
            }
            if ((this.onEndGetPayorCountDelegate == null)) {
                this.onEndGetPayorCountDelegate = new EndOperationDelegate(this.OnEndGetPayorCount);
            }
            if ((this.onGetPayorCountCompletedDelegate == null)) {
                this.onGetPayorCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorCountDelegate, new object[] {
                        LicenseeId,
                        PayerfillInfo}, this.onEndGetPayorCountDelegate, this.onGetPayorCountCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> GetPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take) {
            return base.Channel.GetPayorsInChunk(LicenseeId, PayerfillInfo, skip, take);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorsInChunk(LicenseeId, PayerfillInfo, skip, take, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> EndGetPayorsInChunk(System.IAsyncResult result) {
            return base.Channel.EndGetPayorsInChunk(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorsInChunk(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo)(inValues[1]));
            int skip = ((int)(inValues[2]));
            int take = ((int)(inValues[3]));
            return this.BeginGetPayorsInChunk(LicenseeId, PayerfillInfo, skip, take, callback, asyncState);
        }
        
        private object[] OnEndGetPayorsInChunk(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Payor> retVal = this.EndGetPayorsInChunk(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorsInChunkCompleted(object state) {
            if ((this.GetPayorsInChunkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorsInChunkCompleted(this, new GetPayorsInChunkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorsInChunkAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take) {
            this.GetPayorsInChunkAsync(LicenseeId, PayerfillInfo, skip, take, null);
        }
        
        public void GetPayorsInChunkAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take, object userState) {
            if ((this.onBeginGetPayorsInChunkDelegate == null)) {
                this.onBeginGetPayorsInChunkDelegate = new BeginOperationDelegate(this.OnBeginGetPayorsInChunk);
            }
            if ((this.onEndGetPayorsInChunkDelegate == null)) {
                this.onEndGetPayorsInChunkDelegate = new EndOperationDelegate(this.OnEndGetPayorsInChunk);
            }
            if ((this.onGetPayorsInChunkCompletedDelegate == null)) {
                this.onGetPayorsInChunkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorsInChunkCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorsInChunkDelegate, new object[] {
                        LicenseeId,
                        PayerfillInfo,
                        skip,
                        take}, this.onEndGetPayorsInChunkDelegate, this.onGetPayorsInChunkCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Payor GetPayorByID(System.Guid PayorId) {
            return base.Channel.GetPayorByID(PayorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorByID(System.Guid PayorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorByID(PayorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Payor EndGetPayorByID(System.IAsyncResult result) {
            return base.Channel.EndGetPayorByID(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            return this.BeginGetPayorByID(PayorId, callback, asyncState);
        }
        
        private object[] OnEndGetPayorByID(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Payor retVal = this.EndGetPayorByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorByIDCompleted(object state) {
            if ((this.GetPayorByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorByIDCompleted(this, new GetPayorByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorByIDAsync(System.Guid PayorId) {
            this.GetPayorByIDAsync(PayorId, null);
        }
        
        public void GetPayorByIDAsync(System.Guid PayorId, object userState) {
            if ((this.onBeginGetPayorByIDDelegate == null)) {
                this.onBeginGetPayorByIDDelegate = new BeginOperationDelegate(this.OnBeginGetPayorByID);
            }
            if ((this.onEndGetPayorByIDDelegate == null)) {
                this.onEndGetPayorByIDDelegate = new EndOperationDelegate(this.OnEndGetPayorByID);
            }
            if ((this.onGetPayorByIDCompletedDelegate == null)) {
                this.onGetPayorByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorByIDDelegate, new object[] {
                        PayorId}, this.onEndGetPayorByIDDelegate, this.onGetPayorByIDCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Payor GetPayorIDbyNickName(string nickName) {
            return base.Channel.GetPayorIDbyNickName(nickName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorIDbyNickName(string nickName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorIDbyNickName(nickName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Payor EndGetPayorIDbyNickName(System.IAsyncResult result) {
            return base.Channel.EndGetPayorIDbyNickName(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorIDbyNickName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nickName = ((string)(inValues[0]));
            return this.BeginGetPayorIDbyNickName(nickName, callback, asyncState);
        }
        
        private object[] OnEndGetPayorIDbyNickName(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Payor retVal = this.EndGetPayorIDbyNickName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorIDbyNickNameCompleted(object state) {
            if ((this.GetPayorIDbyNickNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorIDbyNickNameCompleted(this, new GetPayorIDbyNickNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorIDbyNickNameAsync(string nickName) {
            this.GetPayorIDbyNickNameAsync(nickName, null);
        }
        
        public void GetPayorIDbyNickNameAsync(string nickName, object userState) {
            if ((this.onBeginGetPayorIDbyNickNameDelegate == null)) {
                this.onBeginGetPayorIDbyNickNameDelegate = new BeginOperationDelegate(this.OnBeginGetPayorIDbyNickName);
            }
            if ((this.onEndGetPayorIDbyNickNameDelegate == null)) {
                this.onEndGetPayorIDbyNickNameDelegate = new EndOperationDelegate(this.OnEndGetPayorIDbyNickName);
            }
            if ((this.onGetPayorIDbyNickNameCompletedDelegate == null)) {
                this.onGetPayorIDbyNickNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorIDbyNickNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorIDbyNickNameDelegate, new object[] {
                        nickName}, this.onEndGetPayorIDbyNickNameDelegate, this.onGetPayorIDbyNickNameCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus ValdateLocalPayor(MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj, string strPayorName, string strNickName) {
            return base.Channel.ValdateLocalPayor(pObj, strPayorName, strNickName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValdateLocalPayor(MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj, string strPayorName, string strNickName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValdateLocalPayor(pObj, strPayorName, strNickName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndValdateLocalPayor(System.IAsyncResult result) {
            return base.Channel.EndValdateLocalPayor(result);
        }
        
        private System.IAsyncResult OnBeginValdateLocalPayor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj = ((MyAgencyVault.VM.MyAgencyVaultSvc.Payor)(inValues[0]));
            string strPayorName = ((string)(inValues[1]));
            string strNickName = ((string)(inValues[2]));
            return this.BeginValdateLocalPayor(pObj, strPayorName, strNickName, callback, asyncState);
        }
        
        private object[] OnEndValdateLocalPayor(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus retVal = this.EndValdateLocalPayor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValdateLocalPayorCompleted(object state) {
            if ((this.ValdateLocalPayorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValdateLocalPayorCompleted(this, new ValdateLocalPayorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValdateLocalPayorAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj, string strPayorName, string strNickName) {
            this.ValdateLocalPayorAsync(pObj, strPayorName, strNickName, null);
        }
        
        public void ValdateLocalPayorAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Payor pObj, string strPayorName, string strNickName, object userState) {
            if ((this.onBeginValdateLocalPayorDelegate == null)) {
                this.onBeginValdateLocalPayorDelegate = new BeginOperationDelegate(this.OnBeginValdateLocalPayor);
            }
            if ((this.onEndValdateLocalPayorDelegate == null)) {
                this.onEndValdateLocalPayorDelegate = new EndOperationDelegate(this.OnEndValdateLocalPayor);
            }
            if ((this.onValdateLocalPayorCompletedDelegate == null)) {
                this.onValdateLocalPayorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValdateLocalPayorCompleted);
            }
            base.InvokeAsync(this.onBeginValdateLocalPayorDelegate, new object[] {
                        pObj,
                        strPayorName,
                        strNickName}, this.onEndValdateLocalPayorDelegate, this.onValdateLocalPayorCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IMasters")]
    public interface IMasters {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetSupportedFileTypeList", ReplyAction="http://tempuri.org/IMasters/GetSupportedFileTypeListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FileType> GetSupportedFileTypeList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetSupportedFileTypeList", ReplyAction="http://tempuri.org/IMasters/GetSupportedFileTypeListResponse")]
        System.IAsyncResult BeginGetSupportedFileTypeList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FileType> EndGetSupportedFileTypeList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetBatchDownloadStatus", ReplyAction="http://tempuri.org/IMasters/GetBatchDownloadStatusResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchDownloadStatus> GetBatchDownloadStatus();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetBatchDownloadStatus", ReplyAction="http://tempuri.org/IMasters/GetBatchDownloadStatusResponse")]
        System.IAsyncResult BeginGetBatchDownloadStatus(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchDownloadStatus> EndGetBatchDownloadStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetLicenseeStatusList", ReplyAction="http://tempuri.org/IMasters/GetLicenseeStatusListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatus> GetLicenseeStatusList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetLicenseeStatusList", ReplyAction="http://tempuri.org/IMasters/GetLicenseeStatusListResponse")]
        System.IAsyncResult BeginGetLicenseeStatusList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatus> EndGetLicenseeStatusList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetPayorToolIncomingFieldList", ReplyAction="http://tempuri.org/IMasters/GetPayorToolIncomingFieldListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolIncomingFieldType> GetPayorToolIncomingFieldList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetPayorToolIncomingFieldList", ReplyAction="http://tempuri.org/IMasters/GetPayorToolIncomingFieldListResponse")]
        System.IAsyncResult BeginGetPayorToolIncomingFieldList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolIncomingFieldType> EndGetPayorToolIncomingFieldList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetPayorToolLearnedFieldList", ReplyAction="http://tempuri.org/IMasters/GetPayorToolLearnedFieldListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolLearnedlFieldType> GetPayorToolLearnedFieldList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetPayorToolLearnedFieldList", ReplyAction="http://tempuri.org/IMasters/GetPayorToolLearnedFieldListResponse")]
        System.IAsyncResult BeginGetPayorToolLearnedFieldList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolLearnedlFieldType> EndGetPayorToolLearnedFieldList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetPolicyIncomingPaymentTypeList", ReplyAction="http://tempuri.org/IMasters/GetPolicyIncomingPaymentTypeListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType> GetPolicyIncomingPaymentTypeList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetPolicyIncomingPaymentTypeList", ReplyAction="http://tempuri.org/IMasters/GetPolicyIncomingPaymentTypeListResponse")]
        System.IAsyncResult BeginGetPolicyIncomingPaymentTypeList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType> EndGetPolicyIncomingPaymentTypeList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetPolicyIncomingScheduleTypeList", ReplyAction="http://tempuri.org/IMasters/GetPolicyIncomingScheduleTypeListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingScheduleType> GetPolicyIncomingScheduleTypeList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetPolicyIncomingScheduleTypeList", ReplyAction="http://tempuri.org/IMasters/GetPolicyIncomingScheduleTypeListResponse")]
        System.IAsyncResult BeginGetPolicyIncomingScheduleTypeList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingScheduleType> EndGetPolicyIncomingScheduleTypeList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetPolicyModeList", ReplyAction="http://tempuri.org/IMasters/GetPolicyModeListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> GetPolicyModeList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetPolicyModeList", ReplyAction="http://tempuri.org/IMasters/GetPolicyModeListResponse")]
        System.IAsyncResult BeginGetPolicyModeList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> EndGetPolicyModeList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetPolicyModeListWithBlankAdded", ReplyAction="http://tempuri.org/IMasters/GetPolicyModeListWithBlankAddedResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> GetPolicyModeListWithBlankAdded();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetPolicyModeListWithBlankAdded", ReplyAction="http://tempuri.org/IMasters/GetPolicyModeListWithBlankAddedResponse")]
        System.IAsyncResult BeginGetPolicyModeListWithBlankAdded(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> EndGetPolicyModeListWithBlankAdded(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetPolicyModeByID", ReplyAction="http://tempuri.org/IMasters/GetPolicyModeByIDResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode GetPolicyModeByID(int ModeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetPolicyModeByID", ReplyAction="http://tempuri.org/IMasters/GetPolicyModeByIDResponse")]
        System.IAsyncResult BeginGetPolicyModeByID(int ModeID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode EndGetPolicyModeByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetPolicyOutgoingScheduleTypeList", ReplyAction="http://tempuri.org/IMasters/GetPolicyOutgoingScheduleTypeListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingScheduleType> GetPolicyOutgoingScheduleTypeList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetPolicyOutgoingScheduleTypeList", ReplyAction="http://tempuri.org/IMasters/GetPolicyOutgoingScheduleTypeListResponse")]
        System.IAsyncResult BeginGetPolicyOutgoingScheduleTypeList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingScheduleType> EndGetPolicyOutgoingScheduleTypeList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetPolicyStatusList", ReplyAction="http://tempuri.org/IMasters/GetPolicyStatusListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyStatus> GetPolicyStatusList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetPolicyStatusList", ReplyAction="http://tempuri.org/IMasters/GetPolicyStatusListResponse")]
        System.IAsyncResult BeginGetPolicyStatusList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyStatus> EndGetPolicyStatusList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetTerminationReasonList", ReplyAction="http://tempuri.org/IMasters/GetTerminationReasonListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> GetTerminationReasonList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetTerminationReasonList", ReplyAction="http://tempuri.org/IMasters/GetTerminationReasonListResponse")]
        System.IAsyncResult BeginGetTerminationReasonList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> EndGetTerminationReasonList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetTerminationReasonListWithBlankAdded", ReplyAction="http://tempuri.org/IMasters/GetTerminationReasonListWithBlankAddedResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> GetTerminationReasonListWithBlankAdded();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetTerminationReasonListWithBlankAdded", ReplyAction="http://tempuri.org/IMasters/GetTerminationReasonListWithBlankAddedResponse")]
        System.IAsyncResult BeginGetTerminationReasonListWithBlankAdded(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> EndGetTerminationReasonListWithBlankAdded(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetQuestions", ReplyAction="http://tempuri.org/IMasters/GetQuestionsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Question> GetQuestions();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetQuestions", ReplyAction="http://tempuri.org/IMasters/GetQuestionsResponse")]
        System.IAsyncResult BeginGetQuestions(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Question> EndGetQuestions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetRegionList", ReplyAction="http://tempuri.org/IMasters/GetRegionListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Region> GetRegionList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetRegionList", ReplyAction="http://tempuri.org/IMasters/GetRegionListResponse")]
        System.IAsyncResult BeginGetRegionList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Region> EndGetRegionList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetSystemConstants", ReplyAction="http://tempuri.org/IMasters/GetSystemConstantsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SystemConstant> GetSystemConstants();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetSystemConstants", ReplyAction="http://tempuri.org/IMasters/GetSystemConstantsResponse")]
        System.IAsyncResult BeginGetSystemConstants(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SystemConstant> EndGetSystemConstants(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetZipList", ReplyAction="http://tempuri.org/IMasters/GetZipListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Zip> GetZipList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetZipList", ReplyAction="http://tempuri.org/IMasters/GetZipListResponse")]
        System.IAsyncResult BeginGetZipList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Zip> EndGetZipList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetZip", ReplyAction="http://tempuri.org/IMasters/GetZipResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Zip GetZip(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetZip", ReplyAction="http://tempuri.org/IMasters/GetZipResponse")]
        System.IAsyncResult BeginGetZip(string zipcode, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Zip EndGetZip(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetPayorToolMaskedFieldList", ReplyAction="http://tempuri.org/IMasters/GetPayorToolMaskedFieldListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolMaskedFieldType> GetPayorToolMaskedFieldList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetPayorToolMaskedFieldList", ReplyAction="http://tempuri.org/IMasters/GetPayorToolMaskedFieldListResponse")]
        System.IAsyncResult BeginGetPayorToolMaskedFieldList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolMaskedFieldType> EndGetPayorToolMaskedFieldList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetMaskName", ReplyAction="http://tempuri.org/IMasters/GetMaskNameResponse")]
        string GetMaskName(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetMaskName", ReplyAction="http://tempuri.org/IMasters/GetMaskNameResponse")]
        System.IAsyncResult BeginGetMaskName(int id, System.AsyncCallback callback, object asyncState);
        
        string EndGetMaskName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetSystemConstantKeyValue", ReplyAction="http://tempuri.org/IMasters/GetSystemConstantKeyValueResponse")]
        string GetSystemConstantKeyValue(string key);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetSystemConstantKeyValue", ReplyAction="http://tempuri.org/IMasters/GetSystemConstantKeyValueResponse")]
        System.IAsyncResult BeginGetSystemConstantKeyValue(string key, System.AsyncCallback callback, object asyncState);
        
        string EndGetSystemConstantKeyValue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetPolicyDetailMasterData", ReplyAction="http://tempuri.org/IMasters/GetPolicyDetailMasterDataResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailMasterData GetPolicyDetailMasterData();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetPolicyDetailMasterData", ReplyAction="http://tempuri.org/IMasters/GetPolicyDetailMasterDataResponse")]
        System.IAsyncResult BeginGetPolicyDetailMasterData(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailMasterData EndGetPolicyDetailMasterData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/AddLog", ReplyAction="http://tempuri.org/IMasters/AddLogResponse")]
        void AddLog(string message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/AddLog", ReplyAction="http://tempuri.org/IMasters/AddLogResponse")]
        System.IAsyncResult BeginAddLog(string message, System.AsyncCallback callback, object asyncState);
        
        void EndAddLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasters/GetTempFolderSetting", ReplyAction="http://tempuri.org/IMasters/GetTempFolderSettingResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.TempFolderDetails GetTempFolderSetting();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMasters/GetTempFolderSetting", ReplyAction="http://tempuri.org/IMasters/GetTempFolderSettingResponse")]
        System.IAsyncResult BeginGetTempFolderSetting(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.TempFolderDetails EndGetTempFolderSetting(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMastersChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IMasters, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSupportedFileTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSupportedFileTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FileType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FileType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBatchDownloadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBatchDownloadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchDownloadStatus> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchDownloadStatus>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLicenseeStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLicenseeStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatus> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatus>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorToolIncomingFieldListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorToolIncomingFieldListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolIncomingFieldType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolIncomingFieldType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorToolLearnedFieldListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorToolLearnedFieldListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolLearnedlFieldType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolLearnedlFieldType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyIncomingPaymentTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyIncomingPaymentTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyIncomingScheduleTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyIncomingScheduleTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingScheduleType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingScheduleType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyModeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyModeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyModeListWithBlankAddedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyModeListWithBlankAddedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyModeByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyModeByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyOutgoingScheduleTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyOutgoingScheduleTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingScheduleType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingScheduleType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyStatus> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyStatus>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTerminationReasonListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTerminationReasonListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTerminationReasonListWithBlankAddedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTerminationReasonListWithBlankAddedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Question> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Question>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRegionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRegionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Region> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Region>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSystemConstantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSystemConstantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SystemConstant> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SystemConstant>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetZipListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetZipListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Zip> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Zip>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetZipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetZipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Zip Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Zip)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorToolMaskedFieldListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorToolMaskedFieldListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolMaskedFieldType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolMaskedFieldType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMaskNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMaskNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSystemConstantKeyValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSystemConstantKeyValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyDetailMasterDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyDetailMasterDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailMasterData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailMasterData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTempFolderSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTempFolderSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.TempFolderDetails Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.TempFolderDetails)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MastersClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IMasters>, MyAgencyVault.VM.MyAgencyVaultSvc.IMasters {
        
        private BeginOperationDelegate onBeginGetSupportedFileTypeListDelegate;
        
        private EndOperationDelegate onEndGetSupportedFileTypeListDelegate;
        
        private System.Threading.SendOrPostCallback onGetSupportedFileTypeListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBatchDownloadStatusDelegate;
        
        private EndOperationDelegate onEndGetBatchDownloadStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetBatchDownloadStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLicenseeStatusListDelegate;
        
        private EndOperationDelegate onEndGetLicenseeStatusListDelegate;
        
        private System.Threading.SendOrPostCallback onGetLicenseeStatusListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorToolIncomingFieldListDelegate;
        
        private EndOperationDelegate onEndGetPayorToolIncomingFieldListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorToolIncomingFieldListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorToolLearnedFieldListDelegate;
        
        private EndOperationDelegate onEndGetPayorToolLearnedFieldListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorToolLearnedFieldListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyIncomingPaymentTypeListDelegate;
        
        private EndOperationDelegate onEndGetPolicyIncomingPaymentTypeListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyIncomingPaymentTypeListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyIncomingScheduleTypeListDelegate;
        
        private EndOperationDelegate onEndGetPolicyIncomingScheduleTypeListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyIncomingScheduleTypeListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyModeListDelegate;
        
        private EndOperationDelegate onEndGetPolicyModeListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyModeListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyModeListWithBlankAddedDelegate;
        
        private EndOperationDelegate onEndGetPolicyModeListWithBlankAddedDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyModeListWithBlankAddedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyModeByIDDelegate;
        
        private EndOperationDelegate onEndGetPolicyModeByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyModeByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyOutgoingScheduleTypeListDelegate;
        
        private EndOperationDelegate onEndGetPolicyOutgoingScheduleTypeListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyOutgoingScheduleTypeListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyStatusListDelegate;
        
        private EndOperationDelegate onEndGetPolicyStatusListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyStatusListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTerminationReasonListDelegate;
        
        private EndOperationDelegate onEndGetTerminationReasonListDelegate;
        
        private System.Threading.SendOrPostCallback onGetTerminationReasonListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTerminationReasonListWithBlankAddedDelegate;
        
        private EndOperationDelegate onEndGetTerminationReasonListWithBlankAddedDelegate;
        
        private System.Threading.SendOrPostCallback onGetTerminationReasonListWithBlankAddedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetQuestionsDelegate;
        
        private EndOperationDelegate onEndGetQuestionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetQuestionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRegionListDelegate;
        
        private EndOperationDelegate onEndGetRegionListDelegate;
        
        private System.Threading.SendOrPostCallback onGetRegionListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSystemConstantsDelegate;
        
        private EndOperationDelegate onEndGetSystemConstantsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSystemConstantsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetZipListDelegate;
        
        private EndOperationDelegate onEndGetZipListDelegate;
        
        private System.Threading.SendOrPostCallback onGetZipListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetZipDelegate;
        
        private EndOperationDelegate onEndGetZipDelegate;
        
        private System.Threading.SendOrPostCallback onGetZipCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorToolMaskedFieldListDelegate;
        
        private EndOperationDelegate onEndGetPayorToolMaskedFieldListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorToolMaskedFieldListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMaskNameDelegate;
        
        private EndOperationDelegate onEndGetMaskNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetMaskNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSystemConstantKeyValueDelegate;
        
        private EndOperationDelegate onEndGetSystemConstantKeyValueDelegate;
        
        private System.Threading.SendOrPostCallback onGetSystemConstantKeyValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyDetailMasterDataDelegate;
        
        private EndOperationDelegate onEndGetPolicyDetailMasterDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyDetailMasterDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddLogDelegate;
        
        private EndOperationDelegate onEndAddLogDelegate;
        
        private System.Threading.SendOrPostCallback onAddLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTempFolderSettingDelegate;
        
        private EndOperationDelegate onEndGetTempFolderSettingDelegate;
        
        private System.Threading.SendOrPostCallback onGetTempFolderSettingCompletedDelegate;
        
        public MastersClient() {
        }
        
        public MastersClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MastersClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MastersClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MastersClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetSupportedFileTypeListCompletedEventArgs> GetSupportedFileTypeListCompleted;
        
        public event System.EventHandler<GetBatchDownloadStatusCompletedEventArgs> GetBatchDownloadStatusCompleted;
        
        public event System.EventHandler<GetLicenseeStatusListCompletedEventArgs> GetLicenseeStatusListCompleted;
        
        public event System.EventHandler<GetPayorToolIncomingFieldListCompletedEventArgs> GetPayorToolIncomingFieldListCompleted;
        
        public event System.EventHandler<GetPayorToolLearnedFieldListCompletedEventArgs> GetPayorToolLearnedFieldListCompleted;
        
        public event System.EventHandler<GetPolicyIncomingPaymentTypeListCompletedEventArgs> GetPolicyIncomingPaymentTypeListCompleted;
        
        public event System.EventHandler<GetPolicyIncomingScheduleTypeListCompletedEventArgs> GetPolicyIncomingScheduleTypeListCompleted;
        
        public event System.EventHandler<GetPolicyModeListCompletedEventArgs> GetPolicyModeListCompleted;
        
        public event System.EventHandler<GetPolicyModeListWithBlankAddedCompletedEventArgs> GetPolicyModeListWithBlankAddedCompleted;
        
        public event System.EventHandler<GetPolicyModeByIDCompletedEventArgs> GetPolicyModeByIDCompleted;
        
        public event System.EventHandler<GetPolicyOutgoingScheduleTypeListCompletedEventArgs> GetPolicyOutgoingScheduleTypeListCompleted;
        
        public event System.EventHandler<GetPolicyStatusListCompletedEventArgs> GetPolicyStatusListCompleted;
        
        public event System.EventHandler<GetTerminationReasonListCompletedEventArgs> GetTerminationReasonListCompleted;
        
        public event System.EventHandler<GetTerminationReasonListWithBlankAddedCompletedEventArgs> GetTerminationReasonListWithBlankAddedCompleted;
        
        public event System.EventHandler<GetQuestionsCompletedEventArgs> GetQuestionsCompleted;
        
        public event System.EventHandler<GetRegionListCompletedEventArgs> GetRegionListCompleted;
        
        public event System.EventHandler<GetSystemConstantsCompletedEventArgs> GetSystemConstantsCompleted;
        
        public event System.EventHandler<GetZipListCompletedEventArgs> GetZipListCompleted;
        
        public event System.EventHandler<GetZipCompletedEventArgs> GetZipCompleted;
        
        public event System.EventHandler<GetPayorToolMaskedFieldListCompletedEventArgs> GetPayorToolMaskedFieldListCompleted;
        
        public event System.EventHandler<GetMaskNameCompletedEventArgs> GetMaskNameCompleted;
        
        public event System.EventHandler<GetSystemConstantKeyValueCompletedEventArgs> GetSystemConstantKeyValueCompleted;
        
        public event System.EventHandler<GetPolicyDetailMasterDataCompletedEventArgs> GetPolicyDetailMasterDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddLogCompleted;
        
        public event System.EventHandler<GetTempFolderSettingCompletedEventArgs> GetTempFolderSettingCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FileType> GetSupportedFileTypeList() {
            return base.Channel.GetSupportedFileTypeList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSupportedFileTypeList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSupportedFileTypeList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FileType> EndGetSupportedFileTypeList(System.IAsyncResult result) {
            return base.Channel.EndGetSupportedFileTypeList(result);
        }
        
        private System.IAsyncResult OnBeginGetSupportedFileTypeList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSupportedFileTypeList(callback, asyncState);
        }
        
        private object[] OnEndGetSupportedFileTypeList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FileType> retVal = this.EndGetSupportedFileTypeList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSupportedFileTypeListCompleted(object state) {
            if ((this.GetSupportedFileTypeListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSupportedFileTypeListCompleted(this, new GetSupportedFileTypeListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSupportedFileTypeListAsync() {
            this.GetSupportedFileTypeListAsync(null);
        }
        
        public void GetSupportedFileTypeListAsync(object userState) {
            if ((this.onBeginGetSupportedFileTypeListDelegate == null)) {
                this.onBeginGetSupportedFileTypeListDelegate = new BeginOperationDelegate(this.OnBeginGetSupportedFileTypeList);
            }
            if ((this.onEndGetSupportedFileTypeListDelegate == null)) {
                this.onEndGetSupportedFileTypeListDelegate = new EndOperationDelegate(this.OnEndGetSupportedFileTypeList);
            }
            if ((this.onGetSupportedFileTypeListCompletedDelegate == null)) {
                this.onGetSupportedFileTypeListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSupportedFileTypeListCompleted);
            }
            base.InvokeAsync(this.onBeginGetSupportedFileTypeListDelegate, null, this.onEndGetSupportedFileTypeListDelegate, this.onGetSupportedFileTypeListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchDownloadStatus> GetBatchDownloadStatus() {
            return base.Channel.GetBatchDownloadStatus();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBatchDownloadStatus(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBatchDownloadStatus(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchDownloadStatus> EndGetBatchDownloadStatus(System.IAsyncResult result) {
            return base.Channel.EndGetBatchDownloadStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetBatchDownloadStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetBatchDownloadStatus(callback, asyncState);
        }
        
        private object[] OnEndGetBatchDownloadStatus(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchDownloadStatus> retVal = this.EndGetBatchDownloadStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBatchDownloadStatusCompleted(object state) {
            if ((this.GetBatchDownloadStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBatchDownloadStatusCompleted(this, new GetBatchDownloadStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBatchDownloadStatusAsync() {
            this.GetBatchDownloadStatusAsync(null);
        }
        
        public void GetBatchDownloadStatusAsync(object userState) {
            if ((this.onBeginGetBatchDownloadStatusDelegate == null)) {
                this.onBeginGetBatchDownloadStatusDelegate = new BeginOperationDelegate(this.OnBeginGetBatchDownloadStatus);
            }
            if ((this.onEndGetBatchDownloadStatusDelegate == null)) {
                this.onEndGetBatchDownloadStatusDelegate = new EndOperationDelegate(this.OnEndGetBatchDownloadStatus);
            }
            if ((this.onGetBatchDownloadStatusCompletedDelegate == null)) {
                this.onGetBatchDownloadStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBatchDownloadStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetBatchDownloadStatusDelegate, null, this.onEndGetBatchDownloadStatusDelegate, this.onGetBatchDownloadStatusCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatus> GetLicenseeStatusList() {
            return base.Channel.GetLicenseeStatusList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLicenseeStatusList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLicenseeStatusList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatus> EndGetLicenseeStatusList(System.IAsyncResult result) {
            return base.Channel.EndGetLicenseeStatusList(result);
        }
        
        private System.IAsyncResult OnBeginGetLicenseeStatusList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLicenseeStatusList(callback, asyncState);
        }
        
        private object[] OnEndGetLicenseeStatusList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatus> retVal = this.EndGetLicenseeStatusList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLicenseeStatusListCompleted(object state) {
            if ((this.GetLicenseeStatusListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLicenseeStatusListCompleted(this, new GetLicenseeStatusListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLicenseeStatusListAsync() {
            this.GetLicenseeStatusListAsync(null);
        }
        
        public void GetLicenseeStatusListAsync(object userState) {
            if ((this.onBeginGetLicenseeStatusListDelegate == null)) {
                this.onBeginGetLicenseeStatusListDelegate = new BeginOperationDelegate(this.OnBeginGetLicenseeStatusList);
            }
            if ((this.onEndGetLicenseeStatusListDelegate == null)) {
                this.onEndGetLicenseeStatusListDelegate = new EndOperationDelegate(this.OnEndGetLicenseeStatusList);
            }
            if ((this.onGetLicenseeStatusListCompletedDelegate == null)) {
                this.onGetLicenseeStatusListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLicenseeStatusListCompleted);
            }
            base.InvokeAsync(this.onBeginGetLicenseeStatusListDelegate, null, this.onEndGetLicenseeStatusListDelegate, this.onGetLicenseeStatusListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolIncomingFieldType> GetPayorToolIncomingFieldList() {
            return base.Channel.GetPayorToolIncomingFieldList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorToolIncomingFieldList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorToolIncomingFieldList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolIncomingFieldType> EndGetPayorToolIncomingFieldList(System.IAsyncResult result) {
            return base.Channel.EndGetPayorToolIncomingFieldList(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorToolIncomingFieldList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPayorToolIncomingFieldList(callback, asyncState);
        }
        
        private object[] OnEndGetPayorToolIncomingFieldList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolIncomingFieldType> retVal = this.EndGetPayorToolIncomingFieldList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorToolIncomingFieldListCompleted(object state) {
            if ((this.GetPayorToolIncomingFieldListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorToolIncomingFieldListCompleted(this, new GetPayorToolIncomingFieldListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorToolIncomingFieldListAsync() {
            this.GetPayorToolIncomingFieldListAsync(null);
        }
        
        public void GetPayorToolIncomingFieldListAsync(object userState) {
            if ((this.onBeginGetPayorToolIncomingFieldListDelegate == null)) {
                this.onBeginGetPayorToolIncomingFieldListDelegate = new BeginOperationDelegate(this.OnBeginGetPayorToolIncomingFieldList);
            }
            if ((this.onEndGetPayorToolIncomingFieldListDelegate == null)) {
                this.onEndGetPayorToolIncomingFieldListDelegate = new EndOperationDelegate(this.OnEndGetPayorToolIncomingFieldList);
            }
            if ((this.onGetPayorToolIncomingFieldListCompletedDelegate == null)) {
                this.onGetPayorToolIncomingFieldListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorToolIncomingFieldListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorToolIncomingFieldListDelegate, null, this.onEndGetPayorToolIncomingFieldListDelegate, this.onGetPayorToolIncomingFieldListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolLearnedlFieldType> GetPayorToolLearnedFieldList() {
            return base.Channel.GetPayorToolLearnedFieldList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorToolLearnedFieldList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorToolLearnedFieldList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolLearnedlFieldType> EndGetPayorToolLearnedFieldList(System.IAsyncResult result) {
            return base.Channel.EndGetPayorToolLearnedFieldList(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorToolLearnedFieldList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPayorToolLearnedFieldList(callback, asyncState);
        }
        
        private object[] OnEndGetPayorToolLearnedFieldList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolLearnedlFieldType> retVal = this.EndGetPayorToolLearnedFieldList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorToolLearnedFieldListCompleted(object state) {
            if ((this.GetPayorToolLearnedFieldListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorToolLearnedFieldListCompleted(this, new GetPayorToolLearnedFieldListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorToolLearnedFieldListAsync() {
            this.GetPayorToolLearnedFieldListAsync(null);
        }
        
        public void GetPayorToolLearnedFieldListAsync(object userState) {
            if ((this.onBeginGetPayorToolLearnedFieldListDelegate == null)) {
                this.onBeginGetPayorToolLearnedFieldListDelegate = new BeginOperationDelegate(this.OnBeginGetPayorToolLearnedFieldList);
            }
            if ((this.onEndGetPayorToolLearnedFieldListDelegate == null)) {
                this.onEndGetPayorToolLearnedFieldListDelegate = new EndOperationDelegate(this.OnEndGetPayorToolLearnedFieldList);
            }
            if ((this.onGetPayorToolLearnedFieldListCompletedDelegate == null)) {
                this.onGetPayorToolLearnedFieldListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorToolLearnedFieldListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorToolLearnedFieldListDelegate, null, this.onEndGetPayorToolLearnedFieldListDelegate, this.onGetPayorToolLearnedFieldListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType> GetPolicyIncomingPaymentTypeList() {
            return base.Channel.GetPolicyIncomingPaymentTypeList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyIncomingPaymentTypeList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyIncomingPaymentTypeList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType> EndGetPolicyIncomingPaymentTypeList(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyIncomingPaymentTypeList(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyIncomingPaymentTypeList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPolicyIncomingPaymentTypeList(callback, asyncState);
        }
        
        private object[] OnEndGetPolicyIncomingPaymentTypeList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingPaymentType> retVal = this.EndGetPolicyIncomingPaymentTypeList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyIncomingPaymentTypeListCompleted(object state) {
            if ((this.GetPolicyIncomingPaymentTypeListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyIncomingPaymentTypeListCompleted(this, new GetPolicyIncomingPaymentTypeListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyIncomingPaymentTypeListAsync() {
            this.GetPolicyIncomingPaymentTypeListAsync(null);
        }
        
        public void GetPolicyIncomingPaymentTypeListAsync(object userState) {
            if ((this.onBeginGetPolicyIncomingPaymentTypeListDelegate == null)) {
                this.onBeginGetPolicyIncomingPaymentTypeListDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyIncomingPaymentTypeList);
            }
            if ((this.onEndGetPolicyIncomingPaymentTypeListDelegate == null)) {
                this.onEndGetPolicyIncomingPaymentTypeListDelegate = new EndOperationDelegate(this.OnEndGetPolicyIncomingPaymentTypeList);
            }
            if ((this.onGetPolicyIncomingPaymentTypeListCompletedDelegate == null)) {
                this.onGetPolicyIncomingPaymentTypeListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyIncomingPaymentTypeListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyIncomingPaymentTypeListDelegate, null, this.onEndGetPolicyIncomingPaymentTypeListDelegate, this.onGetPolicyIncomingPaymentTypeListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingScheduleType> GetPolicyIncomingScheduleTypeList() {
            return base.Channel.GetPolicyIncomingScheduleTypeList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyIncomingScheduleTypeList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyIncomingScheduleTypeList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingScheduleType> EndGetPolicyIncomingScheduleTypeList(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyIncomingScheduleTypeList(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyIncomingScheduleTypeList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPolicyIncomingScheduleTypeList(callback, asyncState);
        }
        
        private object[] OnEndGetPolicyIncomingScheduleTypeList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingScheduleType> retVal = this.EndGetPolicyIncomingScheduleTypeList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyIncomingScheduleTypeListCompleted(object state) {
            if ((this.GetPolicyIncomingScheduleTypeListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyIncomingScheduleTypeListCompleted(this, new GetPolicyIncomingScheduleTypeListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyIncomingScheduleTypeListAsync() {
            this.GetPolicyIncomingScheduleTypeListAsync(null);
        }
        
        public void GetPolicyIncomingScheduleTypeListAsync(object userState) {
            if ((this.onBeginGetPolicyIncomingScheduleTypeListDelegate == null)) {
                this.onBeginGetPolicyIncomingScheduleTypeListDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyIncomingScheduleTypeList);
            }
            if ((this.onEndGetPolicyIncomingScheduleTypeListDelegate == null)) {
                this.onEndGetPolicyIncomingScheduleTypeListDelegate = new EndOperationDelegate(this.OnEndGetPolicyIncomingScheduleTypeList);
            }
            if ((this.onGetPolicyIncomingScheduleTypeListCompletedDelegate == null)) {
                this.onGetPolicyIncomingScheduleTypeListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyIncomingScheduleTypeListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyIncomingScheduleTypeListDelegate, null, this.onEndGetPolicyIncomingScheduleTypeListDelegate, this.onGetPolicyIncomingScheduleTypeListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> GetPolicyModeList() {
            return base.Channel.GetPolicyModeList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyModeList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyModeList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> EndGetPolicyModeList(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyModeList(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyModeList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPolicyModeList(callback, asyncState);
        }
        
        private object[] OnEndGetPolicyModeList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> retVal = this.EndGetPolicyModeList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyModeListCompleted(object state) {
            if ((this.GetPolicyModeListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyModeListCompleted(this, new GetPolicyModeListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyModeListAsync() {
            this.GetPolicyModeListAsync(null);
        }
        
        public void GetPolicyModeListAsync(object userState) {
            if ((this.onBeginGetPolicyModeListDelegate == null)) {
                this.onBeginGetPolicyModeListDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyModeList);
            }
            if ((this.onEndGetPolicyModeListDelegate == null)) {
                this.onEndGetPolicyModeListDelegate = new EndOperationDelegate(this.OnEndGetPolicyModeList);
            }
            if ((this.onGetPolicyModeListCompletedDelegate == null)) {
                this.onGetPolicyModeListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyModeListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyModeListDelegate, null, this.onEndGetPolicyModeListDelegate, this.onGetPolicyModeListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> GetPolicyModeListWithBlankAdded() {
            return base.Channel.GetPolicyModeListWithBlankAdded();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyModeListWithBlankAdded(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyModeListWithBlankAdded(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> EndGetPolicyModeListWithBlankAdded(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyModeListWithBlankAdded(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyModeListWithBlankAdded(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPolicyModeListWithBlankAdded(callback, asyncState);
        }
        
        private object[] OnEndGetPolicyModeListWithBlankAdded(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode> retVal = this.EndGetPolicyModeListWithBlankAdded(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyModeListWithBlankAddedCompleted(object state) {
            if ((this.GetPolicyModeListWithBlankAddedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyModeListWithBlankAddedCompleted(this, new GetPolicyModeListWithBlankAddedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyModeListWithBlankAddedAsync() {
            this.GetPolicyModeListWithBlankAddedAsync(null);
        }
        
        public void GetPolicyModeListWithBlankAddedAsync(object userState) {
            if ((this.onBeginGetPolicyModeListWithBlankAddedDelegate == null)) {
                this.onBeginGetPolicyModeListWithBlankAddedDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyModeListWithBlankAdded);
            }
            if ((this.onEndGetPolicyModeListWithBlankAddedDelegate == null)) {
                this.onEndGetPolicyModeListWithBlankAddedDelegate = new EndOperationDelegate(this.OnEndGetPolicyModeListWithBlankAdded);
            }
            if ((this.onGetPolicyModeListWithBlankAddedCompletedDelegate == null)) {
                this.onGetPolicyModeListWithBlankAddedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyModeListWithBlankAddedCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyModeListWithBlankAddedDelegate, null, this.onEndGetPolicyModeListWithBlankAddedDelegate, this.onGetPolicyModeListWithBlankAddedCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode GetPolicyModeByID(int ModeID) {
            return base.Channel.GetPolicyModeByID(ModeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyModeByID(int ModeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyModeByID(ModeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode EndGetPolicyModeByID(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyModeByID(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyModeByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ModeID = ((int)(inValues[0]));
            return this.BeginGetPolicyModeByID(ModeID, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyModeByID(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyMode retVal = this.EndGetPolicyModeByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyModeByIDCompleted(object state) {
            if ((this.GetPolicyModeByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyModeByIDCompleted(this, new GetPolicyModeByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyModeByIDAsync(int ModeID) {
            this.GetPolicyModeByIDAsync(ModeID, null);
        }
        
        public void GetPolicyModeByIDAsync(int ModeID, object userState) {
            if ((this.onBeginGetPolicyModeByIDDelegate == null)) {
                this.onBeginGetPolicyModeByIDDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyModeByID);
            }
            if ((this.onEndGetPolicyModeByIDDelegate == null)) {
                this.onEndGetPolicyModeByIDDelegate = new EndOperationDelegate(this.OnEndGetPolicyModeByID);
            }
            if ((this.onGetPolicyModeByIDCompletedDelegate == null)) {
                this.onGetPolicyModeByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyModeByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyModeByIDDelegate, new object[] {
                        ModeID}, this.onEndGetPolicyModeByIDDelegate, this.onGetPolicyModeByIDCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingScheduleType> GetPolicyOutgoingScheduleTypeList() {
            return base.Channel.GetPolicyOutgoingScheduleTypeList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyOutgoingScheduleTypeList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyOutgoingScheduleTypeList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingScheduleType> EndGetPolicyOutgoingScheduleTypeList(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyOutgoingScheduleTypeList(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyOutgoingScheduleTypeList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPolicyOutgoingScheduleTypeList(callback, asyncState);
        }
        
        private object[] OnEndGetPolicyOutgoingScheduleTypeList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingScheduleType> retVal = this.EndGetPolicyOutgoingScheduleTypeList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyOutgoingScheduleTypeListCompleted(object state) {
            if ((this.GetPolicyOutgoingScheduleTypeListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyOutgoingScheduleTypeListCompleted(this, new GetPolicyOutgoingScheduleTypeListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyOutgoingScheduleTypeListAsync() {
            this.GetPolicyOutgoingScheduleTypeListAsync(null);
        }
        
        public void GetPolicyOutgoingScheduleTypeListAsync(object userState) {
            if ((this.onBeginGetPolicyOutgoingScheduleTypeListDelegate == null)) {
                this.onBeginGetPolicyOutgoingScheduleTypeListDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyOutgoingScheduleTypeList);
            }
            if ((this.onEndGetPolicyOutgoingScheduleTypeListDelegate == null)) {
                this.onEndGetPolicyOutgoingScheduleTypeListDelegate = new EndOperationDelegate(this.OnEndGetPolicyOutgoingScheduleTypeList);
            }
            if ((this.onGetPolicyOutgoingScheduleTypeListCompletedDelegate == null)) {
                this.onGetPolicyOutgoingScheduleTypeListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyOutgoingScheduleTypeListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyOutgoingScheduleTypeListDelegate, null, this.onEndGetPolicyOutgoingScheduleTypeListDelegate, this.onGetPolicyOutgoingScheduleTypeListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyStatus> GetPolicyStatusList() {
            return base.Channel.GetPolicyStatusList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyStatusList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyStatusList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyStatus> EndGetPolicyStatusList(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyStatusList(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyStatusList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPolicyStatusList(callback, asyncState);
        }
        
        private object[] OnEndGetPolicyStatusList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyStatus> retVal = this.EndGetPolicyStatusList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyStatusListCompleted(object state) {
            if ((this.GetPolicyStatusListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyStatusListCompleted(this, new GetPolicyStatusListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyStatusListAsync() {
            this.GetPolicyStatusListAsync(null);
        }
        
        public void GetPolicyStatusListAsync(object userState) {
            if ((this.onBeginGetPolicyStatusListDelegate == null)) {
                this.onBeginGetPolicyStatusListDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyStatusList);
            }
            if ((this.onEndGetPolicyStatusListDelegate == null)) {
                this.onEndGetPolicyStatusListDelegate = new EndOperationDelegate(this.OnEndGetPolicyStatusList);
            }
            if ((this.onGetPolicyStatusListCompletedDelegate == null)) {
                this.onGetPolicyStatusListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyStatusListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyStatusListDelegate, null, this.onEndGetPolicyStatusListDelegate, this.onGetPolicyStatusListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> GetTerminationReasonList() {
            return base.Channel.GetTerminationReasonList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTerminationReasonList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTerminationReasonList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> EndGetTerminationReasonList(System.IAsyncResult result) {
            return base.Channel.EndGetTerminationReasonList(result);
        }
        
        private System.IAsyncResult OnBeginGetTerminationReasonList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetTerminationReasonList(callback, asyncState);
        }
        
        private object[] OnEndGetTerminationReasonList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> retVal = this.EndGetTerminationReasonList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTerminationReasonListCompleted(object state) {
            if ((this.GetTerminationReasonListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTerminationReasonListCompleted(this, new GetTerminationReasonListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTerminationReasonListAsync() {
            this.GetTerminationReasonListAsync(null);
        }
        
        public void GetTerminationReasonListAsync(object userState) {
            if ((this.onBeginGetTerminationReasonListDelegate == null)) {
                this.onBeginGetTerminationReasonListDelegate = new BeginOperationDelegate(this.OnBeginGetTerminationReasonList);
            }
            if ((this.onEndGetTerminationReasonListDelegate == null)) {
                this.onEndGetTerminationReasonListDelegate = new EndOperationDelegate(this.OnEndGetTerminationReasonList);
            }
            if ((this.onGetTerminationReasonListCompletedDelegate == null)) {
                this.onGetTerminationReasonListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTerminationReasonListCompleted);
            }
            base.InvokeAsync(this.onBeginGetTerminationReasonListDelegate, null, this.onEndGetTerminationReasonListDelegate, this.onGetTerminationReasonListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> GetTerminationReasonListWithBlankAdded() {
            return base.Channel.GetTerminationReasonListWithBlankAdded();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTerminationReasonListWithBlankAdded(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTerminationReasonListWithBlankAdded(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> EndGetTerminationReasonListWithBlankAdded(System.IAsyncResult result) {
            return base.Channel.EndGetTerminationReasonListWithBlankAdded(result);
        }
        
        private System.IAsyncResult OnBeginGetTerminationReasonListWithBlankAdded(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetTerminationReasonListWithBlankAdded(callback, asyncState);
        }
        
        private object[] OnEndGetTerminationReasonListWithBlankAdded(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyTerminationReason> retVal = this.EndGetTerminationReasonListWithBlankAdded(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTerminationReasonListWithBlankAddedCompleted(object state) {
            if ((this.GetTerminationReasonListWithBlankAddedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTerminationReasonListWithBlankAddedCompleted(this, new GetTerminationReasonListWithBlankAddedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTerminationReasonListWithBlankAddedAsync() {
            this.GetTerminationReasonListWithBlankAddedAsync(null);
        }
        
        public void GetTerminationReasonListWithBlankAddedAsync(object userState) {
            if ((this.onBeginGetTerminationReasonListWithBlankAddedDelegate == null)) {
                this.onBeginGetTerminationReasonListWithBlankAddedDelegate = new BeginOperationDelegate(this.OnBeginGetTerminationReasonListWithBlankAdded);
            }
            if ((this.onEndGetTerminationReasonListWithBlankAddedDelegate == null)) {
                this.onEndGetTerminationReasonListWithBlankAddedDelegate = new EndOperationDelegate(this.OnEndGetTerminationReasonListWithBlankAdded);
            }
            if ((this.onGetTerminationReasonListWithBlankAddedCompletedDelegate == null)) {
                this.onGetTerminationReasonListWithBlankAddedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTerminationReasonListWithBlankAddedCompleted);
            }
            base.InvokeAsync(this.onBeginGetTerminationReasonListWithBlankAddedDelegate, null, this.onEndGetTerminationReasonListWithBlankAddedDelegate, this.onGetTerminationReasonListWithBlankAddedCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Question> GetQuestions() {
            return base.Channel.GetQuestions();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetQuestions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetQuestions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Question> EndGetQuestions(System.IAsyncResult result) {
            return base.Channel.EndGetQuestions(result);
        }
        
        private System.IAsyncResult OnBeginGetQuestions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetQuestions(callback, asyncState);
        }
        
        private object[] OnEndGetQuestions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Question> retVal = this.EndGetQuestions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetQuestionsCompleted(object state) {
            if ((this.GetQuestionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetQuestionsCompleted(this, new GetQuestionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetQuestionsAsync() {
            this.GetQuestionsAsync(null);
        }
        
        public void GetQuestionsAsync(object userState) {
            if ((this.onBeginGetQuestionsDelegate == null)) {
                this.onBeginGetQuestionsDelegate = new BeginOperationDelegate(this.OnBeginGetQuestions);
            }
            if ((this.onEndGetQuestionsDelegate == null)) {
                this.onEndGetQuestionsDelegate = new EndOperationDelegate(this.OnEndGetQuestions);
            }
            if ((this.onGetQuestionsCompletedDelegate == null)) {
                this.onGetQuestionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetQuestionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetQuestionsDelegate, null, this.onEndGetQuestionsDelegate, this.onGetQuestionsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Region> GetRegionList() {
            return base.Channel.GetRegionList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRegionList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRegionList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Region> EndGetRegionList(System.IAsyncResult result) {
            return base.Channel.EndGetRegionList(result);
        }
        
        private System.IAsyncResult OnBeginGetRegionList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRegionList(callback, asyncState);
        }
        
        private object[] OnEndGetRegionList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Region> retVal = this.EndGetRegionList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRegionListCompleted(object state) {
            if ((this.GetRegionListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRegionListCompleted(this, new GetRegionListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRegionListAsync() {
            this.GetRegionListAsync(null);
        }
        
        public void GetRegionListAsync(object userState) {
            if ((this.onBeginGetRegionListDelegate == null)) {
                this.onBeginGetRegionListDelegate = new BeginOperationDelegate(this.OnBeginGetRegionList);
            }
            if ((this.onEndGetRegionListDelegate == null)) {
                this.onEndGetRegionListDelegate = new EndOperationDelegate(this.OnEndGetRegionList);
            }
            if ((this.onGetRegionListCompletedDelegate == null)) {
                this.onGetRegionListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRegionListCompleted);
            }
            base.InvokeAsync(this.onBeginGetRegionListDelegate, null, this.onEndGetRegionListDelegate, this.onGetRegionListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SystemConstant> GetSystemConstants() {
            return base.Channel.GetSystemConstants();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSystemConstants(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSystemConstants(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SystemConstant> EndGetSystemConstants(System.IAsyncResult result) {
            return base.Channel.EndGetSystemConstants(result);
        }
        
        private System.IAsyncResult OnBeginGetSystemConstants(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSystemConstants(callback, asyncState);
        }
        
        private object[] OnEndGetSystemConstants(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SystemConstant> retVal = this.EndGetSystemConstants(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSystemConstantsCompleted(object state) {
            if ((this.GetSystemConstantsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSystemConstantsCompleted(this, new GetSystemConstantsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSystemConstantsAsync() {
            this.GetSystemConstantsAsync(null);
        }
        
        public void GetSystemConstantsAsync(object userState) {
            if ((this.onBeginGetSystemConstantsDelegate == null)) {
                this.onBeginGetSystemConstantsDelegate = new BeginOperationDelegate(this.OnBeginGetSystemConstants);
            }
            if ((this.onEndGetSystemConstantsDelegate == null)) {
                this.onEndGetSystemConstantsDelegate = new EndOperationDelegate(this.OnEndGetSystemConstants);
            }
            if ((this.onGetSystemConstantsCompletedDelegate == null)) {
                this.onGetSystemConstantsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSystemConstantsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSystemConstantsDelegate, null, this.onEndGetSystemConstantsDelegate, this.onGetSystemConstantsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Zip> GetZipList() {
            return base.Channel.GetZipList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetZipList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetZipList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Zip> EndGetZipList(System.IAsyncResult result) {
            return base.Channel.EndGetZipList(result);
        }
        
        private System.IAsyncResult OnBeginGetZipList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetZipList(callback, asyncState);
        }
        
        private object[] OnEndGetZipList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Zip> retVal = this.EndGetZipList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetZipListCompleted(object state) {
            if ((this.GetZipListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetZipListCompleted(this, new GetZipListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetZipListAsync() {
            this.GetZipListAsync(null);
        }
        
        public void GetZipListAsync(object userState) {
            if ((this.onBeginGetZipListDelegate == null)) {
                this.onBeginGetZipListDelegate = new BeginOperationDelegate(this.OnBeginGetZipList);
            }
            if ((this.onEndGetZipListDelegate == null)) {
                this.onEndGetZipListDelegate = new EndOperationDelegate(this.OnEndGetZipList);
            }
            if ((this.onGetZipListCompletedDelegate == null)) {
                this.onGetZipListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetZipListCompleted);
            }
            base.InvokeAsync(this.onBeginGetZipListDelegate, null, this.onEndGetZipListDelegate, this.onGetZipListCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Zip GetZip(string zipcode) {
            return base.Channel.GetZip(zipcode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetZip(string zipcode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetZip(zipcode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Zip EndGetZip(System.IAsyncResult result) {
            return base.Channel.EndGetZip(result);
        }
        
        private System.IAsyncResult OnBeginGetZip(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zipcode = ((string)(inValues[0]));
            return this.BeginGetZip(zipcode, callback, asyncState);
        }
        
        private object[] OnEndGetZip(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Zip retVal = this.EndGetZip(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetZipCompleted(object state) {
            if ((this.GetZipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetZipCompleted(this, new GetZipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetZipAsync(string zipcode) {
            this.GetZipAsync(zipcode, null);
        }
        
        public void GetZipAsync(string zipcode, object userState) {
            if ((this.onBeginGetZipDelegate == null)) {
                this.onBeginGetZipDelegate = new BeginOperationDelegate(this.OnBeginGetZip);
            }
            if ((this.onEndGetZipDelegate == null)) {
                this.onEndGetZipDelegate = new EndOperationDelegate(this.OnEndGetZip);
            }
            if ((this.onGetZipCompletedDelegate == null)) {
                this.onGetZipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetZipCompleted);
            }
            base.InvokeAsync(this.onBeginGetZipDelegate, new object[] {
                        zipcode}, this.onEndGetZipDelegate, this.onGetZipCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolMaskedFieldType> GetPayorToolMaskedFieldList() {
            return base.Channel.GetPayorToolMaskedFieldList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorToolMaskedFieldList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorToolMaskedFieldList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolMaskedFieldType> EndGetPayorToolMaskedFieldList(System.IAsyncResult result) {
            return base.Channel.EndGetPayorToolMaskedFieldList(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorToolMaskedFieldList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPayorToolMaskedFieldList(callback, asyncState);
        }
        
        private object[] OnEndGetPayorToolMaskedFieldList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolMaskedFieldType> retVal = this.EndGetPayorToolMaskedFieldList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorToolMaskedFieldListCompleted(object state) {
            if ((this.GetPayorToolMaskedFieldListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorToolMaskedFieldListCompleted(this, new GetPayorToolMaskedFieldListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorToolMaskedFieldListAsync() {
            this.GetPayorToolMaskedFieldListAsync(null);
        }
        
        public void GetPayorToolMaskedFieldListAsync(object userState) {
            if ((this.onBeginGetPayorToolMaskedFieldListDelegate == null)) {
                this.onBeginGetPayorToolMaskedFieldListDelegate = new BeginOperationDelegate(this.OnBeginGetPayorToolMaskedFieldList);
            }
            if ((this.onEndGetPayorToolMaskedFieldListDelegate == null)) {
                this.onEndGetPayorToolMaskedFieldListDelegate = new EndOperationDelegate(this.OnEndGetPayorToolMaskedFieldList);
            }
            if ((this.onGetPayorToolMaskedFieldListCompletedDelegate == null)) {
                this.onGetPayorToolMaskedFieldListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorToolMaskedFieldListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorToolMaskedFieldListDelegate, null, this.onEndGetPayorToolMaskedFieldListDelegate, this.onGetPayorToolMaskedFieldListCompletedDelegate, userState);
        }
        
        public string GetMaskName(int id) {
            return base.Channel.GetMaskName(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMaskName(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMaskName(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetMaskName(System.IAsyncResult result) {
            return base.Channel.EndGetMaskName(result);
        }
        
        private System.IAsyncResult OnBeginGetMaskName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginGetMaskName(id, callback, asyncState);
        }
        
        private object[] OnEndGetMaskName(System.IAsyncResult result) {
            string retVal = this.EndGetMaskName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMaskNameCompleted(object state) {
            if ((this.GetMaskNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMaskNameCompleted(this, new GetMaskNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMaskNameAsync(int id) {
            this.GetMaskNameAsync(id, null);
        }
        
        public void GetMaskNameAsync(int id, object userState) {
            if ((this.onBeginGetMaskNameDelegate == null)) {
                this.onBeginGetMaskNameDelegate = new BeginOperationDelegate(this.OnBeginGetMaskName);
            }
            if ((this.onEndGetMaskNameDelegate == null)) {
                this.onEndGetMaskNameDelegate = new EndOperationDelegate(this.OnEndGetMaskName);
            }
            if ((this.onGetMaskNameCompletedDelegate == null)) {
                this.onGetMaskNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMaskNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetMaskNameDelegate, new object[] {
                        id}, this.onEndGetMaskNameDelegate, this.onGetMaskNameCompletedDelegate, userState);
        }
        
        public string GetSystemConstantKeyValue(string key) {
            return base.Channel.GetSystemConstantKeyValue(key);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSystemConstantKeyValue(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSystemConstantKeyValue(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSystemConstantKeyValue(System.IAsyncResult result) {
            return base.Channel.EndGetSystemConstantKeyValue(result);
        }
        
        private System.IAsyncResult OnBeginGetSystemConstantKeyValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return this.BeginGetSystemConstantKeyValue(key, callback, asyncState);
        }
        
        private object[] OnEndGetSystemConstantKeyValue(System.IAsyncResult result) {
            string retVal = this.EndGetSystemConstantKeyValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSystemConstantKeyValueCompleted(object state) {
            if ((this.GetSystemConstantKeyValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSystemConstantKeyValueCompleted(this, new GetSystemConstantKeyValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSystemConstantKeyValueAsync(string key) {
            this.GetSystemConstantKeyValueAsync(key, null);
        }
        
        public void GetSystemConstantKeyValueAsync(string key, object userState) {
            if ((this.onBeginGetSystemConstantKeyValueDelegate == null)) {
                this.onBeginGetSystemConstantKeyValueDelegate = new BeginOperationDelegate(this.OnBeginGetSystemConstantKeyValue);
            }
            if ((this.onEndGetSystemConstantKeyValueDelegate == null)) {
                this.onEndGetSystemConstantKeyValueDelegate = new EndOperationDelegate(this.OnEndGetSystemConstantKeyValue);
            }
            if ((this.onGetSystemConstantKeyValueCompletedDelegate == null)) {
                this.onGetSystemConstantKeyValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSystemConstantKeyValueCompleted);
            }
            base.InvokeAsync(this.onBeginGetSystemConstantKeyValueDelegate, new object[] {
                        key}, this.onEndGetSystemConstantKeyValueDelegate, this.onGetSystemConstantKeyValueCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailMasterData GetPolicyDetailMasterData() {
            return base.Channel.GetPolicyDetailMasterData();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyDetailMasterData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyDetailMasterData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailMasterData EndGetPolicyDetailMasterData(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyDetailMasterData(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyDetailMasterData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPolicyDetailMasterData(callback, asyncState);
        }
        
        private object[] OnEndGetPolicyDetailMasterData(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailMasterData retVal = this.EndGetPolicyDetailMasterData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyDetailMasterDataCompleted(object state) {
            if ((this.GetPolicyDetailMasterDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyDetailMasterDataCompleted(this, new GetPolicyDetailMasterDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyDetailMasterDataAsync() {
            this.GetPolicyDetailMasterDataAsync(null);
        }
        
        public void GetPolicyDetailMasterDataAsync(object userState) {
            if ((this.onBeginGetPolicyDetailMasterDataDelegate == null)) {
                this.onBeginGetPolicyDetailMasterDataDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyDetailMasterData);
            }
            if ((this.onEndGetPolicyDetailMasterDataDelegate == null)) {
                this.onEndGetPolicyDetailMasterDataDelegate = new EndOperationDelegate(this.OnEndGetPolicyDetailMasterData);
            }
            if ((this.onGetPolicyDetailMasterDataCompletedDelegate == null)) {
                this.onGetPolicyDetailMasterDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyDetailMasterDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyDetailMasterDataDelegate, null, this.onEndGetPolicyDetailMasterDataDelegate, this.onGetPolicyDetailMasterDataCompletedDelegate, userState);
        }
        
        public void AddLog(string message) {
            base.Channel.AddLog(message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddLog(string message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddLog(message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddLog(System.IAsyncResult result) {
            base.Channel.EndAddLog(result);
        }
        
        private System.IAsyncResult OnBeginAddLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string message = ((string)(inValues[0]));
            return this.BeginAddLog(message, callback, asyncState);
        }
        
        private object[] OnEndAddLog(System.IAsyncResult result) {
            this.EndAddLog(result);
            return null;
        }
        
        private void OnAddLogCompleted(object state) {
            if ((this.AddLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddLogAsync(string message) {
            this.AddLogAsync(message, null);
        }
        
        public void AddLogAsync(string message, object userState) {
            if ((this.onBeginAddLogDelegate == null)) {
                this.onBeginAddLogDelegate = new BeginOperationDelegate(this.OnBeginAddLog);
            }
            if ((this.onEndAddLogDelegate == null)) {
                this.onEndAddLogDelegate = new EndOperationDelegate(this.OnEndAddLog);
            }
            if ((this.onAddLogCompletedDelegate == null)) {
                this.onAddLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddLogCompleted);
            }
            base.InvokeAsync(this.onBeginAddLogDelegate, new object[] {
                        message}, this.onEndAddLogDelegate, this.onAddLogCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.TempFolderDetails GetTempFolderSetting() {
            return base.Channel.GetTempFolderSetting();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTempFolderSetting(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTempFolderSetting(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.TempFolderDetails EndGetTempFolderSetting(System.IAsyncResult result) {
            return base.Channel.EndGetTempFolderSetting(result);
        }
        
        private System.IAsyncResult OnBeginGetTempFolderSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetTempFolderSetting(callback, asyncState);
        }
        
        private object[] OnEndGetTempFolderSetting(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.TempFolderDetails retVal = this.EndGetTempFolderSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTempFolderSettingCompleted(object state) {
            if ((this.GetTempFolderSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTempFolderSettingCompleted(this, new GetTempFolderSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTempFolderSettingAsync() {
            this.GetTempFolderSettingAsync(null);
        }
        
        public void GetTempFolderSettingAsync(object userState) {
            if ((this.onBeginGetTempFolderSettingDelegate == null)) {
                this.onBeginGetTempFolderSettingDelegate = new BeginOperationDelegate(this.OnBeginGetTempFolderSetting);
            }
            if ((this.onEndGetTempFolderSettingDelegate == null)) {
                this.onEndGetTempFolderSettingDelegate = new EndOperationDelegate(this.OnEndGetTempFolderSetting);
            }
            if ((this.onGetTempFolderSettingCompletedDelegate == null)) {
                this.onGetTempFolderSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTempFolderSettingCompleted);
            }
            base.InvokeAsync(this.onBeginGetTempFolderSettingDelegate, null, this.onEndGetTempFolderSettingDelegate, this.onGetTempFolderSettingCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ICarrier")]
    public interface ICarrier {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarrier/AddUpdateDeleteCarrier", ReplyAction="http://tempuri.org/ICarrier/AddUpdateDeleteCarrierResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus AddUpdateDeleteCarrier(MyAgencyVault.VM.MyAgencyVaultSvc.Carrier Carr, MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarrier/AddUpdateDeleteCarrier", ReplyAction="http://tempuri.org/ICarrier/AddUpdateDeleteCarrierResponse")]
        System.IAsyncResult BeginAddUpdateDeleteCarrier(MyAgencyVault.VM.MyAgencyVaultSvc.Carrier Carr, MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndAddUpdateDeleteCarrier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarrier/GetCarriersOnly", ReplyAction="http://tempuri.org/ICarrier/GetCarriersOnlyResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> GetCarriersOnly(System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarrier/GetCarriersOnly", ReplyAction="http://tempuri.org/ICarrier/GetCarriersOnlyResponse")]
        System.IAsyncResult BeginGetCarriersOnly(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> EndGetCarriersOnly(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarrier/GetCarriersWith", ReplyAction="http://tempuri.org/ICarrier/GetCarriersWithResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> GetCarriersWith(System.Guid LicenseeId, bool isCoveragesRequired);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarrier/GetCarriersWith", ReplyAction="http://tempuri.org/ICarrier/GetCarriersWithResponse")]
        System.IAsyncResult BeginGetCarriersWith(System.Guid LicenseeId, bool isCoveragesRequired, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> EndGetCarriersWith(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarrier/GetDispalyedCarriersWith", ReplyAction="http://tempuri.org/ICarrier/GetDispalyedCarriersWithResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCarrier> GetDispalyedCarriersWith(System.Guid LicenseeId, bool isCoveragesRequired);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarrier/GetDispalyedCarriersWith", ReplyAction="http://tempuri.org/ICarrier/GetDispalyedCarriersWithResponse")]
        System.IAsyncResult BeginGetDispalyedCarriersWith(System.Guid LicenseeId, bool isCoveragesRequired, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCarrier> EndGetDispalyedCarriersWith(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarrier/GetPayorCarriersOnly", ReplyAction="http://tempuri.org/ICarrier/GetPayorCarriersOnlyResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> GetPayorCarriersOnly(System.Guid PayorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarrier/GetPayorCarriersOnly", ReplyAction="http://tempuri.org/ICarrier/GetPayorCarriersOnlyResponse")]
        System.IAsyncResult BeginGetPayorCarriersOnly(System.Guid PayorId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> EndGetPayorCarriersOnly(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarrier/GetPayorCarriersWith", ReplyAction="http://tempuri.org/ICarrier/GetPayorCarriersWithResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> GetPayorCarriersWith(System.Guid PayorId, bool isCoveragesRequired);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarrier/GetPayorCarriersWith", ReplyAction="http://tempuri.org/ICarrier/GetPayorCarriersWithResponse")]
        System.IAsyncResult BeginGetPayorCarriersWith(System.Guid PayorId, bool isCoveragesRequired, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> EndGetPayorCarriersWith(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarrier/PayorCarrierGlobal", ReplyAction="http://tempuri.org/ICarrier/PayorCarrierGlobalResponse")]
        System.Collections.ObjectModel.ObservableCollection<System.Guid> PayorCarrierGlobal(System.Collections.ObjectModel.ObservableCollection<System.Guid> PayorList);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarrier/PayorCarrierGlobal", ReplyAction="http://tempuri.org/ICarrier/PayorCarrierGlobalResponse")]
        System.IAsyncResult BeginPayorCarrierGlobal(System.Collections.ObjectModel.ObservableCollection<System.Guid> PayorList, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<System.Guid> EndPayorCarrierGlobal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarrier/GetPayorCarrier", ReplyAction="http://tempuri.org/ICarrier/GetPayorCarrierResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Carrier GetPayorCarrier(System.Guid PayorId, System.Guid CarrierId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarrier/GetPayorCarrier", ReplyAction="http://tempuri.org/ICarrier/GetPayorCarrierResponse")]
        System.IAsyncResult BeginGetPayorCarrier(System.Guid PayorId, System.Guid CarrierId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Carrier EndGetPayorCarrier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarrier/GetPayorCarriers", ReplyAction="http://tempuri.org/ICarrier/GetPayorCarriersResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> GetPayorCarriers(System.Guid PayorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarrier/GetPayorCarriers", ReplyAction="http://tempuri.org/ICarrier/GetPayorCarriersResponse")]
        System.IAsyncResult BeginGetPayorCarriers(System.Guid PayorId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> EndGetPayorCarriers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarrier/IsValidCarrier", ReplyAction="http://tempuri.org/ICarrier/IsValidCarrierResponse")]
        bool IsValidCarrier(string carrierNickName, System.Guid payorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarrier/IsValidCarrier", ReplyAction="http://tempuri.org/ICarrier/IsValidCarrierResponse")]
        System.IAsyncResult BeginIsValidCarrier(string carrierNickName, System.Guid payorId, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidCarrier(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarrierChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ICarrier, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdateDeleteCarrierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdateDeleteCarrierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCarriersOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCarriersOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCarriersWithCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCarriersWithCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDispalyedCarriersWithCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDispalyedCarriersWithCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCarrier> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCarrier>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorCarriersOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorCarriersOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorCarriersWithCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorCarriersWithCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayorCarrierGlobalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PayorCarrierGlobalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorCarrierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorCarrierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Carrier Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Carrier)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorCarriersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorCarriersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidCarrierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidCarrierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarrierClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ICarrier>, MyAgencyVault.VM.MyAgencyVaultSvc.ICarrier {
        
        private BeginOperationDelegate onBeginAddUpdateDeleteCarrierDelegate;
        
        private EndOperationDelegate onEndAddUpdateDeleteCarrierDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateDeleteCarrierCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCarriersOnlyDelegate;
        
        private EndOperationDelegate onEndGetCarriersOnlyDelegate;
        
        private System.Threading.SendOrPostCallback onGetCarriersOnlyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCarriersWithDelegate;
        
        private EndOperationDelegate onEndGetCarriersWithDelegate;
        
        private System.Threading.SendOrPostCallback onGetCarriersWithCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDispalyedCarriersWithDelegate;
        
        private EndOperationDelegate onEndGetDispalyedCarriersWithDelegate;
        
        private System.Threading.SendOrPostCallback onGetDispalyedCarriersWithCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorCarriersOnlyDelegate;
        
        private EndOperationDelegate onEndGetPayorCarriersOnlyDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorCarriersOnlyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorCarriersWithDelegate;
        
        private EndOperationDelegate onEndGetPayorCarriersWithDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorCarriersWithCompletedDelegate;
        
        private BeginOperationDelegate onBeginPayorCarrierGlobalDelegate;
        
        private EndOperationDelegate onEndPayorCarrierGlobalDelegate;
        
        private System.Threading.SendOrPostCallback onPayorCarrierGlobalCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorCarrierDelegate;
        
        private EndOperationDelegate onEndGetPayorCarrierDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorCarrierCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorCarriersDelegate;
        
        private EndOperationDelegate onEndGetPayorCarriersDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorCarriersCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidCarrierDelegate;
        
        private EndOperationDelegate onEndIsValidCarrierDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidCarrierCompletedDelegate;
        
        public CarrierClient() {
        }
        
        public CarrierClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarrierClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarrierClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarrierClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<AddUpdateDeleteCarrierCompletedEventArgs> AddUpdateDeleteCarrierCompleted;
        
        public event System.EventHandler<GetCarriersOnlyCompletedEventArgs> GetCarriersOnlyCompleted;
        
        public event System.EventHandler<GetCarriersWithCompletedEventArgs> GetCarriersWithCompleted;
        
        public event System.EventHandler<GetDispalyedCarriersWithCompletedEventArgs> GetDispalyedCarriersWithCompleted;
        
        public event System.EventHandler<GetPayorCarriersOnlyCompletedEventArgs> GetPayorCarriersOnlyCompleted;
        
        public event System.EventHandler<GetPayorCarriersWithCompletedEventArgs> GetPayorCarriersWithCompleted;
        
        public event System.EventHandler<PayorCarrierGlobalCompletedEventArgs> PayorCarrierGlobalCompleted;
        
        public event System.EventHandler<GetPayorCarrierCompletedEventArgs> GetPayorCarrierCompleted;
        
        public event System.EventHandler<GetPayorCarriersCompletedEventArgs> GetPayorCarriersCompleted;
        
        public event System.EventHandler<IsValidCarrierCompletedEventArgs> IsValidCarrierCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus AddUpdateDeleteCarrier(MyAgencyVault.VM.MyAgencyVaultSvc.Carrier Carr, MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType) {
            return base.Channel.AddUpdateDeleteCarrier(Carr, operationType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateDeleteCarrier(MyAgencyVault.VM.MyAgencyVaultSvc.Carrier Carr, MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateDeleteCarrier(Carr, operationType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndAddUpdateDeleteCarrier(System.IAsyncResult result) {
            return base.Channel.EndAddUpdateDeleteCarrier(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateDeleteCarrier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Carrier Carr = ((MyAgencyVault.VM.MyAgencyVaultSvc.Carrier)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType = ((MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet)(inValues[1]));
            return this.BeginAddUpdateDeleteCarrier(Carr, operationType, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateDeleteCarrier(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus retVal = this.EndAddUpdateDeleteCarrier(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdateDeleteCarrierCompleted(object state) {
            if ((this.AddUpdateDeleteCarrierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateDeleteCarrierCompleted(this, new AddUpdateDeleteCarrierCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateDeleteCarrierAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Carrier Carr, MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType) {
            this.AddUpdateDeleteCarrierAsync(Carr, operationType, null);
        }
        
        public void AddUpdateDeleteCarrierAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Carrier Carr, MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType, object userState) {
            if ((this.onBeginAddUpdateDeleteCarrierDelegate == null)) {
                this.onBeginAddUpdateDeleteCarrierDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateDeleteCarrier);
            }
            if ((this.onEndAddUpdateDeleteCarrierDelegate == null)) {
                this.onEndAddUpdateDeleteCarrierDelegate = new EndOperationDelegate(this.OnEndAddUpdateDeleteCarrier);
            }
            if ((this.onAddUpdateDeleteCarrierCompletedDelegate == null)) {
                this.onAddUpdateDeleteCarrierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateDeleteCarrierCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateDeleteCarrierDelegate, new object[] {
                        Carr,
                        operationType}, this.onEndAddUpdateDeleteCarrierDelegate, this.onAddUpdateDeleteCarrierCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> GetCarriersOnly(System.Guid LicenseeId) {
            return base.Channel.GetCarriersOnly(LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCarriersOnly(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCarriersOnly(LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> EndGetCarriersOnly(System.IAsyncResult result) {
            return base.Channel.EndGetCarriersOnly(result);
        }
        
        private System.IAsyncResult OnBeginGetCarriersOnly(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            return this.BeginGetCarriersOnly(LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndGetCarriersOnly(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> retVal = this.EndGetCarriersOnly(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCarriersOnlyCompleted(object state) {
            if ((this.GetCarriersOnlyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCarriersOnlyCompleted(this, new GetCarriersOnlyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCarriersOnlyAsync(System.Guid LicenseeId) {
            this.GetCarriersOnlyAsync(LicenseeId, null);
        }
        
        public void GetCarriersOnlyAsync(System.Guid LicenseeId, object userState) {
            if ((this.onBeginGetCarriersOnlyDelegate == null)) {
                this.onBeginGetCarriersOnlyDelegate = new BeginOperationDelegate(this.OnBeginGetCarriersOnly);
            }
            if ((this.onEndGetCarriersOnlyDelegate == null)) {
                this.onEndGetCarriersOnlyDelegate = new EndOperationDelegate(this.OnEndGetCarriersOnly);
            }
            if ((this.onGetCarriersOnlyCompletedDelegate == null)) {
                this.onGetCarriersOnlyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCarriersOnlyCompleted);
            }
            base.InvokeAsync(this.onBeginGetCarriersOnlyDelegate, new object[] {
                        LicenseeId}, this.onEndGetCarriersOnlyDelegate, this.onGetCarriersOnlyCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> GetCarriersWith(System.Guid LicenseeId, bool isCoveragesRequired) {
            return base.Channel.GetCarriersWith(LicenseeId, isCoveragesRequired);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCarriersWith(System.Guid LicenseeId, bool isCoveragesRequired, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCarriersWith(LicenseeId, isCoveragesRequired, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> EndGetCarriersWith(System.IAsyncResult result) {
            return base.Channel.EndGetCarriersWith(result);
        }
        
        private System.IAsyncResult OnBeginGetCarriersWith(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            bool isCoveragesRequired = ((bool)(inValues[1]));
            return this.BeginGetCarriersWith(LicenseeId, isCoveragesRequired, callback, asyncState);
        }
        
        private object[] OnEndGetCarriersWith(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> retVal = this.EndGetCarriersWith(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCarriersWithCompleted(object state) {
            if ((this.GetCarriersWithCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCarriersWithCompleted(this, new GetCarriersWithCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCarriersWithAsync(System.Guid LicenseeId, bool isCoveragesRequired) {
            this.GetCarriersWithAsync(LicenseeId, isCoveragesRequired, null);
        }
        
        public void GetCarriersWithAsync(System.Guid LicenseeId, bool isCoveragesRequired, object userState) {
            if ((this.onBeginGetCarriersWithDelegate == null)) {
                this.onBeginGetCarriersWithDelegate = new BeginOperationDelegate(this.OnBeginGetCarriersWith);
            }
            if ((this.onEndGetCarriersWithDelegate == null)) {
                this.onEndGetCarriersWithDelegate = new EndOperationDelegate(this.OnEndGetCarriersWith);
            }
            if ((this.onGetCarriersWithCompletedDelegate == null)) {
                this.onGetCarriersWithCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCarriersWithCompleted);
            }
            base.InvokeAsync(this.onBeginGetCarriersWithDelegate, new object[] {
                        LicenseeId,
                        isCoveragesRequired}, this.onEndGetCarriersWithDelegate, this.onGetCarriersWithCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCarrier> GetDispalyedCarriersWith(System.Guid LicenseeId, bool isCoveragesRequired) {
            return base.Channel.GetDispalyedCarriersWith(LicenseeId, isCoveragesRequired);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDispalyedCarriersWith(System.Guid LicenseeId, bool isCoveragesRequired, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDispalyedCarriersWith(LicenseeId, isCoveragesRequired, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCarrier> EndGetDispalyedCarriersWith(System.IAsyncResult result) {
            return base.Channel.EndGetDispalyedCarriersWith(result);
        }
        
        private System.IAsyncResult OnBeginGetDispalyedCarriersWith(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            bool isCoveragesRequired = ((bool)(inValues[1]));
            return this.BeginGetDispalyedCarriersWith(LicenseeId, isCoveragesRequired, callback, asyncState);
        }
        
        private object[] OnEndGetDispalyedCarriersWith(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCarrier> retVal = this.EndGetDispalyedCarriersWith(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDispalyedCarriersWithCompleted(object state) {
            if ((this.GetDispalyedCarriersWithCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDispalyedCarriersWithCompleted(this, new GetDispalyedCarriersWithCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDispalyedCarriersWithAsync(System.Guid LicenseeId, bool isCoveragesRequired) {
            this.GetDispalyedCarriersWithAsync(LicenseeId, isCoveragesRequired, null);
        }
        
        public void GetDispalyedCarriersWithAsync(System.Guid LicenseeId, bool isCoveragesRequired, object userState) {
            if ((this.onBeginGetDispalyedCarriersWithDelegate == null)) {
                this.onBeginGetDispalyedCarriersWithDelegate = new BeginOperationDelegate(this.OnBeginGetDispalyedCarriersWith);
            }
            if ((this.onEndGetDispalyedCarriersWithDelegate == null)) {
                this.onEndGetDispalyedCarriersWithDelegate = new EndOperationDelegate(this.OnEndGetDispalyedCarriersWith);
            }
            if ((this.onGetDispalyedCarriersWithCompletedDelegate == null)) {
                this.onGetDispalyedCarriersWithCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDispalyedCarriersWithCompleted);
            }
            base.InvokeAsync(this.onBeginGetDispalyedCarriersWithDelegate, new object[] {
                        LicenseeId,
                        isCoveragesRequired}, this.onEndGetDispalyedCarriersWithDelegate, this.onGetDispalyedCarriersWithCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> GetPayorCarriersOnly(System.Guid PayorId) {
            return base.Channel.GetPayorCarriersOnly(PayorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorCarriersOnly(System.Guid PayorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorCarriersOnly(PayorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> EndGetPayorCarriersOnly(System.IAsyncResult result) {
            return base.Channel.EndGetPayorCarriersOnly(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorCarriersOnly(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            return this.BeginGetPayorCarriersOnly(PayorId, callback, asyncState);
        }
        
        private object[] OnEndGetPayorCarriersOnly(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> retVal = this.EndGetPayorCarriersOnly(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorCarriersOnlyCompleted(object state) {
            if ((this.GetPayorCarriersOnlyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorCarriersOnlyCompleted(this, new GetPayorCarriersOnlyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorCarriersOnlyAsync(System.Guid PayorId) {
            this.GetPayorCarriersOnlyAsync(PayorId, null);
        }
        
        public void GetPayorCarriersOnlyAsync(System.Guid PayorId, object userState) {
            if ((this.onBeginGetPayorCarriersOnlyDelegate == null)) {
                this.onBeginGetPayorCarriersOnlyDelegate = new BeginOperationDelegate(this.OnBeginGetPayorCarriersOnly);
            }
            if ((this.onEndGetPayorCarriersOnlyDelegate == null)) {
                this.onEndGetPayorCarriersOnlyDelegate = new EndOperationDelegate(this.OnEndGetPayorCarriersOnly);
            }
            if ((this.onGetPayorCarriersOnlyCompletedDelegate == null)) {
                this.onGetPayorCarriersOnlyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorCarriersOnlyCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorCarriersOnlyDelegate, new object[] {
                        PayorId}, this.onEndGetPayorCarriersOnlyDelegate, this.onGetPayorCarriersOnlyCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> GetPayorCarriersWith(System.Guid PayorId, bool isCoveragesRequired) {
            return base.Channel.GetPayorCarriersWith(PayorId, isCoveragesRequired);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorCarriersWith(System.Guid PayorId, bool isCoveragesRequired, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorCarriersWith(PayorId, isCoveragesRequired, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> EndGetPayorCarriersWith(System.IAsyncResult result) {
            return base.Channel.EndGetPayorCarriersWith(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorCarriersWith(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            bool isCoveragesRequired = ((bool)(inValues[1]));
            return this.BeginGetPayorCarriersWith(PayorId, isCoveragesRequired, callback, asyncState);
        }
        
        private object[] OnEndGetPayorCarriersWith(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> retVal = this.EndGetPayorCarriersWith(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorCarriersWithCompleted(object state) {
            if ((this.GetPayorCarriersWithCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorCarriersWithCompleted(this, new GetPayorCarriersWithCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorCarriersWithAsync(System.Guid PayorId, bool isCoveragesRequired) {
            this.GetPayorCarriersWithAsync(PayorId, isCoveragesRequired, null);
        }
        
        public void GetPayorCarriersWithAsync(System.Guid PayorId, bool isCoveragesRequired, object userState) {
            if ((this.onBeginGetPayorCarriersWithDelegate == null)) {
                this.onBeginGetPayorCarriersWithDelegate = new BeginOperationDelegate(this.OnBeginGetPayorCarriersWith);
            }
            if ((this.onEndGetPayorCarriersWithDelegate == null)) {
                this.onEndGetPayorCarriersWithDelegate = new EndOperationDelegate(this.OnEndGetPayorCarriersWith);
            }
            if ((this.onGetPayorCarriersWithCompletedDelegate == null)) {
                this.onGetPayorCarriersWithCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorCarriersWithCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorCarriersWithDelegate, new object[] {
                        PayorId,
                        isCoveragesRequired}, this.onEndGetPayorCarriersWithDelegate, this.onGetPayorCarriersWithCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> PayorCarrierGlobal(System.Collections.ObjectModel.ObservableCollection<System.Guid> PayorList) {
            return base.Channel.PayorCarrierGlobal(PayorList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPayorCarrierGlobal(System.Collections.ObjectModel.ObservableCollection<System.Guid> PayorList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPayorCarrierGlobal(PayorList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> EndPayorCarrierGlobal(System.IAsyncResult result) {
            return base.Channel.EndPayorCarrierGlobal(result);
        }
        
        private System.IAsyncResult OnBeginPayorCarrierGlobal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<System.Guid> PayorList = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[0]));
            return this.BeginPayorCarrierGlobal(PayorList, callback, asyncState);
        }
        
        private object[] OnEndPayorCarrierGlobal(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<System.Guid> retVal = this.EndPayorCarrierGlobal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPayorCarrierGlobalCompleted(object state) {
            if ((this.PayorCarrierGlobalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PayorCarrierGlobalCompleted(this, new PayorCarrierGlobalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PayorCarrierGlobalAsync(System.Collections.ObjectModel.ObservableCollection<System.Guid> PayorList) {
            this.PayorCarrierGlobalAsync(PayorList, null);
        }
        
        public void PayorCarrierGlobalAsync(System.Collections.ObjectModel.ObservableCollection<System.Guid> PayorList, object userState) {
            if ((this.onBeginPayorCarrierGlobalDelegate == null)) {
                this.onBeginPayorCarrierGlobalDelegate = new BeginOperationDelegate(this.OnBeginPayorCarrierGlobal);
            }
            if ((this.onEndPayorCarrierGlobalDelegate == null)) {
                this.onEndPayorCarrierGlobalDelegate = new EndOperationDelegate(this.OnEndPayorCarrierGlobal);
            }
            if ((this.onPayorCarrierGlobalCompletedDelegate == null)) {
                this.onPayorCarrierGlobalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPayorCarrierGlobalCompleted);
            }
            base.InvokeAsync(this.onBeginPayorCarrierGlobalDelegate, new object[] {
                        PayorList}, this.onEndPayorCarrierGlobalDelegate, this.onPayorCarrierGlobalCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Carrier GetPayorCarrier(System.Guid PayorId, System.Guid CarrierId) {
            return base.Channel.GetPayorCarrier(PayorId, CarrierId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorCarrier(System.Guid PayorId, System.Guid CarrierId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorCarrier(PayorId, CarrierId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Carrier EndGetPayorCarrier(System.IAsyncResult result) {
            return base.Channel.EndGetPayorCarrier(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorCarrier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            System.Guid CarrierId = ((System.Guid)(inValues[1]));
            return this.BeginGetPayorCarrier(PayorId, CarrierId, callback, asyncState);
        }
        
        private object[] OnEndGetPayorCarrier(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Carrier retVal = this.EndGetPayorCarrier(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorCarrierCompleted(object state) {
            if ((this.GetPayorCarrierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorCarrierCompleted(this, new GetPayorCarrierCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorCarrierAsync(System.Guid PayorId, System.Guid CarrierId) {
            this.GetPayorCarrierAsync(PayorId, CarrierId, null);
        }
        
        public void GetPayorCarrierAsync(System.Guid PayorId, System.Guid CarrierId, object userState) {
            if ((this.onBeginGetPayorCarrierDelegate == null)) {
                this.onBeginGetPayorCarrierDelegate = new BeginOperationDelegate(this.OnBeginGetPayorCarrier);
            }
            if ((this.onEndGetPayorCarrierDelegate == null)) {
                this.onEndGetPayorCarrierDelegate = new EndOperationDelegate(this.OnEndGetPayorCarrier);
            }
            if ((this.onGetPayorCarrierCompletedDelegate == null)) {
                this.onGetPayorCarrierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorCarrierCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorCarrierDelegate, new object[] {
                        PayorId,
                        CarrierId}, this.onEndGetPayorCarrierDelegate, this.onGetPayorCarrierCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> GetPayorCarriers(System.Guid PayorId) {
            return base.Channel.GetPayorCarriers(PayorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorCarriers(System.Guid PayorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorCarriers(PayorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> EndGetPayorCarriers(System.IAsyncResult result) {
            return base.Channel.EndGetPayorCarriers(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorCarriers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            return this.BeginGetPayorCarriers(PayorId, callback, asyncState);
        }
        
        private object[] OnEndGetPayorCarriers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Carrier> retVal = this.EndGetPayorCarriers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorCarriersCompleted(object state) {
            if ((this.GetPayorCarriersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorCarriersCompleted(this, new GetPayorCarriersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorCarriersAsync(System.Guid PayorId) {
            this.GetPayorCarriersAsync(PayorId, null);
        }
        
        public void GetPayorCarriersAsync(System.Guid PayorId, object userState) {
            if ((this.onBeginGetPayorCarriersDelegate == null)) {
                this.onBeginGetPayorCarriersDelegate = new BeginOperationDelegate(this.OnBeginGetPayorCarriers);
            }
            if ((this.onEndGetPayorCarriersDelegate == null)) {
                this.onEndGetPayorCarriersDelegate = new EndOperationDelegate(this.OnEndGetPayorCarriers);
            }
            if ((this.onGetPayorCarriersCompletedDelegate == null)) {
                this.onGetPayorCarriersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorCarriersCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorCarriersDelegate, new object[] {
                        PayorId}, this.onEndGetPayorCarriersDelegate, this.onGetPayorCarriersCompletedDelegate, userState);
        }
        
        public bool IsValidCarrier(string carrierNickName, System.Guid payorId) {
            return base.Channel.IsValidCarrier(carrierNickName, payorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidCarrier(string carrierNickName, System.Guid payorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidCarrier(carrierNickName, payorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidCarrier(System.IAsyncResult result) {
            return base.Channel.EndIsValidCarrier(result);
        }
        
        private System.IAsyncResult OnBeginIsValidCarrier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string carrierNickName = ((string)(inValues[0]));
            System.Guid payorId = ((System.Guid)(inValues[1]));
            return this.BeginIsValidCarrier(carrierNickName, payorId, callback, asyncState);
        }
        
        private object[] OnEndIsValidCarrier(System.IAsyncResult result) {
            bool retVal = this.EndIsValidCarrier(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidCarrierCompleted(object state) {
            if ((this.IsValidCarrierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidCarrierCompleted(this, new IsValidCarrierCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidCarrierAsync(string carrierNickName, System.Guid payorId) {
            this.IsValidCarrierAsync(carrierNickName, payorId, null);
        }
        
        public void IsValidCarrierAsync(string carrierNickName, System.Guid payorId, object userState) {
            if ((this.onBeginIsValidCarrierDelegate == null)) {
                this.onBeginIsValidCarrierDelegate = new BeginOperationDelegate(this.OnBeginIsValidCarrier);
            }
            if ((this.onEndIsValidCarrierDelegate == null)) {
                this.onEndIsValidCarrierDelegate = new EndOperationDelegate(this.OnEndIsValidCarrier);
            }
            if ((this.onIsValidCarrierCompletedDelegate == null)) {
                this.onIsValidCarrierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidCarrierCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidCarrierDelegate, new object[] {
                        carrierNickName,
                        payorId}, this.onEndIsValidCarrierDelegate, this.onIsValidCarrierCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IBatchStatmentRecords")]
    public interface IBatchStatmentRecords {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatchStatmentRecords/GetBatchStatment", ReplyAction="http://tempuri.org/IBatchStatmentRecords/GetBatchStatmentResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords> GetBatchStatment(System.Guid BatchId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatchStatmentRecords/GetBatchStatment", ReplyAction="http://tempuri.org/IBatchStatmentRecords/GetBatchStatmentResponse")]
        System.IAsyncResult BeginGetBatchStatment(System.Guid BatchId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords> EndGetBatchStatment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatchStatmentRecords/GetBatchStatmentWithoutCalculation", ReplyAction="http://tempuri.org/IBatchStatmentRecords/GetBatchStatmentWithoutCalculationRespon" +
            "se")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords> GetBatchStatmentWithoutCalculation(System.Guid BatchId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatchStatmentRecords/GetBatchStatmentWithoutCalculation", ReplyAction="http://tempuri.org/IBatchStatmentRecords/GetBatchStatmentWithoutCalculationRespon" +
            "se")]
        System.IAsyncResult BeginGetBatchStatmentWithoutCalculation(System.Guid BatchId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords> EndGetBatchStatmentWithoutCalculation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatchStatmentRecords/AddUpdateBatchStatmentRecord", ReplyAction="http://tempuri.org/IBatchStatmentRecords/AddUpdateBatchStatmentRecordResponse")]
        void AddUpdateBatchStatmentRecord(MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords _BatchStatmentRecord);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatchStatmentRecords/AddUpdateBatchStatmentRecord", ReplyAction="http://tempuri.org/IBatchStatmentRecords/AddUpdateBatchStatmentRecordResponse")]
        System.IAsyncResult BeginAddUpdateBatchStatmentRecord(MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords _BatchStatmentRecord, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateBatchStatmentRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatchStatmentRecords/GetBatchTotal", ReplyAction="http://tempuri.org/IBatchStatmentRecords/GetBatchTotalResponse")]
        decimal GetBatchTotal(System.Guid BatchId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatchStatmentRecords/GetBatchTotal", ReplyAction="http://tempuri.org/IBatchStatmentRecords/GetBatchTotalResponse")]
        System.IAsyncResult BeginGetBatchTotal(System.Guid BatchId, System.AsyncCallback callback, object asyncState);
        
        decimal EndGetBatchTotal(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBatchStatmentRecordsChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IBatchStatmentRecords, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBatchStatmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBatchStatmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBatchStatmentWithoutCalculationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBatchStatmentWithoutCalculationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBatchTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBatchTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchStatmentRecordsClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IBatchStatmentRecords>, MyAgencyVault.VM.MyAgencyVaultSvc.IBatchStatmentRecords {
        
        private BeginOperationDelegate onBeginGetBatchStatmentDelegate;
        
        private EndOperationDelegate onEndGetBatchStatmentDelegate;
        
        private System.Threading.SendOrPostCallback onGetBatchStatmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBatchStatmentWithoutCalculationDelegate;
        
        private EndOperationDelegate onEndGetBatchStatmentWithoutCalculationDelegate;
        
        private System.Threading.SendOrPostCallback onGetBatchStatmentWithoutCalculationCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateBatchStatmentRecordDelegate;
        
        private EndOperationDelegate onEndAddUpdateBatchStatmentRecordDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateBatchStatmentRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBatchTotalDelegate;
        
        private EndOperationDelegate onEndGetBatchTotalDelegate;
        
        private System.Threading.SendOrPostCallback onGetBatchTotalCompletedDelegate;
        
        public BatchStatmentRecordsClient() {
        }
        
        public BatchStatmentRecordsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BatchStatmentRecordsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BatchStatmentRecordsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BatchStatmentRecordsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetBatchStatmentCompletedEventArgs> GetBatchStatmentCompleted;
        
        public event System.EventHandler<GetBatchStatmentWithoutCalculationCompletedEventArgs> GetBatchStatmentWithoutCalculationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateBatchStatmentRecordCompleted;
        
        public event System.EventHandler<GetBatchTotalCompletedEventArgs> GetBatchTotalCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords> GetBatchStatment(System.Guid BatchId) {
            return base.Channel.GetBatchStatment(BatchId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBatchStatment(System.Guid BatchId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBatchStatment(BatchId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords> EndGetBatchStatment(System.IAsyncResult result) {
            return base.Channel.EndGetBatchStatment(result);
        }
        
        private System.IAsyncResult OnBeginGetBatchStatment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid BatchId = ((System.Guid)(inValues[0]));
            return this.BeginGetBatchStatment(BatchId, callback, asyncState);
        }
        
        private object[] OnEndGetBatchStatment(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords> retVal = this.EndGetBatchStatment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBatchStatmentCompleted(object state) {
            if ((this.GetBatchStatmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBatchStatmentCompleted(this, new GetBatchStatmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBatchStatmentAsync(System.Guid BatchId) {
            this.GetBatchStatmentAsync(BatchId, null);
        }
        
        public void GetBatchStatmentAsync(System.Guid BatchId, object userState) {
            if ((this.onBeginGetBatchStatmentDelegate == null)) {
                this.onBeginGetBatchStatmentDelegate = new BeginOperationDelegate(this.OnBeginGetBatchStatment);
            }
            if ((this.onEndGetBatchStatmentDelegate == null)) {
                this.onEndGetBatchStatmentDelegate = new EndOperationDelegate(this.OnEndGetBatchStatment);
            }
            if ((this.onGetBatchStatmentCompletedDelegate == null)) {
                this.onGetBatchStatmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBatchStatmentCompleted);
            }
            base.InvokeAsync(this.onBeginGetBatchStatmentDelegate, new object[] {
                        BatchId}, this.onEndGetBatchStatmentDelegate, this.onGetBatchStatmentCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords> GetBatchStatmentWithoutCalculation(System.Guid BatchId) {
            return base.Channel.GetBatchStatmentWithoutCalculation(BatchId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBatchStatmentWithoutCalculation(System.Guid BatchId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBatchStatmentWithoutCalculation(BatchId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords> EndGetBatchStatmentWithoutCalculation(System.IAsyncResult result) {
            return base.Channel.EndGetBatchStatmentWithoutCalculation(result);
        }
        
        private System.IAsyncResult OnBeginGetBatchStatmentWithoutCalculation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid BatchId = ((System.Guid)(inValues[0]));
            return this.BeginGetBatchStatmentWithoutCalculation(BatchId, callback, asyncState);
        }
        
        private object[] OnEndGetBatchStatmentWithoutCalculation(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords> retVal = this.EndGetBatchStatmentWithoutCalculation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBatchStatmentWithoutCalculationCompleted(object state) {
            if ((this.GetBatchStatmentWithoutCalculationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBatchStatmentWithoutCalculationCompleted(this, new GetBatchStatmentWithoutCalculationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBatchStatmentWithoutCalculationAsync(System.Guid BatchId) {
            this.GetBatchStatmentWithoutCalculationAsync(BatchId, null);
        }
        
        public void GetBatchStatmentWithoutCalculationAsync(System.Guid BatchId, object userState) {
            if ((this.onBeginGetBatchStatmentWithoutCalculationDelegate == null)) {
                this.onBeginGetBatchStatmentWithoutCalculationDelegate = new BeginOperationDelegate(this.OnBeginGetBatchStatmentWithoutCalculation);
            }
            if ((this.onEndGetBatchStatmentWithoutCalculationDelegate == null)) {
                this.onEndGetBatchStatmentWithoutCalculationDelegate = new EndOperationDelegate(this.OnEndGetBatchStatmentWithoutCalculation);
            }
            if ((this.onGetBatchStatmentWithoutCalculationCompletedDelegate == null)) {
                this.onGetBatchStatmentWithoutCalculationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBatchStatmentWithoutCalculationCompleted);
            }
            base.InvokeAsync(this.onBeginGetBatchStatmentWithoutCalculationDelegate, new object[] {
                        BatchId}, this.onEndGetBatchStatmentWithoutCalculationDelegate, this.onGetBatchStatmentWithoutCalculationCompletedDelegate, userState);
        }
        
        public void AddUpdateBatchStatmentRecord(MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords _BatchStatmentRecord) {
            base.Channel.AddUpdateBatchStatmentRecord(_BatchStatmentRecord);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateBatchStatmentRecord(MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords _BatchStatmentRecord, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateBatchStatmentRecord(_BatchStatmentRecord, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateBatchStatmentRecord(System.IAsyncResult result) {
            base.Channel.EndAddUpdateBatchStatmentRecord(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateBatchStatmentRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords _BatchStatmentRecord = ((MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords)(inValues[0]));
            return this.BeginAddUpdateBatchStatmentRecord(_BatchStatmentRecord, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateBatchStatmentRecord(System.IAsyncResult result) {
            this.EndAddUpdateBatchStatmentRecord(result);
            return null;
        }
        
        private void OnAddUpdateBatchStatmentRecordCompleted(object state) {
            if ((this.AddUpdateBatchStatmentRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateBatchStatmentRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateBatchStatmentRecordAsync(MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords _BatchStatmentRecord) {
            this.AddUpdateBatchStatmentRecordAsync(_BatchStatmentRecord, null);
        }
        
        public void AddUpdateBatchStatmentRecordAsync(MyAgencyVault.VM.MyAgencyVaultSvc.BatchStatmentRecords _BatchStatmentRecord, object userState) {
            if ((this.onBeginAddUpdateBatchStatmentRecordDelegate == null)) {
                this.onBeginAddUpdateBatchStatmentRecordDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateBatchStatmentRecord);
            }
            if ((this.onEndAddUpdateBatchStatmentRecordDelegate == null)) {
                this.onEndAddUpdateBatchStatmentRecordDelegate = new EndOperationDelegate(this.OnEndAddUpdateBatchStatmentRecord);
            }
            if ((this.onAddUpdateBatchStatmentRecordCompletedDelegate == null)) {
                this.onAddUpdateBatchStatmentRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateBatchStatmentRecordCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateBatchStatmentRecordDelegate, new object[] {
                        _BatchStatmentRecord}, this.onEndAddUpdateBatchStatmentRecordDelegate, this.onAddUpdateBatchStatmentRecordCompletedDelegate, userState);
        }
        
        public decimal GetBatchTotal(System.Guid BatchId) {
            return base.Channel.GetBatchTotal(BatchId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBatchTotal(System.Guid BatchId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBatchTotal(BatchId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public decimal EndGetBatchTotal(System.IAsyncResult result) {
            return base.Channel.EndGetBatchTotal(result);
        }
        
        private System.IAsyncResult OnBeginGetBatchTotal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid BatchId = ((System.Guid)(inValues[0]));
            return this.BeginGetBatchTotal(BatchId, callback, asyncState);
        }
        
        private object[] OnEndGetBatchTotal(System.IAsyncResult result) {
            decimal retVal = this.EndGetBatchTotal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBatchTotalCompleted(object state) {
            if ((this.GetBatchTotalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBatchTotalCompleted(this, new GetBatchTotalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBatchTotalAsync(System.Guid BatchId) {
            this.GetBatchTotalAsync(BatchId, null);
        }
        
        public void GetBatchTotalAsync(System.Guid BatchId, object userState) {
            if ((this.onBeginGetBatchTotalDelegate == null)) {
                this.onBeginGetBatchTotalDelegate = new BeginOperationDelegate(this.OnBeginGetBatchTotal);
            }
            if ((this.onEndGetBatchTotalDelegate == null)) {
                this.onEndGetBatchTotalDelegate = new EndOperationDelegate(this.OnEndGetBatchTotal);
            }
            if ((this.onGetBatchTotalCompletedDelegate == null)) {
                this.onGetBatchTotalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBatchTotalCompleted);
            }
            base.InvokeAsync(this.onBeginGetBatchTotalDelegate, new object[] {
                        BatchId}, this.onEndGetBatchTotalDelegate, this.onGetBatchTotalCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IInvoice")]
    public interface IInvoice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/AddUpdateInvoice", ReplyAction="http://tempuri.org/IInvoice/AddUpdateInvoiceResponse")]
        void AddUpdateInvoice(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInvoice/AddUpdateInvoice", ReplyAction="http://tempuri.org/IInvoice/AddUpdateInvoiceResponse")]
        System.IAsyncResult BeginAddUpdateInvoice(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateInvoice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/DeleteInvoice", ReplyAction="http://tempuri.org/IInvoice/DeleteInvoiceResponse")]
        void DeleteInvoice(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInvoice/DeleteInvoice", ReplyAction="http://tempuri.org/IInvoice/DeleteInvoiceResponse")]
        System.IAsyncResult BeginDeleteInvoice(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteInvoice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/GetInvoice", ReplyAction="http://tempuri.org/IInvoice/GetInvoiceResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Invoice GetInvoice();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInvoice/GetInvoice", ReplyAction="http://tempuri.org/IInvoice/GetInvoiceResponse")]
        System.IAsyncResult BeginGetInvoice(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Invoice EndGetInvoice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/IsValidInvoice", ReplyAction="http://tempuri.org/IInvoice/IsValidInvoiceResponse")]
        bool IsValidInvoice(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInvoice/IsValidInvoice", ReplyAction="http://tempuri.org/IInvoice/IsValidInvoiceResponse")]
        System.IAsyncResult BeginIsValidInvoice(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidInvoice(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInvoiceChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IInvoice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Invoice)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InvoiceClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IInvoice>, MyAgencyVault.VM.MyAgencyVaultSvc.IInvoice {
        
        private BeginOperationDelegate onBeginAddUpdateInvoiceDelegate;
        
        private EndOperationDelegate onEndAddUpdateInvoiceDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateInvoiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteInvoiceDelegate;
        
        private EndOperationDelegate onEndDeleteInvoiceDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteInvoiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInvoiceDelegate;
        
        private EndOperationDelegate onEndGetInvoiceDelegate;
        
        private System.Threading.SendOrPostCallback onGetInvoiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidInvoiceDelegate;
        
        private EndOperationDelegate onEndIsValidInvoiceDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidInvoiceCompletedDelegate;
        
        public InvoiceClient() {
        }
        
        public InvoiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InvoiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvoiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvoiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateInvoiceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteInvoiceCompleted;
        
        public event System.EventHandler<GetInvoiceCompletedEventArgs> GetInvoiceCompleted;
        
        public event System.EventHandler<IsValidInvoiceCompletedEventArgs> IsValidInvoiceCompleted;
        
        public void AddUpdateInvoice(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce) {
            base.Channel.AddUpdateInvoice(Invoce);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateInvoice(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateInvoice(Invoce, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateInvoice(System.IAsyncResult result) {
            base.Channel.EndAddUpdateInvoice(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateInvoice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce = ((MyAgencyVault.VM.MyAgencyVaultSvc.Invoice)(inValues[0]));
            return this.BeginAddUpdateInvoice(Invoce, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateInvoice(System.IAsyncResult result) {
            this.EndAddUpdateInvoice(result);
            return null;
        }
        
        private void OnAddUpdateInvoiceCompleted(object state) {
            if ((this.AddUpdateInvoiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateInvoiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateInvoiceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce) {
            this.AddUpdateInvoiceAsync(Invoce, null);
        }
        
        public void AddUpdateInvoiceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce, object userState) {
            if ((this.onBeginAddUpdateInvoiceDelegate == null)) {
                this.onBeginAddUpdateInvoiceDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateInvoice);
            }
            if ((this.onEndAddUpdateInvoiceDelegate == null)) {
                this.onEndAddUpdateInvoiceDelegate = new EndOperationDelegate(this.OnEndAddUpdateInvoice);
            }
            if ((this.onAddUpdateInvoiceCompletedDelegate == null)) {
                this.onAddUpdateInvoiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateInvoiceCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateInvoiceDelegate, new object[] {
                        Invoce}, this.onEndAddUpdateInvoiceDelegate, this.onAddUpdateInvoiceCompletedDelegate, userState);
        }
        
        public void DeleteInvoice(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce) {
            base.Channel.DeleteInvoice(Invoce);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteInvoice(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteInvoice(Invoce, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteInvoice(System.IAsyncResult result) {
            base.Channel.EndDeleteInvoice(result);
        }
        
        private System.IAsyncResult OnBeginDeleteInvoice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce = ((MyAgencyVault.VM.MyAgencyVaultSvc.Invoice)(inValues[0]));
            return this.BeginDeleteInvoice(Invoce, callback, asyncState);
        }
        
        private object[] OnEndDeleteInvoice(System.IAsyncResult result) {
            this.EndDeleteInvoice(result);
            return null;
        }
        
        private void OnDeleteInvoiceCompleted(object state) {
            if ((this.DeleteInvoiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteInvoiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteInvoiceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce) {
            this.DeleteInvoiceAsync(Invoce, null);
        }
        
        public void DeleteInvoiceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce, object userState) {
            if ((this.onBeginDeleteInvoiceDelegate == null)) {
                this.onBeginDeleteInvoiceDelegate = new BeginOperationDelegate(this.OnBeginDeleteInvoice);
            }
            if ((this.onEndDeleteInvoiceDelegate == null)) {
                this.onEndDeleteInvoiceDelegate = new EndOperationDelegate(this.OnEndDeleteInvoice);
            }
            if ((this.onDeleteInvoiceCompletedDelegate == null)) {
                this.onDeleteInvoiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteInvoiceCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteInvoiceDelegate, new object[] {
                        Invoce}, this.onEndDeleteInvoiceDelegate, this.onDeleteInvoiceCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Invoice GetInvoice() {
            return base.Channel.GetInvoice();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetInvoice(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInvoice(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Invoice EndGetInvoice(System.IAsyncResult result) {
            return base.Channel.EndGetInvoice(result);
        }
        
        private System.IAsyncResult OnBeginGetInvoice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetInvoice(callback, asyncState);
        }
        
        private object[] OnEndGetInvoice(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Invoice retVal = this.EndGetInvoice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInvoiceCompleted(object state) {
            if ((this.GetInvoiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInvoiceCompleted(this, new GetInvoiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInvoiceAsync() {
            this.GetInvoiceAsync(null);
        }
        
        public void GetInvoiceAsync(object userState) {
            if ((this.onBeginGetInvoiceDelegate == null)) {
                this.onBeginGetInvoiceDelegate = new BeginOperationDelegate(this.OnBeginGetInvoice);
            }
            if ((this.onEndGetInvoiceDelegate == null)) {
                this.onEndGetInvoiceDelegate = new EndOperationDelegate(this.OnEndGetInvoice);
            }
            if ((this.onGetInvoiceCompletedDelegate == null)) {
                this.onGetInvoiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInvoiceCompleted);
            }
            base.InvokeAsync(this.onBeginGetInvoiceDelegate, null, this.onEndGetInvoiceDelegate, this.onGetInvoiceCompletedDelegate, userState);
        }
        
        public bool IsValidInvoice(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce) {
            return base.Channel.IsValidInvoice(Invoce);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidInvoice(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidInvoice(Invoce, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidInvoice(System.IAsyncResult result) {
            return base.Channel.EndIsValidInvoice(result);
        }
        
        private System.IAsyncResult OnBeginIsValidInvoice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce = ((MyAgencyVault.VM.MyAgencyVaultSvc.Invoice)(inValues[0]));
            return this.BeginIsValidInvoice(Invoce, callback, asyncState);
        }
        
        private object[] OnEndIsValidInvoice(System.IAsyncResult result) {
            bool retVal = this.EndIsValidInvoice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidInvoiceCompleted(object state) {
            if ((this.IsValidInvoiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidInvoiceCompleted(this, new IsValidInvoiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidInvoiceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce) {
            this.IsValidInvoiceAsync(Invoce, null);
        }
        
        public void IsValidInvoiceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Invoice Invoce, object userState) {
            if ((this.onBeginIsValidInvoiceDelegate == null)) {
                this.onBeginIsValidInvoiceDelegate = new BeginOperationDelegate(this.OnBeginIsValidInvoice);
            }
            if ((this.onEndIsValidInvoiceDelegate == null)) {
                this.onEndIsValidInvoiceDelegate = new EndOperationDelegate(this.OnEndIsValidInvoice);
            }
            if ((this.onIsValidInvoiceCompletedDelegate == null)) {
                this.onIsValidInvoiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidInvoiceCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidInvoiceDelegate, new object[] {
                        Invoce}, this.onEndIsValidInvoiceDelegate, this.onIsValidInvoiceCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPostUtil")]
    public interface IPostUtil {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/GetPoliciesFromUniqueIdentifier", ReplyAction="http://tempuri.org/IPostUtil/GetPoliciesFromUniqueIdentifierResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy> GetPoliciesFromUniqueIdentifier(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UniqueIdenitfier> uniqueIdentifiers, System.Guid LicId, System.Guid PayorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/GetPoliciesFromUniqueIdentifier", ReplyAction="http://tempuri.org/IPostUtil/GetPoliciesFromUniqueIdentifierResponse")]
        System.IAsyncResult BeginGetPoliciesFromUniqueIdentifier(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UniqueIdenitfier> uniqueIdentifiers, System.Guid LicId, System.Guid PayorId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy> EndGetPoliciesFromUniqueIdentifier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/DeuPostStartWrapper", ReplyAction="http://tempuri.org/IPostUtil/DeuPostStartWrapperResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus DeuPostStartWrapper(MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields, System.Guid deuEntryId, System.Guid userId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole userRole);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/DeuPostStartWrapper", ReplyAction="http://tempuri.org/IPostUtil/DeuPostStartWrapperResponse")]
        System.IAsyncResult BeginDeuPostStartWrapper(MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields, System.Guid deuEntryId, System.Guid userId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole userRole, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus EndDeuPostStartWrapper(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/GetPolicyPU", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyPUResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData GetPolicyPU(System.Guid SePolicyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/GetPolicyPU", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyPUResponse")]
        System.IAsyncResult BeginGetPolicyPU(System.Guid SePolicyID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData EndGetPolicyPU(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/CheckForOutgoingScheduleVariance", ReplyAction="http://tempuri.org/IPostUtil/CheckForOutgoingScheduleVarianceResponse")]
        bool CheckForOutgoingScheduleVariance(System.Guid PaymentEntryId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/CheckForOutgoingScheduleVariance", ReplyAction="http://tempuri.org/IPostUtil/CheckForOutgoingScheduleVarianceResponse")]
        System.IAsyncResult BeginCheckForOutgoingScheduleVariance(System.Guid PaymentEntryId, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckForOutgoingScheduleVariance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/GetPolicyHouseOwner", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyHouseOwnerResponse")]
        System.Guid GetPolicyHouseOwner(System.Guid PolicyLicenID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/GetPolicyHouseOwner", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyHouseOwnerResponse")]
        System.IAsyncResult BeginGetPolicyHouseOwner(System.Guid PolicyLicenID, System.AsyncCallback callback, object asyncState);
        
        System.Guid EndGetPolicyHouseOwner(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/GetPolicyPaymentEntryForCommissionDashboard", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyPaymentEntryForCommissionDashboardResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> GetPolicyPaymentEntryForCommissionDashboard(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/GetPolicyPaymentEntryForCommissionDashboard", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyPaymentEntryForCommissionDashboardResponse")]
        System.IAsyncResult BeginGetPolicyPaymentEntryForCommissionDashboard(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> EndGetPolicyPaymentEntryForCommissionDashboard(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/GetPolicyOutgoingPaymentForCommissionDashboard", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyOutgoingPaymentForCommissionDashboardRespon" +
            "se")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> GetPolicyOutgoingPaymentForCommissionDashboard(System.Guid PolicyPaymentEntryId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/GetPolicyOutgoingPaymentForCommissionDashboard", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyOutgoingPaymentForCommissionDashboardRespon" +
            "se")]
        System.IAsyncResult BeginGetPolicyOutgoingPaymentForCommissionDashboard(System.Guid PolicyPaymentEntryId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> EndGetPolicyOutgoingPaymentForCommissionDashboard(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/GetPolicyCommissionIssuesForCommissionDashboard", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyCommissionIssuesForCommissionDashboardRespo" +
            "nse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> GetPolicyCommissionIssuesForCommissionDashboard(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/GetPolicyCommissionIssuesForCommissionDashboard", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyCommissionIssuesForCommissionDashboardRespo" +
            "nse")]
        System.IAsyncResult BeginGetPolicyCommissionIssuesForCommissionDashboard(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> EndGetPolicyCommissionIssuesForCommissionDashboard(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/AddUpadatePolicyPaymentEntries", ReplyAction="http://tempuri.org/IPostUtil/AddUpadatePolicyPaymentEntriesResponse")]
        void AddUpadatePolicyPaymentEntries(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/AddUpadatePolicyPaymentEntries", ReplyAction="http://tempuri.org/IPostUtil/AddUpadatePolicyPaymentEntriesResponse")]
        System.IAsyncResult BeginAddUpadatePolicyPaymentEntries(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpadatePolicyPaymentEntries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/AddUpadateResolvedorClosed", ReplyAction="http://tempuri.org/IPostUtil/AddUpadateResolvedorClosedResponse")]
        void AddUpadateResolvedorClosed(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/AddUpadateResolvedorClosed", ReplyAction="http://tempuri.org/IPostUtil/AddUpadateResolvedorClosedResponse")]
        System.IAsyncResult BeginAddUpadateResolvedorClosed(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpadateResolvedorClosed(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/GetAllResolvedorClosedIssueId", ReplyAction="http://tempuri.org/IPostUtil/GetAllResolvedorClosedIssueIdResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> GetAllResolvedorClosedIssueId(System.Nullable<System.Guid> GuidPolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/GetAllResolvedorClosedIssueId", ReplyAction="http://tempuri.org/IPostUtil/GetAllResolvedorClosedIssueIdResponse")]
        System.IAsyncResult BeginGetAllResolvedorClosedIssueId(System.Nullable<System.Guid> GuidPolicyId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> EndGetAllResolvedorClosedIssueId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/UpadateResolvedOrClosedbyManualy", ReplyAction="http://tempuri.org/IPostUtil/UpadateResolvedOrClosedbyManualyResponse")]
        void UpadateResolvedOrClosedbyManualy(System.Guid PaymentEntryID, int intId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/UpadateResolvedOrClosedbyManualy", ReplyAction="http://tempuri.org/IPostUtil/UpadateResolvedOrClosedbyManualyResponse")]
        System.IAsyncResult BeginUpadateResolvedOrClosedbyManualy(System.Guid PaymentEntryID, int intId, System.AsyncCallback callback, object asyncState);
        
        void EndUpadateResolvedOrClosedbyManualy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/GetPolicyPaymentPaymentEntryEntryIdWise", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyPaymentPaymentEntryEntryIdWiseResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost GetPolicyPaymentPaymentEntryEntryIdWise(System.Guid PolicyEntryid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/GetPolicyPaymentPaymentEntryEntryIdWise", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyPaymentPaymentEntryEntryIdWiseResponse")]
        System.IAsyncResult BeginGetPolicyPaymentPaymentEntryEntryIdWise(System.Guid PolicyEntryid, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost EndGetPolicyPaymentPaymentEntryEntryIdWise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/EntryInPolicyOutGoingPayment", ReplyAction="http://tempuri.org/IPostUtil/EntryInPolicyOutGoingPaymentResponse")]
        void EntryInPolicyOutGoingPayment(bool IsPaymentToHO, System.Guid PaymentEntryID, System.Guid PolicyId, System.Nullable<System.DateTime> InvoiceDate, System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/EntryInPolicyOutGoingPayment", ReplyAction="http://tempuri.org/IPostUtil/EntryInPolicyOutGoingPaymentResponse")]
        System.IAsyncResult BeginEntryInPolicyOutGoingPayment(bool IsPaymentToHO, System.Guid PaymentEntryID, System.Guid PolicyId, System.Nullable<System.DateTime> InvoiceDate, System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        void EndEntryInPolicyOutGoingPayment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/RemoveCommissiondashBoardIncomingPayment", ReplyAction="http://tempuri.org/IPostUtil/RemoveCommissiondashBoardIncomingPaymentResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus RemoveCommissiondashBoardIncomingPayment(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/RemoveCommissiondashBoardIncomingPayment", ReplyAction="http://tempuri.org/IPostUtil/RemoveCommissiondashBoardIncomingPaymentResponse")]
        System.IAsyncResult BeginRemoveCommissiondashBoardIncomingPayment(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus EndRemoveCommissiondashBoardIncomingPayment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/UnlinkCommissiondashBoardIncomingPayment", ReplyAction="http://tempuri.org/IPostUtil/UnlinkCommissiondashBoardIncomingPaymentResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus UnlinkCommissiondashBoardIncomingPayment(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/UnlinkCommissiondashBoardIncomingPayment", ReplyAction="http://tempuri.org/IPostUtil/UnlinkCommissiondashBoardIncomingPaymentResponse")]
        System.IAsyncResult BeginUnlinkCommissiondashBoardIncomingPayment(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus EndUnlinkCommissiondashBoardIncomingPayment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/CommissionDashBoardPostStart", ReplyAction="http://tempuri.org/IPostUtil/CommissionDashBoardPostStartResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus CommissionDashBoardPostStart(System.Guid BatchId, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, bool IsInvoiceEdited, System.Nullable<System.Guid> UserId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/CommissionDashBoardPostStart", ReplyAction="http://tempuri.org/IPostUtil/CommissionDashBoardPostStartResponse")]
        System.IAsyncResult BeginCommissionDashBoardPostStart(System.Guid BatchId, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, bool IsInvoiceEdited, System.Nullable<System.Guid> UserId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus EndCommissionDashBoardPostStart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/FollowUpProcedure", ReplyAction="http://tempuri.org/IPostUtil/FollowUpProcedureResponse")]
        void FollowUpProcedure(MyAgencyVault.VM.MyAgencyVaultSvc.FollowUpRunModules _FollowUpRunModules, MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DEU, System.Guid PolicyId, bool IsTrackPayment, bool IsEntryByCommissionDashboard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.Nullable<bool> PolicyModeChange);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/FollowUpProcedure", ReplyAction="http://tempuri.org/IPostUtil/FollowUpProcedureResponse")]
        System.IAsyncResult BeginFollowUpProcedure(MyAgencyVault.VM.MyAgencyVaultSvc.FollowUpRunModules _FollowUpRunModules, MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DEU, System.Guid PolicyId, bool IsTrackPayment, bool IsEntryByCommissionDashboard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.Nullable<bool> PolicyModeChange, System.AsyncCallback callback, object asyncState);
        
        void EndFollowUpProcedure(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/GetPolicyPaymentEntryPolicyIDWise", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyPaymentEntryPolicyIDWiseResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> GetPolicyPaymentEntryPolicyIDWise(System.Guid PolicyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/GetPolicyPaymentEntryPolicyIDWise", ReplyAction="http://tempuri.org/IPostUtil/GetPolicyPaymentEntryPolicyIDWiseResponse")]
        System.IAsyncResult BeginGetPolicyPaymentEntryPolicyIDWise(System.Guid PolicyID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> EndGetPolicyPaymentEntryPolicyIDWise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostUtil/CommissionDashBoardPostStartClienVMWrapper", ReplyAction="http://tempuri.org/IPostUtil/CommissionDashBoardPostStartClienVMWrapperResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus CommissionDashBoardPostStartClienVMWrapper(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData SelectedPolicy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPostUtil/CommissionDashBoardPostStartClienVMWrapper", ReplyAction="http://tempuri.org/IPostUtil/CommissionDashBoardPostStartClienVMWrapperResponse")]
        System.IAsyncResult BeginCommissionDashBoardPostStartClienVMWrapper(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData SelectedPolicy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus EndCommissionDashBoardPostStartClienVMWrapper(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPostUtilChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPostUtil, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPoliciesFromUniqueIdentifierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPoliciesFromUniqueIdentifierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeuPostStartWrapperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeuPostStartWrapperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyPUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyPUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckForOutgoingScheduleVarianceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckForOutgoingScheduleVarianceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyHouseOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyHouseOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyPaymentEntryForCommissionDashboardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyPaymentEntryForCommissionDashboardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyOutgoingPaymentForCommissionDashboardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyOutgoingPaymentForCommissionDashboardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyCommissionIssuesForCommissionDashboardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyCommissionIssuesForCommissionDashboardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllResolvedorClosedIssueIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllResolvedorClosedIssueIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyPaymentPaymentEntryEntryIdWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyPaymentPaymentEntryEntryIdWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveCommissiondashBoardIncomingPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveCommissiondashBoardIncomingPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnlinkCommissiondashBoardIncomingPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UnlinkCommissiondashBoardIncomingPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommissionDashBoardPostStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CommissionDashBoardPostStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyPaymentEntryPolicyIDWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyPaymentEntryPolicyIDWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommissionDashBoardPostStartClienVMWrapperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CommissionDashBoardPostStartClienVMWrapperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostUtilClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPostUtil>, MyAgencyVault.VM.MyAgencyVaultSvc.IPostUtil {
        
        private BeginOperationDelegate onBeginGetPoliciesFromUniqueIdentifierDelegate;
        
        private EndOperationDelegate onEndGetPoliciesFromUniqueIdentifierDelegate;
        
        private System.Threading.SendOrPostCallback onGetPoliciesFromUniqueIdentifierCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeuPostStartWrapperDelegate;
        
        private EndOperationDelegate onEndDeuPostStartWrapperDelegate;
        
        private System.Threading.SendOrPostCallback onDeuPostStartWrapperCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyPUDelegate;
        
        private EndOperationDelegate onEndGetPolicyPUDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyPUCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckForOutgoingScheduleVarianceDelegate;
        
        private EndOperationDelegate onEndCheckForOutgoingScheduleVarianceDelegate;
        
        private System.Threading.SendOrPostCallback onCheckForOutgoingScheduleVarianceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyHouseOwnerDelegate;
        
        private EndOperationDelegate onEndGetPolicyHouseOwnerDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyHouseOwnerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyPaymentEntryForCommissionDashboardDelegate;
        
        private EndOperationDelegate onEndGetPolicyPaymentEntryForCommissionDashboardDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyPaymentEntryForCommissionDashboardCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyOutgoingPaymentForCommissionDashboardDelegate;
        
        private EndOperationDelegate onEndGetPolicyOutgoingPaymentForCommissionDashboardDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyOutgoingPaymentForCommissionDashboardCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyCommissionIssuesForCommissionDashboardDelegate;
        
        private EndOperationDelegate onEndGetPolicyCommissionIssuesForCommissionDashboardDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyCommissionIssuesForCommissionDashboardCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpadatePolicyPaymentEntriesDelegate;
        
        private EndOperationDelegate onEndAddUpadatePolicyPaymentEntriesDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpadatePolicyPaymentEntriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpadateResolvedorClosedDelegate;
        
        private EndOperationDelegate onEndAddUpadateResolvedorClosedDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpadateResolvedorClosedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllResolvedorClosedIssueIdDelegate;
        
        private EndOperationDelegate onEndGetAllResolvedorClosedIssueIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllResolvedorClosedIssueIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpadateResolvedOrClosedbyManualyDelegate;
        
        private EndOperationDelegate onEndUpadateResolvedOrClosedbyManualyDelegate;
        
        private System.Threading.SendOrPostCallback onUpadateResolvedOrClosedbyManualyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyPaymentPaymentEntryEntryIdWiseDelegate;
        
        private EndOperationDelegate onEndGetPolicyPaymentPaymentEntryEntryIdWiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyPaymentPaymentEntryEntryIdWiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntryInPolicyOutGoingPaymentDelegate;
        
        private EndOperationDelegate onEndEntryInPolicyOutGoingPaymentDelegate;
        
        private System.Threading.SendOrPostCallback onEntryInPolicyOutGoingPaymentCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveCommissiondashBoardIncomingPaymentDelegate;
        
        private EndOperationDelegate onEndRemoveCommissiondashBoardIncomingPaymentDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveCommissiondashBoardIncomingPaymentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnlinkCommissiondashBoardIncomingPaymentDelegate;
        
        private EndOperationDelegate onEndUnlinkCommissiondashBoardIncomingPaymentDelegate;
        
        private System.Threading.SendOrPostCallback onUnlinkCommissiondashBoardIncomingPaymentCompletedDelegate;
        
        private BeginOperationDelegate onBeginCommissionDashBoardPostStartDelegate;
        
        private EndOperationDelegate onEndCommissionDashBoardPostStartDelegate;
        
        private System.Threading.SendOrPostCallback onCommissionDashBoardPostStartCompletedDelegate;
        
        private BeginOperationDelegate onBeginFollowUpProcedureDelegate;
        
        private EndOperationDelegate onEndFollowUpProcedureDelegate;
        
        private System.Threading.SendOrPostCallback onFollowUpProcedureCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyPaymentEntryPolicyIDWiseDelegate;
        
        private EndOperationDelegate onEndGetPolicyPaymentEntryPolicyIDWiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyPaymentEntryPolicyIDWiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginCommissionDashBoardPostStartClienVMWrapperDelegate;
        
        private EndOperationDelegate onEndCommissionDashBoardPostStartClienVMWrapperDelegate;
        
        private System.Threading.SendOrPostCallback onCommissionDashBoardPostStartClienVMWrapperCompletedDelegate;
        
        public PostUtilClient() {
        }
        
        public PostUtilClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PostUtilClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostUtilClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostUtilClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetPoliciesFromUniqueIdentifierCompletedEventArgs> GetPoliciesFromUniqueIdentifierCompleted;
        
        public event System.EventHandler<DeuPostStartWrapperCompletedEventArgs> DeuPostStartWrapperCompleted;
        
        public event System.EventHandler<GetPolicyPUCompletedEventArgs> GetPolicyPUCompleted;
        
        public event System.EventHandler<CheckForOutgoingScheduleVarianceCompletedEventArgs> CheckForOutgoingScheduleVarianceCompleted;
        
        public event System.EventHandler<GetPolicyHouseOwnerCompletedEventArgs> GetPolicyHouseOwnerCompleted;
        
        public event System.EventHandler<GetPolicyPaymentEntryForCommissionDashboardCompletedEventArgs> GetPolicyPaymentEntryForCommissionDashboardCompleted;
        
        public event System.EventHandler<GetPolicyOutgoingPaymentForCommissionDashboardCompletedEventArgs> GetPolicyOutgoingPaymentForCommissionDashboardCompleted;
        
        public event System.EventHandler<GetPolicyCommissionIssuesForCommissionDashboardCompletedEventArgs> GetPolicyCommissionIssuesForCommissionDashboardCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpadatePolicyPaymentEntriesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpadateResolvedorClosedCompleted;
        
        public event System.EventHandler<GetAllResolvedorClosedIssueIdCompletedEventArgs> GetAllResolvedorClosedIssueIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpadateResolvedOrClosedbyManualyCompleted;
        
        public event System.EventHandler<GetPolicyPaymentPaymentEntryEntryIdWiseCompletedEventArgs> GetPolicyPaymentPaymentEntryEntryIdWiseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EntryInPolicyOutGoingPaymentCompleted;
        
        public event System.EventHandler<RemoveCommissiondashBoardIncomingPaymentCompletedEventArgs> RemoveCommissiondashBoardIncomingPaymentCompleted;
        
        public event System.EventHandler<UnlinkCommissiondashBoardIncomingPaymentCompletedEventArgs> UnlinkCommissiondashBoardIncomingPaymentCompleted;
        
        public event System.EventHandler<CommissionDashBoardPostStartCompletedEventArgs> CommissionDashBoardPostStartCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> FollowUpProcedureCompleted;
        
        public event System.EventHandler<GetPolicyPaymentEntryPolicyIDWiseCompletedEventArgs> GetPolicyPaymentEntryPolicyIDWiseCompleted;
        
        public event System.EventHandler<CommissionDashBoardPostStartClienVMWrapperCompletedEventArgs> CommissionDashBoardPostStartClienVMWrapperCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy> GetPoliciesFromUniqueIdentifier(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UniqueIdenitfier> uniqueIdentifiers, System.Guid LicId, System.Guid PayorId) {
            return base.Channel.GetPoliciesFromUniqueIdentifier(uniqueIdentifiers, LicId, PayorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPoliciesFromUniqueIdentifier(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UniqueIdenitfier> uniqueIdentifiers, System.Guid LicId, System.Guid PayorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPoliciesFromUniqueIdentifier(uniqueIdentifiers, LicId, PayorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy> EndGetPoliciesFromUniqueIdentifier(System.IAsyncResult result) {
            return base.Channel.EndGetPoliciesFromUniqueIdentifier(result);
        }
        
        private System.IAsyncResult OnBeginGetPoliciesFromUniqueIdentifier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UniqueIdenitfier> uniqueIdentifiers = ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UniqueIdenitfier>)(inValues[0]));
            System.Guid LicId = ((System.Guid)(inValues[1]));
            System.Guid PayorId = ((System.Guid)(inValues[2]));
            return this.BeginGetPoliciesFromUniqueIdentifier(uniqueIdentifiers, LicId, PayorId, callback, asyncState);
        }
        
        private object[] OnEndGetPoliciesFromUniqueIdentifier(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DeuSearchedPolicy> retVal = this.EndGetPoliciesFromUniqueIdentifier(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPoliciesFromUniqueIdentifierCompleted(object state) {
            if ((this.GetPoliciesFromUniqueIdentifierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPoliciesFromUniqueIdentifierCompleted(this, new GetPoliciesFromUniqueIdentifierCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPoliciesFromUniqueIdentifierAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UniqueIdenitfier> uniqueIdentifiers, System.Guid LicId, System.Guid PayorId) {
            this.GetPoliciesFromUniqueIdentifierAsync(uniqueIdentifiers, LicId, PayorId, null);
        }
        
        public void GetPoliciesFromUniqueIdentifierAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UniqueIdenitfier> uniqueIdentifiers, System.Guid LicId, System.Guid PayorId, object userState) {
            if ((this.onBeginGetPoliciesFromUniqueIdentifierDelegate == null)) {
                this.onBeginGetPoliciesFromUniqueIdentifierDelegate = new BeginOperationDelegate(this.OnBeginGetPoliciesFromUniqueIdentifier);
            }
            if ((this.onEndGetPoliciesFromUniqueIdentifierDelegate == null)) {
                this.onEndGetPoliciesFromUniqueIdentifierDelegate = new EndOperationDelegate(this.OnEndGetPoliciesFromUniqueIdentifier);
            }
            if ((this.onGetPoliciesFromUniqueIdentifierCompletedDelegate == null)) {
                this.onGetPoliciesFromUniqueIdentifierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPoliciesFromUniqueIdentifierCompleted);
            }
            base.InvokeAsync(this.onBeginGetPoliciesFromUniqueIdentifierDelegate, new object[] {
                        uniqueIdentifiers,
                        LicId,
                        PayorId}, this.onEndGetPoliciesFromUniqueIdentifierDelegate, this.onGetPoliciesFromUniqueIdentifierCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus DeuPostStartWrapper(MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields, System.Guid deuEntryId, System.Guid userId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole userRole) {
            return base.Channel.DeuPostStartWrapper(_PostEntryProcess, deuFields, deuEntryId, userId, userRole);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeuPostStartWrapper(MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields, System.Guid deuEntryId, System.Guid userId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole userRole, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeuPostStartWrapper(_PostEntryProcess, deuFields, deuEntryId, userId, userRole, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus EndDeuPostStartWrapper(System.IAsyncResult result) {
            return base.Channel.EndDeuPostStartWrapper(result);
        }
        
        private System.IAsyncResult OnBeginDeuPostStartWrapper(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess = ((MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields = ((MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields)(inValues[1]));
            System.Guid deuEntryId = ((System.Guid)(inValues[2]));
            System.Guid userId = ((System.Guid)(inValues[3]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole userRole = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[4]));
            return this.BeginDeuPostStartWrapper(_PostEntryProcess, deuFields, deuEntryId, userId, userRole, callback, asyncState);
        }
        
        private object[] OnEndDeuPostStartWrapper(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus retVal = this.EndDeuPostStartWrapper(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeuPostStartWrapperCompleted(object state) {
            if ((this.DeuPostStartWrapperCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeuPostStartWrapperCompleted(this, new DeuPostStartWrapperCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeuPostStartWrapperAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields, System.Guid deuEntryId, System.Guid userId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole userRole) {
            this.DeuPostStartWrapperAsync(_PostEntryProcess, deuFields, deuEntryId, userId, userRole, null);
        }
        
        public void DeuPostStartWrapperAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields, System.Guid deuEntryId, System.Guid userId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole userRole, object userState) {
            if ((this.onBeginDeuPostStartWrapperDelegate == null)) {
                this.onBeginDeuPostStartWrapperDelegate = new BeginOperationDelegate(this.OnBeginDeuPostStartWrapper);
            }
            if ((this.onEndDeuPostStartWrapperDelegate == null)) {
                this.onEndDeuPostStartWrapperDelegate = new EndOperationDelegate(this.OnEndDeuPostStartWrapper);
            }
            if ((this.onDeuPostStartWrapperCompletedDelegate == null)) {
                this.onDeuPostStartWrapperCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeuPostStartWrapperCompleted);
            }
            base.InvokeAsync(this.onBeginDeuPostStartWrapperDelegate, new object[] {
                        _PostEntryProcess,
                        deuFields,
                        deuEntryId,
                        userId,
                        userRole}, this.onEndDeuPostStartWrapperDelegate, this.onDeuPostStartWrapperCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData GetPolicyPU(System.Guid SePolicyID) {
            return base.Channel.GetPolicyPU(SePolicyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyPU(System.Guid SePolicyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyPU(SePolicyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData EndGetPolicyPU(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyPU(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyPU(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid SePolicyID = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyPU(SePolicyID, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyPU(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData retVal = this.EndGetPolicyPU(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyPUCompleted(object state) {
            if ((this.GetPolicyPUCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyPUCompleted(this, new GetPolicyPUCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyPUAsync(System.Guid SePolicyID) {
            this.GetPolicyPUAsync(SePolicyID, null);
        }
        
        public void GetPolicyPUAsync(System.Guid SePolicyID, object userState) {
            if ((this.onBeginGetPolicyPUDelegate == null)) {
                this.onBeginGetPolicyPUDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyPU);
            }
            if ((this.onEndGetPolicyPUDelegate == null)) {
                this.onEndGetPolicyPUDelegate = new EndOperationDelegate(this.OnEndGetPolicyPU);
            }
            if ((this.onGetPolicyPUCompletedDelegate == null)) {
                this.onGetPolicyPUCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyPUCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyPUDelegate, new object[] {
                        SePolicyID}, this.onEndGetPolicyPUDelegate, this.onGetPolicyPUCompletedDelegate, userState);
        }
        
        public bool CheckForOutgoingScheduleVariance(System.Guid PaymentEntryId) {
            return base.Channel.CheckForOutgoingScheduleVariance(PaymentEntryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckForOutgoingScheduleVariance(System.Guid PaymentEntryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckForOutgoingScheduleVariance(PaymentEntryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckForOutgoingScheduleVariance(System.IAsyncResult result) {
            return base.Channel.EndCheckForOutgoingScheduleVariance(result);
        }
        
        private System.IAsyncResult OnBeginCheckForOutgoingScheduleVariance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PaymentEntryId = ((System.Guid)(inValues[0]));
            return this.BeginCheckForOutgoingScheduleVariance(PaymentEntryId, callback, asyncState);
        }
        
        private object[] OnEndCheckForOutgoingScheduleVariance(System.IAsyncResult result) {
            bool retVal = this.EndCheckForOutgoingScheduleVariance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckForOutgoingScheduleVarianceCompleted(object state) {
            if ((this.CheckForOutgoingScheduleVarianceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckForOutgoingScheduleVarianceCompleted(this, new CheckForOutgoingScheduleVarianceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckForOutgoingScheduleVarianceAsync(System.Guid PaymentEntryId) {
            this.CheckForOutgoingScheduleVarianceAsync(PaymentEntryId, null);
        }
        
        public void CheckForOutgoingScheduleVarianceAsync(System.Guid PaymentEntryId, object userState) {
            if ((this.onBeginCheckForOutgoingScheduleVarianceDelegate == null)) {
                this.onBeginCheckForOutgoingScheduleVarianceDelegate = new BeginOperationDelegate(this.OnBeginCheckForOutgoingScheduleVariance);
            }
            if ((this.onEndCheckForOutgoingScheduleVarianceDelegate == null)) {
                this.onEndCheckForOutgoingScheduleVarianceDelegate = new EndOperationDelegate(this.OnEndCheckForOutgoingScheduleVariance);
            }
            if ((this.onCheckForOutgoingScheduleVarianceCompletedDelegate == null)) {
                this.onCheckForOutgoingScheduleVarianceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckForOutgoingScheduleVarianceCompleted);
            }
            base.InvokeAsync(this.onBeginCheckForOutgoingScheduleVarianceDelegate, new object[] {
                        PaymentEntryId}, this.onEndCheckForOutgoingScheduleVarianceDelegate, this.onCheckForOutgoingScheduleVarianceCompletedDelegate, userState);
        }
        
        public System.Guid GetPolicyHouseOwner(System.Guid PolicyLicenID) {
            return base.Channel.GetPolicyHouseOwner(PolicyLicenID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyHouseOwner(System.Guid PolicyLicenID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyHouseOwner(PolicyLicenID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Guid EndGetPolicyHouseOwner(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyHouseOwner(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyHouseOwner(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyLicenID = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyHouseOwner(PolicyLicenID, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyHouseOwner(System.IAsyncResult result) {
            System.Guid retVal = this.EndGetPolicyHouseOwner(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyHouseOwnerCompleted(object state) {
            if ((this.GetPolicyHouseOwnerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyHouseOwnerCompleted(this, new GetPolicyHouseOwnerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyHouseOwnerAsync(System.Guid PolicyLicenID) {
            this.GetPolicyHouseOwnerAsync(PolicyLicenID, null);
        }
        
        public void GetPolicyHouseOwnerAsync(System.Guid PolicyLicenID, object userState) {
            if ((this.onBeginGetPolicyHouseOwnerDelegate == null)) {
                this.onBeginGetPolicyHouseOwnerDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyHouseOwner);
            }
            if ((this.onEndGetPolicyHouseOwnerDelegate == null)) {
                this.onEndGetPolicyHouseOwnerDelegate = new EndOperationDelegate(this.OnEndGetPolicyHouseOwner);
            }
            if ((this.onGetPolicyHouseOwnerCompletedDelegate == null)) {
                this.onGetPolicyHouseOwnerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyHouseOwnerCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyHouseOwnerDelegate, new object[] {
                        PolicyLicenID}, this.onEndGetPolicyHouseOwnerDelegate, this.onGetPolicyHouseOwnerCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> GetPolicyPaymentEntryForCommissionDashboard(System.Guid PolicyId) {
            return base.Channel.GetPolicyPaymentEntryForCommissionDashboard(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyPaymentEntryForCommissionDashboard(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyPaymentEntryForCommissionDashboard(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> EndGetPolicyPaymentEntryForCommissionDashboard(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyPaymentEntryForCommissionDashboard(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyPaymentEntryForCommissionDashboard(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyPaymentEntryForCommissionDashboard(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyPaymentEntryForCommissionDashboard(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> retVal = this.EndGetPolicyPaymentEntryForCommissionDashboard(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyPaymentEntryForCommissionDashboardCompleted(object state) {
            if ((this.GetPolicyPaymentEntryForCommissionDashboardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyPaymentEntryForCommissionDashboardCompleted(this, new GetPolicyPaymentEntryForCommissionDashboardCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyPaymentEntryForCommissionDashboardAsync(System.Guid PolicyId) {
            this.GetPolicyPaymentEntryForCommissionDashboardAsync(PolicyId, null);
        }
        
        public void GetPolicyPaymentEntryForCommissionDashboardAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetPolicyPaymentEntryForCommissionDashboardDelegate == null)) {
                this.onBeginGetPolicyPaymentEntryForCommissionDashboardDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyPaymentEntryForCommissionDashboard);
            }
            if ((this.onEndGetPolicyPaymentEntryForCommissionDashboardDelegate == null)) {
                this.onEndGetPolicyPaymentEntryForCommissionDashboardDelegate = new EndOperationDelegate(this.OnEndGetPolicyPaymentEntryForCommissionDashboard);
            }
            if ((this.onGetPolicyPaymentEntryForCommissionDashboardCompletedDelegate == null)) {
                this.onGetPolicyPaymentEntryForCommissionDashboardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyPaymentEntryForCommissionDashboardCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyPaymentEntryForCommissionDashboardDelegate, new object[] {
                        PolicyId}, this.onEndGetPolicyPaymentEntryForCommissionDashboardDelegate, this.onGetPolicyPaymentEntryForCommissionDashboardCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> GetPolicyOutgoingPaymentForCommissionDashboard(System.Guid PolicyPaymentEntryId) {
            return base.Channel.GetPolicyOutgoingPaymentForCommissionDashboard(PolicyPaymentEntryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyOutgoingPaymentForCommissionDashboard(System.Guid PolicyPaymentEntryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyOutgoingPaymentForCommissionDashboard(PolicyPaymentEntryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> EndGetPolicyOutgoingPaymentForCommissionDashboard(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyOutgoingPaymentForCommissionDashboard(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyOutgoingPaymentForCommissionDashboard(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyPaymentEntryId = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyOutgoingPaymentForCommissionDashboard(PolicyPaymentEntryId, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyOutgoingPaymentForCommissionDashboard(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> retVal = this.EndGetPolicyOutgoingPaymentForCommissionDashboard(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyOutgoingPaymentForCommissionDashboardCompleted(object state) {
            if ((this.GetPolicyOutgoingPaymentForCommissionDashboardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyOutgoingPaymentForCommissionDashboardCompleted(this, new GetPolicyOutgoingPaymentForCommissionDashboardCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyOutgoingPaymentForCommissionDashboardAsync(System.Guid PolicyPaymentEntryId) {
            this.GetPolicyOutgoingPaymentForCommissionDashboardAsync(PolicyPaymentEntryId, null);
        }
        
        public void GetPolicyOutgoingPaymentForCommissionDashboardAsync(System.Guid PolicyPaymentEntryId, object userState) {
            if ((this.onBeginGetPolicyOutgoingPaymentForCommissionDashboardDelegate == null)) {
                this.onBeginGetPolicyOutgoingPaymentForCommissionDashboardDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyOutgoingPaymentForCommissionDashboard);
            }
            if ((this.onEndGetPolicyOutgoingPaymentForCommissionDashboardDelegate == null)) {
                this.onEndGetPolicyOutgoingPaymentForCommissionDashboardDelegate = new EndOperationDelegate(this.OnEndGetPolicyOutgoingPaymentForCommissionDashboard);
            }
            if ((this.onGetPolicyOutgoingPaymentForCommissionDashboardCompletedDelegate == null)) {
                this.onGetPolicyOutgoingPaymentForCommissionDashboardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyOutgoingPaymentForCommissionDashboardCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyOutgoingPaymentForCommissionDashboardDelegate, new object[] {
                        PolicyPaymentEntryId}, this.onEndGetPolicyOutgoingPaymentForCommissionDashboardDelegate, this.onGetPolicyOutgoingPaymentForCommissionDashboardCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> GetPolicyCommissionIssuesForCommissionDashboard(System.Guid PolicyId) {
            return base.Channel.GetPolicyCommissionIssuesForCommissionDashboard(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyCommissionIssuesForCommissionDashboard(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyCommissionIssuesForCommissionDashboard(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> EndGetPolicyCommissionIssuesForCommissionDashboard(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyCommissionIssuesForCommissionDashboard(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyCommissionIssuesForCommissionDashboard(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyCommissionIssuesForCommissionDashboard(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyCommissionIssuesForCommissionDashboard(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> retVal = this.EndGetPolicyCommissionIssuesForCommissionDashboard(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyCommissionIssuesForCommissionDashboardCompleted(object state) {
            if ((this.GetPolicyCommissionIssuesForCommissionDashboardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyCommissionIssuesForCommissionDashboardCompleted(this, new GetPolicyCommissionIssuesForCommissionDashboardCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyCommissionIssuesForCommissionDashboardAsync(System.Guid PolicyId) {
            this.GetPolicyCommissionIssuesForCommissionDashboardAsync(PolicyId, null);
        }
        
        public void GetPolicyCommissionIssuesForCommissionDashboardAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetPolicyCommissionIssuesForCommissionDashboardDelegate == null)) {
                this.onBeginGetPolicyCommissionIssuesForCommissionDashboardDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyCommissionIssuesForCommissionDashboard);
            }
            if ((this.onEndGetPolicyCommissionIssuesForCommissionDashboardDelegate == null)) {
                this.onEndGetPolicyCommissionIssuesForCommissionDashboardDelegate = new EndOperationDelegate(this.OnEndGetPolicyCommissionIssuesForCommissionDashboard);
            }
            if ((this.onGetPolicyCommissionIssuesForCommissionDashboardCompletedDelegate == null)) {
                this.onGetPolicyCommissionIssuesForCommissionDashboardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyCommissionIssuesForCommissionDashboardCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyCommissionIssuesForCommissionDashboardDelegate, new object[] {
                        PolicyId}, this.onEndGetPolicyCommissionIssuesForCommissionDashboardDelegate, this.onGetPolicyCommissionIssuesForCommissionDashboardCompletedDelegate, userState);
        }
        
        public void AddUpadatePolicyPaymentEntries(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost) {
            base.Channel.AddUpadatePolicyPaymentEntries(policypaymententriespost);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpadatePolicyPaymentEntries(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpadatePolicyPaymentEntries(policypaymententriespost, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpadatePolicyPaymentEntries(System.IAsyncResult result) {
            base.Channel.EndAddUpadatePolicyPaymentEntries(result);
        }
        
        private System.IAsyncResult OnBeginAddUpadatePolicyPaymentEntries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost)(inValues[0]));
            return this.BeginAddUpadatePolicyPaymentEntries(policypaymententriespost, callback, asyncState);
        }
        
        private object[] OnEndAddUpadatePolicyPaymentEntries(System.IAsyncResult result) {
            this.EndAddUpadatePolicyPaymentEntries(result);
            return null;
        }
        
        private void OnAddUpadatePolicyPaymentEntriesCompleted(object state) {
            if ((this.AddUpadatePolicyPaymentEntriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpadatePolicyPaymentEntriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpadatePolicyPaymentEntriesAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost) {
            this.AddUpadatePolicyPaymentEntriesAsync(policypaymententriespost, null);
        }
        
        public void AddUpadatePolicyPaymentEntriesAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost, object userState) {
            if ((this.onBeginAddUpadatePolicyPaymentEntriesDelegate == null)) {
                this.onBeginAddUpadatePolicyPaymentEntriesDelegate = new BeginOperationDelegate(this.OnBeginAddUpadatePolicyPaymentEntries);
            }
            if ((this.onEndAddUpadatePolicyPaymentEntriesDelegate == null)) {
                this.onEndAddUpadatePolicyPaymentEntriesDelegate = new EndOperationDelegate(this.OnEndAddUpadatePolicyPaymentEntries);
            }
            if ((this.onAddUpadatePolicyPaymentEntriesCompletedDelegate == null)) {
                this.onAddUpadatePolicyPaymentEntriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpadatePolicyPaymentEntriesCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpadatePolicyPaymentEntriesDelegate, new object[] {
                        policypaymententriespost}, this.onEndAddUpadatePolicyPaymentEntriesDelegate, this.onAddUpadatePolicyPaymentEntriesCompletedDelegate, userState);
        }
        
        public void AddUpadateResolvedorClosed(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost) {
            base.Channel.AddUpadateResolvedorClosed(policypaymententriespost);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpadateResolvedorClosed(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpadateResolvedorClosed(policypaymententriespost, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpadateResolvedorClosed(System.IAsyncResult result) {
            base.Channel.EndAddUpadateResolvedorClosed(result);
        }
        
        private System.IAsyncResult OnBeginAddUpadateResolvedorClosed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost)(inValues[0]));
            return this.BeginAddUpadateResolvedorClosed(policypaymententriespost, callback, asyncState);
        }
        
        private object[] OnEndAddUpadateResolvedorClosed(System.IAsyncResult result) {
            this.EndAddUpadateResolvedorClosed(result);
            return null;
        }
        
        private void OnAddUpadateResolvedorClosedCompleted(object state) {
            if ((this.AddUpadateResolvedorClosedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpadateResolvedorClosedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpadateResolvedorClosedAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost) {
            this.AddUpadateResolvedorClosedAsync(policypaymententriespost, null);
        }
        
        public void AddUpadateResolvedorClosedAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost policypaymententriespost, object userState) {
            if ((this.onBeginAddUpadateResolvedorClosedDelegate == null)) {
                this.onBeginAddUpadateResolvedorClosedDelegate = new BeginOperationDelegate(this.OnBeginAddUpadateResolvedorClosed);
            }
            if ((this.onEndAddUpadateResolvedorClosedDelegate == null)) {
                this.onEndAddUpadateResolvedorClosedDelegate = new EndOperationDelegate(this.OnEndAddUpadateResolvedorClosed);
            }
            if ((this.onAddUpadateResolvedorClosedCompletedDelegate == null)) {
                this.onAddUpadateResolvedorClosedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpadateResolvedorClosedCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpadateResolvedorClosedDelegate, new object[] {
                        policypaymententriespost}, this.onEndAddUpadateResolvedorClosedDelegate, this.onAddUpadateResolvedorClosedCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> GetAllResolvedorClosedIssueId(System.Nullable<System.Guid> GuidPolicyId) {
            return base.Channel.GetAllResolvedorClosedIssueId(GuidPolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllResolvedorClosedIssueId(System.Nullable<System.Guid> GuidPolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllResolvedorClosedIssueId(GuidPolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> EndGetAllResolvedorClosedIssueId(System.IAsyncResult result) {
            return base.Channel.EndGetAllResolvedorClosedIssueId(result);
        }
        
        private System.IAsyncResult OnBeginGetAllResolvedorClosedIssueId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> GuidPolicyId = ((System.Nullable<System.Guid>)(inValues[0]));
            return this.BeginGetAllResolvedorClosedIssueId(GuidPolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetAllResolvedorClosedIssueId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> retVal = this.EndGetAllResolvedorClosedIssueId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllResolvedorClosedIssueIdCompleted(object state) {
            if ((this.GetAllResolvedorClosedIssueIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllResolvedorClosedIssueIdCompleted(this, new GetAllResolvedorClosedIssueIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllResolvedorClosedIssueIdAsync(System.Nullable<System.Guid> GuidPolicyId) {
            this.GetAllResolvedorClosedIssueIdAsync(GuidPolicyId, null);
        }
        
        public void GetAllResolvedorClosedIssueIdAsync(System.Nullable<System.Guid> GuidPolicyId, object userState) {
            if ((this.onBeginGetAllResolvedorClosedIssueIdDelegate == null)) {
                this.onBeginGetAllResolvedorClosedIssueIdDelegate = new BeginOperationDelegate(this.OnBeginGetAllResolvedorClosedIssueId);
            }
            if ((this.onEndGetAllResolvedorClosedIssueIdDelegate == null)) {
                this.onEndGetAllResolvedorClosedIssueIdDelegate = new EndOperationDelegate(this.OnEndGetAllResolvedorClosedIssueId);
            }
            if ((this.onGetAllResolvedorClosedIssueIdCompletedDelegate == null)) {
                this.onGetAllResolvedorClosedIssueIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllResolvedorClosedIssueIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllResolvedorClosedIssueIdDelegate, new object[] {
                        GuidPolicyId}, this.onEndGetAllResolvedorClosedIssueIdDelegate, this.onGetAllResolvedorClosedIssueIdCompletedDelegate, userState);
        }
        
        public void UpadateResolvedOrClosedbyManualy(System.Guid PaymentEntryID, int intId) {
            base.Channel.UpadateResolvedOrClosedbyManualy(PaymentEntryID, intId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpadateResolvedOrClosedbyManualy(System.Guid PaymentEntryID, int intId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpadateResolvedOrClosedbyManualy(PaymentEntryID, intId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpadateResolvedOrClosedbyManualy(System.IAsyncResult result) {
            base.Channel.EndUpadateResolvedOrClosedbyManualy(result);
        }
        
        private System.IAsyncResult OnBeginUpadateResolvedOrClosedbyManualy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PaymentEntryID = ((System.Guid)(inValues[0]));
            int intId = ((int)(inValues[1]));
            return this.BeginUpadateResolvedOrClosedbyManualy(PaymentEntryID, intId, callback, asyncState);
        }
        
        private object[] OnEndUpadateResolvedOrClosedbyManualy(System.IAsyncResult result) {
            this.EndUpadateResolvedOrClosedbyManualy(result);
            return null;
        }
        
        private void OnUpadateResolvedOrClosedbyManualyCompleted(object state) {
            if ((this.UpadateResolvedOrClosedbyManualyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpadateResolvedOrClosedbyManualyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpadateResolvedOrClosedbyManualyAsync(System.Guid PaymentEntryID, int intId) {
            this.UpadateResolvedOrClosedbyManualyAsync(PaymentEntryID, intId, null);
        }
        
        public void UpadateResolvedOrClosedbyManualyAsync(System.Guid PaymentEntryID, int intId, object userState) {
            if ((this.onBeginUpadateResolvedOrClosedbyManualyDelegate == null)) {
                this.onBeginUpadateResolvedOrClosedbyManualyDelegate = new BeginOperationDelegate(this.OnBeginUpadateResolvedOrClosedbyManualy);
            }
            if ((this.onEndUpadateResolvedOrClosedbyManualyDelegate == null)) {
                this.onEndUpadateResolvedOrClosedbyManualyDelegate = new EndOperationDelegate(this.OnEndUpadateResolvedOrClosedbyManualy);
            }
            if ((this.onUpadateResolvedOrClosedbyManualyCompletedDelegate == null)) {
                this.onUpadateResolvedOrClosedbyManualyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpadateResolvedOrClosedbyManualyCompleted);
            }
            base.InvokeAsync(this.onBeginUpadateResolvedOrClosedbyManualyDelegate, new object[] {
                        PaymentEntryID,
                        intId}, this.onEndUpadateResolvedOrClosedbyManualyDelegate, this.onUpadateResolvedOrClosedbyManualyCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost GetPolicyPaymentPaymentEntryEntryIdWise(System.Guid PolicyEntryid) {
            return base.Channel.GetPolicyPaymentPaymentEntryEntryIdWise(PolicyEntryid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyPaymentPaymentEntryEntryIdWise(System.Guid PolicyEntryid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyPaymentPaymentEntryEntryIdWise(PolicyEntryid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost EndGetPolicyPaymentPaymentEntryEntryIdWise(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyPaymentPaymentEntryEntryIdWise(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyPaymentPaymentEntryEntryIdWise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyEntryid = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyPaymentPaymentEntryEntryIdWise(PolicyEntryid, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyPaymentPaymentEntryEntryIdWise(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost retVal = this.EndGetPolicyPaymentPaymentEntryEntryIdWise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyPaymentPaymentEntryEntryIdWiseCompleted(object state) {
            if ((this.GetPolicyPaymentPaymentEntryEntryIdWiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyPaymentPaymentEntryEntryIdWiseCompleted(this, new GetPolicyPaymentPaymentEntryEntryIdWiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyPaymentPaymentEntryEntryIdWiseAsync(System.Guid PolicyEntryid) {
            this.GetPolicyPaymentPaymentEntryEntryIdWiseAsync(PolicyEntryid, null);
        }
        
        public void GetPolicyPaymentPaymentEntryEntryIdWiseAsync(System.Guid PolicyEntryid, object userState) {
            if ((this.onBeginGetPolicyPaymentPaymentEntryEntryIdWiseDelegate == null)) {
                this.onBeginGetPolicyPaymentPaymentEntryEntryIdWiseDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyPaymentPaymentEntryEntryIdWise);
            }
            if ((this.onEndGetPolicyPaymentPaymentEntryEntryIdWiseDelegate == null)) {
                this.onEndGetPolicyPaymentPaymentEntryEntryIdWiseDelegate = new EndOperationDelegate(this.OnEndGetPolicyPaymentPaymentEntryEntryIdWise);
            }
            if ((this.onGetPolicyPaymentPaymentEntryEntryIdWiseCompletedDelegate == null)) {
                this.onGetPolicyPaymentPaymentEntryEntryIdWiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyPaymentPaymentEntryEntryIdWiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyPaymentPaymentEntryEntryIdWiseDelegate, new object[] {
                        PolicyEntryid}, this.onEndGetPolicyPaymentPaymentEntryEntryIdWiseDelegate, this.onGetPolicyPaymentPaymentEntryEntryIdWiseCompletedDelegate, userState);
        }
        
        public void EntryInPolicyOutGoingPayment(bool IsPaymentToHO, System.Guid PaymentEntryID, System.Guid PolicyId, System.Nullable<System.DateTime> InvoiceDate, System.Guid LicenseeId) {
            base.Channel.EntryInPolicyOutGoingPayment(IsPaymentToHO, PaymentEntryID, PolicyId, InvoiceDate, LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEntryInPolicyOutGoingPayment(bool IsPaymentToHO, System.Guid PaymentEntryID, System.Guid PolicyId, System.Nullable<System.DateTime> InvoiceDate, System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntryInPolicyOutGoingPayment(IsPaymentToHO, PaymentEntryID, PolicyId, InvoiceDate, LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEntryInPolicyOutGoingPayment(System.IAsyncResult result) {
            base.Channel.EndEntryInPolicyOutGoingPayment(result);
        }
        
        private System.IAsyncResult OnBeginEntryInPolicyOutGoingPayment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool IsPaymentToHO = ((bool)(inValues[0]));
            System.Guid PaymentEntryID = ((System.Guid)(inValues[1]));
            System.Guid PolicyId = ((System.Guid)(inValues[2]));
            System.Nullable<System.DateTime> InvoiceDate = ((System.Nullable<System.DateTime>)(inValues[3]));
            System.Guid LicenseeId = ((System.Guid)(inValues[4]));
            return this.BeginEntryInPolicyOutGoingPayment(IsPaymentToHO, PaymentEntryID, PolicyId, InvoiceDate, LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndEntryInPolicyOutGoingPayment(System.IAsyncResult result) {
            this.EndEntryInPolicyOutGoingPayment(result);
            return null;
        }
        
        private void OnEntryInPolicyOutGoingPaymentCompleted(object state) {
            if ((this.EntryInPolicyOutGoingPaymentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntryInPolicyOutGoingPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntryInPolicyOutGoingPaymentAsync(bool IsPaymentToHO, System.Guid PaymentEntryID, System.Guid PolicyId, System.Nullable<System.DateTime> InvoiceDate, System.Guid LicenseeId) {
            this.EntryInPolicyOutGoingPaymentAsync(IsPaymentToHO, PaymentEntryID, PolicyId, InvoiceDate, LicenseeId, null);
        }
        
        public void EntryInPolicyOutGoingPaymentAsync(bool IsPaymentToHO, System.Guid PaymentEntryID, System.Guid PolicyId, System.Nullable<System.DateTime> InvoiceDate, System.Guid LicenseeId, object userState) {
            if ((this.onBeginEntryInPolicyOutGoingPaymentDelegate == null)) {
                this.onBeginEntryInPolicyOutGoingPaymentDelegate = new BeginOperationDelegate(this.OnBeginEntryInPolicyOutGoingPayment);
            }
            if ((this.onEndEntryInPolicyOutGoingPaymentDelegate == null)) {
                this.onEndEntryInPolicyOutGoingPaymentDelegate = new EndOperationDelegate(this.OnEndEntryInPolicyOutGoingPayment);
            }
            if ((this.onEntryInPolicyOutGoingPaymentCompletedDelegate == null)) {
                this.onEntryInPolicyOutGoingPaymentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntryInPolicyOutGoingPaymentCompleted);
            }
            base.InvokeAsync(this.onBeginEntryInPolicyOutGoingPaymentDelegate, new object[] {
                        IsPaymentToHO,
                        PaymentEntryID,
                        PolicyId,
                        InvoiceDate,
                        LicenseeId}, this.onEndEntryInPolicyOutGoingPaymentDelegate, this.onEntryInPolicyOutGoingPaymentCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus RemoveCommissiondashBoardIncomingPayment(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            return base.Channel.RemoveCommissiondashBoardIncomingPayment(PolicySelectedIncomingPaymentCommissionDashBoard, _UserRole);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveCommissiondashBoardIncomingPayment(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveCommissiondashBoardIncomingPayment(PolicySelectedIncomingPaymentCommissionDashBoard, _UserRole, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus EndRemoveCommissiondashBoardIncomingPayment(System.IAsyncResult result) {
            return base.Channel.EndRemoveCommissiondashBoardIncomingPayment(result);
        }
        
        private System.IAsyncResult OnBeginRemoveCommissiondashBoardIncomingPayment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[1]));
            return this.BeginRemoveCommissiondashBoardIncomingPayment(PolicySelectedIncomingPaymentCommissionDashBoard, _UserRole, callback, asyncState);
        }
        
        private object[] OnEndRemoveCommissiondashBoardIncomingPayment(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus retVal = this.EndRemoveCommissiondashBoardIncomingPayment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveCommissiondashBoardIncomingPaymentCompleted(object state) {
            if ((this.RemoveCommissiondashBoardIncomingPaymentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveCommissiondashBoardIncomingPaymentCompleted(this, new RemoveCommissiondashBoardIncomingPaymentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveCommissiondashBoardIncomingPaymentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            this.RemoveCommissiondashBoardIncomingPaymentAsync(PolicySelectedIncomingPaymentCommissionDashBoard, _UserRole, null);
        }
        
        public void RemoveCommissiondashBoardIncomingPaymentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, object userState) {
            if ((this.onBeginRemoveCommissiondashBoardIncomingPaymentDelegate == null)) {
                this.onBeginRemoveCommissiondashBoardIncomingPaymentDelegate = new BeginOperationDelegate(this.OnBeginRemoveCommissiondashBoardIncomingPayment);
            }
            if ((this.onEndRemoveCommissiondashBoardIncomingPaymentDelegate == null)) {
                this.onEndRemoveCommissiondashBoardIncomingPaymentDelegate = new EndOperationDelegate(this.OnEndRemoveCommissiondashBoardIncomingPayment);
            }
            if ((this.onRemoveCommissiondashBoardIncomingPaymentCompletedDelegate == null)) {
                this.onRemoveCommissiondashBoardIncomingPaymentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveCommissiondashBoardIncomingPaymentCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveCommissiondashBoardIncomingPaymentDelegate, new object[] {
                        PolicySelectedIncomingPaymentCommissionDashBoard,
                        _UserRole}, this.onEndRemoveCommissiondashBoardIncomingPaymentDelegate, this.onRemoveCommissiondashBoardIncomingPaymentCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus UnlinkCommissiondashBoardIncomingPayment(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            return base.Channel.UnlinkCommissiondashBoardIncomingPayment(PolicySelectedIncomingPaymentCommissionDashBoard, _UserRole);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUnlinkCommissiondashBoardIncomingPayment(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnlinkCommissiondashBoardIncomingPayment(PolicySelectedIncomingPaymentCommissionDashBoard, _UserRole, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus EndUnlinkCommissiondashBoardIncomingPayment(System.IAsyncResult result) {
            return base.Channel.EndUnlinkCommissiondashBoardIncomingPayment(result);
        }
        
        private System.IAsyncResult OnBeginUnlinkCommissiondashBoardIncomingPayment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[1]));
            return this.BeginUnlinkCommissiondashBoardIncomingPayment(PolicySelectedIncomingPaymentCommissionDashBoard, _UserRole, callback, asyncState);
        }
        
        private object[] OnEndUnlinkCommissiondashBoardIncomingPayment(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus retVal = this.EndUnlinkCommissiondashBoardIncomingPayment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUnlinkCommissiondashBoardIncomingPaymentCompleted(object state) {
            if ((this.UnlinkCommissiondashBoardIncomingPaymentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnlinkCommissiondashBoardIncomingPaymentCompleted(this, new UnlinkCommissiondashBoardIncomingPaymentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnlinkCommissiondashBoardIncomingPaymentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            this.UnlinkCommissiondashBoardIncomingPaymentAsync(PolicySelectedIncomingPaymentCommissionDashBoard, _UserRole, null);
        }
        
        public void UnlinkCommissiondashBoardIncomingPaymentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PolicySelectedIncomingPaymentCommissionDashBoard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, object userState) {
            if ((this.onBeginUnlinkCommissiondashBoardIncomingPaymentDelegate == null)) {
                this.onBeginUnlinkCommissiondashBoardIncomingPaymentDelegate = new BeginOperationDelegate(this.OnBeginUnlinkCommissiondashBoardIncomingPayment);
            }
            if ((this.onEndUnlinkCommissiondashBoardIncomingPaymentDelegate == null)) {
                this.onEndUnlinkCommissiondashBoardIncomingPaymentDelegate = new EndOperationDelegate(this.OnEndUnlinkCommissiondashBoardIncomingPayment);
            }
            if ((this.onUnlinkCommissiondashBoardIncomingPaymentCompletedDelegate == null)) {
                this.onUnlinkCommissiondashBoardIncomingPaymentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnlinkCommissiondashBoardIncomingPaymentCompleted);
            }
            base.InvokeAsync(this.onBeginUnlinkCommissiondashBoardIncomingPaymentDelegate, new object[] {
                        PolicySelectedIncomingPaymentCommissionDashBoard,
                        _UserRole}, this.onEndUnlinkCommissiondashBoardIncomingPaymentDelegate, this.onUnlinkCommissiondashBoardIncomingPaymentCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus CommissionDashBoardPostStart(System.Guid BatchId, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, bool IsInvoiceEdited, System.Nullable<System.Guid> UserId) {
            return base.Channel.CommissionDashBoardPostStart(BatchId, PaymentEntry, _PostEntryProcess, _UserRole, IsInvoiceEdited, UserId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCommissionDashBoardPostStart(System.Guid BatchId, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, bool IsInvoiceEdited, System.Nullable<System.Guid> UserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCommissionDashBoardPostStart(BatchId, PaymentEntry, _PostEntryProcess, _UserRole, IsInvoiceEdited, UserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus EndCommissionDashBoardPostStart(System.IAsyncResult result) {
            return base.Channel.EndCommissionDashBoardPostStart(result);
        }
        
        private System.IAsyncResult OnBeginCommissionDashBoardPostStart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid BatchId = ((System.Guid)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost)(inValues[1]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess = ((MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess)(inValues[2]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[3]));
            bool IsInvoiceEdited = ((bool)(inValues[4]));
            System.Nullable<System.Guid> UserId = ((System.Nullable<System.Guid>)(inValues[5]));
            return this.BeginCommissionDashBoardPostStart(BatchId, PaymentEntry, _PostEntryProcess, _UserRole, IsInvoiceEdited, UserId, callback, asyncState);
        }
        
        private object[] OnEndCommissionDashBoardPostStart(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus retVal = this.EndCommissionDashBoardPostStart(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCommissionDashBoardPostStartCompleted(object state) {
            if ((this.CommissionDashBoardPostStartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CommissionDashBoardPostStartCompleted(this, new CommissionDashBoardPostStartCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CommissionDashBoardPostStartAsync(System.Guid BatchId, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, bool IsInvoiceEdited, System.Nullable<System.Guid> UserId) {
            this.CommissionDashBoardPostStartAsync(BatchId, PaymentEntry, _PostEntryProcess, _UserRole, IsInvoiceEdited, UserId, null);
        }
        
        public void CommissionDashBoardPostStartAsync(System.Guid BatchId, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, bool IsInvoiceEdited, System.Nullable<System.Guid> UserId, object userState) {
            if ((this.onBeginCommissionDashBoardPostStartDelegate == null)) {
                this.onBeginCommissionDashBoardPostStartDelegate = new BeginOperationDelegate(this.OnBeginCommissionDashBoardPostStart);
            }
            if ((this.onEndCommissionDashBoardPostStartDelegate == null)) {
                this.onEndCommissionDashBoardPostStartDelegate = new EndOperationDelegate(this.OnEndCommissionDashBoardPostStart);
            }
            if ((this.onCommissionDashBoardPostStartCompletedDelegate == null)) {
                this.onCommissionDashBoardPostStartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCommissionDashBoardPostStartCompleted);
            }
            base.InvokeAsync(this.onBeginCommissionDashBoardPostStartDelegate, new object[] {
                        BatchId,
                        PaymentEntry,
                        _PostEntryProcess,
                        _UserRole,
                        IsInvoiceEdited,
                        UserId}, this.onEndCommissionDashBoardPostStartDelegate, this.onCommissionDashBoardPostStartCompletedDelegate, userState);
        }
        
        public void FollowUpProcedure(MyAgencyVault.VM.MyAgencyVaultSvc.FollowUpRunModules _FollowUpRunModules, MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DEU, System.Guid PolicyId, bool IsTrackPayment, bool IsEntryByCommissionDashboard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.Nullable<bool> PolicyModeChange) {
            base.Channel.FollowUpProcedure(_FollowUpRunModules, _DEU, PolicyId, IsTrackPayment, IsEntryByCommissionDashboard, _UserRole, PolicyModeChange);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFollowUpProcedure(MyAgencyVault.VM.MyAgencyVaultSvc.FollowUpRunModules _FollowUpRunModules, MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DEU, System.Guid PolicyId, bool IsTrackPayment, bool IsEntryByCommissionDashboard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.Nullable<bool> PolicyModeChange, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFollowUpProcedure(_FollowUpRunModules, _DEU, PolicyId, IsTrackPayment, IsEntryByCommissionDashboard, _UserRole, PolicyModeChange, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndFollowUpProcedure(System.IAsyncResult result) {
            base.Channel.EndFollowUpProcedure(result);
        }
        
        private System.IAsyncResult OnBeginFollowUpProcedure(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.FollowUpRunModules _FollowUpRunModules = ((MyAgencyVault.VM.MyAgencyVaultSvc.FollowUpRunModules)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DEU = ((MyAgencyVault.VM.MyAgencyVaultSvc.DEU)(inValues[1]));
            System.Guid PolicyId = ((System.Guid)(inValues[2]));
            bool IsTrackPayment = ((bool)(inValues[3]));
            bool IsEntryByCommissionDashboard = ((bool)(inValues[4]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[5]));
            System.Nullable<bool> PolicyModeChange = ((System.Nullable<bool>)(inValues[6]));
            return this.BeginFollowUpProcedure(_FollowUpRunModules, _DEU, PolicyId, IsTrackPayment, IsEntryByCommissionDashboard, _UserRole, PolicyModeChange, callback, asyncState);
        }
        
        private object[] OnEndFollowUpProcedure(System.IAsyncResult result) {
            this.EndFollowUpProcedure(result);
            return null;
        }
        
        private void OnFollowUpProcedureCompleted(object state) {
            if ((this.FollowUpProcedureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FollowUpProcedureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FollowUpProcedureAsync(MyAgencyVault.VM.MyAgencyVaultSvc.FollowUpRunModules _FollowUpRunModules, MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DEU, System.Guid PolicyId, bool IsTrackPayment, bool IsEntryByCommissionDashboard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.Nullable<bool> PolicyModeChange) {
            this.FollowUpProcedureAsync(_FollowUpRunModules, _DEU, PolicyId, IsTrackPayment, IsEntryByCommissionDashboard, _UserRole, PolicyModeChange, null);
        }
        
        public void FollowUpProcedureAsync(MyAgencyVault.VM.MyAgencyVaultSvc.FollowUpRunModules _FollowUpRunModules, MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DEU, System.Guid PolicyId, bool IsTrackPayment, bool IsEntryByCommissionDashboard, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.Nullable<bool> PolicyModeChange, object userState) {
            if ((this.onBeginFollowUpProcedureDelegate == null)) {
                this.onBeginFollowUpProcedureDelegate = new BeginOperationDelegate(this.OnBeginFollowUpProcedure);
            }
            if ((this.onEndFollowUpProcedureDelegate == null)) {
                this.onEndFollowUpProcedureDelegate = new EndOperationDelegate(this.OnEndFollowUpProcedure);
            }
            if ((this.onFollowUpProcedureCompletedDelegate == null)) {
                this.onFollowUpProcedureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFollowUpProcedureCompleted);
            }
            base.InvokeAsync(this.onBeginFollowUpProcedureDelegate, new object[] {
                        _FollowUpRunModules,
                        _DEU,
                        PolicyId,
                        IsTrackPayment,
                        IsEntryByCommissionDashboard,
                        _UserRole,
                        PolicyModeChange}, this.onEndFollowUpProcedureDelegate, this.onFollowUpProcedureCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> GetPolicyPaymentEntryPolicyIDWise(System.Guid PolicyID) {
            return base.Channel.GetPolicyPaymentEntryPolicyIDWise(PolicyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyPaymentEntryPolicyIDWise(System.Guid PolicyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyPaymentEntryPolicyIDWise(PolicyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> EndGetPolicyPaymentEntryPolicyIDWise(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyPaymentEntryPolicyIDWise(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyPaymentEntryPolicyIDWise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyID = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyPaymentEntryPolicyIDWise(PolicyID, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyPaymentEntryPolicyIDWise(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost> retVal = this.EndGetPolicyPaymentEntryPolicyIDWise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyPaymentEntryPolicyIDWiseCompleted(object state) {
            if ((this.GetPolicyPaymentEntryPolicyIDWiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyPaymentEntryPolicyIDWiseCompleted(this, new GetPolicyPaymentEntryPolicyIDWiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyPaymentEntryPolicyIDWiseAsync(System.Guid PolicyID) {
            this.GetPolicyPaymentEntryPolicyIDWiseAsync(PolicyID, null);
        }
        
        public void GetPolicyPaymentEntryPolicyIDWiseAsync(System.Guid PolicyID, object userState) {
            if ((this.onBeginGetPolicyPaymentEntryPolicyIDWiseDelegate == null)) {
                this.onBeginGetPolicyPaymentEntryPolicyIDWiseDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyPaymentEntryPolicyIDWise);
            }
            if ((this.onEndGetPolicyPaymentEntryPolicyIDWiseDelegate == null)) {
                this.onEndGetPolicyPaymentEntryPolicyIDWiseDelegate = new EndOperationDelegate(this.OnEndGetPolicyPaymentEntryPolicyIDWise);
            }
            if ((this.onGetPolicyPaymentEntryPolicyIDWiseCompletedDelegate == null)) {
                this.onGetPolicyPaymentEntryPolicyIDWiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyPaymentEntryPolicyIDWiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyPaymentEntryPolicyIDWiseDelegate, new object[] {
                        PolicyID}, this.onEndGetPolicyPaymentEntryPolicyIDWiseDelegate, this.onGetPolicyPaymentEntryPolicyIDWiseCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus CommissionDashBoardPostStartClienVMWrapper(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData SelectedPolicy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            return base.Channel.CommissionDashBoardPostStartClienVMWrapper(SelectedPolicy, PaymentEntry, _PostEntryProcess, _UserRole);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCommissionDashBoardPostStartClienVMWrapper(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData SelectedPolicy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCommissionDashBoardPostStartClienVMWrapper(SelectedPolicy, PaymentEntry, _PostEntryProcess, _UserRole, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus EndCommissionDashBoardPostStartClienVMWrapper(System.IAsyncResult result) {
            return base.Channel.EndCommissionDashBoardPostStartClienVMWrapper(result);
        }
        
        private System.IAsyncResult OnBeginCommissionDashBoardPostStartClienVMWrapper(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData SelectedPolicy = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost)(inValues[1]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess = ((MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess)(inValues[2]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[3]));
            return this.BeginCommissionDashBoardPostStartClienVMWrapper(SelectedPolicy, PaymentEntry, _PostEntryProcess, _UserRole, callback, asyncState);
        }
        
        private object[] OnEndCommissionDashBoardPostStartClienVMWrapper(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PostProcessReturnStatus retVal = this.EndCommissionDashBoardPostStartClienVMWrapper(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCommissionDashBoardPostStartClienVMWrapperCompleted(object state) {
            if ((this.CommissionDashBoardPostStartClienVMWrapperCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CommissionDashBoardPostStartClienVMWrapperCompleted(this, new CommissionDashBoardPostStartClienVMWrapperCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CommissionDashBoardPostStartClienVMWrapperAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData SelectedPolicy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            this.CommissionDashBoardPostStartClienVMWrapperAsync(SelectedPolicy, PaymentEntry, _PostEntryProcess, _UserRole, null);
        }
        
        public void CommissionDashBoardPostStartClienVMWrapperAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData SelectedPolicy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, MyAgencyVault.VM.MyAgencyVaultSvc.PostEntryProcess _PostEntryProcess, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, object userState) {
            if ((this.onBeginCommissionDashBoardPostStartClienVMWrapperDelegate == null)) {
                this.onBeginCommissionDashBoardPostStartClienVMWrapperDelegate = new BeginOperationDelegate(this.OnBeginCommissionDashBoardPostStartClienVMWrapper);
            }
            if ((this.onEndCommissionDashBoardPostStartClienVMWrapperDelegate == null)) {
                this.onEndCommissionDashBoardPostStartClienVMWrapperDelegate = new EndOperationDelegate(this.OnEndCommissionDashBoardPostStartClienVMWrapper);
            }
            if ((this.onCommissionDashBoardPostStartClienVMWrapperCompletedDelegate == null)) {
                this.onCommissionDashBoardPostStartClienVMWrapperCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCommissionDashBoardPostStartClienVMWrapperCompleted);
            }
            base.InvokeAsync(this.onBeginCommissionDashBoardPostStartClienVMWrapperDelegate, new object[] {
                        SelectedPolicy,
                        PaymentEntry,
                        _PostEntryProcess,
                        _UserRole}, this.onEndCommissionDashBoardPostStartClienVMWrapperDelegate, this.onCommissionDashBoardPostStartClienVMWrapperCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPolicyToolIncommingShedule")]
    public interface IPolicyToolIncommingShedule {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyToolIncommingShedule/AddUpdatePolicyToolIncommingShedul" +
            "e", ReplyAction="http://tempuri.org/IPolicyToolIncommingShedule/AddUpdatePolicyToolIncommingShedul" +
            "eResponse")]
        void AddUpdatePolicyToolIncommingShedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyToolIncommingShedule/AddUpdatePolicyToolIncommingShedul" +
            "e", ReplyAction="http://tempuri.org/IPolicyToolIncommingShedule/AddUpdatePolicyToolIncommingShedul" +
            "eResponse")]
        System.IAsyncResult BeginAddUpdatePolicyToolIncommingShedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePolicyToolIncommingShedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyToolIncommingShedule/Delete", ReplyAction="http://tempuri.org/IPolicyToolIncommingShedule/DeleteResponse")]
        void Delete(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyToolIncommingShedule/Delete", ReplyAction="http://tempuri.org/IPolicyToolIncommingShedule/DeleteResponse")]
        System.IAsyncResult BeginDelete(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc, System.AsyncCallback callback, object asyncState);
        
        void EndDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyToolIncommingShedule/GetPolicyToolIncommingSheduleList", ReplyAction="http://tempuri.org/IPolicyToolIncommingShedule/GetPolicyToolIncommingSheduleListR" +
            "esponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule> GetPolicyToolIncommingSheduleList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyToolIncommingShedule/GetPolicyToolIncommingSheduleList", ReplyAction="http://tempuri.org/IPolicyToolIncommingShedule/GetPolicyToolIncommingSheduleListR" +
            "esponse")]
        System.IAsyncResult BeginGetPolicyToolIncommingSheduleList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule> EndGetPolicyToolIncommingSheduleList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyToolIncommingShedule/GetPolicyToolIncommingSheduleListP" +
            "olicyWise", ReplyAction="http://tempuri.org/IPolicyToolIncommingShedule/GetPolicyToolIncommingSheduleListP" +
            "olicyWiseResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule GetPolicyToolIncommingSheduleListPolicyWise(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyToolIncommingShedule/GetPolicyToolIncommingSheduleListP" +
            "olicyWise", ReplyAction="http://tempuri.org/IPolicyToolIncommingShedule/GetPolicyToolIncommingSheduleListP" +
            "olicyWiseResponse")]
        System.IAsyncResult BeginGetPolicyToolIncommingSheduleListPolicyWise(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule EndGetPolicyToolIncommingSheduleListPolicyWise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyToolIncommingShedule/GettingPolicyIncomingSchedule", ReplyAction="http://tempuri.org/IPolicyToolIncommingShedule/GettingPolicyIncomingScheduleRespo" +
            "nse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule GettingPolicyIncomingSchedule(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyToolIncommingShedule/GettingPolicyIncomingSchedule", ReplyAction="http://tempuri.org/IPolicyToolIncommingShedule/GettingPolicyIncomingScheduleRespo" +
            "nse")]
        System.IAsyncResult BeginGettingPolicyIncomingSchedule(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule EndGettingPolicyIncomingSchedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyToolIncommingShedule/SavePolicyIncomingSchedule", ReplyAction="http://tempuri.org/IPolicyToolIncommingShedule/SavePolicyIncomingScheduleResponse" +
            "")]
        void SavePolicyIncomingSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule policyIncomingSchedule);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyToolIncommingShedule/SavePolicyIncomingSchedule", ReplyAction="http://tempuri.org/IPolicyToolIncommingShedule/SavePolicyIncomingScheduleResponse" +
            "")]
        System.IAsyncResult BeginSavePolicyIncomingSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule policyIncomingSchedule, System.AsyncCallback callback, object asyncState);
        
        void EndSavePolicyIncomingSchedule(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPolicyToolIncommingSheduleChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyToolIncommingShedule, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyToolIncommingSheduleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyToolIncommingSheduleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyToolIncommingSheduleListPolicyWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyToolIncommingSheduleListPolicyWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GettingPolicyIncomingScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GettingPolicyIncomingScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PolicyToolIncommingSheduleClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyToolIncommingShedule>, MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyToolIncommingShedule {
        
        private BeginOperationDelegate onBeginAddUpdatePolicyToolIncommingSheduleDelegate;
        
        private EndOperationDelegate onEndAddUpdatePolicyToolIncommingSheduleDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePolicyToolIncommingSheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDelegate;
        
        private EndOperationDelegate onEndDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyToolIncommingSheduleListDelegate;
        
        private EndOperationDelegate onEndGetPolicyToolIncommingSheduleListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyToolIncommingSheduleListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyToolIncommingSheduleListPolicyWiseDelegate;
        
        private EndOperationDelegate onEndGetPolicyToolIncommingSheduleListPolicyWiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyToolIncommingSheduleListPolicyWiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGettingPolicyIncomingScheduleDelegate;
        
        private EndOperationDelegate onEndGettingPolicyIncomingScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onGettingPolicyIncomingScheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePolicyIncomingScheduleDelegate;
        
        private EndOperationDelegate onEndSavePolicyIncomingScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onSavePolicyIncomingScheduleCompletedDelegate;
        
        public PolicyToolIncommingSheduleClient() {
        }
        
        public PolicyToolIncommingSheduleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PolicyToolIncommingSheduleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyToolIncommingSheduleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyToolIncommingSheduleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePolicyToolIncommingSheduleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCompleted;
        
        public event System.EventHandler<GetPolicyToolIncommingSheduleListCompletedEventArgs> GetPolicyToolIncommingSheduleListCompleted;
        
        public event System.EventHandler<GetPolicyToolIncommingSheduleListPolicyWiseCompletedEventArgs> GetPolicyToolIncommingSheduleListPolicyWiseCompleted;
        
        public event System.EventHandler<GettingPolicyIncomingScheduleCompletedEventArgs> GettingPolicyIncomingScheduleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SavePolicyIncomingScheduleCompleted;
        
        public void AddUpdatePolicyToolIncommingShedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc) {
            base.Channel.AddUpdatePolicyToolIncommingShedule(PInc);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePolicyToolIncommingShedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePolicyToolIncommingShedule(PInc, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePolicyToolIncommingShedule(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePolicyToolIncommingShedule(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePolicyToolIncommingShedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule)(inValues[0]));
            return this.BeginAddUpdatePolicyToolIncommingShedule(PInc, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePolicyToolIncommingShedule(System.IAsyncResult result) {
            this.EndAddUpdatePolicyToolIncommingShedule(result);
            return null;
        }
        
        private void OnAddUpdatePolicyToolIncommingSheduleCompleted(object state) {
            if ((this.AddUpdatePolicyToolIncommingSheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePolicyToolIncommingSheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePolicyToolIncommingSheduleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc) {
            this.AddUpdatePolicyToolIncommingSheduleAsync(PInc, null);
        }
        
        public void AddUpdatePolicyToolIncommingSheduleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc, object userState) {
            if ((this.onBeginAddUpdatePolicyToolIncommingSheduleDelegate == null)) {
                this.onBeginAddUpdatePolicyToolIncommingSheduleDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePolicyToolIncommingShedule);
            }
            if ((this.onEndAddUpdatePolicyToolIncommingSheduleDelegate == null)) {
                this.onEndAddUpdatePolicyToolIncommingSheduleDelegate = new EndOperationDelegate(this.OnEndAddUpdatePolicyToolIncommingShedule);
            }
            if ((this.onAddUpdatePolicyToolIncommingSheduleCompletedDelegate == null)) {
                this.onAddUpdatePolicyToolIncommingSheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePolicyToolIncommingSheduleCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePolicyToolIncommingSheduleDelegate, new object[] {
                        PInc}, this.onEndAddUpdatePolicyToolIncommingSheduleDelegate, this.onAddUpdatePolicyToolIncommingSheduleCompletedDelegate, userState);
        }
        
        public void Delete(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc) {
            base.Channel.Delete(PInc);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDelete(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete(PInc, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDelete(System.IAsyncResult result) {
            base.Channel.EndDelete(result);
        }
        
        private System.IAsyncResult OnBeginDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule)(inValues[0]));
            return this.BeginDelete(PInc, callback, asyncState);
        }
        
        private object[] OnEndDelete(System.IAsyncResult result) {
            this.EndDelete(result);
            return null;
        }
        
        private void OnDeleteCompleted(object state) {
            if ((this.DeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc) {
            this.DeleteAsync(PInc, null);
        }
        
        public void DeleteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule PInc, object userState) {
            if ((this.onBeginDeleteDelegate == null)) {
                this.onBeginDeleteDelegate = new BeginOperationDelegate(this.OnBeginDelete);
            }
            if ((this.onEndDeleteDelegate == null)) {
                this.onEndDeleteDelegate = new EndOperationDelegate(this.OnEndDelete);
            }
            if ((this.onDeleteCompletedDelegate == null)) {
                this.onDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDelegate, new object[] {
                        PInc}, this.onEndDeleteDelegate, this.onDeleteCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule> GetPolicyToolIncommingSheduleList() {
            return base.Channel.GetPolicyToolIncommingSheduleList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyToolIncommingSheduleList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyToolIncommingSheduleList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule> EndGetPolicyToolIncommingSheduleList(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyToolIncommingSheduleList(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyToolIncommingSheduleList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPolicyToolIncommingSheduleList(callback, asyncState);
        }
        
        private object[] OnEndGetPolicyToolIncommingSheduleList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule> retVal = this.EndGetPolicyToolIncommingSheduleList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyToolIncommingSheduleListCompleted(object state) {
            if ((this.GetPolicyToolIncommingSheduleListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyToolIncommingSheduleListCompleted(this, new GetPolicyToolIncommingSheduleListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyToolIncommingSheduleListAsync() {
            this.GetPolicyToolIncommingSheduleListAsync(null);
        }
        
        public void GetPolicyToolIncommingSheduleListAsync(object userState) {
            if ((this.onBeginGetPolicyToolIncommingSheduleListDelegate == null)) {
                this.onBeginGetPolicyToolIncommingSheduleListDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyToolIncommingSheduleList);
            }
            if ((this.onEndGetPolicyToolIncommingSheduleListDelegate == null)) {
                this.onEndGetPolicyToolIncommingSheduleListDelegate = new EndOperationDelegate(this.OnEndGetPolicyToolIncommingSheduleList);
            }
            if ((this.onGetPolicyToolIncommingSheduleListCompletedDelegate == null)) {
                this.onGetPolicyToolIncommingSheduleListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyToolIncommingSheduleListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyToolIncommingSheduleListDelegate, null, this.onEndGetPolicyToolIncommingSheduleListDelegate, this.onGetPolicyToolIncommingSheduleListCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule GetPolicyToolIncommingSheduleListPolicyWise(System.Guid PolicyId) {
            return base.Channel.GetPolicyToolIncommingSheduleListPolicyWise(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyToolIncommingSheduleListPolicyWise(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyToolIncommingSheduleListPolicyWise(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule EndGetPolicyToolIncommingSheduleListPolicyWise(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyToolIncommingSheduleListPolicyWise(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyToolIncommingSheduleListPolicyWise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyToolIncommingSheduleListPolicyWise(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyToolIncommingSheduleListPolicyWise(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule retVal = this.EndGetPolicyToolIncommingSheduleListPolicyWise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyToolIncommingSheduleListPolicyWiseCompleted(object state) {
            if ((this.GetPolicyToolIncommingSheduleListPolicyWiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyToolIncommingSheduleListPolicyWiseCompleted(this, new GetPolicyToolIncommingSheduleListPolicyWiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyToolIncommingSheduleListPolicyWiseAsync(System.Guid PolicyId) {
            this.GetPolicyToolIncommingSheduleListPolicyWiseAsync(PolicyId, null);
        }
        
        public void GetPolicyToolIncommingSheduleListPolicyWiseAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetPolicyToolIncommingSheduleListPolicyWiseDelegate == null)) {
                this.onBeginGetPolicyToolIncommingSheduleListPolicyWiseDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyToolIncommingSheduleListPolicyWise);
            }
            if ((this.onEndGetPolicyToolIncommingSheduleListPolicyWiseDelegate == null)) {
                this.onEndGetPolicyToolIncommingSheduleListPolicyWiseDelegate = new EndOperationDelegate(this.OnEndGetPolicyToolIncommingSheduleListPolicyWise);
            }
            if ((this.onGetPolicyToolIncommingSheduleListPolicyWiseCompletedDelegate == null)) {
                this.onGetPolicyToolIncommingSheduleListPolicyWiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyToolIncommingSheduleListPolicyWiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyToolIncommingSheduleListPolicyWiseDelegate, new object[] {
                        PolicyId}, this.onEndGetPolicyToolIncommingSheduleListPolicyWiseDelegate, this.onGetPolicyToolIncommingSheduleListPolicyWiseCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule GettingPolicyIncomingSchedule(System.Guid PolicyId) {
            return base.Channel.GettingPolicyIncomingSchedule(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGettingPolicyIncomingSchedule(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGettingPolicyIncomingSchedule(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule EndGettingPolicyIncomingSchedule(System.IAsyncResult result) {
            return base.Channel.EndGettingPolicyIncomingSchedule(result);
        }
        
        private System.IAsyncResult OnBeginGettingPolicyIncomingSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGettingPolicyIncomingSchedule(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGettingPolicyIncomingSchedule(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule retVal = this.EndGettingPolicyIncomingSchedule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGettingPolicyIncomingScheduleCompleted(object state) {
            if ((this.GettingPolicyIncomingScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GettingPolicyIncomingScheduleCompleted(this, new GettingPolicyIncomingScheduleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GettingPolicyIncomingScheduleAsync(System.Guid PolicyId) {
            this.GettingPolicyIncomingScheduleAsync(PolicyId, null);
        }
        
        public void GettingPolicyIncomingScheduleAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGettingPolicyIncomingScheduleDelegate == null)) {
                this.onBeginGettingPolicyIncomingScheduleDelegate = new BeginOperationDelegate(this.OnBeginGettingPolicyIncomingSchedule);
            }
            if ((this.onEndGettingPolicyIncomingScheduleDelegate == null)) {
                this.onEndGettingPolicyIncomingScheduleDelegate = new EndOperationDelegate(this.OnEndGettingPolicyIncomingSchedule);
            }
            if ((this.onGettingPolicyIncomingScheduleCompletedDelegate == null)) {
                this.onGettingPolicyIncomingScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGettingPolicyIncomingScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginGettingPolicyIncomingScheduleDelegate, new object[] {
                        PolicyId}, this.onEndGettingPolicyIncomingScheduleDelegate, this.onGettingPolicyIncomingScheduleCompletedDelegate, userState);
        }
        
        public void SavePolicyIncomingSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule policyIncomingSchedule) {
            base.Channel.SavePolicyIncomingSchedule(policyIncomingSchedule);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSavePolicyIncomingSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule policyIncomingSchedule, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePolicyIncomingSchedule(policyIncomingSchedule, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSavePolicyIncomingSchedule(System.IAsyncResult result) {
            base.Channel.EndSavePolicyIncomingSchedule(result);
        }
        
        private System.IAsyncResult OnBeginSavePolicyIncomingSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule policyIncomingSchedule = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule)(inValues[0]));
            return this.BeginSavePolicyIncomingSchedule(policyIncomingSchedule, callback, asyncState);
        }
        
        private object[] OnEndSavePolicyIncomingSchedule(System.IAsyncResult result) {
            this.EndSavePolicyIncomingSchedule(result);
            return null;
        }
        
        private void OnSavePolicyIncomingScheduleCompleted(object state) {
            if ((this.SavePolicyIncomingScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePolicyIncomingScheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePolicyIncomingScheduleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule policyIncomingSchedule) {
            this.SavePolicyIncomingScheduleAsync(policyIncomingSchedule, null);
        }
        
        public void SavePolicyIncomingScheduleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyToolIncommingShedule policyIncomingSchedule, object userState) {
            if ((this.onBeginSavePolicyIncomingScheduleDelegate == null)) {
                this.onBeginSavePolicyIncomingScheduleDelegate = new BeginOperationDelegate(this.OnBeginSavePolicyIncomingSchedule);
            }
            if ((this.onEndSavePolicyIncomingScheduleDelegate == null)) {
                this.onEndSavePolicyIncomingScheduleDelegate = new EndOperationDelegate(this.OnEndSavePolicyIncomingSchedule);
            }
            if ((this.onSavePolicyIncomingScheduleCompletedDelegate == null)) {
                this.onSavePolicyIncomingScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePolicyIncomingScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginSavePolicyIncomingScheduleDelegate, new object[] {
                        policyIncomingSchedule}, this.onEndSavePolicyIncomingScheduleDelegate, this.onSavePolicyIncomingScheduleCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPolicyOutgoingDistribution")]
    public interface IPolicyOutgoingDistribution {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyOutgoingDistribution/IsEntryMarkPaid", ReplyAction="http://tempuri.org/IPolicyOutgoingDistribution/IsEntryMarkPaidResponse")]
        bool IsEntryMarkPaid(System.Guid PaymentEntryId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyOutgoingDistribution/IsEntryMarkPaid", ReplyAction="http://tempuri.org/IPolicyOutgoingDistribution/IsEntryMarkPaidResponse")]
        System.IAsyncResult BeginIsEntryMarkPaid(System.Guid PaymentEntryId, System.AsyncCallback callback, object asyncState);
        
        bool EndIsEntryMarkPaid(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyOutgoingDistribution/GetOutgoingPaymentByPoicyPaymentEn" +
            "tryId", ReplyAction="http://tempuri.org/IPolicyOutgoingDistribution/GetOutgoingPaymentByPoicyPaymentEn" +
            "tryIdResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> GetOutgoingPaymentByPoicyPaymentEntryId(System.Guid EntryId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyOutgoingDistribution/GetOutgoingPaymentByPoicyPaymentEn" +
            "tryId", ReplyAction="http://tempuri.org/IPolicyOutgoingDistribution/GetOutgoingPaymentByPoicyPaymentEn" +
            "tryIdResponse")]
        System.IAsyncResult BeginGetOutgoingPaymentByPoicyPaymentEntryId(System.Guid EntryId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> EndGetOutgoingPaymentByPoicyPaymentEntryId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyOutgoingDistribution/DeleteByPolicyIncomingPaymentId", ReplyAction="http://tempuri.org/IPolicyOutgoingDistribution/DeleteByPolicyIncomingPaymentIdRes" +
            "ponse")]
        void DeleteByPolicyIncomingPaymentId(System.Guid PaymentEntryId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyOutgoingDistribution/DeleteByPolicyIncomingPaymentId", ReplyAction="http://tempuri.org/IPolicyOutgoingDistribution/DeleteByPolicyIncomingPaymentIdRes" +
            "ponse")]
        System.IAsyncResult BeginDeleteByPolicyIncomingPaymentId(System.Guid PaymentEntryId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteByPolicyIncomingPaymentId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyOutgoingDistribution/AddUpdateOutgoingPaymentEntry", ReplyAction="http://tempuri.org/IPolicyOutgoingDistribution/AddUpdateOutgoingPaymentEntryRespo" +
            "nse")]
        void AddUpdateOutgoingPaymentEntry(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution _PolicyOutgoingDistribution);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyOutgoingDistribution/AddUpdateOutgoingPaymentEntry", ReplyAction="http://tempuri.org/IPolicyOutgoingDistribution/AddUpdateOutgoingPaymentEntryRespo" +
            "nse")]
        System.IAsyncResult BeginAddUpdateOutgoingPaymentEntry(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution _PolicyOutgoingDistribution, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateOutgoingPaymentEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyOutgoingDistribution/AddUpdateOutGoingPaymentEntries", ReplyAction="http://tempuri.org/IPolicyOutgoingDistribution/AddUpdateOutGoingPaymentEntriesRes" +
            "ponse")]
        void AddUpdateOutGoingPaymentEntries(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> _PolicyOutgoingDistribution);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyOutgoingDistribution/AddUpdateOutGoingPaymentEntries", ReplyAction="http://tempuri.org/IPolicyOutgoingDistribution/AddUpdateOutGoingPaymentEntriesRes" +
            "ponse")]
        System.IAsyncResult BeginAddUpdateOutGoingPaymentEntries(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> _PolicyOutgoingDistribution, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateOutGoingPaymentEntries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyOutgoingDistribution/DeleteOutGoingPaymentViaOutgoingPa" +
            "ymentId", ReplyAction="http://tempuri.org/IPolicyOutgoingDistribution/DeleteOutGoingPaymentViaOutgoingPa" +
            "ymentIdResponse")]
        void DeleteOutGoingPaymentViaOutgoingPaymentId(System.Guid OutgoingPaymentid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyOutgoingDistribution/DeleteOutGoingPaymentViaOutgoingPa" +
            "ymentId", ReplyAction="http://tempuri.org/IPolicyOutgoingDistribution/DeleteOutGoingPaymentViaOutgoingPa" +
            "ymentIdResponse")]
        System.IAsyncResult BeginDeleteOutGoingPaymentViaOutgoingPaymentId(System.Guid OutgoingPaymentid, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteOutGoingPaymentViaOutgoingPaymentId(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPolicyOutgoingDistributionChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyOutgoingDistribution, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsEntryMarkPaidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsEntryMarkPaidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOutgoingPaymentByPoicyPaymentEntryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOutgoingPaymentByPoicyPaymentEntryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PolicyOutgoingDistributionClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyOutgoingDistribution>, MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyOutgoingDistribution {
        
        private BeginOperationDelegate onBeginIsEntryMarkPaidDelegate;
        
        private EndOperationDelegate onEndIsEntryMarkPaidDelegate;
        
        private System.Threading.SendOrPostCallback onIsEntryMarkPaidCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOutgoingPaymentByPoicyPaymentEntryIdDelegate;
        
        private EndOperationDelegate onEndGetOutgoingPaymentByPoicyPaymentEntryIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetOutgoingPaymentByPoicyPaymentEntryIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteByPolicyIncomingPaymentIdDelegate;
        
        private EndOperationDelegate onEndDeleteByPolicyIncomingPaymentIdDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteByPolicyIncomingPaymentIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateOutgoingPaymentEntryDelegate;
        
        private EndOperationDelegate onEndAddUpdateOutgoingPaymentEntryDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateOutgoingPaymentEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateOutGoingPaymentEntriesDelegate;
        
        private EndOperationDelegate onEndAddUpdateOutGoingPaymentEntriesDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateOutGoingPaymentEntriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteOutGoingPaymentViaOutgoingPaymentIdDelegate;
        
        private EndOperationDelegate onEndDeleteOutGoingPaymentViaOutgoingPaymentIdDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteOutGoingPaymentViaOutgoingPaymentIdCompletedDelegate;
        
        public PolicyOutgoingDistributionClient() {
        }
        
        public PolicyOutgoingDistributionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PolicyOutgoingDistributionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyOutgoingDistributionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyOutgoingDistributionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<IsEntryMarkPaidCompletedEventArgs> IsEntryMarkPaidCompleted;
        
        public event System.EventHandler<GetOutgoingPaymentByPoicyPaymentEntryIdCompletedEventArgs> GetOutgoingPaymentByPoicyPaymentEntryIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteByPolicyIncomingPaymentIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateOutgoingPaymentEntryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateOutGoingPaymentEntriesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteOutGoingPaymentViaOutgoingPaymentIdCompleted;
        
        public bool IsEntryMarkPaid(System.Guid PaymentEntryId) {
            return base.Channel.IsEntryMarkPaid(PaymentEntryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsEntryMarkPaid(System.Guid PaymentEntryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsEntryMarkPaid(PaymentEntryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsEntryMarkPaid(System.IAsyncResult result) {
            return base.Channel.EndIsEntryMarkPaid(result);
        }
        
        private System.IAsyncResult OnBeginIsEntryMarkPaid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PaymentEntryId = ((System.Guid)(inValues[0]));
            return this.BeginIsEntryMarkPaid(PaymentEntryId, callback, asyncState);
        }
        
        private object[] OnEndIsEntryMarkPaid(System.IAsyncResult result) {
            bool retVal = this.EndIsEntryMarkPaid(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsEntryMarkPaidCompleted(object state) {
            if ((this.IsEntryMarkPaidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsEntryMarkPaidCompleted(this, new IsEntryMarkPaidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsEntryMarkPaidAsync(System.Guid PaymentEntryId) {
            this.IsEntryMarkPaidAsync(PaymentEntryId, null);
        }
        
        public void IsEntryMarkPaidAsync(System.Guid PaymentEntryId, object userState) {
            if ((this.onBeginIsEntryMarkPaidDelegate == null)) {
                this.onBeginIsEntryMarkPaidDelegate = new BeginOperationDelegate(this.OnBeginIsEntryMarkPaid);
            }
            if ((this.onEndIsEntryMarkPaidDelegate == null)) {
                this.onEndIsEntryMarkPaidDelegate = new EndOperationDelegate(this.OnEndIsEntryMarkPaid);
            }
            if ((this.onIsEntryMarkPaidCompletedDelegate == null)) {
                this.onIsEntryMarkPaidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsEntryMarkPaidCompleted);
            }
            base.InvokeAsync(this.onBeginIsEntryMarkPaidDelegate, new object[] {
                        PaymentEntryId}, this.onEndIsEntryMarkPaidDelegate, this.onIsEntryMarkPaidCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> GetOutgoingPaymentByPoicyPaymentEntryId(System.Guid EntryId) {
            return base.Channel.GetOutgoingPaymentByPoicyPaymentEntryId(EntryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOutgoingPaymentByPoicyPaymentEntryId(System.Guid EntryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOutgoingPaymentByPoicyPaymentEntryId(EntryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> EndGetOutgoingPaymentByPoicyPaymentEntryId(System.IAsyncResult result) {
            return base.Channel.EndGetOutgoingPaymentByPoicyPaymentEntryId(result);
        }
        
        private System.IAsyncResult OnBeginGetOutgoingPaymentByPoicyPaymentEntryId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid EntryId = ((System.Guid)(inValues[0]));
            return this.BeginGetOutgoingPaymentByPoicyPaymentEntryId(EntryId, callback, asyncState);
        }
        
        private object[] OnEndGetOutgoingPaymentByPoicyPaymentEntryId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> retVal = this.EndGetOutgoingPaymentByPoicyPaymentEntryId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOutgoingPaymentByPoicyPaymentEntryIdCompleted(object state) {
            if ((this.GetOutgoingPaymentByPoicyPaymentEntryIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOutgoingPaymentByPoicyPaymentEntryIdCompleted(this, new GetOutgoingPaymentByPoicyPaymentEntryIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOutgoingPaymentByPoicyPaymentEntryIdAsync(System.Guid EntryId) {
            this.GetOutgoingPaymentByPoicyPaymentEntryIdAsync(EntryId, null);
        }
        
        public void GetOutgoingPaymentByPoicyPaymentEntryIdAsync(System.Guid EntryId, object userState) {
            if ((this.onBeginGetOutgoingPaymentByPoicyPaymentEntryIdDelegate == null)) {
                this.onBeginGetOutgoingPaymentByPoicyPaymentEntryIdDelegate = new BeginOperationDelegate(this.OnBeginGetOutgoingPaymentByPoicyPaymentEntryId);
            }
            if ((this.onEndGetOutgoingPaymentByPoicyPaymentEntryIdDelegate == null)) {
                this.onEndGetOutgoingPaymentByPoicyPaymentEntryIdDelegate = new EndOperationDelegate(this.OnEndGetOutgoingPaymentByPoicyPaymentEntryId);
            }
            if ((this.onGetOutgoingPaymentByPoicyPaymentEntryIdCompletedDelegate == null)) {
                this.onGetOutgoingPaymentByPoicyPaymentEntryIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOutgoingPaymentByPoicyPaymentEntryIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetOutgoingPaymentByPoicyPaymentEntryIdDelegate, new object[] {
                        EntryId}, this.onEndGetOutgoingPaymentByPoicyPaymentEntryIdDelegate, this.onGetOutgoingPaymentByPoicyPaymentEntryIdCompletedDelegate, userState);
        }
        
        public void DeleteByPolicyIncomingPaymentId(System.Guid PaymentEntryId) {
            base.Channel.DeleteByPolicyIncomingPaymentId(PaymentEntryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteByPolicyIncomingPaymentId(System.Guid PaymentEntryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteByPolicyIncomingPaymentId(PaymentEntryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteByPolicyIncomingPaymentId(System.IAsyncResult result) {
            base.Channel.EndDeleteByPolicyIncomingPaymentId(result);
        }
        
        private System.IAsyncResult OnBeginDeleteByPolicyIncomingPaymentId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PaymentEntryId = ((System.Guid)(inValues[0]));
            return this.BeginDeleteByPolicyIncomingPaymentId(PaymentEntryId, callback, asyncState);
        }
        
        private object[] OnEndDeleteByPolicyIncomingPaymentId(System.IAsyncResult result) {
            this.EndDeleteByPolicyIncomingPaymentId(result);
            return null;
        }
        
        private void OnDeleteByPolicyIncomingPaymentIdCompleted(object state) {
            if ((this.DeleteByPolicyIncomingPaymentIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteByPolicyIncomingPaymentIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteByPolicyIncomingPaymentIdAsync(System.Guid PaymentEntryId) {
            this.DeleteByPolicyIncomingPaymentIdAsync(PaymentEntryId, null);
        }
        
        public void DeleteByPolicyIncomingPaymentIdAsync(System.Guid PaymentEntryId, object userState) {
            if ((this.onBeginDeleteByPolicyIncomingPaymentIdDelegate == null)) {
                this.onBeginDeleteByPolicyIncomingPaymentIdDelegate = new BeginOperationDelegate(this.OnBeginDeleteByPolicyIncomingPaymentId);
            }
            if ((this.onEndDeleteByPolicyIncomingPaymentIdDelegate == null)) {
                this.onEndDeleteByPolicyIncomingPaymentIdDelegate = new EndOperationDelegate(this.OnEndDeleteByPolicyIncomingPaymentId);
            }
            if ((this.onDeleteByPolicyIncomingPaymentIdCompletedDelegate == null)) {
                this.onDeleteByPolicyIncomingPaymentIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteByPolicyIncomingPaymentIdCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteByPolicyIncomingPaymentIdDelegate, new object[] {
                        PaymentEntryId}, this.onEndDeleteByPolicyIncomingPaymentIdDelegate, this.onDeleteByPolicyIncomingPaymentIdCompletedDelegate, userState);
        }
        
        public void AddUpdateOutgoingPaymentEntry(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution _PolicyOutgoingDistribution) {
            base.Channel.AddUpdateOutgoingPaymentEntry(_PolicyOutgoingDistribution);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateOutgoingPaymentEntry(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution _PolicyOutgoingDistribution, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateOutgoingPaymentEntry(_PolicyOutgoingDistribution, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateOutgoingPaymentEntry(System.IAsyncResult result) {
            base.Channel.EndAddUpdateOutgoingPaymentEntry(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateOutgoingPaymentEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution _PolicyOutgoingDistribution = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution)(inValues[0]));
            return this.BeginAddUpdateOutgoingPaymentEntry(_PolicyOutgoingDistribution, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateOutgoingPaymentEntry(System.IAsyncResult result) {
            this.EndAddUpdateOutgoingPaymentEntry(result);
            return null;
        }
        
        private void OnAddUpdateOutgoingPaymentEntryCompleted(object state) {
            if ((this.AddUpdateOutgoingPaymentEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateOutgoingPaymentEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateOutgoingPaymentEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution _PolicyOutgoingDistribution) {
            this.AddUpdateOutgoingPaymentEntryAsync(_PolicyOutgoingDistribution, null);
        }
        
        public void AddUpdateOutgoingPaymentEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution _PolicyOutgoingDistribution, object userState) {
            if ((this.onBeginAddUpdateOutgoingPaymentEntryDelegate == null)) {
                this.onBeginAddUpdateOutgoingPaymentEntryDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateOutgoingPaymentEntry);
            }
            if ((this.onEndAddUpdateOutgoingPaymentEntryDelegate == null)) {
                this.onEndAddUpdateOutgoingPaymentEntryDelegate = new EndOperationDelegate(this.OnEndAddUpdateOutgoingPaymentEntry);
            }
            if ((this.onAddUpdateOutgoingPaymentEntryCompletedDelegate == null)) {
                this.onAddUpdateOutgoingPaymentEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateOutgoingPaymentEntryCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateOutgoingPaymentEntryDelegate, new object[] {
                        _PolicyOutgoingDistribution}, this.onEndAddUpdateOutgoingPaymentEntryDelegate, this.onAddUpdateOutgoingPaymentEntryCompletedDelegate, userState);
        }
        
        public void AddUpdateOutGoingPaymentEntries(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> _PolicyOutgoingDistribution) {
            base.Channel.AddUpdateOutGoingPaymentEntries(_PolicyOutgoingDistribution);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateOutGoingPaymentEntries(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> _PolicyOutgoingDistribution, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateOutGoingPaymentEntries(_PolicyOutgoingDistribution, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateOutGoingPaymentEntries(System.IAsyncResult result) {
            base.Channel.EndAddUpdateOutGoingPaymentEntries(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateOutGoingPaymentEntries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> _PolicyOutgoingDistribution = ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution>)(inValues[0]));
            return this.BeginAddUpdateOutGoingPaymentEntries(_PolicyOutgoingDistribution, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateOutGoingPaymentEntries(System.IAsyncResult result) {
            this.EndAddUpdateOutGoingPaymentEntries(result);
            return null;
        }
        
        private void OnAddUpdateOutGoingPaymentEntriesCompleted(object state) {
            if ((this.AddUpdateOutGoingPaymentEntriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateOutGoingPaymentEntriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateOutGoingPaymentEntriesAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> _PolicyOutgoingDistribution) {
            this.AddUpdateOutGoingPaymentEntriesAsync(_PolicyOutgoingDistribution, null);
        }
        
        public void AddUpdateOutGoingPaymentEntriesAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution> _PolicyOutgoingDistribution, object userState) {
            if ((this.onBeginAddUpdateOutGoingPaymentEntriesDelegate == null)) {
                this.onBeginAddUpdateOutGoingPaymentEntriesDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateOutGoingPaymentEntries);
            }
            if ((this.onEndAddUpdateOutGoingPaymentEntriesDelegate == null)) {
                this.onEndAddUpdateOutGoingPaymentEntriesDelegate = new EndOperationDelegate(this.OnEndAddUpdateOutGoingPaymentEntries);
            }
            if ((this.onAddUpdateOutGoingPaymentEntriesCompletedDelegate == null)) {
                this.onAddUpdateOutGoingPaymentEntriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateOutGoingPaymentEntriesCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateOutGoingPaymentEntriesDelegate, new object[] {
                        _PolicyOutgoingDistribution}, this.onEndAddUpdateOutGoingPaymentEntriesDelegate, this.onAddUpdateOutGoingPaymentEntriesCompletedDelegate, userState);
        }
        
        public void DeleteOutGoingPaymentViaOutgoingPaymentId(System.Guid OutgoingPaymentid) {
            base.Channel.DeleteOutGoingPaymentViaOutgoingPaymentId(OutgoingPaymentid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteOutGoingPaymentViaOutgoingPaymentId(System.Guid OutgoingPaymentid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteOutGoingPaymentViaOutgoingPaymentId(OutgoingPaymentid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteOutGoingPaymentViaOutgoingPaymentId(System.IAsyncResult result) {
            base.Channel.EndDeleteOutGoingPaymentViaOutgoingPaymentId(result);
        }
        
        private System.IAsyncResult OnBeginDeleteOutGoingPaymentViaOutgoingPaymentId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid OutgoingPaymentid = ((System.Guid)(inValues[0]));
            return this.BeginDeleteOutGoingPaymentViaOutgoingPaymentId(OutgoingPaymentid, callback, asyncState);
        }
        
        private object[] OnEndDeleteOutGoingPaymentViaOutgoingPaymentId(System.IAsyncResult result) {
            this.EndDeleteOutGoingPaymentViaOutgoingPaymentId(result);
            return null;
        }
        
        private void OnDeleteOutGoingPaymentViaOutgoingPaymentIdCompleted(object state) {
            if ((this.DeleteOutGoingPaymentViaOutgoingPaymentIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteOutGoingPaymentViaOutgoingPaymentIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteOutGoingPaymentViaOutgoingPaymentIdAsync(System.Guid OutgoingPaymentid) {
            this.DeleteOutGoingPaymentViaOutgoingPaymentIdAsync(OutgoingPaymentid, null);
        }
        
        public void DeleteOutGoingPaymentViaOutgoingPaymentIdAsync(System.Guid OutgoingPaymentid, object userState) {
            if ((this.onBeginDeleteOutGoingPaymentViaOutgoingPaymentIdDelegate == null)) {
                this.onBeginDeleteOutGoingPaymentViaOutgoingPaymentIdDelegate = new BeginOperationDelegate(this.OnBeginDeleteOutGoingPaymentViaOutgoingPaymentId);
            }
            if ((this.onEndDeleteOutGoingPaymentViaOutgoingPaymentIdDelegate == null)) {
                this.onEndDeleteOutGoingPaymentViaOutgoingPaymentIdDelegate = new EndOperationDelegate(this.OnEndDeleteOutGoingPaymentViaOutgoingPaymentId);
            }
            if ((this.onDeleteOutGoingPaymentViaOutgoingPaymentIdCompletedDelegate == null)) {
                this.onDeleteOutGoingPaymentViaOutgoingPaymentIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteOutGoingPaymentViaOutgoingPaymentIdCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteOutGoingPaymentViaOutgoingPaymentIdDelegate, new object[] {
                        OutgoingPaymentid}, this.onEndDeleteOutGoingPaymentViaOutgoingPaymentIdDelegate, this.onDeleteOutGoingPaymentViaOutgoingPaymentIdCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPayorToolAvailablelFieldType")]
    public interface IPayorToolAvailablelFieldType {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorToolAvailablelFieldType/AddUpdatePayorToolAvailablelFiel" +
            "dType", ReplyAction="http://tempuri.org/IPayorToolAvailablelFieldType/AddUpdatePayorToolAvailablelFiel" +
            "dTypeResponse")]
        int AddUpdatePayorToolAvailablelFieldType(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorToolAvailablelFieldType/AddUpdatePayorToolAvailablelFiel" +
            "dType", ReplyAction="http://tempuri.org/IPayorToolAvailablelFieldType/AddUpdatePayorToolAvailablelFiel" +
            "dTypeResponse")]
        System.IAsyncResult BeginAddUpdatePayorToolAvailablelFieldType(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields, System.AsyncCallback callback, object asyncState);
        
        int EndAddUpdatePayorToolAvailablelFieldType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorToolAvailablelFieldType/DeletePayorToolAvailablelFieldTy" +
            "pe", ReplyAction="http://tempuri.org/IPayorToolAvailablelFieldType/DeletePayorToolAvailablelFieldTy" +
            "peResponse")]
        bool DeletePayorToolAvailablelFieldType(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorToolAvailablelFieldType/DeletePayorToolAvailablelFieldTy" +
            "pe", ReplyAction="http://tempuri.org/IPayorToolAvailablelFieldType/DeletePayorToolAvailablelFieldTy" +
            "peResponse")]
        System.IAsyncResult BeginDeletePayorToolAvailablelFieldType(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields, System.AsyncCallback callback, object asyncState);
        
        bool EndDeletePayorToolAvailablelFieldType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorToolAvailablelFieldType/GetFieldList", ReplyAction="http://tempuri.org/IPayorToolAvailablelFieldType/GetFieldListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType> GetFieldList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorToolAvailablelFieldType/GetFieldList", ReplyAction="http://tempuri.org/IPayorToolAvailablelFieldType/GetFieldListResponse")]
        System.IAsyncResult BeginGetFieldList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType> EndGetFieldList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorToolAvailablelFieldType/GetImportToolList", ReplyAction="http://tempuri.org/IPayorToolAvailablelFieldType/GetImportToolListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType> GetImportToolList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorToolAvailablelFieldType/GetImportToolList", ReplyAction="http://tempuri.org/IPayorToolAvailablelFieldType/GetImportToolListResponse")]
        System.IAsyncResult BeginGetImportToolList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType> EndGetImportToolList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPayorToolAvailablelFieldTypeChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPayorToolAvailablelFieldType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdatePayorToolAvailablelFieldTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdatePayorToolAvailablelFieldTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePayorToolAvailablelFieldTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePayorToolAvailablelFieldTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFieldListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFieldListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetImportToolListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetImportToolListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayorToolAvailablelFieldTypeClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPayorToolAvailablelFieldType>, MyAgencyVault.VM.MyAgencyVaultSvc.IPayorToolAvailablelFieldType {
        
        private BeginOperationDelegate onBeginAddUpdatePayorToolAvailablelFieldTypeDelegate;
        
        private EndOperationDelegate onEndAddUpdatePayorToolAvailablelFieldTypeDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePayorToolAvailablelFieldTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePayorToolAvailablelFieldTypeDelegate;
        
        private EndOperationDelegate onEndDeletePayorToolAvailablelFieldTypeDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePayorToolAvailablelFieldTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFieldListDelegate;
        
        private EndOperationDelegate onEndGetFieldListDelegate;
        
        private System.Threading.SendOrPostCallback onGetFieldListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetImportToolListDelegate;
        
        private EndOperationDelegate onEndGetImportToolListDelegate;
        
        private System.Threading.SendOrPostCallback onGetImportToolListCompletedDelegate;
        
        public PayorToolAvailablelFieldTypeClient() {
        }
        
        public PayorToolAvailablelFieldTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PayorToolAvailablelFieldTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorToolAvailablelFieldTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorToolAvailablelFieldTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<AddUpdatePayorToolAvailablelFieldTypeCompletedEventArgs> AddUpdatePayorToolAvailablelFieldTypeCompleted;
        
        public event System.EventHandler<DeletePayorToolAvailablelFieldTypeCompletedEventArgs> DeletePayorToolAvailablelFieldTypeCompleted;
        
        public event System.EventHandler<GetFieldListCompletedEventArgs> GetFieldListCompleted;
        
        public event System.EventHandler<GetImportToolListCompletedEventArgs> GetImportToolListCompleted;
        
        public int AddUpdatePayorToolAvailablelFieldType(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields) {
            return base.Channel.AddUpdatePayorToolAvailablelFieldType(PyrToolAvalableFields);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePayorToolAvailablelFieldType(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePayorToolAvailablelFieldType(PyrToolAvalableFields, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddUpdatePayorToolAvailablelFieldType(System.IAsyncResult result) {
            return base.Channel.EndAddUpdatePayorToolAvailablelFieldType(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePayorToolAvailablelFieldType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType)(inValues[0]));
            return this.BeginAddUpdatePayorToolAvailablelFieldType(PyrToolAvalableFields, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePayorToolAvailablelFieldType(System.IAsyncResult result) {
            int retVal = this.EndAddUpdatePayorToolAvailablelFieldType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdatePayorToolAvailablelFieldTypeCompleted(object state) {
            if ((this.AddUpdatePayorToolAvailablelFieldTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePayorToolAvailablelFieldTypeCompleted(this, new AddUpdatePayorToolAvailablelFieldTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePayorToolAvailablelFieldTypeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields) {
            this.AddUpdatePayorToolAvailablelFieldTypeAsync(PyrToolAvalableFields, null);
        }
        
        public void AddUpdatePayorToolAvailablelFieldTypeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields, object userState) {
            if ((this.onBeginAddUpdatePayorToolAvailablelFieldTypeDelegate == null)) {
                this.onBeginAddUpdatePayorToolAvailablelFieldTypeDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePayorToolAvailablelFieldType);
            }
            if ((this.onEndAddUpdatePayorToolAvailablelFieldTypeDelegate == null)) {
                this.onEndAddUpdatePayorToolAvailablelFieldTypeDelegate = new EndOperationDelegate(this.OnEndAddUpdatePayorToolAvailablelFieldType);
            }
            if ((this.onAddUpdatePayorToolAvailablelFieldTypeCompletedDelegate == null)) {
                this.onAddUpdatePayorToolAvailablelFieldTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePayorToolAvailablelFieldTypeCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePayorToolAvailablelFieldTypeDelegate, new object[] {
                        PyrToolAvalableFields}, this.onEndAddUpdatePayorToolAvailablelFieldTypeDelegate, this.onAddUpdatePayorToolAvailablelFieldTypeCompletedDelegate, userState);
        }
        
        public bool DeletePayorToolAvailablelFieldType(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields) {
            return base.Channel.DeletePayorToolAvailablelFieldType(PyrToolAvalableFields);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePayorToolAvailablelFieldType(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePayorToolAvailablelFieldType(PyrToolAvalableFields, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeletePayorToolAvailablelFieldType(System.IAsyncResult result) {
            return base.Channel.EndDeletePayorToolAvailablelFieldType(result);
        }
        
        private System.IAsyncResult OnBeginDeletePayorToolAvailablelFieldType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType)(inValues[0]));
            return this.BeginDeletePayorToolAvailablelFieldType(PyrToolAvalableFields, callback, asyncState);
        }
        
        private object[] OnEndDeletePayorToolAvailablelFieldType(System.IAsyncResult result) {
            bool retVal = this.EndDeletePayorToolAvailablelFieldType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePayorToolAvailablelFieldTypeCompleted(object state) {
            if ((this.DeletePayorToolAvailablelFieldTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePayorToolAvailablelFieldTypeCompleted(this, new DeletePayorToolAvailablelFieldTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePayorToolAvailablelFieldTypeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields) {
            this.DeletePayorToolAvailablelFieldTypeAsync(PyrToolAvalableFields, null);
        }
        
        public void DeletePayorToolAvailablelFieldTypeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType PyrToolAvalableFields, object userState) {
            if ((this.onBeginDeletePayorToolAvailablelFieldTypeDelegate == null)) {
                this.onBeginDeletePayorToolAvailablelFieldTypeDelegate = new BeginOperationDelegate(this.OnBeginDeletePayorToolAvailablelFieldType);
            }
            if ((this.onEndDeletePayorToolAvailablelFieldTypeDelegate == null)) {
                this.onEndDeletePayorToolAvailablelFieldTypeDelegate = new EndOperationDelegate(this.OnEndDeletePayorToolAvailablelFieldType);
            }
            if ((this.onDeletePayorToolAvailablelFieldTypeCompletedDelegate == null)) {
                this.onDeletePayorToolAvailablelFieldTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePayorToolAvailablelFieldTypeCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePayorToolAvailablelFieldTypeDelegate, new object[] {
                        PyrToolAvalableFields}, this.onEndDeletePayorToolAvailablelFieldTypeDelegate, this.onDeletePayorToolAvailablelFieldTypeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType> GetFieldList() {
            return base.Channel.GetFieldList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFieldList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFieldList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType> EndGetFieldList(System.IAsyncResult result) {
            return base.Channel.EndGetFieldList(result);
        }
        
        private System.IAsyncResult OnBeginGetFieldList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetFieldList(callback, asyncState);
        }
        
        private object[] OnEndGetFieldList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType> retVal = this.EndGetFieldList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFieldListCompleted(object state) {
            if ((this.GetFieldListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFieldListCompleted(this, new GetFieldListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFieldListAsync() {
            this.GetFieldListAsync(null);
        }
        
        public void GetFieldListAsync(object userState) {
            if ((this.onBeginGetFieldListDelegate == null)) {
                this.onBeginGetFieldListDelegate = new BeginOperationDelegate(this.OnBeginGetFieldList);
            }
            if ((this.onEndGetFieldListDelegate == null)) {
                this.onEndGetFieldListDelegate = new EndOperationDelegate(this.OnEndGetFieldList);
            }
            if ((this.onGetFieldListCompletedDelegate == null)) {
                this.onGetFieldListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFieldListCompleted);
            }
            base.InvokeAsync(this.onBeginGetFieldListDelegate, null, this.onEndGetFieldListDelegate, this.onGetFieldListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType> GetImportToolList() {
            return base.Channel.GetImportToolList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetImportToolList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetImportToolList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType> EndGetImportToolList(System.IAsyncResult result) {
            return base.Channel.EndGetImportToolList(result);
        }
        
        private System.IAsyncResult OnBeginGetImportToolList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetImportToolList(callback, asyncState);
        }
        
        private object[] OnEndGetImportToolList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolAvailablelFieldType> retVal = this.EndGetImportToolList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetImportToolListCompleted(object state) {
            if ((this.GetImportToolListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetImportToolListCompleted(this, new GetImportToolListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetImportToolListAsync() {
            this.GetImportToolListAsync(null);
        }
        
        public void GetImportToolListAsync(object userState) {
            if ((this.onBeginGetImportToolListDelegate == null)) {
                this.onBeginGetImportToolListDelegate = new BeginOperationDelegate(this.OnBeginGetImportToolList);
            }
            if ((this.onEndGetImportToolListDelegate == null)) {
                this.onEndGetImportToolListDelegate = new EndOperationDelegate(this.OnEndGetImportToolList);
            }
            if ((this.onGetImportToolListCompletedDelegate == null)) {
                this.onGetImportToolListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetImportToolListCompleted);
            }
            base.InvokeAsync(this.onBeginGetImportToolListDelegate, null, this.onEndGetImportToolListDelegate, this.onGetImportToolListCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IJournal")]
    public interface IJournal {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJournal/getJournalEntriesByLicensee", ReplyAction="http://tempuri.org/IJournal/getJournalEntriesByLicenseeResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> getJournalEntriesByLicensee(System.Guid LicenseeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IJournal/getJournalEntriesByLicensee", ReplyAction="http://tempuri.org/IJournal/getJournalEntriesByLicenseeResponse")]
        System.IAsyncResult BegingetJournalEntriesByLicensee(System.Guid LicenseeID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> EndgetJournalEntriesByLicensee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJournal/getJournalEntriesByInvoiceID", ReplyAction="http://tempuri.org/IJournal/getJournalEntriesByInvoiceIDResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> getJournalEntriesByInvoiceID(long InvoiceId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IJournal/getJournalEntriesByInvoiceID", ReplyAction="http://tempuri.org/IJournal/getJournalEntriesByInvoiceIDResponse")]
        System.IAsyncResult BegingetJournalEntriesByInvoiceID(long InvoiceId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> EndgetJournalEntriesByInvoiceID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJournal/getJournalEntriesByLicenseeIDInvocieID", ReplyAction="http://tempuri.org/IJournal/getJournalEntriesByLicenseeIDInvocieIDResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> getJournalEntriesByLicenseeIDInvocieID(System.Guid LicenseeID, long InvoiceId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IJournal/getJournalEntriesByLicenseeIDInvocieID", ReplyAction="http://tempuri.org/IJournal/getJournalEntriesByLicenseeIDInvocieIDResponse")]
        System.IAsyncResult BegingetJournalEntriesByLicenseeIDInvocieID(System.Guid LicenseeID, long InvoiceId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> EndgetJournalEntriesByLicenseeIDInvocieID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJournal/getAllJournalEntries", ReplyAction="http://tempuri.org/IJournal/getAllJournalEntriesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> getAllJournalEntries();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IJournal/getAllJournalEntries", ReplyAction="http://tempuri.org/IJournal/getAllJournalEntriesResponse")]
        System.IAsyncResult BegingetAllJournalEntries(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> EndgetAllJournalEntries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJournal/DeleteJournalEntry", ReplyAction="http://tempuri.org/IJournal/DeleteJournalEntryResponse")]
        bool DeleteJournalEntry(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IJournal/DeleteJournalEntry", ReplyAction="http://tempuri.org/IJournal/DeleteJournalEntryResponse")]
        System.IAsyncResult BeginDeleteJournalEntry(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteJournalEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJournal/InsertJournalEntry", ReplyAction="http://tempuri.org/IJournal/InsertJournalEntryResponse")]
        long InsertJournalEntry(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IJournal/InsertJournalEntry", ReplyAction="http://tempuri.org/IJournal/InsertJournalEntryResponse")]
        System.IAsyncResult BeginInsertJournalEntry(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry, System.AsyncCallback callback, object asyncState);
        
        long EndInsertJournalEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJournal/UpdateJournalEntry", ReplyAction="http://tempuri.org/IJournal/UpdateJournalEntryResponse")]
        bool UpdateJournalEntry(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IJournal/UpdateJournalEntry", ReplyAction="http://tempuri.org/IJournal/UpdateJournalEntryResponse")]
        System.IAsyncResult BeginUpdateJournalEntry(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateJournalEntry(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJournalChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IJournal, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getJournalEntriesByLicenseeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getJournalEntriesByLicenseeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getJournalEntriesByInvoiceIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getJournalEntriesByInvoiceIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getJournalEntriesByLicenseeIDInvocieIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getJournalEntriesByLicenseeIDInvocieIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAllJournalEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAllJournalEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteJournalEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteJournalEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertJournalEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertJournalEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateJournalEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateJournalEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JournalClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IJournal>, MyAgencyVault.VM.MyAgencyVaultSvc.IJournal {
        
        private BeginOperationDelegate onBegingetJournalEntriesByLicenseeDelegate;
        
        private EndOperationDelegate onEndgetJournalEntriesByLicenseeDelegate;
        
        private System.Threading.SendOrPostCallback ongetJournalEntriesByLicenseeCompletedDelegate;
        
        private BeginOperationDelegate onBegingetJournalEntriesByInvoiceIDDelegate;
        
        private EndOperationDelegate onEndgetJournalEntriesByInvoiceIDDelegate;
        
        private System.Threading.SendOrPostCallback ongetJournalEntriesByInvoiceIDCompletedDelegate;
        
        private BeginOperationDelegate onBegingetJournalEntriesByLicenseeIDInvocieIDDelegate;
        
        private EndOperationDelegate onEndgetJournalEntriesByLicenseeIDInvocieIDDelegate;
        
        private System.Threading.SendOrPostCallback ongetJournalEntriesByLicenseeIDInvocieIDCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAllJournalEntriesDelegate;
        
        private EndOperationDelegate onEndgetAllJournalEntriesDelegate;
        
        private System.Threading.SendOrPostCallback ongetAllJournalEntriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteJournalEntryDelegate;
        
        private EndOperationDelegate onEndDeleteJournalEntryDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteJournalEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertJournalEntryDelegate;
        
        private EndOperationDelegate onEndInsertJournalEntryDelegate;
        
        private System.Threading.SendOrPostCallback onInsertJournalEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateJournalEntryDelegate;
        
        private EndOperationDelegate onEndUpdateJournalEntryDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateJournalEntryCompletedDelegate;
        
        public JournalClient() {
        }
        
        public JournalClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JournalClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JournalClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JournalClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<getJournalEntriesByLicenseeCompletedEventArgs> getJournalEntriesByLicenseeCompleted;
        
        public event System.EventHandler<getJournalEntriesByInvoiceIDCompletedEventArgs> getJournalEntriesByInvoiceIDCompleted;
        
        public event System.EventHandler<getJournalEntriesByLicenseeIDInvocieIDCompletedEventArgs> getJournalEntriesByLicenseeIDInvocieIDCompleted;
        
        public event System.EventHandler<getAllJournalEntriesCompletedEventArgs> getAllJournalEntriesCompleted;
        
        public event System.EventHandler<DeleteJournalEntryCompletedEventArgs> DeleteJournalEntryCompleted;
        
        public event System.EventHandler<InsertJournalEntryCompletedEventArgs> InsertJournalEntryCompleted;
        
        public event System.EventHandler<UpdateJournalEntryCompletedEventArgs> UpdateJournalEntryCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> getJournalEntriesByLicensee(System.Guid LicenseeID) {
            return base.Channel.getJournalEntriesByLicensee(LicenseeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetJournalEntriesByLicensee(System.Guid LicenseeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetJournalEntriesByLicensee(LicenseeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> EndgetJournalEntriesByLicensee(System.IAsyncResult result) {
            return base.Channel.EndgetJournalEntriesByLicensee(result);
        }
        
        private System.IAsyncResult OnBegingetJournalEntriesByLicensee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeID = ((System.Guid)(inValues[0]));
            return this.BegingetJournalEntriesByLicensee(LicenseeID, callback, asyncState);
        }
        
        private object[] OnEndgetJournalEntriesByLicensee(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> retVal = this.EndgetJournalEntriesByLicensee(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetJournalEntriesByLicenseeCompleted(object state) {
            if ((this.getJournalEntriesByLicenseeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getJournalEntriesByLicenseeCompleted(this, new getJournalEntriesByLicenseeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getJournalEntriesByLicenseeAsync(System.Guid LicenseeID) {
            this.getJournalEntriesByLicenseeAsync(LicenseeID, null);
        }
        
        public void getJournalEntriesByLicenseeAsync(System.Guid LicenseeID, object userState) {
            if ((this.onBegingetJournalEntriesByLicenseeDelegate == null)) {
                this.onBegingetJournalEntriesByLicenseeDelegate = new BeginOperationDelegate(this.OnBegingetJournalEntriesByLicensee);
            }
            if ((this.onEndgetJournalEntriesByLicenseeDelegate == null)) {
                this.onEndgetJournalEntriesByLicenseeDelegate = new EndOperationDelegate(this.OnEndgetJournalEntriesByLicensee);
            }
            if ((this.ongetJournalEntriesByLicenseeCompletedDelegate == null)) {
                this.ongetJournalEntriesByLicenseeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetJournalEntriesByLicenseeCompleted);
            }
            base.InvokeAsync(this.onBegingetJournalEntriesByLicenseeDelegate, new object[] {
                        LicenseeID}, this.onEndgetJournalEntriesByLicenseeDelegate, this.ongetJournalEntriesByLicenseeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> getJournalEntriesByInvoiceID(long InvoiceId) {
            return base.Channel.getJournalEntriesByInvoiceID(InvoiceId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetJournalEntriesByInvoiceID(long InvoiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetJournalEntriesByInvoiceID(InvoiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> EndgetJournalEntriesByInvoiceID(System.IAsyncResult result) {
            return base.Channel.EndgetJournalEntriesByInvoiceID(result);
        }
        
        private System.IAsyncResult OnBegingetJournalEntriesByInvoiceID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long InvoiceId = ((long)(inValues[0]));
            return this.BegingetJournalEntriesByInvoiceID(InvoiceId, callback, asyncState);
        }
        
        private object[] OnEndgetJournalEntriesByInvoiceID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> retVal = this.EndgetJournalEntriesByInvoiceID(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetJournalEntriesByInvoiceIDCompleted(object state) {
            if ((this.getJournalEntriesByInvoiceIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getJournalEntriesByInvoiceIDCompleted(this, new getJournalEntriesByInvoiceIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getJournalEntriesByInvoiceIDAsync(long InvoiceId) {
            this.getJournalEntriesByInvoiceIDAsync(InvoiceId, null);
        }
        
        public void getJournalEntriesByInvoiceIDAsync(long InvoiceId, object userState) {
            if ((this.onBegingetJournalEntriesByInvoiceIDDelegate == null)) {
                this.onBegingetJournalEntriesByInvoiceIDDelegate = new BeginOperationDelegate(this.OnBegingetJournalEntriesByInvoiceID);
            }
            if ((this.onEndgetJournalEntriesByInvoiceIDDelegate == null)) {
                this.onEndgetJournalEntriesByInvoiceIDDelegate = new EndOperationDelegate(this.OnEndgetJournalEntriesByInvoiceID);
            }
            if ((this.ongetJournalEntriesByInvoiceIDCompletedDelegate == null)) {
                this.ongetJournalEntriesByInvoiceIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetJournalEntriesByInvoiceIDCompleted);
            }
            base.InvokeAsync(this.onBegingetJournalEntriesByInvoiceIDDelegate, new object[] {
                        InvoiceId}, this.onEndgetJournalEntriesByInvoiceIDDelegate, this.ongetJournalEntriesByInvoiceIDCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> getJournalEntriesByLicenseeIDInvocieID(System.Guid LicenseeID, long InvoiceId) {
            return base.Channel.getJournalEntriesByLicenseeIDInvocieID(LicenseeID, InvoiceId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetJournalEntriesByLicenseeIDInvocieID(System.Guid LicenseeID, long InvoiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetJournalEntriesByLicenseeIDInvocieID(LicenseeID, InvoiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> EndgetJournalEntriesByLicenseeIDInvocieID(System.IAsyncResult result) {
            return base.Channel.EndgetJournalEntriesByLicenseeIDInvocieID(result);
        }
        
        private System.IAsyncResult OnBegingetJournalEntriesByLicenseeIDInvocieID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeID = ((System.Guid)(inValues[0]));
            long InvoiceId = ((long)(inValues[1]));
            return this.BegingetJournalEntriesByLicenseeIDInvocieID(LicenseeID, InvoiceId, callback, asyncState);
        }
        
        private object[] OnEndgetJournalEntriesByLicenseeIDInvocieID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> retVal = this.EndgetJournalEntriesByLicenseeIDInvocieID(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetJournalEntriesByLicenseeIDInvocieIDCompleted(object state) {
            if ((this.getJournalEntriesByLicenseeIDInvocieIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getJournalEntriesByLicenseeIDInvocieIDCompleted(this, new getJournalEntriesByLicenseeIDInvocieIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getJournalEntriesByLicenseeIDInvocieIDAsync(System.Guid LicenseeID, long InvoiceId) {
            this.getJournalEntriesByLicenseeIDInvocieIDAsync(LicenseeID, InvoiceId, null);
        }
        
        public void getJournalEntriesByLicenseeIDInvocieIDAsync(System.Guid LicenseeID, long InvoiceId, object userState) {
            if ((this.onBegingetJournalEntriesByLicenseeIDInvocieIDDelegate == null)) {
                this.onBegingetJournalEntriesByLicenseeIDInvocieIDDelegate = new BeginOperationDelegate(this.OnBegingetJournalEntriesByLicenseeIDInvocieID);
            }
            if ((this.onEndgetJournalEntriesByLicenseeIDInvocieIDDelegate == null)) {
                this.onEndgetJournalEntriesByLicenseeIDInvocieIDDelegate = new EndOperationDelegate(this.OnEndgetJournalEntriesByLicenseeIDInvocieID);
            }
            if ((this.ongetJournalEntriesByLicenseeIDInvocieIDCompletedDelegate == null)) {
                this.ongetJournalEntriesByLicenseeIDInvocieIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetJournalEntriesByLicenseeIDInvocieIDCompleted);
            }
            base.InvokeAsync(this.onBegingetJournalEntriesByLicenseeIDInvocieIDDelegate, new object[] {
                        LicenseeID,
                        InvoiceId}, this.onEndgetJournalEntriesByLicenseeIDInvocieIDDelegate, this.ongetJournalEntriesByLicenseeIDInvocieIDCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> getAllJournalEntries() {
            return base.Channel.getAllJournalEntries();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetAllJournalEntries(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAllJournalEntries(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> EndgetAllJournalEntries(System.IAsyncResult result) {
            return base.Channel.EndgetAllJournalEntries(result);
        }
        
        private System.IAsyncResult OnBegingetAllJournalEntries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetAllJournalEntries(callback, asyncState);
        }
        
        private object[] OnEndgetAllJournalEntries(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal> retVal = this.EndgetAllJournalEntries(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAllJournalEntriesCompleted(object state) {
            if ((this.getAllJournalEntriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAllJournalEntriesCompleted(this, new getAllJournalEntriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAllJournalEntriesAsync() {
            this.getAllJournalEntriesAsync(null);
        }
        
        public void getAllJournalEntriesAsync(object userState) {
            if ((this.onBegingetAllJournalEntriesDelegate == null)) {
                this.onBegingetAllJournalEntriesDelegate = new BeginOperationDelegate(this.OnBegingetAllJournalEntries);
            }
            if ((this.onEndgetAllJournalEntriesDelegate == null)) {
                this.onEndgetAllJournalEntriesDelegate = new EndOperationDelegate(this.OnEndgetAllJournalEntries);
            }
            if ((this.ongetAllJournalEntriesCompletedDelegate == null)) {
                this.ongetAllJournalEntriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllJournalEntriesCompleted);
            }
            base.InvokeAsync(this.onBegingetAllJournalEntriesDelegate, null, this.onEndgetAllJournalEntriesDelegate, this.ongetAllJournalEntriesCompletedDelegate, userState);
        }
        
        public bool DeleteJournalEntry(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry) {
            return base.Channel.DeleteJournalEntry(journalEntry);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteJournalEntry(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteJournalEntry(journalEntry, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteJournalEntry(System.IAsyncResult result) {
            return base.Channel.EndDeleteJournalEntry(result);
        }
        
        private System.IAsyncResult OnBeginDeleteJournalEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry = ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal)(inValues[0]));
            return this.BeginDeleteJournalEntry(journalEntry, callback, asyncState);
        }
        
        private object[] OnEndDeleteJournalEntry(System.IAsyncResult result) {
            bool retVal = this.EndDeleteJournalEntry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteJournalEntryCompleted(object state) {
            if ((this.DeleteJournalEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteJournalEntryCompleted(this, new DeleteJournalEntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteJournalEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry) {
            this.DeleteJournalEntryAsync(journalEntry, null);
        }
        
        public void DeleteJournalEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry, object userState) {
            if ((this.onBeginDeleteJournalEntryDelegate == null)) {
                this.onBeginDeleteJournalEntryDelegate = new BeginOperationDelegate(this.OnBeginDeleteJournalEntry);
            }
            if ((this.onEndDeleteJournalEntryDelegate == null)) {
                this.onEndDeleteJournalEntryDelegate = new EndOperationDelegate(this.OnEndDeleteJournalEntry);
            }
            if ((this.onDeleteJournalEntryCompletedDelegate == null)) {
                this.onDeleteJournalEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteJournalEntryCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteJournalEntryDelegate, new object[] {
                        journalEntry}, this.onEndDeleteJournalEntryDelegate, this.onDeleteJournalEntryCompletedDelegate, userState);
        }
        
        public long InsertJournalEntry(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry) {
            return base.Channel.InsertJournalEntry(journalEntry);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertJournalEntry(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertJournalEntry(journalEntry, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndInsertJournalEntry(System.IAsyncResult result) {
            return base.Channel.EndInsertJournalEntry(result);
        }
        
        private System.IAsyncResult OnBeginInsertJournalEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry = ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal)(inValues[0]));
            return this.BeginInsertJournalEntry(journalEntry, callback, asyncState);
        }
        
        private object[] OnEndInsertJournalEntry(System.IAsyncResult result) {
            long retVal = this.EndInsertJournalEntry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertJournalEntryCompleted(object state) {
            if ((this.InsertJournalEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertJournalEntryCompleted(this, new InsertJournalEntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertJournalEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry) {
            this.InsertJournalEntryAsync(journalEntry, null);
        }
        
        public void InsertJournalEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry, object userState) {
            if ((this.onBeginInsertJournalEntryDelegate == null)) {
                this.onBeginInsertJournalEntryDelegate = new BeginOperationDelegate(this.OnBeginInsertJournalEntry);
            }
            if ((this.onEndInsertJournalEntryDelegate == null)) {
                this.onEndInsertJournalEntryDelegate = new EndOperationDelegate(this.OnEndInsertJournalEntry);
            }
            if ((this.onInsertJournalEntryCompletedDelegate == null)) {
                this.onInsertJournalEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertJournalEntryCompleted);
            }
            base.InvokeAsync(this.onBeginInsertJournalEntryDelegate, new object[] {
                        journalEntry}, this.onEndInsertJournalEntryDelegate, this.onInsertJournalEntryCompletedDelegate, userState);
        }
        
        public bool UpdateJournalEntry(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry) {
            return base.Channel.UpdateJournalEntry(journalEntry);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateJournalEntry(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateJournalEntry(journalEntry, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateJournalEntry(System.IAsyncResult result) {
            return base.Channel.EndUpdateJournalEntry(result);
        }
        
        private System.IAsyncResult OnBeginUpdateJournalEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry = ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal)(inValues[0]));
            return this.BeginUpdateJournalEntry(journalEntry, callback, asyncState);
        }
        
        private object[] OnEndUpdateJournalEntry(System.IAsyncResult result) {
            bool retVal = this.EndUpdateJournalEntry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateJournalEntryCompleted(object state) {
            if ((this.UpdateJournalEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateJournalEntryCompleted(this, new UpdateJournalEntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateJournalEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry) {
            this.UpdateJournalEntryAsync(journalEntry, null);
        }
        
        public void UpdateJournalEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoiceJournal journalEntry, object userState) {
            if ((this.onBeginUpdateJournalEntryDelegate == null)) {
                this.onBeginUpdateJournalEntryDelegate = new BeginOperationDelegate(this.OnBeginUpdateJournalEntry);
            }
            if ((this.onEndUpdateJournalEntryDelegate == null)) {
                this.onEndUpdateJournalEntryDelegate = new EndOperationDelegate(this.OnEndUpdateJournalEntry);
            }
            if ((this.onUpdateJournalEntryCompletedDelegate == null)) {
                this.onUpdateJournalEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateJournalEntryCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateJournalEntryDelegate, new object[] {
                        journalEntry}, this.onEndUpdateJournalEntryDelegate, this.onUpdateJournalEntryCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IExportDate")]
    public interface IExportDate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportDate/GetExportDate", ReplyAction="http://tempuri.org/IExportDate/GetExportDateResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ExportDate GetExportDate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IExportDate/GetExportDate", ReplyAction="http://tempuri.org/IExportDate/GetExportDateResponse")]
        System.IAsyncResult BeginGetExportDate(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ExportDate EndGetExportDate(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExportDateChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IExportDate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetExportDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetExportDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ExportDate Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ExportDate)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExportDateClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IExportDate>, MyAgencyVault.VM.MyAgencyVaultSvc.IExportDate {
        
        private BeginOperationDelegate onBeginGetExportDateDelegate;
        
        private EndOperationDelegate onEndGetExportDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetExportDateCompletedDelegate;
        
        public ExportDateClient() {
        }
        
        public ExportDateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExportDateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExportDateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExportDateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetExportDateCompletedEventArgs> GetExportDateCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ExportDate GetExportDate() {
            return base.Channel.GetExportDate();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetExportDate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetExportDate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ExportDate EndGetExportDate(System.IAsyncResult result) {
            return base.Channel.EndGetExportDate(result);
        }
        
        private System.IAsyncResult OnBeginGetExportDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetExportDate(callback, asyncState);
        }
        
        private object[] OnEndGetExportDate(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ExportDate retVal = this.EndGetExportDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetExportDateCompleted(object state) {
            if ((this.GetExportDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetExportDateCompleted(this, new GetExportDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetExportDateAsync() {
            this.GetExportDateAsync(null);
        }
        
        public void GetExportDateAsync(object userState) {
            if ((this.onBeginGetExportDateDelegate == null)) {
                this.onBeginGetExportDateDelegate = new BeginOperationDelegate(this.OnBeginGetExportDate);
            }
            if ((this.onEndGetExportDateDelegate == null)) {
                this.onEndGetExportDateDelegate = new EndOperationDelegate(this.OnEndGetExportDate);
            }
            if ((this.onGetExportDateCompletedDelegate == null)) {
                this.onGetExportDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExportDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetExportDateDelegate, null, this.onEndGetExportDateDelegate, this.onGetExportDateCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IAdvancedPayee")]
    public interface IAdvancedPayee {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdvancedPayee/AddUpdateAdvancedPayee", ReplyAction="http://tempuri.org/IAdvancedPayee/AddUpdateAdvancedPayeeResponse")]
        void AddUpdateAdvancedPayee(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdvancedPayee/AddUpdateAdvancedPayee", ReplyAction="http://tempuri.org/IAdvancedPayee/AddUpdateAdvancedPayeeResponse")]
        System.IAsyncResult BeginAddUpdateAdvancedPayee(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateAdvancedPayee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdvancedPayee/DeleteAdvancedPayee", ReplyAction="http://tempuri.org/IAdvancedPayee/DeleteAdvancedPayeeResponse")]
        void DeleteAdvancedPayee(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdvancedPayee/DeleteAdvancedPayee", ReplyAction="http://tempuri.org/IAdvancedPayee/DeleteAdvancedPayeeResponse")]
        System.IAsyncResult BeginDeleteAdvancedPayee(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAdvancedPayee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdvancedPayee/GetAdvancedPayee", ReplyAction="http://tempuri.org/IAdvancedPayee/GetAdvancedPayeeResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee GetAdvancedPayee(System.Guid Id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdvancedPayee/GetAdvancedPayee", ReplyAction="http://tempuri.org/IAdvancedPayee/GetAdvancedPayeeResponse")]
        System.IAsyncResult BeginGetAdvancedPayee(System.Guid Id, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee EndGetAdvancedPayee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdvancedPayee/IsValidAdvancedPayee", ReplyAction="http://tempuri.org/IAdvancedPayee/IsValidAdvancedPayeeResponse")]
        bool IsValidAdvancedPayee(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdvancedPayee/IsValidAdvancedPayee", ReplyAction="http://tempuri.org/IAdvancedPayee/IsValidAdvancedPayeeResponse")]
        System.IAsyncResult BeginIsValidAdvancedPayee(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidAdvancedPayee(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdvancedPayeeChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IAdvancedPayee, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAdvancedPayeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAdvancedPayeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidAdvancedPayeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidAdvancedPayeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdvancedPayeeClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IAdvancedPayee>, MyAgencyVault.VM.MyAgencyVaultSvc.IAdvancedPayee {
        
        private BeginOperationDelegate onBeginAddUpdateAdvancedPayeeDelegate;
        
        private EndOperationDelegate onEndAddUpdateAdvancedPayeeDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateAdvancedPayeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAdvancedPayeeDelegate;
        
        private EndOperationDelegate onEndDeleteAdvancedPayeeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAdvancedPayeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAdvancedPayeeDelegate;
        
        private EndOperationDelegate onEndGetAdvancedPayeeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAdvancedPayeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidAdvancedPayeeDelegate;
        
        private EndOperationDelegate onEndIsValidAdvancedPayeeDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidAdvancedPayeeCompletedDelegate;
        
        public AdvancedPayeeClient() {
        }
        
        public AdvancedPayeeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdvancedPayeeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdvancedPayeeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdvancedPayeeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateAdvancedPayeeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAdvancedPayeeCompleted;
        
        public event System.EventHandler<GetAdvancedPayeeCompletedEventArgs> GetAdvancedPayeeCompleted;
        
        public event System.EventHandler<IsValidAdvancedPayeeCompletedEventArgs> IsValidAdvancedPayeeCompleted;
        
        public void AddUpdateAdvancedPayee(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee) {
            base.Channel.AddUpdateAdvancedPayee(AdvPayee);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateAdvancedPayee(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateAdvancedPayee(AdvPayee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateAdvancedPayee(System.IAsyncResult result) {
            base.Channel.EndAddUpdateAdvancedPayee(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateAdvancedPayee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee = ((MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee)(inValues[0]));
            return this.BeginAddUpdateAdvancedPayee(AdvPayee, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateAdvancedPayee(System.IAsyncResult result) {
            this.EndAddUpdateAdvancedPayee(result);
            return null;
        }
        
        private void OnAddUpdateAdvancedPayeeCompleted(object state) {
            if ((this.AddUpdateAdvancedPayeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateAdvancedPayeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateAdvancedPayeeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee) {
            this.AddUpdateAdvancedPayeeAsync(AdvPayee, null);
        }
        
        public void AddUpdateAdvancedPayeeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee, object userState) {
            if ((this.onBeginAddUpdateAdvancedPayeeDelegate == null)) {
                this.onBeginAddUpdateAdvancedPayeeDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateAdvancedPayee);
            }
            if ((this.onEndAddUpdateAdvancedPayeeDelegate == null)) {
                this.onEndAddUpdateAdvancedPayeeDelegate = new EndOperationDelegate(this.OnEndAddUpdateAdvancedPayee);
            }
            if ((this.onAddUpdateAdvancedPayeeCompletedDelegate == null)) {
                this.onAddUpdateAdvancedPayeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateAdvancedPayeeCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateAdvancedPayeeDelegate, new object[] {
                        AdvPayee}, this.onEndAddUpdateAdvancedPayeeDelegate, this.onAddUpdateAdvancedPayeeCompletedDelegate, userState);
        }
        
        public void DeleteAdvancedPayee(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee) {
            base.Channel.DeleteAdvancedPayee(AdvPayee);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteAdvancedPayee(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAdvancedPayee(AdvPayee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteAdvancedPayee(System.IAsyncResult result) {
            base.Channel.EndDeleteAdvancedPayee(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAdvancedPayee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee = ((MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee)(inValues[0]));
            return this.BeginDeleteAdvancedPayee(AdvPayee, callback, asyncState);
        }
        
        private object[] OnEndDeleteAdvancedPayee(System.IAsyncResult result) {
            this.EndDeleteAdvancedPayee(result);
            return null;
        }
        
        private void OnDeleteAdvancedPayeeCompleted(object state) {
            if ((this.DeleteAdvancedPayeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAdvancedPayeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAdvancedPayeeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee) {
            this.DeleteAdvancedPayeeAsync(AdvPayee, null);
        }
        
        public void DeleteAdvancedPayeeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee, object userState) {
            if ((this.onBeginDeleteAdvancedPayeeDelegate == null)) {
                this.onBeginDeleteAdvancedPayeeDelegate = new BeginOperationDelegate(this.OnBeginDeleteAdvancedPayee);
            }
            if ((this.onEndDeleteAdvancedPayeeDelegate == null)) {
                this.onEndDeleteAdvancedPayeeDelegate = new EndOperationDelegate(this.OnEndDeleteAdvancedPayee);
            }
            if ((this.onDeleteAdvancedPayeeCompletedDelegate == null)) {
                this.onDeleteAdvancedPayeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAdvancedPayeeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAdvancedPayeeDelegate, new object[] {
                        AdvPayee}, this.onEndDeleteAdvancedPayeeDelegate, this.onDeleteAdvancedPayeeCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee GetAdvancedPayee(System.Guid Id) {
            return base.Channel.GetAdvancedPayee(Id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAdvancedPayee(System.Guid Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAdvancedPayee(Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee EndGetAdvancedPayee(System.IAsyncResult result) {
            return base.Channel.EndGetAdvancedPayee(result);
        }
        
        private System.IAsyncResult OnBeginGetAdvancedPayee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid Id = ((System.Guid)(inValues[0]));
            return this.BeginGetAdvancedPayee(Id, callback, asyncState);
        }
        
        private object[] OnEndGetAdvancedPayee(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee retVal = this.EndGetAdvancedPayee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAdvancedPayeeCompleted(object state) {
            if ((this.GetAdvancedPayeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAdvancedPayeeCompleted(this, new GetAdvancedPayeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAdvancedPayeeAsync(System.Guid Id) {
            this.GetAdvancedPayeeAsync(Id, null);
        }
        
        public void GetAdvancedPayeeAsync(System.Guid Id, object userState) {
            if ((this.onBeginGetAdvancedPayeeDelegate == null)) {
                this.onBeginGetAdvancedPayeeDelegate = new BeginOperationDelegate(this.OnBeginGetAdvancedPayee);
            }
            if ((this.onEndGetAdvancedPayeeDelegate == null)) {
                this.onEndGetAdvancedPayeeDelegate = new EndOperationDelegate(this.OnEndGetAdvancedPayee);
            }
            if ((this.onGetAdvancedPayeeCompletedDelegate == null)) {
                this.onGetAdvancedPayeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAdvancedPayeeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAdvancedPayeeDelegate, new object[] {
                        Id}, this.onEndGetAdvancedPayeeDelegate, this.onGetAdvancedPayeeCompletedDelegate, userState);
        }
        
        public bool IsValidAdvancedPayee(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee) {
            return base.Channel.IsValidAdvancedPayee(AdvPayee);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidAdvancedPayee(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidAdvancedPayee(AdvPayee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidAdvancedPayee(System.IAsyncResult result) {
            return base.Channel.EndIsValidAdvancedPayee(result);
        }
        
        private System.IAsyncResult OnBeginIsValidAdvancedPayee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee = ((MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee)(inValues[0]));
            return this.BeginIsValidAdvancedPayee(AdvPayee, callback, asyncState);
        }
        
        private object[] OnEndIsValidAdvancedPayee(System.IAsyncResult result) {
            bool retVal = this.EndIsValidAdvancedPayee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidAdvancedPayeeCompleted(object state) {
            if ((this.IsValidAdvancedPayeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidAdvancedPayeeCompleted(this, new IsValidAdvancedPayeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidAdvancedPayeeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee) {
            this.IsValidAdvancedPayeeAsync(AdvPayee, null);
        }
        
        public void IsValidAdvancedPayeeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.AdvancedPayee AdvPayee, object userState) {
            if ((this.onBeginIsValidAdvancedPayeeDelegate == null)) {
                this.onBeginIsValidAdvancedPayeeDelegate = new BeginOperationDelegate(this.OnBeginIsValidAdvancedPayee);
            }
            if ((this.onEndIsValidAdvancedPayeeDelegate == null)) {
                this.onEndIsValidAdvancedPayeeDelegate = new EndOperationDelegate(this.OnEndIsValidAdvancedPayee);
            }
            if ((this.onIsValidAdvancedPayeeCompletedDelegate == null)) {
                this.onIsValidAdvancedPayeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidAdvancedPayeeCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidAdvancedPayeeDelegate, new object[] {
                        AdvPayee}, this.onEndIsValidAdvancedPayeeDelegate, this.onIsValidAdvancedPayeeCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPayee")]
    public interface IPayee {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayee/AddUpdatePayee", ReplyAction="http://tempuri.org/IPayee/AddUpdatePayeeResponse")]
        void AddUpdatePayee(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayee/AddUpdatePayee", ReplyAction="http://tempuri.org/IPayee/AddUpdatePayeeResponse")]
        System.IAsyncResult BeginAddUpdatePayee(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePayee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayee/DeletePayee", ReplyAction="http://tempuri.org/IPayee/DeletePayeeResponse")]
        void DeletePayee(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayee/DeletePayee", ReplyAction="http://tempuri.org/IPayee/DeletePayeeResponse")]
        System.IAsyncResult BeginDeletePayee(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePayee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayee/GetPayee", ReplyAction="http://tempuri.org/IPayee/GetPayeeResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Payee GetPayee();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayee/GetPayee", ReplyAction="http://tempuri.org/IPayee/GetPayeeResponse")]
        System.IAsyncResult BeginGetPayee(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Payee EndGetPayee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayee/IsValidPayee", ReplyAction="http://tempuri.org/IPayee/IsValidPayeeResponse")]
        bool IsValidPayee(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayee/IsValidPayee", ReplyAction="http://tempuri.org/IPayee/IsValidPayeeResponse")]
        System.IAsyncResult BeginIsValidPayee(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidPayee(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPayeeChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPayee, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Payee Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Payee)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidPayeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidPayeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayeeClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPayee>, MyAgencyVault.VM.MyAgencyVaultSvc.IPayee {
        
        private BeginOperationDelegate onBeginAddUpdatePayeeDelegate;
        
        private EndOperationDelegate onEndAddUpdatePayeeDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePayeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePayeeDelegate;
        
        private EndOperationDelegate onEndDeletePayeeDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePayeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayeeDelegate;
        
        private EndOperationDelegate onEndGetPayeeDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidPayeeDelegate;
        
        private EndOperationDelegate onEndIsValidPayeeDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidPayeeCompletedDelegate;
        
        public PayeeClient() {
        }
        
        public PayeeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PayeeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayeeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayeeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePayeeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePayeeCompleted;
        
        public event System.EventHandler<GetPayeeCompletedEventArgs> GetPayeeCompleted;
        
        public event System.EventHandler<IsValidPayeeCompletedEventArgs> IsValidPayeeCompleted;
        
        public void AddUpdatePayee(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee) {
            base.Channel.AddUpdatePayee(Pyee);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePayee(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePayee(Pyee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePayee(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePayee(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePayee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee = ((MyAgencyVault.VM.MyAgencyVaultSvc.Payee)(inValues[0]));
            return this.BeginAddUpdatePayee(Pyee, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePayee(System.IAsyncResult result) {
            this.EndAddUpdatePayee(result);
            return null;
        }
        
        private void OnAddUpdatePayeeCompleted(object state) {
            if ((this.AddUpdatePayeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePayeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePayeeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee) {
            this.AddUpdatePayeeAsync(Pyee, null);
        }
        
        public void AddUpdatePayeeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee, object userState) {
            if ((this.onBeginAddUpdatePayeeDelegate == null)) {
                this.onBeginAddUpdatePayeeDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePayee);
            }
            if ((this.onEndAddUpdatePayeeDelegate == null)) {
                this.onEndAddUpdatePayeeDelegate = new EndOperationDelegate(this.OnEndAddUpdatePayee);
            }
            if ((this.onAddUpdatePayeeCompletedDelegate == null)) {
                this.onAddUpdatePayeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePayeeCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePayeeDelegate, new object[] {
                        Pyee}, this.onEndAddUpdatePayeeDelegate, this.onAddUpdatePayeeCompletedDelegate, userState);
        }
        
        public void DeletePayee(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee) {
            base.Channel.DeletePayee(Pyee);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePayee(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePayee(Pyee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePayee(System.IAsyncResult result) {
            base.Channel.EndDeletePayee(result);
        }
        
        private System.IAsyncResult OnBeginDeletePayee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee = ((MyAgencyVault.VM.MyAgencyVaultSvc.Payee)(inValues[0]));
            return this.BeginDeletePayee(Pyee, callback, asyncState);
        }
        
        private object[] OnEndDeletePayee(System.IAsyncResult result) {
            this.EndDeletePayee(result);
            return null;
        }
        
        private void OnDeletePayeeCompleted(object state) {
            if ((this.DeletePayeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePayeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePayeeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee) {
            this.DeletePayeeAsync(Pyee, null);
        }
        
        public void DeletePayeeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee, object userState) {
            if ((this.onBeginDeletePayeeDelegate == null)) {
                this.onBeginDeletePayeeDelegate = new BeginOperationDelegate(this.OnBeginDeletePayee);
            }
            if ((this.onEndDeletePayeeDelegate == null)) {
                this.onEndDeletePayeeDelegate = new EndOperationDelegate(this.OnEndDeletePayee);
            }
            if ((this.onDeletePayeeCompletedDelegate == null)) {
                this.onDeletePayeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePayeeCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePayeeDelegate, new object[] {
                        Pyee}, this.onEndDeletePayeeDelegate, this.onDeletePayeeCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Payee GetPayee() {
            return base.Channel.GetPayee();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayee(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayee(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Payee EndGetPayee(System.IAsyncResult result) {
            return base.Channel.EndGetPayee(result);
        }
        
        private System.IAsyncResult OnBeginGetPayee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPayee(callback, asyncState);
        }
        
        private object[] OnEndGetPayee(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Payee retVal = this.EndGetPayee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayeeCompleted(object state) {
            if ((this.GetPayeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayeeCompleted(this, new GetPayeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayeeAsync() {
            this.GetPayeeAsync(null);
        }
        
        public void GetPayeeAsync(object userState) {
            if ((this.onBeginGetPayeeDelegate == null)) {
                this.onBeginGetPayeeDelegate = new BeginOperationDelegate(this.OnBeginGetPayee);
            }
            if ((this.onEndGetPayeeDelegate == null)) {
                this.onEndGetPayeeDelegate = new EndOperationDelegate(this.OnEndGetPayee);
            }
            if ((this.onGetPayeeCompletedDelegate == null)) {
                this.onGetPayeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayeeCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayeeDelegate, null, this.onEndGetPayeeDelegate, this.onGetPayeeCompletedDelegate, userState);
        }
        
        public bool IsValidPayee(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee) {
            return base.Channel.IsValidPayee(Pyee);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidPayee(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidPayee(Pyee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidPayee(System.IAsyncResult result) {
            return base.Channel.EndIsValidPayee(result);
        }
        
        private System.IAsyncResult OnBeginIsValidPayee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee = ((MyAgencyVault.VM.MyAgencyVaultSvc.Payee)(inValues[0]));
            return this.BeginIsValidPayee(Pyee, callback, asyncState);
        }
        
        private object[] OnEndIsValidPayee(System.IAsyncResult result) {
            bool retVal = this.EndIsValidPayee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidPayeeCompleted(object state) {
            if ((this.IsValidPayeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidPayeeCompleted(this, new IsValidPayeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidPayeeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee) {
            this.IsValidPayeeAsync(Pyee, null);
        }
        
        public void IsValidPayeeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Payee Pyee, object userState) {
            if ((this.onBeginIsValidPayeeDelegate == null)) {
                this.onBeginIsValidPayeeDelegate = new BeginOperationDelegate(this.OnBeginIsValidPayee);
            }
            if ((this.onEndIsValidPayeeDelegate == null)) {
                this.onEndIsValidPayeeDelegate = new EndOperationDelegate(this.OnEndIsValidPayee);
            }
            if ((this.onIsValidPayeeCompletedDelegate == null)) {
                this.onIsValidPayeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidPayeeCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidPayeeDelegate, new object[] {
                        Pyee}, this.onEndIsValidPayeeDelegate, this.onIsValidPayeeCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IGlobalPayorContact")]
    public interface IGlobalPayorContact {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalPayorContact/AddUpdateGlobalPayorContact", ReplyAction="http://tempuri.org/IGlobalPayorContact/AddUpdateGlobalPayorContactResponse")]
        void AddUpdateGlobalPayorContact(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGlobalPayorContact/AddUpdateGlobalPayorContact", ReplyAction="http://tempuri.org/IGlobalPayorContact/AddUpdateGlobalPayorContactResponse")]
        System.IAsyncResult BeginAddUpdateGlobalPayorContact(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateGlobalPayorContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalPayorContact/DeleteGlobalPayorContact", ReplyAction="http://tempuri.org/IGlobalPayorContact/DeleteGlobalPayorContactResponse")]
        void DeleteGlobalPayorContact(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGlobalPayorContact/DeleteGlobalPayorContact", ReplyAction="http://tempuri.org/IGlobalPayorContact/DeleteGlobalPayorContactResponse")]
        System.IAsyncResult BeginDeleteGlobalPayorContact(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteGlobalPayorContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalPayorContact/GetGlobalPayorContact", ReplyAction="http://tempuri.org/IGlobalPayorContact/GetGlobalPayorContactResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact GetGlobalPayorContact(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGlobalPayorContact/GetGlobalPayorContact", ReplyAction="http://tempuri.org/IGlobalPayorContact/GetGlobalPayorContactResponse")]
        System.IAsyncResult BeginGetGlobalPayorContact(System.Guid id, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact EndGetGlobalPayorContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalPayorContact/IsValidGlobalPayorContact", ReplyAction="http://tempuri.org/IGlobalPayorContact/IsValidGlobalPayorContactResponse")]
        bool IsValidGlobalPayorContact(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGlobalPayorContact/IsValidGlobalPayorContact", ReplyAction="http://tempuri.org/IGlobalPayorContact/IsValidGlobalPayorContactResponse")]
        System.IAsyncResult BeginIsValidGlobalPayorContact(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidGlobalPayorContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalPayorContact/getContacts", ReplyAction="http://tempuri.org/IGlobalPayorContact/getContactsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact> getContacts(System.Guid PayorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGlobalPayorContact/getContacts", ReplyAction="http://tempuri.org/IGlobalPayorContact/getContactsResponse")]
        System.IAsyncResult BegingetContacts(System.Guid PayorId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact> EndgetContacts(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGlobalPayorContactChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IGlobalPayorContact, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGlobalPayorContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGlobalPayorContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidGlobalPayorContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidGlobalPayorContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GlobalPayorContactClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IGlobalPayorContact>, MyAgencyVault.VM.MyAgencyVaultSvc.IGlobalPayorContact {
        
        private BeginOperationDelegate onBeginAddUpdateGlobalPayorContactDelegate;
        
        private EndOperationDelegate onEndAddUpdateGlobalPayorContactDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateGlobalPayorContactCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteGlobalPayorContactDelegate;
        
        private EndOperationDelegate onEndDeleteGlobalPayorContactDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteGlobalPayorContactCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGlobalPayorContactDelegate;
        
        private EndOperationDelegate onEndGetGlobalPayorContactDelegate;
        
        private System.Threading.SendOrPostCallback onGetGlobalPayorContactCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidGlobalPayorContactDelegate;
        
        private EndOperationDelegate onEndIsValidGlobalPayorContactDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidGlobalPayorContactCompletedDelegate;
        
        private BeginOperationDelegate onBegingetContactsDelegate;
        
        private EndOperationDelegate onEndgetContactsDelegate;
        
        private System.Threading.SendOrPostCallback ongetContactsCompletedDelegate;
        
        public GlobalPayorContactClient() {
        }
        
        public GlobalPayorContactClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GlobalPayorContactClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GlobalPayorContactClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GlobalPayorContactClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateGlobalPayorContactCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteGlobalPayorContactCompleted;
        
        public event System.EventHandler<GetGlobalPayorContactCompletedEventArgs> GetGlobalPayorContactCompleted;
        
        public event System.EventHandler<IsValidGlobalPayorContactCompletedEventArgs> IsValidGlobalPayorContactCompleted;
        
        public event System.EventHandler<getContactsCompletedEventArgs> getContactsCompleted;
        
        public void AddUpdateGlobalPayorContact(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc) {
            base.Channel.AddUpdateGlobalPayorContact(gpc);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateGlobalPayorContact(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateGlobalPayorContact(gpc, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateGlobalPayorContact(System.IAsyncResult result) {
            base.Channel.EndAddUpdateGlobalPayorContact(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateGlobalPayorContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc = ((MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact)(inValues[0]));
            return this.BeginAddUpdateGlobalPayorContact(gpc, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateGlobalPayorContact(System.IAsyncResult result) {
            this.EndAddUpdateGlobalPayorContact(result);
            return null;
        }
        
        private void OnAddUpdateGlobalPayorContactCompleted(object state) {
            if ((this.AddUpdateGlobalPayorContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateGlobalPayorContactCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateGlobalPayorContactAsync(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc) {
            this.AddUpdateGlobalPayorContactAsync(gpc, null);
        }
        
        public void AddUpdateGlobalPayorContactAsync(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc, object userState) {
            if ((this.onBeginAddUpdateGlobalPayorContactDelegate == null)) {
                this.onBeginAddUpdateGlobalPayorContactDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateGlobalPayorContact);
            }
            if ((this.onEndAddUpdateGlobalPayorContactDelegate == null)) {
                this.onEndAddUpdateGlobalPayorContactDelegate = new EndOperationDelegate(this.OnEndAddUpdateGlobalPayorContact);
            }
            if ((this.onAddUpdateGlobalPayorContactCompletedDelegate == null)) {
                this.onAddUpdateGlobalPayorContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateGlobalPayorContactCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateGlobalPayorContactDelegate, new object[] {
                        gpc}, this.onEndAddUpdateGlobalPayorContactDelegate, this.onAddUpdateGlobalPayorContactCompletedDelegate, userState);
        }
        
        public void DeleteGlobalPayorContact(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc) {
            base.Channel.DeleteGlobalPayorContact(gpc);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteGlobalPayorContact(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteGlobalPayorContact(gpc, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteGlobalPayorContact(System.IAsyncResult result) {
            base.Channel.EndDeleteGlobalPayorContact(result);
        }
        
        private System.IAsyncResult OnBeginDeleteGlobalPayorContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc = ((MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact)(inValues[0]));
            return this.BeginDeleteGlobalPayorContact(gpc, callback, asyncState);
        }
        
        private object[] OnEndDeleteGlobalPayorContact(System.IAsyncResult result) {
            this.EndDeleteGlobalPayorContact(result);
            return null;
        }
        
        private void OnDeleteGlobalPayorContactCompleted(object state) {
            if ((this.DeleteGlobalPayorContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteGlobalPayorContactCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteGlobalPayorContactAsync(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc) {
            this.DeleteGlobalPayorContactAsync(gpc, null);
        }
        
        public void DeleteGlobalPayorContactAsync(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc, object userState) {
            if ((this.onBeginDeleteGlobalPayorContactDelegate == null)) {
                this.onBeginDeleteGlobalPayorContactDelegate = new BeginOperationDelegate(this.OnBeginDeleteGlobalPayorContact);
            }
            if ((this.onEndDeleteGlobalPayorContactDelegate == null)) {
                this.onEndDeleteGlobalPayorContactDelegate = new EndOperationDelegate(this.OnEndDeleteGlobalPayorContact);
            }
            if ((this.onDeleteGlobalPayorContactCompletedDelegate == null)) {
                this.onDeleteGlobalPayorContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteGlobalPayorContactCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteGlobalPayorContactDelegate, new object[] {
                        gpc}, this.onEndDeleteGlobalPayorContactDelegate, this.onDeleteGlobalPayorContactCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact GetGlobalPayorContact(System.Guid id) {
            return base.Channel.GetGlobalPayorContact(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetGlobalPayorContact(System.Guid id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGlobalPayorContact(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact EndGetGlobalPayorContact(System.IAsyncResult result) {
            return base.Channel.EndGetGlobalPayorContact(result);
        }
        
        private System.IAsyncResult OnBeginGetGlobalPayorContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid id = ((System.Guid)(inValues[0]));
            return this.BeginGetGlobalPayorContact(id, callback, asyncState);
        }
        
        private object[] OnEndGetGlobalPayorContact(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact retVal = this.EndGetGlobalPayorContact(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGlobalPayorContactCompleted(object state) {
            if ((this.GetGlobalPayorContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGlobalPayorContactCompleted(this, new GetGlobalPayorContactCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGlobalPayorContactAsync(System.Guid id) {
            this.GetGlobalPayorContactAsync(id, null);
        }
        
        public void GetGlobalPayorContactAsync(System.Guid id, object userState) {
            if ((this.onBeginGetGlobalPayorContactDelegate == null)) {
                this.onBeginGetGlobalPayorContactDelegate = new BeginOperationDelegate(this.OnBeginGetGlobalPayorContact);
            }
            if ((this.onEndGetGlobalPayorContactDelegate == null)) {
                this.onEndGetGlobalPayorContactDelegate = new EndOperationDelegate(this.OnEndGetGlobalPayorContact);
            }
            if ((this.onGetGlobalPayorContactCompletedDelegate == null)) {
                this.onGetGlobalPayorContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGlobalPayorContactCompleted);
            }
            base.InvokeAsync(this.onBeginGetGlobalPayorContactDelegate, new object[] {
                        id}, this.onEndGetGlobalPayorContactDelegate, this.onGetGlobalPayorContactCompletedDelegate, userState);
        }
        
        public bool IsValidGlobalPayorContact(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc) {
            return base.Channel.IsValidGlobalPayorContact(gpc);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidGlobalPayorContact(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidGlobalPayorContact(gpc, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidGlobalPayorContact(System.IAsyncResult result) {
            return base.Channel.EndIsValidGlobalPayorContact(result);
        }
        
        private System.IAsyncResult OnBeginIsValidGlobalPayorContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc = ((MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact)(inValues[0]));
            return this.BeginIsValidGlobalPayorContact(gpc, callback, asyncState);
        }
        
        private object[] OnEndIsValidGlobalPayorContact(System.IAsyncResult result) {
            bool retVal = this.EndIsValidGlobalPayorContact(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidGlobalPayorContactCompleted(object state) {
            if ((this.IsValidGlobalPayorContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidGlobalPayorContactCompleted(this, new IsValidGlobalPayorContactCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidGlobalPayorContactAsync(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc) {
            this.IsValidGlobalPayorContactAsync(gpc, null);
        }
        
        public void IsValidGlobalPayorContactAsync(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact gpc, object userState) {
            if ((this.onBeginIsValidGlobalPayorContactDelegate == null)) {
                this.onBeginIsValidGlobalPayorContactDelegate = new BeginOperationDelegate(this.OnBeginIsValidGlobalPayorContact);
            }
            if ((this.onEndIsValidGlobalPayorContactDelegate == null)) {
                this.onEndIsValidGlobalPayorContactDelegate = new EndOperationDelegate(this.OnEndIsValidGlobalPayorContact);
            }
            if ((this.onIsValidGlobalPayorContactCompletedDelegate == null)) {
                this.onIsValidGlobalPayorContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidGlobalPayorContactCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidGlobalPayorContactDelegate, new object[] {
                        gpc}, this.onEndIsValidGlobalPayorContactDelegate, this.onIsValidGlobalPayorContactCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact> getContacts(System.Guid PayorId) {
            return base.Channel.getContacts(PayorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetContacts(System.Guid PayorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetContacts(PayorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact> EndgetContacts(System.IAsyncResult result) {
            return base.Channel.EndgetContacts(result);
        }
        
        private System.IAsyncResult OnBegingetContacts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            return this.BegingetContacts(PayorId, callback, asyncState);
        }
        
        private object[] OnEndgetContacts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.GlobalPayorContact> retVal = this.EndgetContacts(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetContactsCompleted(object state) {
            if ((this.getContactsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getContactsCompleted(this, new getContactsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getContactsAsync(System.Guid PayorId) {
            this.getContactsAsync(PayorId, null);
        }
        
        public void getContactsAsync(System.Guid PayorId, object userState) {
            if ((this.onBegingetContactsDelegate == null)) {
                this.onBegingetContactsDelegate = new BeginOperationDelegate(this.OnBegingetContacts);
            }
            if ((this.onEndgetContactsDelegate == null)) {
                this.onEndgetContactsDelegate = new EndOperationDelegate(this.OnEndgetContacts);
            }
            if ((this.ongetContactsCompletedDelegate == null)) {
                this.ongetContactsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetContactsCompleted);
            }
            base.InvokeAsync(this.onBegingetContactsDelegate, new object[] {
                        PayorId}, this.onEndgetContactsDelegate, this.ongetContactsCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IBatch")]
    public interface IBatch {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/AddUpdateIBatch", ReplyAction="http://tempuri.org/IBatch/AddUpdateIBatchResponse")]
        int AddUpdateIBatch(MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/AddUpdateIBatch", ReplyAction="http://tempuri.org/IBatch/AddUpdateIBatchResponse")]
        System.IAsyncResult BeginAddUpdateIBatch(MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch, System.AsyncCallback callback, object asyncState);
        
        int EndAddUpdateIBatch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/AddUpdateBatchWithBatchOutput", ReplyAction="http://tempuri.org/IBatch/AddUpdateBatchWithBatchOutputResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.BatchAddOutput AddUpdateBatchWithBatchOutput(MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/AddUpdateBatchWithBatchOutput", ReplyAction="http://tempuri.org/IBatch/AddUpdateBatchWithBatchOutputResponse")]
        System.IAsyncResult BeginAddUpdateBatchWithBatchOutput(MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.BatchAddOutput EndAddUpdateBatchWithBatchOutput(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/DeleteBatch", ReplyAction="http://tempuri.org/IBatch/DeleteBatchResponse")]
        bool DeleteBatch(System.Guid BatchId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/DeleteBatch", ReplyAction="http://tempuri.org/IBatch/DeleteBatchResponse")]
        System.IAsyncResult BeginDeleteBatch(System.Guid BatchId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteBatch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/AddUpdateBatchNote", ReplyAction="http://tempuri.org/IBatch/AddUpdateBatchNoteResponse")]
        void AddUpdateBatchNote(int BatchNumber, string BatchNote);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/AddUpdateBatchNote", ReplyAction="http://tempuri.org/IBatch/AddUpdateBatchNoteResponse")]
        System.IAsyncResult BeginAddUpdateBatchNote(int BatchNumber, string BatchNote, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateBatchNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/GetBatchesForReportManager", ReplyAction="http://tempuri.org/IBatch/GetBatchesForReportManagerResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> GetBatchesForReportManager();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/GetBatchesForReportManager", ReplyAction="http://tempuri.org/IBatch/GetBatchesForReportManagerResponse")]
        System.IAsyncResult BeginGetBatchesForReportManager(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> EndGetBatchesForReportManager(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/GetAllBatchForReportManagerForAllLicensee", ReplyAction="http://tempuri.org/IBatch/GetAllBatchForReportManagerForAllLicenseeResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> GetAllBatchForReportManagerForAllLicensee();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/GetAllBatchForReportManagerForAllLicensee", ReplyAction="http://tempuri.org/IBatch/GetAllBatchForReportManagerForAllLicenseeResponse")]
        System.IAsyncResult BeginGetAllBatchForReportManagerForAllLicensee(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> EndGetAllBatchForReportManagerForAllLicensee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/GetBatchForReportManagerByLicenssID", ReplyAction="http://tempuri.org/IBatch/GetBatchForReportManagerByLicenssIDResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> GetBatchForReportManagerByLicenssID(System.Guid LicenseID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/GetBatchForReportManagerByLicenssID", ReplyAction="http://tempuri.org/IBatch/GetBatchForReportManagerByLicenssIDResponse")]
        System.IAsyncResult BeginGetBatchForReportManagerByLicenssID(System.Guid LicenseID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> EndGetBatchForReportManagerByLicenssID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/GetBatchesForDeuEntries", ReplyAction="http://tempuri.org/IBatch/GetBatchesForDeuEntriesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> GetBatchesForDeuEntries();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/GetBatchesForDeuEntries", ReplyAction="http://tempuri.org/IBatch/GetBatchesForDeuEntriesResponse")]
        System.IAsyncResult BeginGetBatchesForDeuEntries(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> EndGetBatchesForDeuEntries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/GetCurrentBatch", ReplyAction="http://tempuri.org/IBatch/GetCurrentBatchResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> GetCurrentBatch(System.Guid licenceID, System.DateTime CreatedOn);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/GetCurrentBatch", ReplyAction="http://tempuri.org/IBatch/GetCurrentBatchResponse")]
        System.IAsyncResult BeginGetCurrentBatch(System.Guid licenceID, System.DateTime CreatedOn, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> EndGetCurrentBatch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/GetBatchesForReportManagerByLicID", ReplyAction="http://tempuri.org/IBatch/GetBatchesForReportManagerByLicIDResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> GetBatchesForReportManagerByLicID(System.Guid licenceID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/GetBatchesForReportManagerByLicID", ReplyAction="http://tempuri.org/IBatch/GetBatchesForReportManagerByLicIDResponse")]
        System.IAsyncResult BeginGetBatchesForReportManagerByLicID(System.Guid licenceID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> EndGetBatchesForReportManagerByLicID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/ClearDownloadStatus", ReplyAction="http://tempuri.org/IBatch/ClearDownloadStatusResponse")]
        void ClearDownloadStatus();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/ClearDownloadStatus", ReplyAction="http://tempuri.org/IBatch/ClearDownloadStatusResponse")]
        System.IAsyncResult BeginClearDownloadStatus(System.AsyncCallback callback, object asyncState);
        
        void EndClearDownloadStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/LaunchWebSite", ReplyAction="http://tempuri.org/IBatch/LaunchWebSiteResponse")]
        void LaunchWebSite();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/LaunchWebSite", ReplyAction="http://tempuri.org/IBatch/LaunchWebSiteResponse")]
        System.IAsyncResult BeginLaunchWebSite(System.AsyncCallback callback, object asyncState);
        
        void EndLaunchWebSite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/CloseBatch", ReplyAction="http://tempuri.org/IBatch/CloseBatchResponse")]
        bool CloseBatch(MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/CloseBatch", ReplyAction="http://tempuri.org/IBatch/CloseBatchResponse")]
        System.IAsyncResult BeginCloseBatch(MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch, System.AsyncCallback callback, object asyncState);
        
        bool EndCloseBatch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/OpenBatch", ReplyAction="http://tempuri.org/IBatch/OpenBatchResponse")]
        bool OpenBatch(int intBatchNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/OpenBatch", ReplyAction="http://tempuri.org/IBatch/OpenBatchResponse")]
        System.IAsyncResult BeginOpenBatch(int intBatchNumber, System.AsyncCallback callback, object asyncState);
        
        bool EndOpenBatch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/BatchName", ReplyAction="http://tempuri.org/IBatch/BatchNameResponse")]
        string BatchName(int intBatchnumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/BatchName", ReplyAction="http://tempuri.org/IBatch/BatchNameResponse")]
        System.IAsyncResult BeginBatchName(int intBatchnumber, System.AsyncCallback callback, object asyncState);
        
        string EndBatchName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/GetCheckAmount", ReplyAction="http://tempuri.org/IBatch/GetCheckAmountResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> GetCheckAmount(System.Nullable<System.Guid> BatchID, System.Nullable<System.Guid> PayorID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/GetCheckAmount", ReplyAction="http://tempuri.org/IBatch/GetCheckAmountResponse")]
        System.IAsyncResult BeginGetCheckAmount(System.Nullable<System.Guid> BatchID, System.Nullable<System.Guid> PayorID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> EndGetCheckAmount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/BatchNameById", ReplyAction="http://tempuri.org/IBatch/BatchNameByIdResponse")]
        string BatchNameById(System.Guid BatchID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/BatchNameById", ReplyAction="http://tempuri.org/IBatch/BatchNameByIdResponse")]
        System.IAsyncResult BeginBatchNameById(System.Guid BatchID, System.AsyncCallback callback, object asyncState);
        
        string EndBatchNameById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/ViewBatchFile", ReplyAction="http://tempuri.org/IBatch/ViewBatchFileResponse")]
        void ViewBatchFile(string FilePath, string FileType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/ViewBatchFile", ReplyAction="http://tempuri.org/IBatch/ViewBatchFileResponse")]
        System.IAsyncResult BeginViewBatchFile(string FilePath, string FileType, System.AsyncCallback callback, object asyncState);
        
        void EndViewBatchFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/UploadBatchOfLocalPayor", ReplyAction="http://tempuri.org/IBatch/UploadBatchOfLocalPayorResponse")]
        void UploadBatchOfLocalPayor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/UploadBatchOfLocalPayor", ReplyAction="http://tempuri.org/IBatch/UploadBatchOfLocalPayorResponse")]
        System.IAsyncResult BeginUploadBatchOfLocalPayor(System.AsyncCallback callback, object asyncState);
        
        void EndUploadBatchOfLocalPayor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/GetBatchStatementList", ReplyAction="http://tempuri.org/IBatch/GetBatchStatementListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> GetBatchStatementList(MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/GetBatchStatementList", ReplyAction="http://tempuri.org/IBatch/GetBatchStatementListResponse")]
        System.IAsyncResult BeginGetBatchStatementList(MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> EndGetBatchStatementList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/ExportBatch", ReplyAction="http://tempuri.org/IBatch/ExportBatchResponse")]
        void ExportBatch();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/ExportBatch", ReplyAction="http://tempuri.org/IBatch/ExportBatchResponse")]
        System.IAsyncResult BeginExportBatch(System.AsyncCallback callback, object asyncState);
        
        void EndExportBatch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/GetBatchPaidStatus", ReplyAction="http://tempuri.org/IBatch/GetBatchPaidStatusResponse")]
        bool GetBatchPaidStatus(System.Guid BatchId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/GetBatchPaidStatus", ReplyAction="http://tempuri.org/IBatch/GetBatchPaidStatusResponse")]
        System.IAsyncResult BeginGetBatchPaidStatus(System.Guid BatchId, System.AsyncCallback callback, object asyncState);
        
        bool EndGetBatchPaidStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/SetBatchesAsPaid", ReplyAction="http://tempuri.org/IBatch/SetBatchesAsPaidResponse")]
        bool SetBatchesAsPaid(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/SetBatchesAsPaid", ReplyAction="http://tempuri.org/IBatch/SetBatchesAsPaidResponse")]
        System.IAsyncResult BeginSetBatchesAsPaid(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, System.AsyncCallback callback, object asyncState);
        
        bool EndSetBatchesAsPaid(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/SetBatchToUnPaidStatus", ReplyAction="http://tempuri.org/IBatch/SetBatchToUnPaidStatusResponse")]
        bool SetBatchToUnPaidStatus(int BatchNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/SetBatchToUnPaidStatus", ReplyAction="http://tempuri.org/IBatch/SetBatchToUnPaidStatusResponse")]
        System.IAsyncResult BeginSetBatchToUnPaidStatus(int BatchNumber, System.AsyncCallback callback, object asyncState);
        
        bool EndSetBatchToUnPaidStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/SetBatchesToPaid", ReplyAction="http://tempuri.org/IBatch/SetBatchesToPaidResponse")]
        bool SetBatchesToPaid(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, string strFilter, System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/SetBatchesToPaid", ReplyAction="http://tempuri.org/IBatch/SetBatchesToPaidResponse")]
        System.IAsyncResult BeginSetBatchesToPaid(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, string strFilter, System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee, System.AsyncCallback callback, object asyncState);
        
        bool EndSetBatchesToPaid(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/SetBatchesToPaidInReports", ReplyAction="http://tempuri.org/IBatch/SetBatchesToPaidInReportsResponse")]
        string SetBatchesToPaidInReports(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, string strFilter, System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/SetBatchesToPaidInReports", ReplyAction="http://tempuri.org/IBatch/SetBatchesToPaidInReportsResponse")]
        System.IAsyncResult BeginSetBatchesToPaidInReports(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, string strFilter, System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee, System.AsyncCallback callback, object asyncState);
        
        string EndSetBatchesToPaidInReports(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatch/UpdateBatchFileName", ReplyAction="http://tempuri.org/IBatch/UpdateBatchFileNameResponse")]
        void UpdateBatchFileName(int intBatchNumber, string strFileName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatch/UpdateBatchFileName", ReplyAction="http://tempuri.org/IBatch/UpdateBatchFileNameResponse")]
        System.IAsyncResult BeginUpdateBatchFileName(int intBatchNumber, string strFileName, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateBatchFileName(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBatchChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IBatch, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdateIBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdateIBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdateBatchWithBatchOutputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdateBatchWithBatchOutputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.BatchAddOutput Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.BatchAddOutput)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBatchesForReportManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBatchesForReportManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllBatchForReportManagerForAllLicenseeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllBatchForReportManagerForAllLicenseeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBatchForReportManagerByLicenssIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBatchForReportManagerByLicenssIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBatchesForDeuEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBatchesForDeuEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBatchesForReportManagerByLicIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBatchesForReportManagerByLicIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloseBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CloseBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpenBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OpenBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BatchNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCheckAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCheckAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchNameByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BatchNameByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBatchStatementListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBatchStatementListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBatchPaidStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBatchPaidStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetBatchesAsPaidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetBatchesAsPaidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetBatchToUnPaidStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetBatchToUnPaidStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetBatchesToPaidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetBatchesToPaidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetBatchesToPaidInReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetBatchesToPaidInReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IBatch>, MyAgencyVault.VM.MyAgencyVaultSvc.IBatch {
        
        private BeginOperationDelegate onBeginAddUpdateIBatchDelegate;
        
        private EndOperationDelegate onEndAddUpdateIBatchDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateIBatchCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateBatchWithBatchOutputDelegate;
        
        private EndOperationDelegate onEndAddUpdateBatchWithBatchOutputDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateBatchWithBatchOutputCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteBatchDelegate;
        
        private EndOperationDelegate onEndDeleteBatchDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteBatchCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateBatchNoteDelegate;
        
        private EndOperationDelegate onEndAddUpdateBatchNoteDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateBatchNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBatchesForReportManagerDelegate;
        
        private EndOperationDelegate onEndGetBatchesForReportManagerDelegate;
        
        private System.Threading.SendOrPostCallback onGetBatchesForReportManagerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllBatchForReportManagerForAllLicenseeDelegate;
        
        private EndOperationDelegate onEndGetAllBatchForReportManagerForAllLicenseeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllBatchForReportManagerForAllLicenseeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBatchForReportManagerByLicenssIDDelegate;
        
        private EndOperationDelegate onEndGetBatchForReportManagerByLicenssIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetBatchForReportManagerByLicenssIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBatchesForDeuEntriesDelegate;
        
        private EndOperationDelegate onEndGetBatchesForDeuEntriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetBatchesForDeuEntriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentBatchDelegate;
        
        private EndOperationDelegate onEndGetCurrentBatchDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentBatchCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBatchesForReportManagerByLicIDDelegate;
        
        private EndOperationDelegate onEndGetBatchesForReportManagerByLicIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetBatchesForReportManagerByLicIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearDownloadStatusDelegate;
        
        private EndOperationDelegate onEndClearDownloadStatusDelegate;
        
        private System.Threading.SendOrPostCallback onClearDownloadStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginLaunchWebSiteDelegate;
        
        private EndOperationDelegate onEndLaunchWebSiteDelegate;
        
        private System.Threading.SendOrPostCallback onLaunchWebSiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseBatchDelegate;
        
        private EndOperationDelegate onEndCloseBatchDelegate;
        
        private System.Threading.SendOrPostCallback onCloseBatchCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenBatchDelegate;
        
        private EndOperationDelegate onEndOpenBatchDelegate;
        
        private System.Threading.SendOrPostCallback onOpenBatchCompletedDelegate;
        
        private BeginOperationDelegate onBeginBatchNameDelegate;
        
        private EndOperationDelegate onEndBatchNameDelegate;
        
        private System.Threading.SendOrPostCallback onBatchNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCheckAmountDelegate;
        
        private EndOperationDelegate onEndGetCheckAmountDelegate;
        
        private System.Threading.SendOrPostCallback onGetCheckAmountCompletedDelegate;
        
        private BeginOperationDelegate onBeginBatchNameByIdDelegate;
        
        private EndOperationDelegate onEndBatchNameByIdDelegate;
        
        private System.Threading.SendOrPostCallback onBatchNameByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginViewBatchFileDelegate;
        
        private EndOperationDelegate onEndViewBatchFileDelegate;
        
        private System.Threading.SendOrPostCallback onViewBatchFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadBatchOfLocalPayorDelegate;
        
        private EndOperationDelegate onEndUploadBatchOfLocalPayorDelegate;
        
        private System.Threading.SendOrPostCallback onUploadBatchOfLocalPayorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBatchStatementListDelegate;
        
        private EndOperationDelegate onEndGetBatchStatementListDelegate;
        
        private System.Threading.SendOrPostCallback onGetBatchStatementListCompletedDelegate;
        
        private BeginOperationDelegate onBeginExportBatchDelegate;
        
        private EndOperationDelegate onEndExportBatchDelegate;
        
        private System.Threading.SendOrPostCallback onExportBatchCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBatchPaidStatusDelegate;
        
        private EndOperationDelegate onEndGetBatchPaidStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetBatchPaidStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetBatchesAsPaidDelegate;
        
        private EndOperationDelegate onEndSetBatchesAsPaidDelegate;
        
        private System.Threading.SendOrPostCallback onSetBatchesAsPaidCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetBatchToUnPaidStatusDelegate;
        
        private EndOperationDelegate onEndSetBatchToUnPaidStatusDelegate;
        
        private System.Threading.SendOrPostCallback onSetBatchToUnPaidStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetBatchesToPaidDelegate;
        
        private EndOperationDelegate onEndSetBatchesToPaidDelegate;
        
        private System.Threading.SendOrPostCallback onSetBatchesToPaidCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetBatchesToPaidInReportsDelegate;
        
        private EndOperationDelegate onEndSetBatchesToPaidInReportsDelegate;
        
        private System.Threading.SendOrPostCallback onSetBatchesToPaidInReportsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateBatchFileNameDelegate;
        
        private EndOperationDelegate onEndUpdateBatchFileNameDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateBatchFileNameCompletedDelegate;
        
        public BatchClient() {
        }
        
        public BatchClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BatchClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BatchClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BatchClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<AddUpdateIBatchCompletedEventArgs> AddUpdateIBatchCompleted;
        
        public event System.EventHandler<AddUpdateBatchWithBatchOutputCompletedEventArgs> AddUpdateBatchWithBatchOutputCompleted;
        
        public event System.EventHandler<DeleteBatchCompletedEventArgs> DeleteBatchCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateBatchNoteCompleted;
        
        public event System.EventHandler<GetBatchesForReportManagerCompletedEventArgs> GetBatchesForReportManagerCompleted;
        
        public event System.EventHandler<GetAllBatchForReportManagerForAllLicenseeCompletedEventArgs> GetAllBatchForReportManagerForAllLicenseeCompleted;
        
        public event System.EventHandler<GetBatchForReportManagerByLicenssIDCompletedEventArgs> GetBatchForReportManagerByLicenssIDCompleted;
        
        public event System.EventHandler<GetBatchesForDeuEntriesCompletedEventArgs> GetBatchesForDeuEntriesCompleted;
        
        public event System.EventHandler<GetCurrentBatchCompletedEventArgs> GetCurrentBatchCompleted;
        
        public event System.EventHandler<GetBatchesForReportManagerByLicIDCompletedEventArgs> GetBatchesForReportManagerByLicIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ClearDownloadStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LaunchWebSiteCompleted;
        
        public event System.EventHandler<CloseBatchCompletedEventArgs> CloseBatchCompleted;
        
        public event System.EventHandler<OpenBatchCompletedEventArgs> OpenBatchCompleted;
        
        public event System.EventHandler<BatchNameCompletedEventArgs> BatchNameCompleted;
        
        public event System.EventHandler<GetCheckAmountCompletedEventArgs> GetCheckAmountCompleted;
        
        public event System.EventHandler<BatchNameByIdCompletedEventArgs> BatchNameByIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ViewBatchFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadBatchOfLocalPayorCompleted;
        
        public event System.EventHandler<GetBatchStatementListCompletedEventArgs> GetBatchStatementListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ExportBatchCompleted;
        
        public event System.EventHandler<GetBatchPaidStatusCompletedEventArgs> GetBatchPaidStatusCompleted;
        
        public event System.EventHandler<SetBatchesAsPaidCompletedEventArgs> SetBatchesAsPaidCompleted;
        
        public event System.EventHandler<SetBatchToUnPaidStatusCompletedEventArgs> SetBatchToUnPaidStatusCompleted;
        
        public event System.EventHandler<SetBatchesToPaidCompletedEventArgs> SetBatchesToPaidCompleted;
        
        public event System.EventHandler<SetBatchesToPaidInReportsCompletedEventArgs> SetBatchesToPaidInReportsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateBatchFileNameCompleted;
        
        public int AddUpdateIBatch(MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch) {
            return base.Channel.AddUpdateIBatch(Btch);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateIBatch(MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateIBatch(Btch, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddUpdateIBatch(System.IAsyncResult result) {
            return base.Channel.EndAddUpdateIBatch(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateIBatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch = ((MyAgencyVault.VM.MyAgencyVaultSvc.Batch)(inValues[0]));
            return this.BeginAddUpdateIBatch(Btch, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateIBatch(System.IAsyncResult result) {
            int retVal = this.EndAddUpdateIBatch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdateIBatchCompleted(object state) {
            if ((this.AddUpdateIBatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateIBatchCompleted(this, new AddUpdateIBatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateIBatchAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch) {
            this.AddUpdateIBatchAsync(Btch, null);
        }
        
        public void AddUpdateIBatchAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch, object userState) {
            if ((this.onBeginAddUpdateIBatchDelegate == null)) {
                this.onBeginAddUpdateIBatchDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateIBatch);
            }
            if ((this.onEndAddUpdateIBatchDelegate == null)) {
                this.onEndAddUpdateIBatchDelegate = new EndOperationDelegate(this.OnEndAddUpdateIBatch);
            }
            if ((this.onAddUpdateIBatchCompletedDelegate == null)) {
                this.onAddUpdateIBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateIBatchCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateIBatchDelegate, new object[] {
                        Btch}, this.onEndAddUpdateIBatchDelegate, this.onAddUpdateIBatchCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.BatchAddOutput AddUpdateBatchWithBatchOutput(MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch) {
            return base.Channel.AddUpdateBatchWithBatchOutput(batch);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateBatchWithBatchOutput(MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateBatchWithBatchOutput(batch, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.BatchAddOutput EndAddUpdateBatchWithBatchOutput(System.IAsyncResult result) {
            return base.Channel.EndAddUpdateBatchWithBatchOutput(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateBatchWithBatchOutput(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch = ((MyAgencyVault.VM.MyAgencyVaultSvc.Batch)(inValues[0]));
            return this.BeginAddUpdateBatchWithBatchOutput(batch, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateBatchWithBatchOutput(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.BatchAddOutput retVal = this.EndAddUpdateBatchWithBatchOutput(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdateBatchWithBatchOutputCompleted(object state) {
            if ((this.AddUpdateBatchWithBatchOutputCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateBatchWithBatchOutputCompleted(this, new AddUpdateBatchWithBatchOutputCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateBatchWithBatchOutputAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch) {
            this.AddUpdateBatchWithBatchOutputAsync(batch, null);
        }
        
        public void AddUpdateBatchWithBatchOutputAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch, object userState) {
            if ((this.onBeginAddUpdateBatchWithBatchOutputDelegate == null)) {
                this.onBeginAddUpdateBatchWithBatchOutputDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateBatchWithBatchOutput);
            }
            if ((this.onEndAddUpdateBatchWithBatchOutputDelegate == null)) {
                this.onEndAddUpdateBatchWithBatchOutputDelegate = new EndOperationDelegate(this.OnEndAddUpdateBatchWithBatchOutput);
            }
            if ((this.onAddUpdateBatchWithBatchOutputCompletedDelegate == null)) {
                this.onAddUpdateBatchWithBatchOutputCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateBatchWithBatchOutputCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateBatchWithBatchOutputDelegate, new object[] {
                        batch}, this.onEndAddUpdateBatchWithBatchOutputDelegate, this.onAddUpdateBatchWithBatchOutputCompletedDelegate, userState);
        }
        
        public bool DeleteBatch(System.Guid BatchId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            return base.Channel.DeleteBatch(BatchId, _UserRole);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteBatch(System.Guid BatchId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteBatch(BatchId, _UserRole, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteBatch(System.IAsyncResult result) {
            return base.Channel.EndDeleteBatch(result);
        }
        
        private System.IAsyncResult OnBeginDeleteBatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid BatchId = ((System.Guid)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[1]));
            return this.BeginDeleteBatch(BatchId, _UserRole, callback, asyncState);
        }
        
        private object[] OnEndDeleteBatch(System.IAsyncResult result) {
            bool retVal = this.EndDeleteBatch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteBatchCompleted(object state) {
            if ((this.DeleteBatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteBatchCompleted(this, new DeleteBatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteBatchAsync(System.Guid BatchId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            this.DeleteBatchAsync(BatchId, _UserRole, null);
        }
        
        public void DeleteBatchAsync(System.Guid BatchId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, object userState) {
            if ((this.onBeginDeleteBatchDelegate == null)) {
                this.onBeginDeleteBatchDelegate = new BeginOperationDelegate(this.OnBeginDeleteBatch);
            }
            if ((this.onEndDeleteBatchDelegate == null)) {
                this.onEndDeleteBatchDelegate = new EndOperationDelegate(this.OnEndDeleteBatch);
            }
            if ((this.onDeleteBatchCompletedDelegate == null)) {
                this.onDeleteBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteBatchCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteBatchDelegate, new object[] {
                        BatchId,
                        _UserRole}, this.onEndDeleteBatchDelegate, this.onDeleteBatchCompletedDelegate, userState);
        }
        
        public void AddUpdateBatchNote(int BatchNumber, string BatchNote) {
            base.Channel.AddUpdateBatchNote(BatchNumber, BatchNote);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateBatchNote(int BatchNumber, string BatchNote, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateBatchNote(BatchNumber, BatchNote, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateBatchNote(System.IAsyncResult result) {
            base.Channel.EndAddUpdateBatchNote(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateBatchNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int BatchNumber = ((int)(inValues[0]));
            string BatchNote = ((string)(inValues[1]));
            return this.BeginAddUpdateBatchNote(BatchNumber, BatchNote, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateBatchNote(System.IAsyncResult result) {
            this.EndAddUpdateBatchNote(result);
            return null;
        }
        
        private void OnAddUpdateBatchNoteCompleted(object state) {
            if ((this.AddUpdateBatchNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateBatchNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateBatchNoteAsync(int BatchNumber, string BatchNote) {
            this.AddUpdateBatchNoteAsync(BatchNumber, BatchNote, null);
        }
        
        public void AddUpdateBatchNoteAsync(int BatchNumber, string BatchNote, object userState) {
            if ((this.onBeginAddUpdateBatchNoteDelegate == null)) {
                this.onBeginAddUpdateBatchNoteDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateBatchNote);
            }
            if ((this.onEndAddUpdateBatchNoteDelegate == null)) {
                this.onEndAddUpdateBatchNoteDelegate = new EndOperationDelegate(this.OnEndAddUpdateBatchNote);
            }
            if ((this.onAddUpdateBatchNoteCompletedDelegate == null)) {
                this.onAddUpdateBatchNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateBatchNoteCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateBatchNoteDelegate, new object[] {
                        BatchNumber,
                        BatchNote}, this.onEndAddUpdateBatchNoteDelegate, this.onAddUpdateBatchNoteCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> GetBatchesForReportManager() {
            return base.Channel.GetBatchesForReportManager();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBatchesForReportManager(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBatchesForReportManager(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> EndGetBatchesForReportManager(System.IAsyncResult result) {
            return base.Channel.EndGetBatchesForReportManager(result);
        }
        
        private System.IAsyncResult OnBeginGetBatchesForReportManager(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetBatchesForReportManager(callback, asyncState);
        }
        
        private object[] OnEndGetBatchesForReportManager(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> retVal = this.EndGetBatchesForReportManager(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBatchesForReportManagerCompleted(object state) {
            if ((this.GetBatchesForReportManagerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBatchesForReportManagerCompleted(this, new GetBatchesForReportManagerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBatchesForReportManagerAsync() {
            this.GetBatchesForReportManagerAsync(null);
        }
        
        public void GetBatchesForReportManagerAsync(object userState) {
            if ((this.onBeginGetBatchesForReportManagerDelegate == null)) {
                this.onBeginGetBatchesForReportManagerDelegate = new BeginOperationDelegate(this.OnBeginGetBatchesForReportManager);
            }
            if ((this.onEndGetBatchesForReportManagerDelegate == null)) {
                this.onEndGetBatchesForReportManagerDelegate = new EndOperationDelegate(this.OnEndGetBatchesForReportManager);
            }
            if ((this.onGetBatchesForReportManagerCompletedDelegate == null)) {
                this.onGetBatchesForReportManagerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBatchesForReportManagerCompleted);
            }
            base.InvokeAsync(this.onBeginGetBatchesForReportManagerDelegate, null, this.onEndGetBatchesForReportManagerDelegate, this.onGetBatchesForReportManagerCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> GetAllBatchForReportManagerForAllLicensee() {
            return base.Channel.GetAllBatchForReportManagerForAllLicensee();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllBatchForReportManagerForAllLicensee(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllBatchForReportManagerForAllLicensee(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> EndGetAllBatchForReportManagerForAllLicensee(System.IAsyncResult result) {
            return base.Channel.EndGetAllBatchForReportManagerForAllLicensee(result);
        }
        
        private System.IAsyncResult OnBeginGetAllBatchForReportManagerForAllLicensee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllBatchForReportManagerForAllLicensee(callback, asyncState);
        }
        
        private object[] OnEndGetAllBatchForReportManagerForAllLicensee(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> retVal = this.EndGetAllBatchForReportManagerForAllLicensee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllBatchForReportManagerForAllLicenseeCompleted(object state) {
            if ((this.GetAllBatchForReportManagerForAllLicenseeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllBatchForReportManagerForAllLicenseeCompleted(this, new GetAllBatchForReportManagerForAllLicenseeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllBatchForReportManagerForAllLicenseeAsync() {
            this.GetAllBatchForReportManagerForAllLicenseeAsync(null);
        }
        
        public void GetAllBatchForReportManagerForAllLicenseeAsync(object userState) {
            if ((this.onBeginGetAllBatchForReportManagerForAllLicenseeDelegate == null)) {
                this.onBeginGetAllBatchForReportManagerForAllLicenseeDelegate = new BeginOperationDelegate(this.OnBeginGetAllBatchForReportManagerForAllLicensee);
            }
            if ((this.onEndGetAllBatchForReportManagerForAllLicenseeDelegate == null)) {
                this.onEndGetAllBatchForReportManagerForAllLicenseeDelegate = new EndOperationDelegate(this.OnEndGetAllBatchForReportManagerForAllLicensee);
            }
            if ((this.onGetAllBatchForReportManagerForAllLicenseeCompletedDelegate == null)) {
                this.onGetAllBatchForReportManagerForAllLicenseeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllBatchForReportManagerForAllLicenseeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllBatchForReportManagerForAllLicenseeDelegate, null, this.onEndGetAllBatchForReportManagerForAllLicenseeDelegate, this.onGetAllBatchForReportManagerForAllLicenseeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> GetBatchForReportManagerByLicenssID(System.Guid LicenseID) {
            return base.Channel.GetBatchForReportManagerByLicenssID(LicenseID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBatchForReportManagerByLicenssID(System.Guid LicenseID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBatchForReportManagerByLicenssID(LicenseID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> EndGetBatchForReportManagerByLicenssID(System.IAsyncResult result) {
            return base.Channel.EndGetBatchForReportManagerByLicenssID(result);
        }
        
        private System.IAsyncResult OnBeginGetBatchForReportManagerByLicenssID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseID = ((System.Guid)(inValues[0]));
            return this.BeginGetBatchForReportManagerByLicenssID(LicenseID, callback, asyncState);
        }
        
        private object[] OnEndGetBatchForReportManagerByLicenssID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> retVal = this.EndGetBatchForReportManagerByLicenssID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBatchForReportManagerByLicenssIDCompleted(object state) {
            if ((this.GetBatchForReportManagerByLicenssIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBatchForReportManagerByLicenssIDCompleted(this, new GetBatchForReportManagerByLicenssIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBatchForReportManagerByLicenssIDAsync(System.Guid LicenseID) {
            this.GetBatchForReportManagerByLicenssIDAsync(LicenseID, null);
        }
        
        public void GetBatchForReportManagerByLicenssIDAsync(System.Guid LicenseID, object userState) {
            if ((this.onBeginGetBatchForReportManagerByLicenssIDDelegate == null)) {
                this.onBeginGetBatchForReportManagerByLicenssIDDelegate = new BeginOperationDelegate(this.OnBeginGetBatchForReportManagerByLicenssID);
            }
            if ((this.onEndGetBatchForReportManagerByLicenssIDDelegate == null)) {
                this.onEndGetBatchForReportManagerByLicenssIDDelegate = new EndOperationDelegate(this.OnEndGetBatchForReportManagerByLicenssID);
            }
            if ((this.onGetBatchForReportManagerByLicenssIDCompletedDelegate == null)) {
                this.onGetBatchForReportManagerByLicenssIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBatchForReportManagerByLicenssIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetBatchForReportManagerByLicenssIDDelegate, new object[] {
                        LicenseID}, this.onEndGetBatchForReportManagerByLicenssIDDelegate, this.onGetBatchForReportManagerByLicenssIDCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> GetBatchesForDeuEntries() {
            return base.Channel.GetBatchesForDeuEntries();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBatchesForDeuEntries(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBatchesForDeuEntries(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> EndGetBatchesForDeuEntries(System.IAsyncResult result) {
            return base.Channel.EndGetBatchesForDeuEntries(result);
        }
        
        private System.IAsyncResult OnBeginGetBatchesForDeuEntries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetBatchesForDeuEntries(callback, asyncState);
        }
        
        private object[] OnEndGetBatchesForDeuEntries(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> retVal = this.EndGetBatchesForDeuEntries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBatchesForDeuEntriesCompleted(object state) {
            if ((this.GetBatchesForDeuEntriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBatchesForDeuEntriesCompleted(this, new GetBatchesForDeuEntriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBatchesForDeuEntriesAsync() {
            this.GetBatchesForDeuEntriesAsync(null);
        }
        
        public void GetBatchesForDeuEntriesAsync(object userState) {
            if ((this.onBeginGetBatchesForDeuEntriesDelegate == null)) {
                this.onBeginGetBatchesForDeuEntriesDelegate = new BeginOperationDelegate(this.OnBeginGetBatchesForDeuEntries);
            }
            if ((this.onEndGetBatchesForDeuEntriesDelegate == null)) {
                this.onEndGetBatchesForDeuEntriesDelegate = new EndOperationDelegate(this.OnEndGetBatchesForDeuEntries);
            }
            if ((this.onGetBatchesForDeuEntriesCompletedDelegate == null)) {
                this.onGetBatchesForDeuEntriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBatchesForDeuEntriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetBatchesForDeuEntriesDelegate, null, this.onEndGetBatchesForDeuEntriesDelegate, this.onGetBatchesForDeuEntriesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> GetCurrentBatch(System.Guid licenceID, System.DateTime CreatedOn) {
            return base.Channel.GetCurrentBatch(licenceID, CreatedOn);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCurrentBatch(System.Guid licenceID, System.DateTime CreatedOn, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentBatch(licenceID, CreatedOn, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> EndGetCurrentBatch(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentBatch(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentBatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licenceID = ((System.Guid)(inValues[0]));
            System.DateTime CreatedOn = ((System.DateTime)(inValues[1]));
            return this.BeginGetCurrentBatch(licenceID, CreatedOn, callback, asyncState);
        }
        
        private object[] OnEndGetCurrentBatch(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> retVal = this.EndGetCurrentBatch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentBatchCompleted(object state) {
            if ((this.GetCurrentBatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentBatchCompleted(this, new GetCurrentBatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentBatchAsync(System.Guid licenceID, System.DateTime CreatedOn) {
            this.GetCurrentBatchAsync(licenceID, CreatedOn, null);
        }
        
        public void GetCurrentBatchAsync(System.Guid licenceID, System.DateTime CreatedOn, object userState) {
            if ((this.onBeginGetCurrentBatchDelegate == null)) {
                this.onBeginGetCurrentBatchDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentBatch);
            }
            if ((this.onEndGetCurrentBatchDelegate == null)) {
                this.onEndGetCurrentBatchDelegate = new EndOperationDelegate(this.OnEndGetCurrentBatch);
            }
            if ((this.onGetCurrentBatchCompletedDelegate == null)) {
                this.onGetCurrentBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentBatchCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentBatchDelegate, new object[] {
                        licenceID,
                        CreatedOn}, this.onEndGetCurrentBatchDelegate, this.onGetCurrentBatchCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> GetBatchesForReportManagerByLicID(System.Guid licenceID) {
            return base.Channel.GetBatchesForReportManagerByLicID(licenceID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBatchesForReportManagerByLicID(System.Guid licenceID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBatchesForReportManagerByLicID(licenceID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> EndGetBatchesForReportManagerByLicID(System.IAsyncResult result) {
            return base.Channel.EndGetBatchesForReportManagerByLicID(result);
        }
        
        private System.IAsyncResult OnBeginGetBatchesForReportManagerByLicID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licenceID = ((System.Guid)(inValues[0]));
            return this.BeginGetBatchesForReportManagerByLicID(licenceID, callback, asyncState);
        }
        
        private object[] OnEndGetBatchesForReportManagerByLicID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Batch> retVal = this.EndGetBatchesForReportManagerByLicID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBatchesForReportManagerByLicIDCompleted(object state) {
            if ((this.GetBatchesForReportManagerByLicIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBatchesForReportManagerByLicIDCompleted(this, new GetBatchesForReportManagerByLicIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBatchesForReportManagerByLicIDAsync(System.Guid licenceID) {
            this.GetBatchesForReportManagerByLicIDAsync(licenceID, null);
        }
        
        public void GetBatchesForReportManagerByLicIDAsync(System.Guid licenceID, object userState) {
            if ((this.onBeginGetBatchesForReportManagerByLicIDDelegate == null)) {
                this.onBeginGetBatchesForReportManagerByLicIDDelegate = new BeginOperationDelegate(this.OnBeginGetBatchesForReportManagerByLicID);
            }
            if ((this.onEndGetBatchesForReportManagerByLicIDDelegate == null)) {
                this.onEndGetBatchesForReportManagerByLicIDDelegate = new EndOperationDelegate(this.OnEndGetBatchesForReportManagerByLicID);
            }
            if ((this.onGetBatchesForReportManagerByLicIDCompletedDelegate == null)) {
                this.onGetBatchesForReportManagerByLicIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBatchesForReportManagerByLicIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetBatchesForReportManagerByLicIDDelegate, new object[] {
                        licenceID}, this.onEndGetBatchesForReportManagerByLicIDDelegate, this.onGetBatchesForReportManagerByLicIDCompletedDelegate, userState);
        }
        
        public void ClearDownloadStatus() {
            base.Channel.ClearDownloadStatus();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClearDownloadStatus(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearDownloadStatus(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndClearDownloadStatus(System.IAsyncResult result) {
            base.Channel.EndClearDownloadStatus(result);
        }
        
        private System.IAsyncResult OnBeginClearDownloadStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginClearDownloadStatus(callback, asyncState);
        }
        
        private object[] OnEndClearDownloadStatus(System.IAsyncResult result) {
            this.EndClearDownloadStatus(result);
            return null;
        }
        
        private void OnClearDownloadStatusCompleted(object state) {
            if ((this.ClearDownloadStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearDownloadStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearDownloadStatusAsync() {
            this.ClearDownloadStatusAsync(null);
        }
        
        public void ClearDownloadStatusAsync(object userState) {
            if ((this.onBeginClearDownloadStatusDelegate == null)) {
                this.onBeginClearDownloadStatusDelegate = new BeginOperationDelegate(this.OnBeginClearDownloadStatus);
            }
            if ((this.onEndClearDownloadStatusDelegate == null)) {
                this.onEndClearDownloadStatusDelegate = new EndOperationDelegate(this.OnEndClearDownloadStatus);
            }
            if ((this.onClearDownloadStatusCompletedDelegate == null)) {
                this.onClearDownloadStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearDownloadStatusCompleted);
            }
            base.InvokeAsync(this.onBeginClearDownloadStatusDelegate, null, this.onEndClearDownloadStatusDelegate, this.onClearDownloadStatusCompletedDelegate, userState);
        }
        
        public void LaunchWebSite() {
            base.Channel.LaunchWebSite();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLaunchWebSite(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLaunchWebSite(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLaunchWebSite(System.IAsyncResult result) {
            base.Channel.EndLaunchWebSite(result);
        }
        
        private System.IAsyncResult OnBeginLaunchWebSite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLaunchWebSite(callback, asyncState);
        }
        
        private object[] OnEndLaunchWebSite(System.IAsyncResult result) {
            this.EndLaunchWebSite(result);
            return null;
        }
        
        private void OnLaunchWebSiteCompleted(object state) {
            if ((this.LaunchWebSiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LaunchWebSiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LaunchWebSiteAsync() {
            this.LaunchWebSiteAsync(null);
        }
        
        public void LaunchWebSiteAsync(object userState) {
            if ((this.onBeginLaunchWebSiteDelegate == null)) {
                this.onBeginLaunchWebSiteDelegate = new BeginOperationDelegate(this.OnBeginLaunchWebSite);
            }
            if ((this.onEndLaunchWebSiteDelegate == null)) {
                this.onEndLaunchWebSiteDelegate = new EndOperationDelegate(this.OnEndLaunchWebSite);
            }
            if ((this.onLaunchWebSiteCompletedDelegate == null)) {
                this.onLaunchWebSiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLaunchWebSiteCompleted);
            }
            base.InvokeAsync(this.onBeginLaunchWebSiteDelegate, null, this.onEndLaunchWebSiteDelegate, this.onLaunchWebSiteCompletedDelegate, userState);
        }
        
        public bool CloseBatch(MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch) {
            return base.Channel.CloseBatch(batch);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCloseBatch(MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCloseBatch(batch, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCloseBatch(System.IAsyncResult result) {
            return base.Channel.EndCloseBatch(result);
        }
        
        private System.IAsyncResult OnBeginCloseBatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch = ((MyAgencyVault.VM.MyAgencyVaultSvc.Batch)(inValues[0]));
            return this.BeginCloseBatch(batch, callback, asyncState);
        }
        
        private object[] OnEndCloseBatch(System.IAsyncResult result) {
            bool retVal = this.EndCloseBatch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCloseBatchCompleted(object state) {
            if ((this.CloseBatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseBatchCompleted(this, new CloseBatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseBatchAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch) {
            this.CloseBatchAsync(batch, null);
        }
        
        public void CloseBatchAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Batch batch, object userState) {
            if ((this.onBeginCloseBatchDelegate == null)) {
                this.onBeginCloseBatchDelegate = new BeginOperationDelegate(this.OnBeginCloseBatch);
            }
            if ((this.onEndCloseBatchDelegate == null)) {
                this.onEndCloseBatchDelegate = new EndOperationDelegate(this.OnEndCloseBatch);
            }
            if ((this.onCloseBatchCompletedDelegate == null)) {
                this.onCloseBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseBatchCompleted);
            }
            base.InvokeAsync(this.onBeginCloseBatchDelegate, new object[] {
                        batch}, this.onEndCloseBatchDelegate, this.onCloseBatchCompletedDelegate, userState);
        }
        
        public bool OpenBatch(int intBatchNumber) {
            return base.Channel.OpenBatch(intBatchNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOpenBatch(int intBatchNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOpenBatch(intBatchNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndOpenBatch(System.IAsyncResult result) {
            return base.Channel.EndOpenBatch(result);
        }
        
        private System.IAsyncResult OnBeginOpenBatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int intBatchNumber = ((int)(inValues[0]));
            return this.BeginOpenBatch(intBatchNumber, callback, asyncState);
        }
        
        private object[] OnEndOpenBatch(System.IAsyncResult result) {
            bool retVal = this.EndOpenBatch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOpenBatchCompleted(object state) {
            if ((this.OpenBatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenBatchCompleted(this, new OpenBatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenBatchAsync(int intBatchNumber) {
            this.OpenBatchAsync(intBatchNumber, null);
        }
        
        public void OpenBatchAsync(int intBatchNumber, object userState) {
            if ((this.onBeginOpenBatchDelegate == null)) {
                this.onBeginOpenBatchDelegate = new BeginOperationDelegate(this.OnBeginOpenBatch);
            }
            if ((this.onEndOpenBatchDelegate == null)) {
                this.onEndOpenBatchDelegate = new EndOperationDelegate(this.OnEndOpenBatch);
            }
            if ((this.onOpenBatchCompletedDelegate == null)) {
                this.onOpenBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenBatchCompleted);
            }
            base.InvokeAsync(this.onBeginOpenBatchDelegate, new object[] {
                        intBatchNumber}, this.onEndOpenBatchDelegate, this.onOpenBatchCompletedDelegate, userState);
        }
        
        public string BatchName(int intBatchnumber) {
            return base.Channel.BatchName(intBatchnumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBatchName(int intBatchnumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBatchName(intBatchnumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndBatchName(System.IAsyncResult result) {
            return base.Channel.EndBatchName(result);
        }
        
        private System.IAsyncResult OnBeginBatchName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int intBatchnumber = ((int)(inValues[0]));
            return this.BeginBatchName(intBatchnumber, callback, asyncState);
        }
        
        private object[] OnEndBatchName(System.IAsyncResult result) {
            string retVal = this.EndBatchName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBatchNameCompleted(object state) {
            if ((this.BatchNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BatchNameCompleted(this, new BatchNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BatchNameAsync(int intBatchnumber) {
            this.BatchNameAsync(intBatchnumber, null);
        }
        
        public void BatchNameAsync(int intBatchnumber, object userState) {
            if ((this.onBeginBatchNameDelegate == null)) {
                this.onBeginBatchNameDelegate = new BeginOperationDelegate(this.OnBeginBatchName);
            }
            if ((this.onEndBatchNameDelegate == null)) {
                this.onEndBatchNameDelegate = new EndOperationDelegate(this.OnEndBatchName);
            }
            if ((this.onBatchNameCompletedDelegate == null)) {
                this.onBatchNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBatchNameCompleted);
            }
            base.InvokeAsync(this.onBeginBatchNameDelegate, new object[] {
                        intBatchnumber}, this.onEndBatchNameDelegate, this.onBatchNameCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> GetCheckAmount(System.Nullable<System.Guid> BatchID, System.Nullable<System.Guid> PayorID) {
            return base.Channel.GetCheckAmount(BatchID, PayorID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCheckAmount(System.Nullable<System.Guid> BatchID, System.Nullable<System.Guid> PayorID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCheckAmount(BatchID, PayorID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> EndGetCheckAmount(System.IAsyncResult result) {
            return base.Channel.EndGetCheckAmount(result);
        }
        
        private System.IAsyncResult OnBeginGetCheckAmount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> BatchID = ((System.Nullable<System.Guid>)(inValues[0]));
            System.Nullable<System.Guid> PayorID = ((System.Nullable<System.Guid>)(inValues[1]));
            return this.BeginGetCheckAmount(BatchID, PayorID, callback, asyncState);
        }
        
        private object[] OnEndGetCheckAmount(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> retVal = this.EndGetCheckAmount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCheckAmountCompleted(object state) {
            if ((this.GetCheckAmountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCheckAmountCompleted(this, new GetCheckAmountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCheckAmountAsync(System.Nullable<System.Guid> BatchID, System.Nullable<System.Guid> PayorID) {
            this.GetCheckAmountAsync(BatchID, PayorID, null);
        }
        
        public void GetCheckAmountAsync(System.Nullable<System.Guid> BatchID, System.Nullable<System.Guid> PayorID, object userState) {
            if ((this.onBeginGetCheckAmountDelegate == null)) {
                this.onBeginGetCheckAmountDelegate = new BeginOperationDelegate(this.OnBeginGetCheckAmount);
            }
            if ((this.onEndGetCheckAmountDelegate == null)) {
                this.onEndGetCheckAmountDelegate = new EndOperationDelegate(this.OnEndGetCheckAmount);
            }
            if ((this.onGetCheckAmountCompletedDelegate == null)) {
                this.onGetCheckAmountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCheckAmountCompleted);
            }
            base.InvokeAsync(this.onBeginGetCheckAmountDelegate, new object[] {
                        BatchID,
                        PayorID}, this.onEndGetCheckAmountDelegate, this.onGetCheckAmountCompletedDelegate, userState);
        }
        
        public string BatchNameById(System.Guid BatchID) {
            return base.Channel.BatchNameById(BatchID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBatchNameById(System.Guid BatchID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBatchNameById(BatchID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndBatchNameById(System.IAsyncResult result) {
            return base.Channel.EndBatchNameById(result);
        }
        
        private System.IAsyncResult OnBeginBatchNameById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid BatchID = ((System.Guid)(inValues[0]));
            return this.BeginBatchNameById(BatchID, callback, asyncState);
        }
        
        private object[] OnEndBatchNameById(System.IAsyncResult result) {
            string retVal = this.EndBatchNameById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBatchNameByIdCompleted(object state) {
            if ((this.BatchNameByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BatchNameByIdCompleted(this, new BatchNameByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BatchNameByIdAsync(System.Guid BatchID) {
            this.BatchNameByIdAsync(BatchID, null);
        }
        
        public void BatchNameByIdAsync(System.Guid BatchID, object userState) {
            if ((this.onBeginBatchNameByIdDelegate == null)) {
                this.onBeginBatchNameByIdDelegate = new BeginOperationDelegate(this.OnBeginBatchNameById);
            }
            if ((this.onEndBatchNameByIdDelegate == null)) {
                this.onEndBatchNameByIdDelegate = new EndOperationDelegate(this.OnEndBatchNameById);
            }
            if ((this.onBatchNameByIdCompletedDelegate == null)) {
                this.onBatchNameByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBatchNameByIdCompleted);
            }
            base.InvokeAsync(this.onBeginBatchNameByIdDelegate, new object[] {
                        BatchID}, this.onEndBatchNameByIdDelegate, this.onBatchNameByIdCompletedDelegate, userState);
        }
        
        public void ViewBatchFile(string FilePath, string FileType) {
            base.Channel.ViewBatchFile(FilePath, FileType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginViewBatchFile(string FilePath, string FileType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginViewBatchFile(FilePath, FileType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndViewBatchFile(System.IAsyncResult result) {
            base.Channel.EndViewBatchFile(result);
        }
        
        private System.IAsyncResult OnBeginViewBatchFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FilePath = ((string)(inValues[0]));
            string FileType = ((string)(inValues[1]));
            return this.BeginViewBatchFile(FilePath, FileType, callback, asyncState);
        }
        
        private object[] OnEndViewBatchFile(System.IAsyncResult result) {
            this.EndViewBatchFile(result);
            return null;
        }
        
        private void OnViewBatchFileCompleted(object state) {
            if ((this.ViewBatchFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ViewBatchFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ViewBatchFileAsync(string FilePath, string FileType) {
            this.ViewBatchFileAsync(FilePath, FileType, null);
        }
        
        public void ViewBatchFileAsync(string FilePath, string FileType, object userState) {
            if ((this.onBeginViewBatchFileDelegate == null)) {
                this.onBeginViewBatchFileDelegate = new BeginOperationDelegate(this.OnBeginViewBatchFile);
            }
            if ((this.onEndViewBatchFileDelegate == null)) {
                this.onEndViewBatchFileDelegate = new EndOperationDelegate(this.OnEndViewBatchFile);
            }
            if ((this.onViewBatchFileCompletedDelegate == null)) {
                this.onViewBatchFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnViewBatchFileCompleted);
            }
            base.InvokeAsync(this.onBeginViewBatchFileDelegate, new object[] {
                        FilePath,
                        FileType}, this.onEndViewBatchFileDelegate, this.onViewBatchFileCompletedDelegate, userState);
        }
        
        public void UploadBatchOfLocalPayor() {
            base.Channel.UploadBatchOfLocalPayor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUploadBatchOfLocalPayor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadBatchOfLocalPayor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUploadBatchOfLocalPayor(System.IAsyncResult result) {
            base.Channel.EndUploadBatchOfLocalPayor(result);
        }
        
        private System.IAsyncResult OnBeginUploadBatchOfLocalPayor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginUploadBatchOfLocalPayor(callback, asyncState);
        }
        
        private object[] OnEndUploadBatchOfLocalPayor(System.IAsyncResult result) {
            this.EndUploadBatchOfLocalPayor(result);
            return null;
        }
        
        private void OnUploadBatchOfLocalPayorCompleted(object state) {
            if ((this.UploadBatchOfLocalPayorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadBatchOfLocalPayorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadBatchOfLocalPayorAsync() {
            this.UploadBatchOfLocalPayorAsync(null);
        }
        
        public void UploadBatchOfLocalPayorAsync(object userState) {
            if ((this.onBeginUploadBatchOfLocalPayorDelegate == null)) {
                this.onBeginUploadBatchOfLocalPayorDelegate = new BeginOperationDelegate(this.OnBeginUploadBatchOfLocalPayor);
            }
            if ((this.onEndUploadBatchOfLocalPayorDelegate == null)) {
                this.onEndUploadBatchOfLocalPayorDelegate = new EndOperationDelegate(this.OnEndUploadBatchOfLocalPayor);
            }
            if ((this.onUploadBatchOfLocalPayorCompletedDelegate == null)) {
                this.onUploadBatchOfLocalPayorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadBatchOfLocalPayorCompleted);
            }
            base.InvokeAsync(this.onBeginUploadBatchOfLocalPayorDelegate, null, this.onEndUploadBatchOfLocalPayorDelegate, this.onUploadBatchOfLocalPayorCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> GetBatchStatementList(MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch) {
            return base.Channel.GetBatchStatementList(Btch);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBatchStatementList(MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBatchStatementList(Btch, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> EndGetBatchStatementList(System.IAsyncResult result) {
            return base.Channel.EndGetBatchStatementList(result);
        }
        
        private System.IAsyncResult OnBeginGetBatchStatementList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch = ((MyAgencyVault.VM.MyAgencyVaultSvc.Batch)(inValues[0]));
            return this.BeginGetBatchStatementList(Btch, callback, asyncState);
        }
        
        private object[] OnEndGetBatchStatementList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Statement> retVal = this.EndGetBatchStatementList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBatchStatementListCompleted(object state) {
            if ((this.GetBatchStatementListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBatchStatementListCompleted(this, new GetBatchStatementListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBatchStatementListAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch) {
            this.GetBatchStatementListAsync(Btch, null);
        }
        
        public void GetBatchStatementListAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Batch Btch, object userState) {
            if ((this.onBeginGetBatchStatementListDelegate == null)) {
                this.onBeginGetBatchStatementListDelegate = new BeginOperationDelegate(this.OnBeginGetBatchStatementList);
            }
            if ((this.onEndGetBatchStatementListDelegate == null)) {
                this.onEndGetBatchStatementListDelegate = new EndOperationDelegate(this.OnEndGetBatchStatementList);
            }
            if ((this.onGetBatchStatementListCompletedDelegate == null)) {
                this.onGetBatchStatementListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBatchStatementListCompleted);
            }
            base.InvokeAsync(this.onBeginGetBatchStatementListDelegate, new object[] {
                        Btch}, this.onEndGetBatchStatementListDelegate, this.onGetBatchStatementListCompletedDelegate, userState);
        }
        
        public void ExportBatch() {
            base.Channel.ExportBatch();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExportBatch(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExportBatch(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndExportBatch(System.IAsyncResult result) {
            base.Channel.EndExportBatch(result);
        }
        
        private System.IAsyncResult OnBeginExportBatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginExportBatch(callback, asyncState);
        }
        
        private object[] OnEndExportBatch(System.IAsyncResult result) {
            this.EndExportBatch(result);
            return null;
        }
        
        private void OnExportBatchCompleted(object state) {
            if ((this.ExportBatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExportBatchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExportBatchAsync() {
            this.ExportBatchAsync(null);
        }
        
        public void ExportBatchAsync(object userState) {
            if ((this.onBeginExportBatchDelegate == null)) {
                this.onBeginExportBatchDelegate = new BeginOperationDelegate(this.OnBeginExportBatch);
            }
            if ((this.onEndExportBatchDelegate == null)) {
                this.onEndExportBatchDelegate = new EndOperationDelegate(this.OnEndExportBatch);
            }
            if ((this.onExportBatchCompletedDelegate == null)) {
                this.onExportBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExportBatchCompleted);
            }
            base.InvokeAsync(this.onBeginExportBatchDelegate, null, this.onEndExportBatchDelegate, this.onExportBatchCompletedDelegate, userState);
        }
        
        public bool GetBatchPaidStatus(System.Guid BatchId) {
            return base.Channel.GetBatchPaidStatus(BatchId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBatchPaidStatus(System.Guid BatchId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBatchPaidStatus(BatchId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetBatchPaidStatus(System.IAsyncResult result) {
            return base.Channel.EndGetBatchPaidStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetBatchPaidStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid BatchId = ((System.Guid)(inValues[0]));
            return this.BeginGetBatchPaidStatus(BatchId, callback, asyncState);
        }
        
        private object[] OnEndGetBatchPaidStatus(System.IAsyncResult result) {
            bool retVal = this.EndGetBatchPaidStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBatchPaidStatusCompleted(object state) {
            if ((this.GetBatchPaidStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBatchPaidStatusCompleted(this, new GetBatchPaidStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBatchPaidStatusAsync(System.Guid BatchId) {
            this.GetBatchPaidStatusAsync(BatchId, null);
        }
        
        public void GetBatchPaidStatusAsync(System.Guid BatchId, object userState) {
            if ((this.onBeginGetBatchPaidStatusDelegate == null)) {
                this.onBeginGetBatchPaidStatusDelegate = new BeginOperationDelegate(this.OnBeginGetBatchPaidStatus);
            }
            if ((this.onEndGetBatchPaidStatusDelegate == null)) {
                this.onEndGetBatchPaidStatusDelegate = new EndOperationDelegate(this.OnEndGetBatchPaidStatus);
            }
            if ((this.onGetBatchPaidStatusCompletedDelegate == null)) {
                this.onGetBatchPaidStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBatchPaidStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetBatchPaidStatusDelegate, new object[] {
                        BatchId}, this.onEndGetBatchPaidStatusDelegate, this.onGetBatchPaidStatusCompletedDelegate, userState);
        }
        
        public bool SetBatchesAsPaid(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds) {
            return base.Channel.SetBatchesAsPaid(BatchIds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetBatchesAsPaid(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetBatchesAsPaid(BatchIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSetBatchesAsPaid(System.IAsyncResult result) {
            return base.Channel.EndSetBatchesAsPaid(result);
        }
        
        private System.IAsyncResult OnBeginSetBatchesAsPaid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[0]));
            return this.BeginSetBatchesAsPaid(BatchIds, callback, asyncState);
        }
        
        private object[] OnEndSetBatchesAsPaid(System.IAsyncResult result) {
            bool retVal = this.EndSetBatchesAsPaid(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetBatchesAsPaidCompleted(object state) {
            if ((this.SetBatchesAsPaidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetBatchesAsPaidCompleted(this, new SetBatchesAsPaidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetBatchesAsPaidAsync(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds) {
            this.SetBatchesAsPaidAsync(BatchIds, null);
        }
        
        public void SetBatchesAsPaidAsync(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, object userState) {
            if ((this.onBeginSetBatchesAsPaidDelegate == null)) {
                this.onBeginSetBatchesAsPaidDelegate = new BeginOperationDelegate(this.OnBeginSetBatchesAsPaid);
            }
            if ((this.onEndSetBatchesAsPaidDelegate == null)) {
                this.onEndSetBatchesAsPaidDelegate = new EndOperationDelegate(this.OnEndSetBatchesAsPaid);
            }
            if ((this.onSetBatchesAsPaidCompletedDelegate == null)) {
                this.onSetBatchesAsPaidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetBatchesAsPaidCompleted);
            }
            base.InvokeAsync(this.onBeginSetBatchesAsPaidDelegate, new object[] {
                        BatchIds}, this.onEndSetBatchesAsPaidDelegate, this.onSetBatchesAsPaidCompletedDelegate, userState);
        }
        
        public bool SetBatchToUnPaidStatus(int BatchNumber) {
            return base.Channel.SetBatchToUnPaidStatus(BatchNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetBatchToUnPaidStatus(int BatchNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetBatchToUnPaidStatus(BatchNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSetBatchToUnPaidStatus(System.IAsyncResult result) {
            return base.Channel.EndSetBatchToUnPaidStatus(result);
        }
        
        private System.IAsyncResult OnBeginSetBatchToUnPaidStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int BatchNumber = ((int)(inValues[0]));
            return this.BeginSetBatchToUnPaidStatus(BatchNumber, callback, asyncState);
        }
        
        private object[] OnEndSetBatchToUnPaidStatus(System.IAsyncResult result) {
            bool retVal = this.EndSetBatchToUnPaidStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetBatchToUnPaidStatusCompleted(object state) {
            if ((this.SetBatchToUnPaidStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetBatchToUnPaidStatusCompleted(this, new SetBatchToUnPaidStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetBatchToUnPaidStatusAsync(int BatchNumber) {
            this.SetBatchToUnPaidStatusAsync(BatchNumber, null);
        }
        
        public void SetBatchToUnPaidStatusAsync(int BatchNumber, object userState) {
            if ((this.onBeginSetBatchToUnPaidStatusDelegate == null)) {
                this.onBeginSetBatchToUnPaidStatusDelegate = new BeginOperationDelegate(this.OnBeginSetBatchToUnPaidStatus);
            }
            if ((this.onEndSetBatchToUnPaidStatusDelegate == null)) {
                this.onEndSetBatchToUnPaidStatusDelegate = new EndOperationDelegate(this.OnEndSetBatchToUnPaidStatus);
            }
            if ((this.onSetBatchToUnPaidStatusCompletedDelegate == null)) {
                this.onSetBatchToUnPaidStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetBatchToUnPaidStatusCompleted);
            }
            base.InvokeAsync(this.onBeginSetBatchToUnPaidStatusDelegate, new object[] {
                        BatchNumber}, this.onEndSetBatchToUnPaidStatusDelegate, this.onSetBatchToUnPaidStatusCompletedDelegate, userState);
        }
        
        public bool SetBatchesToPaid(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, string strFilter, System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee) {
            return base.Channel.SetBatchesToPaid(BatchIds, strFilter, lstPayee);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetBatchesToPaid(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, string strFilter, System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetBatchesToPaid(BatchIds, strFilter, lstPayee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSetBatchesToPaid(System.IAsyncResult result) {
            return base.Channel.EndSetBatchesToPaid(result);
        }
        
        private System.IAsyncResult OnBeginSetBatchesToPaid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[0]));
            string strFilter = ((string)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[2]));
            return this.BeginSetBatchesToPaid(BatchIds, strFilter, lstPayee, callback, asyncState);
        }
        
        private object[] OnEndSetBatchesToPaid(System.IAsyncResult result) {
            bool retVal = this.EndSetBatchesToPaid(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetBatchesToPaidCompleted(object state) {
            if ((this.SetBatchesToPaidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetBatchesToPaidCompleted(this, new SetBatchesToPaidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetBatchesToPaidAsync(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, string strFilter, System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee) {
            this.SetBatchesToPaidAsync(BatchIds, strFilter, lstPayee, null);
        }
        
        public void SetBatchesToPaidAsync(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, string strFilter, System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee, object userState) {
            if ((this.onBeginSetBatchesToPaidDelegate == null)) {
                this.onBeginSetBatchesToPaidDelegate = new BeginOperationDelegate(this.OnBeginSetBatchesToPaid);
            }
            if ((this.onEndSetBatchesToPaidDelegate == null)) {
                this.onEndSetBatchesToPaidDelegate = new EndOperationDelegate(this.OnEndSetBatchesToPaid);
            }
            if ((this.onSetBatchesToPaidCompletedDelegate == null)) {
                this.onSetBatchesToPaidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetBatchesToPaidCompleted);
            }
            base.InvokeAsync(this.onBeginSetBatchesToPaidDelegate, new object[] {
                        BatchIds,
                        strFilter,
                        lstPayee}, this.onEndSetBatchesToPaidDelegate, this.onSetBatchesToPaidCompletedDelegate, userState);
        }
        
        public string SetBatchesToPaidInReports(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, string strFilter, System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee) {
            return base.Channel.SetBatchesToPaidInReports(BatchIds, strFilter, lstPayee);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetBatchesToPaidInReports(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, string strFilter, System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetBatchesToPaidInReports(BatchIds, strFilter, lstPayee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetBatchesToPaidInReports(System.IAsyncResult result) {
            return base.Channel.EndSetBatchesToPaidInReports(result);
        }
        
        private System.IAsyncResult OnBeginSetBatchesToPaidInReports(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[0]));
            string strFilter = ((string)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[2]));
            return this.BeginSetBatchesToPaidInReports(BatchIds, strFilter, lstPayee, callback, asyncState);
        }
        
        private object[] OnEndSetBatchesToPaidInReports(System.IAsyncResult result) {
            string retVal = this.EndSetBatchesToPaidInReports(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetBatchesToPaidInReportsCompleted(object state) {
            if ((this.SetBatchesToPaidInReportsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetBatchesToPaidInReportsCompleted(this, new SetBatchesToPaidInReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetBatchesToPaidInReportsAsync(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, string strFilter, System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee) {
            this.SetBatchesToPaidInReportsAsync(BatchIds, strFilter, lstPayee, null);
        }
        
        public void SetBatchesToPaidInReportsAsync(System.Collections.ObjectModel.ObservableCollection<System.Guid> BatchIds, string strFilter, System.Collections.ObjectModel.ObservableCollection<System.Guid> lstPayee, object userState) {
            if ((this.onBeginSetBatchesToPaidInReportsDelegate == null)) {
                this.onBeginSetBatchesToPaidInReportsDelegate = new BeginOperationDelegate(this.OnBeginSetBatchesToPaidInReports);
            }
            if ((this.onEndSetBatchesToPaidInReportsDelegate == null)) {
                this.onEndSetBatchesToPaidInReportsDelegate = new EndOperationDelegate(this.OnEndSetBatchesToPaidInReports);
            }
            if ((this.onSetBatchesToPaidInReportsCompletedDelegate == null)) {
                this.onSetBatchesToPaidInReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetBatchesToPaidInReportsCompleted);
            }
            base.InvokeAsync(this.onBeginSetBatchesToPaidInReportsDelegate, new object[] {
                        BatchIds,
                        strFilter,
                        lstPayee}, this.onEndSetBatchesToPaidInReportsDelegate, this.onSetBatchesToPaidInReportsCompletedDelegate, userState);
        }
        
        public void UpdateBatchFileName(int intBatchNumber, string strFileName) {
            base.Channel.UpdateBatchFileName(intBatchNumber, strFileName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateBatchFileName(int intBatchNumber, string strFileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateBatchFileName(intBatchNumber, strFileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateBatchFileName(System.IAsyncResult result) {
            base.Channel.EndUpdateBatchFileName(result);
        }
        
        private System.IAsyncResult OnBeginUpdateBatchFileName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int intBatchNumber = ((int)(inValues[0]));
            string strFileName = ((string)(inValues[1]));
            return this.BeginUpdateBatchFileName(intBatchNumber, strFileName, callback, asyncState);
        }
        
        private object[] OnEndUpdateBatchFileName(System.IAsyncResult result) {
            this.EndUpdateBatchFileName(result);
            return null;
        }
        
        private void OnUpdateBatchFileNameCompleted(object state) {
            if ((this.UpdateBatchFileNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateBatchFileNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateBatchFileNameAsync(int intBatchNumber, string strFileName) {
            this.UpdateBatchFileNameAsync(intBatchNumber, strFileName, null);
        }
        
        public void UpdateBatchFileNameAsync(int intBatchNumber, string strFileName, object userState) {
            if ((this.onBeginUpdateBatchFileNameDelegate == null)) {
                this.onBeginUpdateBatchFileNameDelegate = new BeginOperationDelegate(this.OnBeginUpdateBatchFileName);
            }
            if ((this.onEndUpdateBatchFileNameDelegate == null)) {
                this.onEndUpdateBatchFileNameDelegate = new EndOperationDelegate(this.OnEndUpdateBatchFileName);
            }
            if ((this.onUpdateBatchFileNameCompletedDelegate == null)) {
                this.onUpdateBatchFileNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateBatchFileNameCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateBatchFileNameDelegate, new object[] {
                        intBatchNumber,
                        strFileName}, this.onEndUpdateBatchFileNameDelegate, this.onUpdateBatchFileNameCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IDownloadBatch")]
    public interface IDownloadBatch {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadBatch/GetDownloadBatchList", ReplyAction="http://tempuri.org/IDownloadBatch/GetDownloadBatchListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch> GetDownloadBatchList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDownloadBatch/GetDownloadBatchList", ReplyAction="http://tempuri.org/IDownloadBatch/GetDownloadBatchListResponse")]
        System.IAsyncResult BeginGetDownloadBatchList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch> EndGetDownloadBatchList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadBatch/isBatchPartiallyOrFullyPaid", ReplyAction="http://tempuri.org/IDownloadBatch/isBatchPartiallyOrFullyPaidResponse")]
        bool isBatchPartiallyOrFullyPaid(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDownloadBatch/isBatchPartiallyOrFullyPaid", ReplyAction="http://tempuri.org/IDownloadBatch/isBatchPartiallyOrFullyPaidResponse")]
        System.IAsyncResult BeginisBatchPartiallyOrFullyPaid(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, System.AsyncCallback callback, object asyncState);
        
        bool EndisBatchPartiallyOrFullyPaid(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadBatch/DeleteDownloadBatch", ReplyAction="http://tempuri.org/IDownloadBatch/DeleteDownloadBatchResponse")]
        void DeleteDownloadBatch(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDownloadBatch/DeleteDownloadBatch", ReplyAction="http://tempuri.org/IDownloadBatch/DeleteDownloadBatchResponse")]
        System.IAsyncResult BeginDeleteDownloadBatch(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDownloadBatch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadBatch/ImportBatchFile", ReplyAction="http://tempuri.org/IDownloadBatch/ImportBatchFileResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ImportFileData ImportBatchFile(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDownloadBatch/ImportBatchFile", ReplyAction="http://tempuri.org/IDownloadBatch/ImportBatchFileResponse")]
        System.IAsyncResult BeginImportBatchFile(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ImportFileData EndImportBatchFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadBatch/UpdateEntryStatus", ReplyAction="http://tempuri.org/IDownloadBatch/UpdateEntryStatusResponse")]
        System.Nullable<System.DateTime> UpdateEntryStatus(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDownloadBatch/UpdateEntryStatus", ReplyAction="http://tempuri.org/IDownloadBatch/UpdateEntryStatusResponse")]
        System.IAsyncResult BeginUpdateEntryStatus(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.DateTime> EndUpdateEntryStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadBatch/ClearDownloadBatch", ReplyAction="http://tempuri.org/IDownloadBatch/ClearDownloadBatchResponse")]
        void ClearDownloadBatch(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDownloadBatch/ClearDownloadBatch", ReplyAction="http://tempuri.org/IDownloadBatch/ClearDownloadBatchResponse")]
        System.IAsyncResult BeginClearDownloadBatch(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState);
        
        void EndClearDownloadBatch(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDownloadBatchChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IDownloadBatch, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDownloadBatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDownloadBatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class isBatchPartiallyOrFullyPaidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public isBatchPartiallyOrFullyPaidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportBatchFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ImportBatchFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ImportFileData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ImportFileData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateEntryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateEntryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.DateTime> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.DateTime>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadBatchClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IDownloadBatch>, MyAgencyVault.VM.MyAgencyVaultSvc.IDownloadBatch {
        
        private BeginOperationDelegate onBeginGetDownloadBatchListDelegate;
        
        private EndOperationDelegate onEndGetDownloadBatchListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDownloadBatchListCompletedDelegate;
        
        private BeginOperationDelegate onBeginisBatchPartiallyOrFullyPaidDelegate;
        
        private EndOperationDelegate onEndisBatchPartiallyOrFullyPaidDelegate;
        
        private System.Threading.SendOrPostCallback onisBatchPartiallyOrFullyPaidCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDownloadBatchDelegate;
        
        private EndOperationDelegate onEndDeleteDownloadBatchDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDownloadBatchCompletedDelegate;
        
        private BeginOperationDelegate onBeginImportBatchFileDelegate;
        
        private EndOperationDelegate onEndImportBatchFileDelegate;
        
        private System.Threading.SendOrPostCallback onImportBatchFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEntryStatusDelegate;
        
        private EndOperationDelegate onEndUpdateEntryStatusDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEntryStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearDownloadBatchDelegate;
        
        private EndOperationDelegate onEndClearDownloadBatchDelegate;
        
        private System.Threading.SendOrPostCallback onClearDownloadBatchCompletedDelegate;
        
        public DownloadBatchClient() {
        }
        
        public DownloadBatchClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DownloadBatchClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DownloadBatchClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DownloadBatchClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetDownloadBatchListCompletedEventArgs> GetDownloadBatchListCompleted;
        
        public event System.EventHandler<isBatchPartiallyOrFullyPaidCompletedEventArgs> isBatchPartiallyOrFullyPaidCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDownloadBatchCompleted;
        
        public event System.EventHandler<ImportBatchFileCompletedEventArgs> ImportBatchFileCompleted;
        
        public event System.EventHandler<UpdateEntryStatusCompletedEventArgs> UpdateEntryStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ClearDownloadBatchCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch> GetDownloadBatchList() {
            return base.Channel.GetDownloadBatchList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDownloadBatchList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDownloadBatchList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch> EndGetDownloadBatchList(System.IAsyncResult result) {
            return base.Channel.EndGetDownloadBatchList(result);
        }
        
        private System.IAsyncResult OnBeginGetDownloadBatchList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDownloadBatchList(callback, asyncState);
        }
        
        private object[] OnEndGetDownloadBatchList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch> retVal = this.EndGetDownloadBatchList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDownloadBatchListCompleted(object state) {
            if ((this.GetDownloadBatchListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDownloadBatchListCompleted(this, new GetDownloadBatchListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDownloadBatchListAsync() {
            this.GetDownloadBatchListAsync(null);
        }
        
        public void GetDownloadBatchListAsync(object userState) {
            if ((this.onBeginGetDownloadBatchListDelegate == null)) {
                this.onBeginGetDownloadBatchListDelegate = new BeginOperationDelegate(this.OnBeginGetDownloadBatchList);
            }
            if ((this.onEndGetDownloadBatchListDelegate == null)) {
                this.onEndGetDownloadBatchListDelegate = new EndOperationDelegate(this.OnEndGetDownloadBatchList);
            }
            if ((this.onGetDownloadBatchListCompletedDelegate == null)) {
                this.onGetDownloadBatchListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDownloadBatchListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDownloadBatchListDelegate, null, this.onEndGetDownloadBatchListDelegate, this.onGetDownloadBatchListCompletedDelegate, userState);
        }
        
        public bool isBatchPartiallyOrFullyPaid(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch) {
            return base.Channel.isBatchPartiallyOrFullyPaid(batch);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginisBatchPartiallyOrFullyPaid(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginisBatchPartiallyOrFullyPaid(batch, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndisBatchPartiallyOrFullyPaid(System.IAsyncResult result) {
            return base.Channel.EndisBatchPartiallyOrFullyPaid(result);
        }
        
        private System.IAsyncResult OnBeginisBatchPartiallyOrFullyPaid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch = ((MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch)(inValues[0]));
            return this.BeginisBatchPartiallyOrFullyPaid(batch, callback, asyncState);
        }
        
        private object[] OnEndisBatchPartiallyOrFullyPaid(System.IAsyncResult result) {
            bool retVal = this.EndisBatchPartiallyOrFullyPaid(result);
            return new object[] {
                    retVal};
        }
        
        private void OnisBatchPartiallyOrFullyPaidCompleted(object state) {
            if ((this.isBatchPartiallyOrFullyPaidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.isBatchPartiallyOrFullyPaidCompleted(this, new isBatchPartiallyOrFullyPaidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void isBatchPartiallyOrFullyPaidAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch) {
            this.isBatchPartiallyOrFullyPaidAsync(batch, null);
        }
        
        public void isBatchPartiallyOrFullyPaidAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, object userState) {
            if ((this.onBeginisBatchPartiallyOrFullyPaidDelegate == null)) {
                this.onBeginisBatchPartiallyOrFullyPaidDelegate = new BeginOperationDelegate(this.OnBeginisBatchPartiallyOrFullyPaid);
            }
            if ((this.onEndisBatchPartiallyOrFullyPaidDelegate == null)) {
                this.onEndisBatchPartiallyOrFullyPaidDelegate = new EndOperationDelegate(this.OnEndisBatchPartiallyOrFullyPaid);
            }
            if ((this.onisBatchPartiallyOrFullyPaidCompletedDelegate == null)) {
                this.onisBatchPartiallyOrFullyPaidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnisBatchPartiallyOrFullyPaidCompleted);
            }
            base.InvokeAsync(this.onBeginisBatchPartiallyOrFullyPaidDelegate, new object[] {
                        batch}, this.onEndisBatchPartiallyOrFullyPaidDelegate, this.onisBatchPartiallyOrFullyPaidCompletedDelegate, userState);
        }
        
        public void DeleteDownloadBatch(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            base.Channel.DeleteDownloadBatch(batch, _UserRole);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDownloadBatch(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDownloadBatch(batch, _UserRole, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDownloadBatch(System.IAsyncResult result) {
            base.Channel.EndDeleteDownloadBatch(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDownloadBatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch = ((MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[1]));
            return this.BeginDeleteDownloadBatch(batch, _UserRole, callback, asyncState);
        }
        
        private object[] OnEndDeleteDownloadBatch(System.IAsyncResult result) {
            this.EndDeleteDownloadBatch(result);
            return null;
        }
        
        private void OnDeleteDownloadBatchCompleted(object state) {
            if ((this.DeleteDownloadBatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDownloadBatchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDownloadBatchAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            this.DeleteDownloadBatchAsync(batch, _UserRole, null);
        }
        
        public void DeleteDownloadBatchAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, object userState) {
            if ((this.onBeginDeleteDownloadBatchDelegate == null)) {
                this.onBeginDeleteDownloadBatchDelegate = new BeginOperationDelegate(this.OnBeginDeleteDownloadBatch);
            }
            if ((this.onEndDeleteDownloadBatchDelegate == null)) {
                this.onEndDeleteDownloadBatchDelegate = new EndOperationDelegate(this.OnEndDeleteDownloadBatch);
            }
            if ((this.onDeleteDownloadBatchCompletedDelegate == null)) {
                this.onDeleteDownloadBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDownloadBatchCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDownloadBatchDelegate, new object[] {
                        batch,
                        _UserRole}, this.onEndDeleteDownloadBatchDelegate, this.onDeleteDownloadBatchCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ImportFileData ImportBatchFile(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            return base.Channel.ImportBatchFile(batch, _UserRole);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginImportBatchFile(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImportBatchFile(batch, _UserRole, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ImportFileData EndImportBatchFile(System.IAsyncResult result) {
            return base.Channel.EndImportBatchFile(result);
        }
        
        private System.IAsyncResult OnBeginImportBatchFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch = ((MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[1]));
            return this.BeginImportBatchFile(batch, _UserRole, callback, asyncState);
        }
        
        private object[] OnEndImportBatchFile(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ImportFileData retVal = this.EndImportBatchFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnImportBatchFileCompleted(object state) {
            if ((this.ImportBatchFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImportBatchFileCompleted(this, new ImportBatchFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImportBatchFileAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            this.ImportBatchFileAsync(batch, _UserRole, null);
        }
        
        public void ImportBatchFileAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, object userState) {
            if ((this.onBeginImportBatchFileDelegate == null)) {
                this.onBeginImportBatchFileDelegate = new BeginOperationDelegate(this.OnBeginImportBatchFile);
            }
            if ((this.onEndImportBatchFileDelegate == null)) {
                this.onEndImportBatchFileDelegate = new EndOperationDelegate(this.OnEndImportBatchFile);
            }
            if ((this.onImportBatchFileCompletedDelegate == null)) {
                this.onImportBatchFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImportBatchFileCompleted);
            }
            base.InvokeAsync(this.onBeginImportBatchFileDelegate, new object[] {
                        batch,
                        _UserRole}, this.onEndImportBatchFileDelegate, this.onImportBatchFileCompletedDelegate, userState);
        }
        
        public System.Nullable<System.DateTime> UpdateEntryStatus(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch) {
            return base.Channel.UpdateEntryStatus(batch);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateEntryStatus(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEntryStatus(batch, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Nullable<System.DateTime> EndUpdateEntryStatus(System.IAsyncResult result) {
            return base.Channel.EndUpdateEntryStatus(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEntryStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch = ((MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch)(inValues[0]));
            return this.BeginUpdateEntryStatus(batch, callback, asyncState);
        }
        
        private object[] OnEndUpdateEntryStatus(System.IAsyncResult result) {
            System.Nullable<System.DateTime> retVal = this.EndUpdateEntryStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateEntryStatusCompleted(object state) {
            if ((this.UpdateEntryStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEntryStatusCompleted(this, new UpdateEntryStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEntryStatusAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch) {
            this.UpdateEntryStatusAsync(batch, null);
        }
        
        public void UpdateEntryStatusAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, object userState) {
            if ((this.onBeginUpdateEntryStatusDelegate == null)) {
                this.onBeginUpdateEntryStatusDelegate = new BeginOperationDelegate(this.OnBeginUpdateEntryStatus);
            }
            if ((this.onEndUpdateEntryStatusDelegate == null)) {
                this.onEndUpdateEntryStatusDelegate = new EndOperationDelegate(this.OnEndUpdateEntryStatus);
            }
            if ((this.onUpdateEntryStatusCompletedDelegate == null)) {
                this.onUpdateEntryStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEntryStatusCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEntryStatusDelegate, new object[] {
                        batch}, this.onEndUpdateEntryStatusDelegate, this.onUpdateEntryStatusCompletedDelegate, userState);
        }
        
        public void ClearDownloadBatch(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            base.Channel.ClearDownloadBatch(batch, _UserRole);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClearDownloadBatch(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearDownloadBatch(batch, _UserRole, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndClearDownloadBatch(System.IAsyncResult result) {
            base.Channel.EndClearDownloadBatch(result);
        }
        
        private System.IAsyncResult OnBeginClearDownloadBatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch = ((MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[1]));
            return this.BeginClearDownloadBatch(batch, _UserRole, callback, asyncState);
        }
        
        private object[] OnEndClearDownloadBatch(System.IAsyncResult result) {
            this.EndClearDownloadBatch(result);
            return null;
        }
        
        private void OnClearDownloadBatchCompleted(object state) {
            if ((this.ClearDownloadBatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearDownloadBatchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearDownloadBatchAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            this.ClearDownloadBatchAsync(batch, _UserRole, null);
        }
        
        public void ClearDownloadBatchAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DownloadBatch batch, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, object userState) {
            if ((this.onBeginClearDownloadBatchDelegate == null)) {
                this.onBeginClearDownloadBatchDelegate = new BeginOperationDelegate(this.OnBeginClearDownloadBatch);
            }
            if ((this.onEndClearDownloadBatchDelegate == null)) {
                this.onEndClearDownloadBatchDelegate = new EndOperationDelegate(this.OnEndClearDownloadBatch);
            }
            if ((this.onClearDownloadBatchCompletedDelegate == null)) {
                this.onClearDownloadBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearDownloadBatchCompleted);
            }
            base.InvokeAsync(this.onBeginClearDownloadBatchDelegate, new object[] {
                        batch,
                        _UserRole}, this.onEndClearDownloadBatchDelegate, this.onClearDownloadBatchCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IStatement")]
    public interface IStatement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatement/PostStatement", ReplyAction="http://tempuri.org/IStatement/PostStatementResponse")]
        void PostStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatement/PostStatement", ReplyAction="http://tempuri.org/IStatement/PostStatementResponse")]
        System.IAsyncResult BeginPostStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, System.AsyncCallback callback, object asyncState);
        
        void EndPostStatement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatement/CloseStatement", ReplyAction="http://tempuri.org/IStatement/CloseStatementResponse")]
        bool CloseStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatement/CloseStatement", ReplyAction="http://tempuri.org/IStatement/CloseStatementResponse")]
        System.IAsyncResult BeginCloseStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, System.AsyncCallback callback, object asyncState);
        
        bool EndCloseStatement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatement/CloseStatementFromDeu", ReplyAction="http://tempuri.org/IStatement/CloseStatementFromDeuResponse")]
        bool CloseStatementFromDeu(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatement/CloseStatementFromDeu", ReplyAction="http://tempuri.org/IStatement/CloseStatementFromDeuResponse")]
        System.IAsyncResult BeginCloseStatementFromDeu(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, System.AsyncCallback callback, object asyncState);
        
        bool EndCloseStatementFromDeu(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatement/OpenStatement", ReplyAction="http://tempuri.org/IStatement/OpenStatementResponse")]
        bool OpenStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatement/OpenStatement", ReplyAction="http://tempuri.org/IStatement/OpenStatementResponse")]
        System.IAsyncResult BeginOpenStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, System.AsyncCallback callback, object asyncState);
        
        bool EndOpenStatement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatement/GetFindStatement", ReplyAction="http://tempuri.org/IStatement/GetFindStatementResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Statement GetFindStatement(int StatementNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatement/GetFindStatement", ReplyAction="http://tempuri.org/IStatement/GetFindStatementResponse")]
        System.IAsyncResult BeginGetFindStatement(int StatementNumber, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Statement EndGetFindStatement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatement/AddUpdateStatement", ReplyAction="http://tempuri.org/IStatement/AddUpdateStatementResponse")]
        int AddUpdateStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatement/AddUpdateStatement", ReplyAction="http://tempuri.org/IStatement/AddUpdateStatementResponse")]
        System.IAsyncResult BeginAddUpdateStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, System.AsyncCallback callback, object asyncState);
        
        int EndAddUpdateStatement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatement/DeleteStatement", ReplyAction="http://tempuri.org/IStatement/DeleteStatementResponse")]
        bool DeleteStatement(System.Guid StatementId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, string OpertaionType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatement/DeleteStatement", ReplyAction="http://tempuri.org/IStatement/DeleteStatementResponse")]
        System.IAsyncResult BeginDeleteStatement(System.Guid StatementId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, string OpertaionType, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteStatement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatement/GetStatement", ReplyAction="http://tempuri.org/IStatement/GetStatementResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Statement GetStatement(System.Guid StatementID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatement/GetStatement", ReplyAction="http://tempuri.org/IStatement/GetStatementResponse")]
        System.IAsyncResult BeginGetStatement(System.Guid StatementID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Statement EndGetStatement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatement/UpdateCheckAmount", ReplyAction="http://tempuri.org/IStatement/UpdateCheckAmountResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableStatementData UpdateCheckAmount(System.Guid statementId, decimal checkAmount, decimal dcNetAmount, decimal adjustment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatement/UpdateCheckAmount", ReplyAction="http://tempuri.org/IStatement/UpdateCheckAmountResponse")]
        System.IAsyncResult BeginUpdateCheckAmount(System.Guid statementId, decimal checkAmount, decimal dcNetAmount, decimal adjustment, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableStatementData EndUpdateCheckAmount(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStatementChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IStatement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloseStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CloseStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloseStatementFromDeuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CloseStatementFromDeuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpenStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OpenStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFindStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFindStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Statement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Statement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdateStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdateStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Statement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Statement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateCheckAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateCheckAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableStatementData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableStatementData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatementClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IStatement>, MyAgencyVault.VM.MyAgencyVaultSvc.IStatement {
        
        private BeginOperationDelegate onBeginPostStatementDelegate;
        
        private EndOperationDelegate onEndPostStatementDelegate;
        
        private System.Threading.SendOrPostCallback onPostStatementCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseStatementDelegate;
        
        private EndOperationDelegate onEndCloseStatementDelegate;
        
        private System.Threading.SendOrPostCallback onCloseStatementCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseStatementFromDeuDelegate;
        
        private EndOperationDelegate onEndCloseStatementFromDeuDelegate;
        
        private System.Threading.SendOrPostCallback onCloseStatementFromDeuCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenStatementDelegate;
        
        private EndOperationDelegate onEndOpenStatementDelegate;
        
        private System.Threading.SendOrPostCallback onOpenStatementCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFindStatementDelegate;
        
        private EndOperationDelegate onEndGetFindStatementDelegate;
        
        private System.Threading.SendOrPostCallback onGetFindStatementCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateStatementDelegate;
        
        private EndOperationDelegate onEndAddUpdateStatementDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateStatementCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteStatementDelegate;
        
        private EndOperationDelegate onEndDeleteStatementDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteStatementCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStatementDelegate;
        
        private EndOperationDelegate onEndGetStatementDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatementCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateCheckAmountDelegate;
        
        private EndOperationDelegate onEndUpdateCheckAmountDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCheckAmountCompletedDelegate;
        
        public StatementClient() {
        }
        
        public StatementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PostStatementCompleted;
        
        public event System.EventHandler<CloseStatementCompletedEventArgs> CloseStatementCompleted;
        
        public event System.EventHandler<CloseStatementFromDeuCompletedEventArgs> CloseStatementFromDeuCompleted;
        
        public event System.EventHandler<OpenStatementCompletedEventArgs> OpenStatementCompleted;
        
        public event System.EventHandler<GetFindStatementCompletedEventArgs> GetFindStatementCompleted;
        
        public event System.EventHandler<AddUpdateStatementCompletedEventArgs> AddUpdateStatementCompleted;
        
        public event System.EventHandler<DeleteStatementCompletedEventArgs> DeleteStatementCompleted;
        
        public event System.EventHandler<GetStatementCompletedEventArgs> GetStatementCompleted;
        
        public event System.EventHandler<UpdateCheckAmountCompletedEventArgs> UpdateCheckAmountCompleted;
        
        public void PostStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment) {
            base.Channel.PostStatement(Stment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostStatement(Stment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPostStatement(System.IAsyncResult result) {
            base.Channel.EndPostStatement(result);
        }
        
        private System.IAsyncResult OnBeginPostStatement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment = ((MyAgencyVault.VM.MyAgencyVaultSvc.Statement)(inValues[0]));
            return this.BeginPostStatement(Stment, callback, asyncState);
        }
        
        private object[] OnEndPostStatement(System.IAsyncResult result) {
            this.EndPostStatement(result);
            return null;
        }
        
        private void OnPostStatementCompleted(object state) {
            if ((this.PostStatementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostStatementAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment) {
            this.PostStatementAsync(Stment, null);
        }
        
        public void PostStatementAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, object userState) {
            if ((this.onBeginPostStatementDelegate == null)) {
                this.onBeginPostStatementDelegate = new BeginOperationDelegate(this.OnBeginPostStatement);
            }
            if ((this.onEndPostStatementDelegate == null)) {
                this.onEndPostStatementDelegate = new EndOperationDelegate(this.OnEndPostStatement);
            }
            if ((this.onPostStatementCompletedDelegate == null)) {
                this.onPostStatementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostStatementCompleted);
            }
            base.InvokeAsync(this.onBeginPostStatementDelegate, new object[] {
                        Stment}, this.onEndPostStatementDelegate, this.onPostStatementCompletedDelegate, userState);
        }
        
        public bool CloseStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment) {
            return base.Channel.CloseStatement(Stment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCloseStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCloseStatement(Stment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCloseStatement(System.IAsyncResult result) {
            return base.Channel.EndCloseStatement(result);
        }
        
        private System.IAsyncResult OnBeginCloseStatement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment = ((MyAgencyVault.VM.MyAgencyVaultSvc.Statement)(inValues[0]));
            return this.BeginCloseStatement(Stment, callback, asyncState);
        }
        
        private object[] OnEndCloseStatement(System.IAsyncResult result) {
            bool retVal = this.EndCloseStatement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCloseStatementCompleted(object state) {
            if ((this.CloseStatementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseStatementCompleted(this, new CloseStatementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseStatementAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment) {
            this.CloseStatementAsync(Stment, null);
        }
        
        public void CloseStatementAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, object userState) {
            if ((this.onBeginCloseStatementDelegate == null)) {
                this.onBeginCloseStatementDelegate = new BeginOperationDelegate(this.OnBeginCloseStatement);
            }
            if ((this.onEndCloseStatementDelegate == null)) {
                this.onEndCloseStatementDelegate = new EndOperationDelegate(this.OnEndCloseStatement);
            }
            if ((this.onCloseStatementCompletedDelegate == null)) {
                this.onCloseStatementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseStatementCompleted);
            }
            base.InvokeAsync(this.onBeginCloseStatementDelegate, new object[] {
                        Stment}, this.onEndCloseStatementDelegate, this.onCloseStatementCompletedDelegate, userState);
        }
        
        public bool CloseStatementFromDeu(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment) {
            return base.Channel.CloseStatementFromDeu(Stment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCloseStatementFromDeu(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCloseStatementFromDeu(Stment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCloseStatementFromDeu(System.IAsyncResult result) {
            return base.Channel.EndCloseStatementFromDeu(result);
        }
        
        private System.IAsyncResult OnBeginCloseStatementFromDeu(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment = ((MyAgencyVault.VM.MyAgencyVaultSvc.Statement)(inValues[0]));
            return this.BeginCloseStatementFromDeu(Stment, callback, asyncState);
        }
        
        private object[] OnEndCloseStatementFromDeu(System.IAsyncResult result) {
            bool retVal = this.EndCloseStatementFromDeu(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCloseStatementFromDeuCompleted(object state) {
            if ((this.CloseStatementFromDeuCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseStatementFromDeuCompleted(this, new CloseStatementFromDeuCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseStatementFromDeuAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment) {
            this.CloseStatementFromDeuAsync(Stment, null);
        }
        
        public void CloseStatementFromDeuAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, object userState) {
            if ((this.onBeginCloseStatementFromDeuDelegate == null)) {
                this.onBeginCloseStatementFromDeuDelegate = new BeginOperationDelegate(this.OnBeginCloseStatementFromDeu);
            }
            if ((this.onEndCloseStatementFromDeuDelegate == null)) {
                this.onEndCloseStatementFromDeuDelegate = new EndOperationDelegate(this.OnEndCloseStatementFromDeu);
            }
            if ((this.onCloseStatementFromDeuCompletedDelegate == null)) {
                this.onCloseStatementFromDeuCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseStatementFromDeuCompleted);
            }
            base.InvokeAsync(this.onBeginCloseStatementFromDeuDelegate, new object[] {
                        Stment}, this.onEndCloseStatementFromDeuDelegate, this.onCloseStatementFromDeuCompletedDelegate, userState);
        }
        
        public bool OpenStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment) {
            return base.Channel.OpenStatement(Stment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOpenStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOpenStatement(Stment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndOpenStatement(System.IAsyncResult result) {
            return base.Channel.EndOpenStatement(result);
        }
        
        private System.IAsyncResult OnBeginOpenStatement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment = ((MyAgencyVault.VM.MyAgencyVaultSvc.Statement)(inValues[0]));
            return this.BeginOpenStatement(Stment, callback, asyncState);
        }
        
        private object[] OnEndOpenStatement(System.IAsyncResult result) {
            bool retVal = this.EndOpenStatement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOpenStatementCompleted(object state) {
            if ((this.OpenStatementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenStatementCompleted(this, new OpenStatementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenStatementAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment) {
            this.OpenStatementAsync(Stment, null);
        }
        
        public void OpenStatementAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, object userState) {
            if ((this.onBeginOpenStatementDelegate == null)) {
                this.onBeginOpenStatementDelegate = new BeginOperationDelegate(this.OnBeginOpenStatement);
            }
            if ((this.onEndOpenStatementDelegate == null)) {
                this.onEndOpenStatementDelegate = new EndOperationDelegate(this.OnEndOpenStatement);
            }
            if ((this.onOpenStatementCompletedDelegate == null)) {
                this.onOpenStatementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenStatementCompleted);
            }
            base.InvokeAsync(this.onBeginOpenStatementDelegate, new object[] {
                        Stment}, this.onEndOpenStatementDelegate, this.onOpenStatementCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Statement GetFindStatement(int StatementNumber) {
            return base.Channel.GetFindStatement(StatementNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFindStatement(int StatementNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFindStatement(StatementNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Statement EndGetFindStatement(System.IAsyncResult result) {
            return base.Channel.EndGetFindStatement(result);
        }
        
        private System.IAsyncResult OnBeginGetFindStatement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int StatementNumber = ((int)(inValues[0]));
            return this.BeginGetFindStatement(StatementNumber, callback, asyncState);
        }
        
        private object[] OnEndGetFindStatement(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Statement retVal = this.EndGetFindStatement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFindStatementCompleted(object state) {
            if ((this.GetFindStatementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFindStatementCompleted(this, new GetFindStatementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFindStatementAsync(int StatementNumber) {
            this.GetFindStatementAsync(StatementNumber, null);
        }
        
        public void GetFindStatementAsync(int StatementNumber, object userState) {
            if ((this.onBeginGetFindStatementDelegate == null)) {
                this.onBeginGetFindStatementDelegate = new BeginOperationDelegate(this.OnBeginGetFindStatement);
            }
            if ((this.onEndGetFindStatementDelegate == null)) {
                this.onEndGetFindStatementDelegate = new EndOperationDelegate(this.OnEndGetFindStatement);
            }
            if ((this.onGetFindStatementCompletedDelegate == null)) {
                this.onGetFindStatementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFindStatementCompleted);
            }
            base.InvokeAsync(this.onBeginGetFindStatementDelegate, new object[] {
                        StatementNumber}, this.onEndGetFindStatementDelegate, this.onGetFindStatementCompletedDelegate, userState);
        }
        
        public int AddUpdateStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment) {
            return base.Channel.AddUpdateStatement(Stment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateStatement(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateStatement(Stment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddUpdateStatement(System.IAsyncResult result) {
            return base.Channel.EndAddUpdateStatement(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateStatement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment = ((MyAgencyVault.VM.MyAgencyVaultSvc.Statement)(inValues[0]));
            return this.BeginAddUpdateStatement(Stment, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateStatement(System.IAsyncResult result) {
            int retVal = this.EndAddUpdateStatement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdateStatementCompleted(object state) {
            if ((this.AddUpdateStatementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateStatementCompleted(this, new AddUpdateStatementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateStatementAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment) {
            this.AddUpdateStatementAsync(Stment, null);
        }
        
        public void AddUpdateStatementAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Statement Stment, object userState) {
            if ((this.onBeginAddUpdateStatementDelegate == null)) {
                this.onBeginAddUpdateStatementDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateStatement);
            }
            if ((this.onEndAddUpdateStatementDelegate == null)) {
                this.onEndAddUpdateStatementDelegate = new EndOperationDelegate(this.OnEndAddUpdateStatement);
            }
            if ((this.onAddUpdateStatementCompletedDelegate == null)) {
                this.onAddUpdateStatementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateStatementCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateStatementDelegate, new object[] {
                        Stment}, this.onEndAddUpdateStatementDelegate, this.onAddUpdateStatementCompletedDelegate, userState);
        }
        
        public bool DeleteStatement(System.Guid StatementId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, string OpertaionType) {
            return base.Channel.DeleteStatement(StatementId, _UserRole, OpertaionType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteStatement(System.Guid StatementId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, string OpertaionType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteStatement(StatementId, _UserRole, OpertaionType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteStatement(System.IAsyncResult result) {
            return base.Channel.EndDeleteStatement(result);
        }
        
        private System.IAsyncResult OnBeginDeleteStatement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid StatementId = ((System.Guid)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[1]));
            string OpertaionType = ((string)(inValues[2]));
            return this.BeginDeleteStatement(StatementId, _UserRole, OpertaionType, callback, asyncState);
        }
        
        private object[] OnEndDeleteStatement(System.IAsyncResult result) {
            bool retVal = this.EndDeleteStatement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteStatementCompleted(object state) {
            if ((this.DeleteStatementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteStatementCompleted(this, new DeleteStatementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteStatementAsync(System.Guid StatementId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, string OpertaionType) {
            this.DeleteStatementAsync(StatementId, _UserRole, OpertaionType, null);
        }
        
        public void DeleteStatementAsync(System.Guid StatementId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, string OpertaionType, object userState) {
            if ((this.onBeginDeleteStatementDelegate == null)) {
                this.onBeginDeleteStatementDelegate = new BeginOperationDelegate(this.OnBeginDeleteStatement);
            }
            if ((this.onEndDeleteStatementDelegate == null)) {
                this.onEndDeleteStatementDelegate = new EndOperationDelegate(this.OnEndDeleteStatement);
            }
            if ((this.onDeleteStatementCompletedDelegate == null)) {
                this.onDeleteStatementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteStatementCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteStatementDelegate, new object[] {
                        StatementId,
                        _UserRole,
                        OpertaionType}, this.onEndDeleteStatementDelegate, this.onDeleteStatementCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Statement GetStatement(System.Guid StatementID) {
            return base.Channel.GetStatement(StatementID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStatement(System.Guid StatementID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStatement(StatementID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Statement EndGetStatement(System.IAsyncResult result) {
            return base.Channel.EndGetStatement(result);
        }
        
        private System.IAsyncResult OnBeginGetStatement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid StatementID = ((System.Guid)(inValues[0]));
            return this.BeginGetStatement(StatementID, callback, asyncState);
        }
        
        private object[] OnEndGetStatement(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Statement retVal = this.EndGetStatement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatementCompleted(object state) {
            if ((this.GetStatementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatementCompleted(this, new GetStatementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatementAsync(System.Guid StatementID) {
            this.GetStatementAsync(StatementID, null);
        }
        
        public void GetStatementAsync(System.Guid StatementID, object userState) {
            if ((this.onBeginGetStatementDelegate == null)) {
                this.onBeginGetStatementDelegate = new BeginOperationDelegate(this.OnBeginGetStatement);
            }
            if ((this.onEndGetStatementDelegate == null)) {
                this.onEndGetStatementDelegate = new EndOperationDelegate(this.OnEndGetStatement);
            }
            if ((this.onGetStatementCompletedDelegate == null)) {
                this.onGetStatementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatementCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatementDelegate, new object[] {
                        StatementID}, this.onEndGetStatementDelegate, this.onGetStatementCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableStatementData UpdateCheckAmount(System.Guid statementId, decimal checkAmount, decimal dcNetAmount, decimal adjustment) {
            return base.Channel.UpdateCheckAmount(statementId, checkAmount, dcNetAmount, adjustment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateCheckAmount(System.Guid statementId, decimal checkAmount, decimal dcNetAmount, decimal adjustment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateCheckAmount(statementId, checkAmount, dcNetAmount, adjustment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableStatementData EndUpdateCheckAmount(System.IAsyncResult result) {
            return base.Channel.EndUpdateCheckAmount(result);
        }
        
        private System.IAsyncResult OnBeginUpdateCheckAmount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid statementId = ((System.Guid)(inValues[0]));
            decimal checkAmount = ((decimal)(inValues[1]));
            decimal dcNetAmount = ((decimal)(inValues[2]));
            decimal adjustment = ((decimal)(inValues[3]));
            return this.BeginUpdateCheckAmount(statementId, checkAmount, dcNetAmount, adjustment, callback, asyncState);
        }
        
        private object[] OnEndUpdateCheckAmount(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ModifiableStatementData retVal = this.EndUpdateCheckAmount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateCheckAmountCompleted(object state) {
            if ((this.UpdateCheckAmountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCheckAmountCompleted(this, new UpdateCheckAmountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateCheckAmountAsync(System.Guid statementId, decimal checkAmount, decimal dcNetAmount, decimal adjustment) {
            this.UpdateCheckAmountAsync(statementId, checkAmount, dcNetAmount, adjustment, null);
        }
        
        public void UpdateCheckAmountAsync(System.Guid statementId, decimal checkAmount, decimal dcNetAmount, decimal adjustment, object userState) {
            if ((this.onBeginUpdateCheckAmountDelegate == null)) {
                this.onBeginUpdateCheckAmountDelegate = new BeginOperationDelegate(this.OnBeginUpdateCheckAmount);
            }
            if ((this.onEndUpdateCheckAmountDelegate == null)) {
                this.onEndUpdateCheckAmountDelegate = new EndOperationDelegate(this.OnEndUpdateCheckAmount);
            }
            if ((this.onUpdateCheckAmountCompletedDelegate == null)) {
                this.onUpdateCheckAmountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCheckAmountCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateCheckAmountDelegate, new object[] {
                        statementId,
                        checkAmount,
                        dcNetAmount,
                        adjustment}, this.onEndUpdateCheckAmountDelegate, this.onUpdateCheckAmountCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPolicy")]
    public interface IPolicy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/AddUpdatePolicy", ReplyAction="http://tempuri.org/IPolicy/AddUpdatePolicyResponse")]
        void AddUpdatePolicy(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/AddUpdatePolicy", ReplyAction="http://tempuri.org/IPolicy/AddUpdatePolicyResponse")]
        System.IAsyncResult BeginAddUpdatePolicy(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/SavePolicyData", ReplyAction="http://tempuri.org/IPolicy/SavePolicyDataResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus SavePolicyData(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/SavePolicyData", ReplyAction="http://tempuri.org/IPolicy/SavePolicyDataResponse")]
        System.IAsyncResult BeginSavePolicyData(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus EndSavePolicyData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/SavePolicy", ReplyAction="http://tempuri.org/IPolicy/SavePolicyResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus SavePolicy(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy, string strRenewal, string strCoverageNickName, System.Nullable<System.Guid> CurrentUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/SavePolicy", ReplyAction="http://tempuri.org/IPolicy/SavePolicyResponse")]
        System.IAsyncResult BeginSavePolicy(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy, string strRenewal, string strCoverageNickName, System.Nullable<System.Guid> CurrentUserID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus EndSavePolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/UpdateRPolicyStatus", ReplyAction="http://tempuri.org/IPolicy/UpdateRPolicyStatusResponse")]
        void UpdateRPolicyStatus(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/UpdateRPolicyStatus", ReplyAction="http://tempuri.org/IPolicy/UpdateRPolicyStatusResponse")]
        System.IAsyncResult BeginUpdateRPolicyStatus(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateRPolicyStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/UpdatePolicySetting", ReplyAction="http://tempuri.org/IPolicy/UpdatePolicySettingResponse")]
        void UpdatePolicySetting(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/UpdatePolicySetting", ReplyAction="http://tempuri.org/IPolicy/UpdatePolicySettingResponse")]
        System.IAsyncResult BeginUpdatePolicySetting(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePolicySetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/DeletePolicy", ReplyAction="http://tempuri.org/IPolicy/DeletePolicyResponse")]
        void DeletePolicy(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/DeletePolicy", ReplyAction="http://tempuri.org/IPolicy/DeletePolicyResponse")]
        System.IAsyncResult BeginDeletePolicy(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/IsTrackPaymentChecked", ReplyAction="http://tempuri.org/IPolicy/IsTrackPaymentCheckedResponse")]
        bool IsTrackPaymentChecked(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/IsTrackPaymentChecked", ReplyAction="http://tempuri.org/IPolicy/IsTrackPaymentCheckedResponse")]
        System.IAsyncResult BeginIsTrackPaymentChecked(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        bool EndIsTrackPaymentChecked(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/GetPolicyStatusID", ReplyAction="http://tempuri.org/IPolicy/GetPolicyStatusIDResponse")]
        System.Nullable<int> GetPolicyStatusID(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/GetPolicyStatusID", ReplyAction="http://tempuri.org/IPolicy/GetPolicyStatusIDResponse")]
        System.IAsyncResult BeginGetPolicyStatusID(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<int> EndGetPolicyStatusID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/GenerateBatch", ReplyAction="http://tempuri.org/IPolicy/GenerateBatchResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Batch GenerateBatch(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policy);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/GenerateBatch", ReplyAction="http://tempuri.org/IPolicy/GenerateBatchResponse")]
        System.IAsyncResult BeginGenerateBatch(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policy, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Batch EndGenerateBatch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/GenerateStatment", ReplyAction="http://tempuri.org/IPolicy/GenerateStatmentResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Statement GenerateStatment(System.Guid BatchId, System.Guid PayorId, decimal PaymentRecived, System.Guid CreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/GenerateStatment", ReplyAction="http://tempuri.org/IPolicy/GenerateStatmentResponse")]
        System.IAsyncResult BeginGenerateStatment(System.Guid BatchId, System.Guid PayorId, decimal PaymentRecived, System.Guid CreatedBy, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Statement EndGenerateStatment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/AddUpdatePolicyHistory", ReplyAction="http://tempuri.org/IPolicy/AddUpdatePolicyHistoryResponse")]
        void AddUpdatePolicyHistory(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/AddUpdatePolicyHistory", ReplyAction="http://tempuri.org/IPolicy/AddUpdatePolicyHistoryResponse")]
        System.IAsyncResult BeginAddUpdatePolicyHistory(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePolicyHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/GetPolicyHistoryIdWise", ReplyAction="http://tempuri.org/IPolicy/GetPolicyHistoryIdWiseResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData GetPolicyHistoryIdWise(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/GetPolicyHistoryIdWise", ReplyAction="http://tempuri.org/IPolicy/GetPolicyHistoryIdWiseResponse")]
        System.IAsyncResult BeginGetPolicyHistoryIdWise(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData EndGetPolicyHistoryIdWise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/DeletePolicyHistory", ReplyAction="http://tempuri.org/IPolicy/DeletePolicyHistoryResponse")]
        void DeletePolicyHistory(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policyrecord);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/DeletePolicyHistory", ReplyAction="http://tempuri.org/IPolicy/DeletePolicyHistoryResponse")]
        System.IAsyncResult BeginDeletePolicyHistory(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policyrecord, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePolicyHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/DeletePolicyHistoryPermanetById", ReplyAction="http://tempuri.org/IPolicy/DeletePolicyHistoryPermanetByIdResponse")]
        void DeletePolicyHistoryPermanetById(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _Policy);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/DeletePolicyHistoryPermanetById", ReplyAction="http://tempuri.org/IPolicy/DeletePolicyHistoryPermanetByIdResponse")]
        System.IAsyncResult BeginDeletePolicyHistoryPermanetById(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _Policy, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePolicyHistoryPermanetById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/CheckForPolicyPaymentExists", ReplyAction="http://tempuri.org/IPolicy/CheckForPolicyPaymentExistsResponse")]
        bool CheckForPolicyPaymentExists(System.Guid Policyid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/CheckForPolicyPaymentExists", ReplyAction="http://tempuri.org/IPolicy/CheckForPolicyPaymentExistsResponse")]
        System.IAsyncResult BeginCheckForPolicyPaymentExists(System.Guid Policyid, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckForPolicyPaymentExists(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/GetPolicydata", ReplyAction="http://tempuri.org/IPolicy/GetPolicydataResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> GetPolicydata(System.Collections.Generic.Dictionary<string, object> parameters);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/GetPolicydata", ReplyAction="http://tempuri.org/IPolicy/GetPolicydataResponse")]
        System.IAsyncResult BeginGetPolicydata(System.Collections.Generic.Dictionary<string, object> parameters, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> EndGetPolicydata(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/GetPoliciesLicenseeWise", ReplyAction="http://tempuri.org/IPolicy/GetPoliciesLicenseeWiseResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> GetPoliciesLicenseeWise(System.Guid LicenseeId, System.Nullable<MyAgencyVault.VM.MyAgencyVaultSvc._PolicyStatus> policyStatus, System.Nullable<System.Guid> ClientId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/GetPoliciesLicenseeWise", ReplyAction="http://tempuri.org/IPolicy/GetPoliciesLicenseeWiseResponse")]
        System.IAsyncResult BeginGetPoliciesLicenseeWise(System.Guid LicenseeId, System.Nullable<MyAgencyVault.VM.MyAgencyVaultSvc._PolicyStatus> policyStatus, System.Nullable<System.Guid> ClientId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> EndGetPoliciesLicenseeWise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/UpdatePolicyTermDate", ReplyAction="http://tempuri.org/IPolicy/UpdatePolicyTermDateResponse")]
        void UpdatePolicyTermDate(System.Guid policyID, System.Nullable<System.DateTime> dtTermReson);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/UpdatePolicyTermDate", ReplyAction="http://tempuri.org/IPolicy/UpdatePolicyTermDateResponse")]
        System.IAsyncResult BeginUpdatePolicyTermDate(System.Guid policyID, System.Nullable<System.DateTime> dtTermReson, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePolicyTermDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/CalculatePMC", ReplyAction="http://tempuri.org/IPolicy/CalculatePMCResponse")]
        decimal CalculatePMC(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/CalculatePMC", ReplyAction="http://tempuri.org/IPolicy/CalculatePMCResponse")]
        System.IAsyncResult BeginCalculatePMC(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        decimal EndCalculatePMC(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/CalculatePAC", ReplyAction="http://tempuri.org/IPolicy/CalculatePACResponse")]
        decimal CalculatePAC(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/CalculatePAC", ReplyAction="http://tempuri.org/IPolicy/CalculatePACResponse")]
        System.IAsyncResult BeginCalculatePAC(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        decimal EndCalculatePAC(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/GetPolicyStting", ReplyAction="http://tempuri.org/IPolicy/GetPolicySttingResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData GetPolicyStting(System.Guid PolicyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/GetPolicyStting", ReplyAction="http://tempuri.org/IPolicy/GetPolicySttingResponse")]
        System.IAsyncResult BeginGetPolicyStting(System.Guid PolicyID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData EndGetPolicyStting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/GetFollowUpDate", ReplyAction="http://tempuri.org/IPolicy/GetFollowUpDateResponse")]
        System.Nullable<System.DateTime> GetFollowUpDate(System.Guid PolicyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/GetFollowUpDate", ReplyAction="http://tempuri.org/IPolicy/GetFollowUpDateResponse")]
        System.IAsyncResult BeginGetFollowUpDate(System.Guid PolicyID, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.DateTime> EndGetFollowUpDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/GetPolicyProductType", ReplyAction="http://tempuri.org/IPolicy/GetPolicyProductTypeResponse")]
        string GetPolicyProductType(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/GetPolicyProductType", ReplyAction="http://tempuri.org/IPolicy/GetPolicyProductTypeResponse")]
        System.IAsyncResult BeginGetPolicyProductType(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, System.AsyncCallback callback, object asyncState);
        
        string EndGetPolicyProductType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/GetPolicyClientWise", ReplyAction="http://tempuri.org/IPolicy/GetPolicyClientWiseResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> GetPolicyClientWise(System.Guid LicenseeId, System.Guid ClientId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/GetPolicyClientWise", ReplyAction="http://tempuri.org/IPolicy/GetPolicyClientWiseResponse")]
        System.IAsyncResult BeginGetPolicyClientWise(System.Guid LicenseeId, System.Guid ClientId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> EndGetPolicyClientWise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/GetPolicyUniqueKeyName", ReplyAction="http://tempuri.org/IPolicy/GetPolicyUniqueKeyNameResponse")]
        string GetPolicyUniqueKeyName();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/GetPolicyUniqueKeyName", ReplyAction="http://tempuri.org/IPolicy/GetPolicyUniqueKeyNameResponse")]
        System.IAsyncResult BeginGetPolicyUniqueKeyName(System.AsyncCallback callback, object asyncState);
        
        string EndGetPolicyUniqueKeyName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/CompareExcel", ReplyAction="http://tempuri.org/IPolicy/CompareExcelResponse")]
        string CompareExcel(System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/CompareExcel", ReplyAction="http://tempuri.org/IPolicy/CompareExcelResponse")]
        System.IAsyncResult BeginCompareExcel(System.Data.DataTable dt, System.AsyncCallback callback, object asyncState);
        
        string EndCompareExcel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicy/ImportPolicy", ReplyAction="http://tempuri.org/IPolicy/ImportPolicyResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyImportStatus ImportPolicy(System.Data.DataTable tbExcel, System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GlobalAgentList, System.Guid LicenseeID, System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> CompTypeList);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicy/ImportPolicy", ReplyAction="http://tempuri.org/IPolicy/ImportPolicyResponse")]
        System.IAsyncResult BeginImportPolicy(System.Data.DataTable tbExcel, System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GlobalAgentList, System.Guid LicenseeID, System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> CompTypeList, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyImportStatus EndImportPolicy(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPolicyChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPolicy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SavePolicyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SavePolicyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SavePolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SavePolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsTrackPaymentCheckedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsTrackPaymentCheckedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyStatusIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyStatusIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Batch Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Batch)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateStatmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateStatmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Statement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Statement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyHistoryIdWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyHistoryIdWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckForPolicyPaymentExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckForPolicyPaymentExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicydataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicydataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPoliciesLicenseeWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPoliciesLicenseeWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatePMCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CalculatePMCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatePACCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CalculatePACCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicySttingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicySttingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFollowUpDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFollowUpDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.DateTime> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.DateTime>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyProductTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyProductTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyClientWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyClientWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyUniqueKeyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyUniqueKeyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompareExcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CompareExcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ImportPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyImportStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyImportStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PolicyClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPolicy>, MyAgencyVault.VM.MyAgencyVaultSvc.IPolicy {
        
        private BeginOperationDelegate onBeginAddUpdatePolicyDelegate;
        
        private EndOperationDelegate onEndAddUpdatePolicyDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePolicyDataDelegate;
        
        private EndOperationDelegate onEndSavePolicyDataDelegate;
        
        private System.Threading.SendOrPostCallback onSavePolicyDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePolicyDelegate;
        
        private EndOperationDelegate onEndSavePolicyDelegate;
        
        private System.Threading.SendOrPostCallback onSavePolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRPolicyStatusDelegate;
        
        private EndOperationDelegate onEndUpdateRPolicyStatusDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRPolicyStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePolicySettingDelegate;
        
        private EndOperationDelegate onEndUpdatePolicySettingDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePolicySettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePolicyDelegate;
        
        private EndOperationDelegate onEndDeletePolicyDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsTrackPaymentCheckedDelegate;
        
        private EndOperationDelegate onEndIsTrackPaymentCheckedDelegate;
        
        private System.Threading.SendOrPostCallback onIsTrackPaymentCheckedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyStatusIDDelegate;
        
        private EndOperationDelegate onEndGetPolicyStatusIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyStatusIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateBatchDelegate;
        
        private EndOperationDelegate onEndGenerateBatchDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateBatchCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateStatmentDelegate;
        
        private EndOperationDelegate onEndGenerateStatmentDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateStatmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdatePolicyHistoryDelegate;
        
        private EndOperationDelegate onEndAddUpdatePolicyHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePolicyHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyHistoryIdWiseDelegate;
        
        private EndOperationDelegate onEndGetPolicyHistoryIdWiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyHistoryIdWiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePolicyHistoryDelegate;
        
        private EndOperationDelegate onEndDeletePolicyHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePolicyHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePolicyHistoryPermanetByIdDelegate;
        
        private EndOperationDelegate onEndDeletePolicyHistoryPermanetByIdDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePolicyHistoryPermanetByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckForPolicyPaymentExistsDelegate;
        
        private EndOperationDelegate onEndCheckForPolicyPaymentExistsDelegate;
        
        private System.Threading.SendOrPostCallback onCheckForPolicyPaymentExistsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicydataDelegate;
        
        private EndOperationDelegate onEndGetPolicydataDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicydataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPoliciesLicenseeWiseDelegate;
        
        private EndOperationDelegate onEndGetPoliciesLicenseeWiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetPoliciesLicenseeWiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePolicyTermDateDelegate;
        
        private EndOperationDelegate onEndUpdatePolicyTermDateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePolicyTermDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCalculatePMCDelegate;
        
        private EndOperationDelegate onEndCalculatePMCDelegate;
        
        private System.Threading.SendOrPostCallback onCalculatePMCCompletedDelegate;
        
        private BeginOperationDelegate onBeginCalculatePACDelegate;
        
        private EndOperationDelegate onEndCalculatePACDelegate;
        
        private System.Threading.SendOrPostCallback onCalculatePACCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicySttingDelegate;
        
        private EndOperationDelegate onEndGetPolicySttingDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicySttingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFollowUpDateDelegate;
        
        private EndOperationDelegate onEndGetFollowUpDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetFollowUpDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyProductTypeDelegate;
        
        private EndOperationDelegate onEndGetPolicyProductTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyProductTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyClientWiseDelegate;
        
        private EndOperationDelegate onEndGetPolicyClientWiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyClientWiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyUniqueKeyNameDelegate;
        
        private EndOperationDelegate onEndGetPolicyUniqueKeyNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyUniqueKeyNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCompareExcelDelegate;
        
        private EndOperationDelegate onEndCompareExcelDelegate;
        
        private System.Threading.SendOrPostCallback onCompareExcelCompletedDelegate;
        
        private BeginOperationDelegate onBeginImportPolicyDelegate;
        
        private EndOperationDelegate onEndImportPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onImportPolicyCompletedDelegate;
        
        public PolicyClient() {
        }
        
        public PolicyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PolicyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePolicyCompleted;
        
        public event System.EventHandler<SavePolicyDataCompletedEventArgs> SavePolicyDataCompleted;
        
        public event System.EventHandler<SavePolicyCompletedEventArgs> SavePolicyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateRPolicyStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePolicySettingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePolicyCompleted;
        
        public event System.EventHandler<IsTrackPaymentCheckedCompletedEventArgs> IsTrackPaymentCheckedCompleted;
        
        public event System.EventHandler<GetPolicyStatusIDCompletedEventArgs> GetPolicyStatusIDCompleted;
        
        public event System.EventHandler<GenerateBatchCompletedEventArgs> GenerateBatchCompleted;
        
        public event System.EventHandler<GenerateStatmentCompletedEventArgs> GenerateStatmentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePolicyHistoryCompleted;
        
        public event System.EventHandler<GetPolicyHistoryIdWiseCompletedEventArgs> GetPolicyHistoryIdWiseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePolicyHistoryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePolicyHistoryPermanetByIdCompleted;
        
        public event System.EventHandler<CheckForPolicyPaymentExistsCompletedEventArgs> CheckForPolicyPaymentExistsCompleted;
        
        public event System.EventHandler<GetPolicydataCompletedEventArgs> GetPolicydataCompleted;
        
        public event System.EventHandler<GetPoliciesLicenseeWiseCompletedEventArgs> GetPoliciesLicenseeWiseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePolicyTermDateCompleted;
        
        public event System.EventHandler<CalculatePMCCompletedEventArgs> CalculatePMCCompleted;
        
        public event System.EventHandler<CalculatePACCompletedEventArgs> CalculatePACCompleted;
        
        public event System.EventHandler<GetPolicySttingCompletedEventArgs> GetPolicySttingCompleted;
        
        public event System.EventHandler<GetFollowUpDateCompletedEventArgs> GetFollowUpDateCompleted;
        
        public event System.EventHandler<GetPolicyProductTypeCompletedEventArgs> GetPolicyProductTypeCompleted;
        
        public event System.EventHandler<GetPolicyClientWiseCompletedEventArgs> GetPolicyClientWiseCompleted;
        
        public event System.EventHandler<GetPolicyUniqueKeyNameCompletedEventArgs> GetPolicyUniqueKeyNameCompleted;
        
        public event System.EventHandler<CompareExcelCompletedEventArgs> CompareExcelCompleted;
        
        public event System.EventHandler<ImportPolicyCompletedEventArgs> ImportPolicyCompleted;
        
        public void AddUpdatePolicy(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy) {
            base.Channel.AddUpdatePolicy(policy);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePolicy(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePolicy(policy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePolicy(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePolicy(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            return this.BeginAddUpdatePolicy(policy, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePolicy(System.IAsyncResult result) {
            this.EndAddUpdatePolicy(result);
            return null;
        }
        
        private void OnAddUpdatePolicyCompleted(object state) {
            if ((this.AddUpdatePolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePolicyAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy) {
            this.AddUpdatePolicyAsync(policy, null);
        }
        
        public void AddUpdatePolicyAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy, object userState) {
            if ((this.onBeginAddUpdatePolicyDelegate == null)) {
                this.onBeginAddUpdatePolicyDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePolicy);
            }
            if ((this.onEndAddUpdatePolicyDelegate == null)) {
                this.onEndAddUpdatePolicyDelegate = new EndOperationDelegate(this.OnEndAddUpdatePolicy);
            }
            if ((this.onAddUpdatePolicyCompletedDelegate == null)) {
                this.onAddUpdatePolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePolicyCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePolicyDelegate, new object[] {
                        policy}, this.onEndAddUpdatePolicyDelegate, this.onAddUpdatePolicyCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus SavePolicyData(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy) {
            return base.Channel.SavePolicyData(Policy, ReplacedPolicy);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSavePolicyData(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePolicyData(Policy, ReplacedPolicy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus EndSavePolicyData(System.IAsyncResult result) {
            return base.Channel.EndSavePolicyData(result);
        }
        
        private System.IAsyncResult OnBeginSavePolicyData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[1]));
            return this.BeginSavePolicyData(Policy, ReplacedPolicy, callback, asyncState);
        }
        
        private object[] OnEndSavePolicyData(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus retVal = this.EndSavePolicyData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSavePolicyDataCompleted(object state) {
            if ((this.SavePolicyDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePolicyDataCompleted(this, new SavePolicyDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePolicyDataAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy) {
            this.SavePolicyDataAsync(Policy, ReplacedPolicy, null);
        }
        
        public void SavePolicyDataAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy, object userState) {
            if ((this.onBeginSavePolicyDataDelegate == null)) {
                this.onBeginSavePolicyDataDelegate = new BeginOperationDelegate(this.OnBeginSavePolicyData);
            }
            if ((this.onEndSavePolicyDataDelegate == null)) {
                this.onEndSavePolicyDataDelegate = new EndOperationDelegate(this.OnEndSavePolicyData);
            }
            if ((this.onSavePolicyDataCompletedDelegate == null)) {
                this.onSavePolicyDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePolicyDataCompleted);
            }
            base.InvokeAsync(this.onBeginSavePolicyDataDelegate, new object[] {
                        Policy,
                        ReplacedPolicy}, this.onEndSavePolicyDataDelegate, this.onSavePolicyDataCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus SavePolicy(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy, string strRenewal, string strCoverageNickName, System.Nullable<System.Guid> CurrentUserID) {
            return base.Channel.SavePolicy(Policy, ReplacedPolicy, strRenewal, strCoverageNickName, CurrentUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSavePolicy(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy, string strRenewal, string strCoverageNickName, System.Nullable<System.Guid> CurrentUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePolicy(Policy, ReplacedPolicy, strRenewal, strCoverageNickName, CurrentUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus EndSavePolicy(System.IAsyncResult result) {
            return base.Channel.EndSavePolicy(result);
        }
        
        private System.IAsyncResult OnBeginSavePolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[1]));
            string strRenewal = ((string)(inValues[2]));
            string strCoverageNickName = ((string)(inValues[3]));
            System.Nullable<System.Guid> CurrentUserID = ((System.Nullable<System.Guid>)(inValues[4]));
            return this.BeginSavePolicy(Policy, ReplacedPolicy, strRenewal, strCoverageNickName, CurrentUserID, callback, asyncState);
        }
        
        private object[] OnEndSavePolicy(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicySavedStatus retVal = this.EndSavePolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSavePolicyCompleted(object state) {
            if ((this.SavePolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePolicyCompleted(this, new SavePolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePolicyAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy, string strRenewal, string strCoverageNickName, System.Nullable<System.Guid> CurrentUserID) {
            this.SavePolicyAsync(Policy, ReplacedPolicy, strRenewal, strCoverageNickName, CurrentUserID, null);
        }
        
        public void SavePolicyAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Policy, MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData ReplacedPolicy, string strRenewal, string strCoverageNickName, System.Nullable<System.Guid> CurrentUserID, object userState) {
            if ((this.onBeginSavePolicyDelegate == null)) {
                this.onBeginSavePolicyDelegate = new BeginOperationDelegate(this.OnBeginSavePolicy);
            }
            if ((this.onEndSavePolicyDelegate == null)) {
                this.onEndSavePolicyDelegate = new EndOperationDelegate(this.OnEndSavePolicy);
            }
            if ((this.onSavePolicyCompletedDelegate == null)) {
                this.onSavePolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePolicyCompleted);
            }
            base.InvokeAsync(this.onBeginSavePolicyDelegate, new object[] {
                        Policy,
                        ReplacedPolicy,
                        strRenewal,
                        strCoverageNickName,
                        CurrentUserID}, this.onEndSavePolicyDelegate, this.onSavePolicyCompletedDelegate, userState);
        }
        
        public void UpdateRPolicyStatus(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy) {
            base.Channel.UpdateRPolicyStatus(policy);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateRPolicyStatus(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRPolicyStatus(policy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateRPolicyStatus(System.IAsyncResult result) {
            base.Channel.EndUpdateRPolicyStatus(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRPolicyStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            return this.BeginUpdateRPolicyStatus(policy, callback, asyncState);
        }
        
        private object[] OnEndUpdateRPolicyStatus(System.IAsyncResult result) {
            this.EndUpdateRPolicyStatus(result);
            return null;
        }
        
        private void OnUpdateRPolicyStatusCompleted(object state) {
            if ((this.UpdateRPolicyStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRPolicyStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRPolicyStatusAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy) {
            this.UpdateRPolicyStatusAsync(policy, null);
        }
        
        public void UpdateRPolicyStatusAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy, object userState) {
            if ((this.onBeginUpdateRPolicyStatusDelegate == null)) {
                this.onBeginUpdateRPolicyStatusDelegate = new BeginOperationDelegate(this.OnBeginUpdateRPolicyStatus);
            }
            if ((this.onEndUpdateRPolicyStatusDelegate == null)) {
                this.onEndUpdateRPolicyStatusDelegate = new EndOperationDelegate(this.OnEndUpdateRPolicyStatus);
            }
            if ((this.onUpdateRPolicyStatusCompletedDelegate == null)) {
                this.onUpdateRPolicyStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRPolicyStatusCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRPolicyStatusDelegate, new object[] {
                        policy}, this.onEndUpdateRPolicyStatusDelegate, this.onUpdateRPolicyStatusCompletedDelegate, userState);
        }
        
        public void UpdatePolicySetting(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy) {
            base.Channel.UpdatePolicySetting(policy);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePolicySetting(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePolicySetting(policy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdatePolicySetting(System.IAsyncResult result) {
            base.Channel.EndUpdatePolicySetting(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePolicySetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            return this.BeginUpdatePolicySetting(policy, callback, asyncState);
        }
        
        private object[] OnEndUpdatePolicySetting(System.IAsyncResult result) {
            this.EndUpdatePolicySetting(result);
            return null;
        }
        
        private void OnUpdatePolicySettingCompleted(object state) {
            if ((this.UpdatePolicySettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePolicySettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePolicySettingAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy) {
            this.UpdatePolicySettingAsync(policy, null);
        }
        
        public void UpdatePolicySettingAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy, object userState) {
            if ((this.onBeginUpdatePolicySettingDelegate == null)) {
                this.onBeginUpdatePolicySettingDelegate = new BeginOperationDelegate(this.OnBeginUpdatePolicySetting);
            }
            if ((this.onEndUpdatePolicySettingDelegate == null)) {
                this.onEndUpdatePolicySettingDelegate = new EndOperationDelegate(this.OnEndUpdatePolicySetting);
            }
            if ((this.onUpdatePolicySettingCompletedDelegate == null)) {
                this.onUpdatePolicySettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePolicySettingCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePolicySettingDelegate, new object[] {
                        policy}, this.onEndUpdatePolicySettingDelegate, this.onUpdatePolicySettingCompletedDelegate, userState);
        }
        
        public void DeletePolicy(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy) {
            base.Channel.DeletePolicy(policy);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePolicy(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePolicy(policy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePolicy(System.IAsyncResult result) {
            base.Channel.EndDeletePolicy(result);
        }
        
        private System.IAsyncResult OnBeginDeletePolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            return this.BeginDeletePolicy(policy, callback, asyncState);
        }
        
        private object[] OnEndDeletePolicy(System.IAsyncResult result) {
            this.EndDeletePolicy(result);
            return null;
        }
        
        private void OnDeletePolicyCompleted(object state) {
            if ((this.DeletePolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePolicyAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy) {
            this.DeletePolicyAsync(policy, null);
        }
        
        public void DeletePolicyAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData policy, object userState) {
            if ((this.onBeginDeletePolicyDelegate == null)) {
                this.onBeginDeletePolicyDelegate = new BeginOperationDelegate(this.OnBeginDeletePolicy);
            }
            if ((this.onEndDeletePolicyDelegate == null)) {
                this.onEndDeletePolicyDelegate = new EndOperationDelegate(this.OnEndDeletePolicy);
            }
            if ((this.onDeletePolicyCompletedDelegate == null)) {
                this.onDeletePolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePolicyCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePolicyDelegate, new object[] {
                        policy}, this.onEndDeletePolicyDelegate, this.onDeletePolicyCompletedDelegate, userState);
        }
        
        public bool IsTrackPaymentChecked(System.Guid PolicyId) {
            return base.Channel.IsTrackPaymentChecked(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsTrackPaymentChecked(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsTrackPaymentChecked(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsTrackPaymentChecked(System.IAsyncResult result) {
            return base.Channel.EndIsTrackPaymentChecked(result);
        }
        
        private System.IAsyncResult OnBeginIsTrackPaymentChecked(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginIsTrackPaymentChecked(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndIsTrackPaymentChecked(System.IAsyncResult result) {
            bool retVal = this.EndIsTrackPaymentChecked(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsTrackPaymentCheckedCompleted(object state) {
            if ((this.IsTrackPaymentCheckedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsTrackPaymentCheckedCompleted(this, new IsTrackPaymentCheckedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsTrackPaymentCheckedAsync(System.Guid PolicyId) {
            this.IsTrackPaymentCheckedAsync(PolicyId, null);
        }
        
        public void IsTrackPaymentCheckedAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginIsTrackPaymentCheckedDelegate == null)) {
                this.onBeginIsTrackPaymentCheckedDelegate = new BeginOperationDelegate(this.OnBeginIsTrackPaymentChecked);
            }
            if ((this.onEndIsTrackPaymentCheckedDelegate == null)) {
                this.onEndIsTrackPaymentCheckedDelegate = new EndOperationDelegate(this.OnEndIsTrackPaymentChecked);
            }
            if ((this.onIsTrackPaymentCheckedCompletedDelegate == null)) {
                this.onIsTrackPaymentCheckedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsTrackPaymentCheckedCompleted);
            }
            base.InvokeAsync(this.onBeginIsTrackPaymentCheckedDelegate, new object[] {
                        PolicyId}, this.onEndIsTrackPaymentCheckedDelegate, this.onIsTrackPaymentCheckedCompletedDelegate, userState);
        }
        
        public System.Nullable<int> GetPolicyStatusID(System.Guid PolicyId) {
            return base.Channel.GetPolicyStatusID(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyStatusID(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyStatusID(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Nullable<int> EndGetPolicyStatusID(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyStatusID(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyStatusID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyStatusID(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyStatusID(System.IAsyncResult result) {
            System.Nullable<int> retVal = this.EndGetPolicyStatusID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyStatusIDCompleted(object state) {
            if ((this.GetPolicyStatusIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyStatusIDCompleted(this, new GetPolicyStatusIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyStatusIDAsync(System.Guid PolicyId) {
            this.GetPolicyStatusIDAsync(PolicyId, null);
        }
        
        public void GetPolicyStatusIDAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetPolicyStatusIDDelegate == null)) {
                this.onBeginGetPolicyStatusIDDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyStatusID);
            }
            if ((this.onEndGetPolicyStatusIDDelegate == null)) {
                this.onEndGetPolicyStatusIDDelegate = new EndOperationDelegate(this.OnEndGetPolicyStatusID);
            }
            if ((this.onGetPolicyStatusIDCompletedDelegate == null)) {
                this.onGetPolicyStatusIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyStatusIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyStatusIDDelegate, new object[] {
                        PolicyId}, this.onEndGetPolicyStatusIDDelegate, this.onGetPolicyStatusIDCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Batch GenerateBatch(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policy) {
            return base.Channel.GenerateBatch(_policy);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateBatch(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateBatch(_policy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Batch EndGenerateBatch(System.IAsyncResult result) {
            return base.Channel.EndGenerateBatch(result);
        }
        
        private System.IAsyncResult OnBeginGenerateBatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policy = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            return this.BeginGenerateBatch(_policy, callback, asyncState);
        }
        
        private object[] OnEndGenerateBatch(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Batch retVal = this.EndGenerateBatch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateBatchCompleted(object state) {
            if ((this.GenerateBatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateBatchCompleted(this, new GenerateBatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateBatchAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policy) {
            this.GenerateBatchAsync(_policy, null);
        }
        
        public void GenerateBatchAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policy, object userState) {
            if ((this.onBeginGenerateBatchDelegate == null)) {
                this.onBeginGenerateBatchDelegate = new BeginOperationDelegate(this.OnBeginGenerateBatch);
            }
            if ((this.onEndGenerateBatchDelegate == null)) {
                this.onEndGenerateBatchDelegate = new EndOperationDelegate(this.OnEndGenerateBatch);
            }
            if ((this.onGenerateBatchCompletedDelegate == null)) {
                this.onGenerateBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateBatchCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateBatchDelegate, new object[] {
                        _policy}, this.onEndGenerateBatchDelegate, this.onGenerateBatchCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Statement GenerateStatment(System.Guid BatchId, System.Guid PayorId, decimal PaymentRecived, System.Guid CreatedBy) {
            return base.Channel.GenerateStatment(BatchId, PayorId, PaymentRecived, CreatedBy);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateStatment(System.Guid BatchId, System.Guid PayorId, decimal PaymentRecived, System.Guid CreatedBy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateStatment(BatchId, PayorId, PaymentRecived, CreatedBy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Statement EndGenerateStatment(System.IAsyncResult result) {
            return base.Channel.EndGenerateStatment(result);
        }
        
        private System.IAsyncResult OnBeginGenerateStatment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid BatchId = ((System.Guid)(inValues[0]));
            System.Guid PayorId = ((System.Guid)(inValues[1]));
            decimal PaymentRecived = ((decimal)(inValues[2]));
            System.Guid CreatedBy = ((System.Guid)(inValues[3]));
            return this.BeginGenerateStatment(BatchId, PayorId, PaymentRecived, CreatedBy, callback, asyncState);
        }
        
        private object[] OnEndGenerateStatment(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Statement retVal = this.EndGenerateStatment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateStatmentCompleted(object state) {
            if ((this.GenerateStatmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateStatmentCompleted(this, new GenerateStatmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateStatmentAsync(System.Guid BatchId, System.Guid PayorId, decimal PaymentRecived, System.Guid CreatedBy) {
            this.GenerateStatmentAsync(BatchId, PayorId, PaymentRecived, CreatedBy, null);
        }
        
        public void GenerateStatmentAsync(System.Guid BatchId, System.Guid PayorId, decimal PaymentRecived, System.Guid CreatedBy, object userState) {
            if ((this.onBeginGenerateStatmentDelegate == null)) {
                this.onBeginGenerateStatmentDelegate = new BeginOperationDelegate(this.OnBeginGenerateStatment);
            }
            if ((this.onEndGenerateStatmentDelegate == null)) {
                this.onEndGenerateStatmentDelegate = new EndOperationDelegate(this.OnEndGenerateStatment);
            }
            if ((this.onGenerateStatmentCompletedDelegate == null)) {
                this.onGenerateStatmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateStatmentCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateStatmentDelegate, new object[] {
                        BatchId,
                        PayorId,
                        PaymentRecived,
                        CreatedBy}, this.onEndGenerateStatmentDelegate, this.onGenerateStatmentCompletedDelegate, userState);
        }
        
        public void AddUpdatePolicyHistory(System.Guid PolicyId) {
            base.Channel.AddUpdatePolicyHistory(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePolicyHistory(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePolicyHistory(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePolicyHistory(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePolicyHistory(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePolicyHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginAddUpdatePolicyHistory(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePolicyHistory(System.IAsyncResult result) {
            this.EndAddUpdatePolicyHistory(result);
            return null;
        }
        
        private void OnAddUpdatePolicyHistoryCompleted(object state) {
            if ((this.AddUpdatePolicyHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePolicyHistoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePolicyHistoryAsync(System.Guid PolicyId) {
            this.AddUpdatePolicyHistoryAsync(PolicyId, null);
        }
        
        public void AddUpdatePolicyHistoryAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginAddUpdatePolicyHistoryDelegate == null)) {
                this.onBeginAddUpdatePolicyHistoryDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePolicyHistory);
            }
            if ((this.onEndAddUpdatePolicyHistoryDelegate == null)) {
                this.onEndAddUpdatePolicyHistoryDelegate = new EndOperationDelegate(this.OnEndAddUpdatePolicyHistory);
            }
            if ((this.onAddUpdatePolicyHistoryCompletedDelegate == null)) {
                this.onAddUpdatePolicyHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePolicyHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePolicyHistoryDelegate, new object[] {
                        PolicyId}, this.onEndAddUpdatePolicyHistoryDelegate, this.onAddUpdatePolicyHistoryCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData GetPolicyHistoryIdWise(System.Guid PolicyId) {
            return base.Channel.GetPolicyHistoryIdWise(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyHistoryIdWise(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyHistoryIdWise(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData EndGetPolicyHistoryIdWise(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyHistoryIdWise(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyHistoryIdWise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyHistoryIdWise(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyHistoryIdWise(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData retVal = this.EndGetPolicyHistoryIdWise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyHistoryIdWiseCompleted(object state) {
            if ((this.GetPolicyHistoryIdWiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyHistoryIdWiseCompleted(this, new GetPolicyHistoryIdWiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyHistoryIdWiseAsync(System.Guid PolicyId) {
            this.GetPolicyHistoryIdWiseAsync(PolicyId, null);
        }
        
        public void GetPolicyHistoryIdWiseAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetPolicyHistoryIdWiseDelegate == null)) {
                this.onBeginGetPolicyHistoryIdWiseDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyHistoryIdWise);
            }
            if ((this.onEndGetPolicyHistoryIdWiseDelegate == null)) {
                this.onEndGetPolicyHistoryIdWiseDelegate = new EndOperationDelegate(this.OnEndGetPolicyHistoryIdWise);
            }
            if ((this.onGetPolicyHistoryIdWiseCompletedDelegate == null)) {
                this.onGetPolicyHistoryIdWiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyHistoryIdWiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyHistoryIdWiseDelegate, new object[] {
                        PolicyId}, this.onEndGetPolicyHistoryIdWiseDelegate, this.onGetPolicyHistoryIdWiseCompletedDelegate, userState);
        }
        
        public void DeletePolicyHistory(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policyrecord) {
            base.Channel.DeletePolicyHistory(_policyrecord);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePolicyHistory(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policyrecord, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePolicyHistory(_policyrecord, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePolicyHistory(System.IAsyncResult result) {
            base.Channel.EndDeletePolicyHistory(result);
        }
        
        private System.IAsyncResult OnBeginDeletePolicyHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policyrecord = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            return this.BeginDeletePolicyHistory(_policyrecord, callback, asyncState);
        }
        
        private object[] OnEndDeletePolicyHistory(System.IAsyncResult result) {
            this.EndDeletePolicyHistory(result);
            return null;
        }
        
        private void OnDeletePolicyHistoryCompleted(object state) {
            if ((this.DeletePolicyHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePolicyHistoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePolicyHistoryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policyrecord) {
            this.DeletePolicyHistoryAsync(_policyrecord, null);
        }
        
        public void DeletePolicyHistoryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _policyrecord, object userState) {
            if ((this.onBeginDeletePolicyHistoryDelegate == null)) {
                this.onBeginDeletePolicyHistoryDelegate = new BeginOperationDelegate(this.OnBeginDeletePolicyHistory);
            }
            if ((this.onEndDeletePolicyHistoryDelegate == null)) {
                this.onEndDeletePolicyHistoryDelegate = new EndOperationDelegate(this.OnEndDeletePolicyHistory);
            }
            if ((this.onDeletePolicyHistoryCompletedDelegate == null)) {
                this.onDeletePolicyHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePolicyHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePolicyHistoryDelegate, new object[] {
                        _policyrecord}, this.onEndDeletePolicyHistoryDelegate, this.onDeletePolicyHistoryCompletedDelegate, userState);
        }
        
        public void DeletePolicyHistoryPermanetById(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _Policy) {
            base.Channel.DeletePolicyHistoryPermanetById(_Policy);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePolicyHistoryPermanetById(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _Policy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePolicyHistoryPermanetById(_Policy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePolicyHistoryPermanetById(System.IAsyncResult result) {
            base.Channel.EndDeletePolicyHistoryPermanetById(result);
        }
        
        private System.IAsyncResult OnBeginDeletePolicyHistoryPermanetById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _Policy = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            return this.BeginDeletePolicyHistoryPermanetById(_Policy, callback, asyncState);
        }
        
        private object[] OnEndDeletePolicyHistoryPermanetById(System.IAsyncResult result) {
            this.EndDeletePolicyHistoryPermanetById(result);
            return null;
        }
        
        private void OnDeletePolicyHistoryPermanetByIdCompleted(object state) {
            if ((this.DeletePolicyHistoryPermanetByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePolicyHistoryPermanetByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePolicyHistoryPermanetByIdAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _Policy) {
            this.DeletePolicyHistoryPermanetByIdAsync(_Policy, null);
        }
        
        public void DeletePolicyHistoryPermanetByIdAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData _Policy, object userState) {
            if ((this.onBeginDeletePolicyHistoryPermanetByIdDelegate == null)) {
                this.onBeginDeletePolicyHistoryPermanetByIdDelegate = new BeginOperationDelegate(this.OnBeginDeletePolicyHistoryPermanetById);
            }
            if ((this.onEndDeletePolicyHistoryPermanetByIdDelegate == null)) {
                this.onEndDeletePolicyHistoryPermanetByIdDelegate = new EndOperationDelegate(this.OnEndDeletePolicyHistoryPermanetById);
            }
            if ((this.onDeletePolicyHistoryPermanetByIdCompletedDelegate == null)) {
                this.onDeletePolicyHistoryPermanetByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePolicyHistoryPermanetByIdCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePolicyHistoryPermanetByIdDelegate, new object[] {
                        _Policy}, this.onEndDeletePolicyHistoryPermanetByIdDelegate, this.onDeletePolicyHistoryPermanetByIdCompletedDelegate, userState);
        }
        
        public bool CheckForPolicyPaymentExists(System.Guid Policyid) {
            return base.Channel.CheckForPolicyPaymentExists(Policyid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckForPolicyPaymentExists(System.Guid Policyid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckForPolicyPaymentExists(Policyid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckForPolicyPaymentExists(System.IAsyncResult result) {
            return base.Channel.EndCheckForPolicyPaymentExists(result);
        }
        
        private System.IAsyncResult OnBeginCheckForPolicyPaymentExists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid Policyid = ((System.Guid)(inValues[0]));
            return this.BeginCheckForPolicyPaymentExists(Policyid, callback, asyncState);
        }
        
        private object[] OnEndCheckForPolicyPaymentExists(System.IAsyncResult result) {
            bool retVal = this.EndCheckForPolicyPaymentExists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckForPolicyPaymentExistsCompleted(object state) {
            if ((this.CheckForPolicyPaymentExistsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckForPolicyPaymentExistsCompleted(this, new CheckForPolicyPaymentExistsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckForPolicyPaymentExistsAsync(System.Guid Policyid) {
            this.CheckForPolicyPaymentExistsAsync(Policyid, null);
        }
        
        public void CheckForPolicyPaymentExistsAsync(System.Guid Policyid, object userState) {
            if ((this.onBeginCheckForPolicyPaymentExistsDelegate == null)) {
                this.onBeginCheckForPolicyPaymentExistsDelegate = new BeginOperationDelegate(this.OnBeginCheckForPolicyPaymentExists);
            }
            if ((this.onEndCheckForPolicyPaymentExistsDelegate == null)) {
                this.onEndCheckForPolicyPaymentExistsDelegate = new EndOperationDelegate(this.OnEndCheckForPolicyPaymentExists);
            }
            if ((this.onCheckForPolicyPaymentExistsCompletedDelegate == null)) {
                this.onCheckForPolicyPaymentExistsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckForPolicyPaymentExistsCompleted);
            }
            base.InvokeAsync(this.onBeginCheckForPolicyPaymentExistsDelegate, new object[] {
                        Policyid}, this.onEndCheckForPolicyPaymentExistsDelegate, this.onCheckForPolicyPaymentExistsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> GetPolicydata(System.Collections.Generic.Dictionary<string, object> parameters) {
            return base.Channel.GetPolicydata(parameters);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicydata(System.Collections.Generic.Dictionary<string, object> parameters, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicydata(parameters, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> EndGetPolicydata(System.IAsyncResult result) {
            return base.Channel.EndGetPolicydata(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicydata(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.Dictionary<string, object> parameters = ((System.Collections.Generic.Dictionary<string, object>)(inValues[0]));
            return this.BeginGetPolicydata(parameters, callback, asyncState);
        }
        
        private object[] OnEndGetPolicydata(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> retVal = this.EndGetPolicydata(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicydataCompleted(object state) {
            if ((this.GetPolicydataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicydataCompleted(this, new GetPolicydataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicydataAsync(System.Collections.Generic.Dictionary<string, object> parameters) {
            this.GetPolicydataAsync(parameters, null);
        }
        
        public void GetPolicydataAsync(System.Collections.Generic.Dictionary<string, object> parameters, object userState) {
            if ((this.onBeginGetPolicydataDelegate == null)) {
                this.onBeginGetPolicydataDelegate = new BeginOperationDelegate(this.OnBeginGetPolicydata);
            }
            if ((this.onEndGetPolicydataDelegate == null)) {
                this.onEndGetPolicydataDelegate = new EndOperationDelegate(this.OnEndGetPolicydata);
            }
            if ((this.onGetPolicydataCompletedDelegate == null)) {
                this.onGetPolicydataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicydataCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicydataDelegate, new object[] {
                        parameters}, this.onEndGetPolicydataDelegate, this.onGetPolicydataCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> GetPoliciesLicenseeWise(System.Guid LicenseeId, System.Nullable<MyAgencyVault.VM.MyAgencyVaultSvc._PolicyStatus> policyStatus, System.Nullable<System.Guid> ClientId) {
            return base.Channel.GetPoliciesLicenseeWise(LicenseeId, policyStatus, ClientId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPoliciesLicenseeWise(System.Guid LicenseeId, System.Nullable<MyAgencyVault.VM.MyAgencyVaultSvc._PolicyStatus> policyStatus, System.Nullable<System.Guid> ClientId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPoliciesLicenseeWise(LicenseeId, policyStatus, ClientId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> EndGetPoliciesLicenseeWise(System.IAsyncResult result) {
            return base.Channel.EndGetPoliciesLicenseeWise(result);
        }
        
        private System.IAsyncResult OnBeginGetPoliciesLicenseeWise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            System.Nullable<MyAgencyVault.VM.MyAgencyVaultSvc._PolicyStatus> policyStatus = ((System.Nullable<MyAgencyVault.VM.MyAgencyVaultSvc._PolicyStatus>)(inValues[1]));
            System.Nullable<System.Guid> ClientId = ((System.Nullable<System.Guid>)(inValues[2]));
            return this.BeginGetPoliciesLicenseeWise(LicenseeId, policyStatus, ClientId, callback, asyncState);
        }
        
        private object[] OnEndGetPoliciesLicenseeWise(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> retVal = this.EndGetPoliciesLicenseeWise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPoliciesLicenseeWiseCompleted(object state) {
            if ((this.GetPoliciesLicenseeWiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPoliciesLicenseeWiseCompleted(this, new GetPoliciesLicenseeWiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPoliciesLicenseeWiseAsync(System.Guid LicenseeId, System.Nullable<MyAgencyVault.VM.MyAgencyVaultSvc._PolicyStatus> policyStatus, System.Nullable<System.Guid> ClientId) {
            this.GetPoliciesLicenseeWiseAsync(LicenseeId, policyStatus, ClientId, null);
        }
        
        public void GetPoliciesLicenseeWiseAsync(System.Guid LicenseeId, System.Nullable<MyAgencyVault.VM.MyAgencyVaultSvc._PolicyStatus> policyStatus, System.Nullable<System.Guid> ClientId, object userState) {
            if ((this.onBeginGetPoliciesLicenseeWiseDelegate == null)) {
                this.onBeginGetPoliciesLicenseeWiseDelegate = new BeginOperationDelegate(this.OnBeginGetPoliciesLicenseeWise);
            }
            if ((this.onEndGetPoliciesLicenseeWiseDelegate == null)) {
                this.onEndGetPoliciesLicenseeWiseDelegate = new EndOperationDelegate(this.OnEndGetPoliciesLicenseeWise);
            }
            if ((this.onGetPoliciesLicenseeWiseCompletedDelegate == null)) {
                this.onGetPoliciesLicenseeWiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPoliciesLicenseeWiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetPoliciesLicenseeWiseDelegate, new object[] {
                        LicenseeId,
                        policyStatus,
                        ClientId}, this.onEndGetPoliciesLicenseeWiseDelegate, this.onGetPoliciesLicenseeWiseCompletedDelegate, userState);
        }
        
        public void UpdatePolicyTermDate(System.Guid policyID, System.Nullable<System.DateTime> dtTermReson) {
            base.Channel.UpdatePolicyTermDate(policyID, dtTermReson);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePolicyTermDate(System.Guid policyID, System.Nullable<System.DateTime> dtTermReson, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePolicyTermDate(policyID, dtTermReson, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdatePolicyTermDate(System.IAsyncResult result) {
            base.Channel.EndUpdatePolicyTermDate(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePolicyTermDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid policyID = ((System.Guid)(inValues[0]));
            System.Nullable<System.DateTime> dtTermReson = ((System.Nullable<System.DateTime>)(inValues[1]));
            return this.BeginUpdatePolicyTermDate(policyID, dtTermReson, callback, asyncState);
        }
        
        private object[] OnEndUpdatePolicyTermDate(System.IAsyncResult result) {
            this.EndUpdatePolicyTermDate(result);
            return null;
        }
        
        private void OnUpdatePolicyTermDateCompleted(object state) {
            if ((this.UpdatePolicyTermDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePolicyTermDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePolicyTermDateAsync(System.Guid policyID, System.Nullable<System.DateTime> dtTermReson) {
            this.UpdatePolicyTermDateAsync(policyID, dtTermReson, null);
        }
        
        public void UpdatePolicyTermDateAsync(System.Guid policyID, System.Nullable<System.DateTime> dtTermReson, object userState) {
            if ((this.onBeginUpdatePolicyTermDateDelegate == null)) {
                this.onBeginUpdatePolicyTermDateDelegate = new BeginOperationDelegate(this.OnBeginUpdatePolicyTermDate);
            }
            if ((this.onEndUpdatePolicyTermDateDelegate == null)) {
                this.onEndUpdatePolicyTermDateDelegate = new EndOperationDelegate(this.OnEndUpdatePolicyTermDate);
            }
            if ((this.onUpdatePolicyTermDateCompletedDelegate == null)) {
                this.onUpdatePolicyTermDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePolicyTermDateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePolicyTermDateDelegate, new object[] {
                        policyID,
                        dtTermReson}, this.onEndUpdatePolicyTermDateDelegate, this.onUpdatePolicyTermDateCompletedDelegate, userState);
        }
        
        public decimal CalculatePMC(System.Guid PolicyId) {
            return base.Channel.CalculatePMC(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCalculatePMC(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCalculatePMC(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public decimal EndCalculatePMC(System.IAsyncResult result) {
            return base.Channel.EndCalculatePMC(result);
        }
        
        private System.IAsyncResult OnBeginCalculatePMC(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginCalculatePMC(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndCalculatePMC(System.IAsyncResult result) {
            decimal retVal = this.EndCalculatePMC(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCalculatePMCCompleted(object state) {
            if ((this.CalculatePMCCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CalculatePMCCompleted(this, new CalculatePMCCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CalculatePMCAsync(System.Guid PolicyId) {
            this.CalculatePMCAsync(PolicyId, null);
        }
        
        public void CalculatePMCAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginCalculatePMCDelegate == null)) {
                this.onBeginCalculatePMCDelegate = new BeginOperationDelegate(this.OnBeginCalculatePMC);
            }
            if ((this.onEndCalculatePMCDelegate == null)) {
                this.onEndCalculatePMCDelegate = new EndOperationDelegate(this.OnEndCalculatePMC);
            }
            if ((this.onCalculatePMCCompletedDelegate == null)) {
                this.onCalculatePMCCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCalculatePMCCompleted);
            }
            base.InvokeAsync(this.onBeginCalculatePMCDelegate, new object[] {
                        PolicyId}, this.onEndCalculatePMCDelegate, this.onCalculatePMCCompletedDelegate, userState);
        }
        
        public decimal CalculatePAC(System.Guid PolicyId) {
            return base.Channel.CalculatePAC(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCalculatePAC(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCalculatePAC(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public decimal EndCalculatePAC(System.IAsyncResult result) {
            return base.Channel.EndCalculatePAC(result);
        }
        
        private System.IAsyncResult OnBeginCalculatePAC(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginCalculatePAC(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndCalculatePAC(System.IAsyncResult result) {
            decimal retVal = this.EndCalculatePAC(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCalculatePACCompleted(object state) {
            if ((this.CalculatePACCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CalculatePACCompleted(this, new CalculatePACCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CalculatePACAsync(System.Guid PolicyId) {
            this.CalculatePACAsync(PolicyId, null);
        }
        
        public void CalculatePACAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginCalculatePACDelegate == null)) {
                this.onBeginCalculatePACDelegate = new BeginOperationDelegate(this.OnBeginCalculatePAC);
            }
            if ((this.onEndCalculatePACDelegate == null)) {
                this.onEndCalculatePACDelegate = new EndOperationDelegate(this.OnEndCalculatePAC);
            }
            if ((this.onCalculatePACCompletedDelegate == null)) {
                this.onCalculatePACCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCalculatePACCompleted);
            }
            base.InvokeAsync(this.onBeginCalculatePACDelegate, new object[] {
                        PolicyId}, this.onEndCalculatePACDelegate, this.onCalculatePACCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData GetPolicyStting(System.Guid PolicyID) {
            return base.Channel.GetPolicyStting(PolicyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyStting(System.Guid PolicyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyStting(PolicyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData EndGetPolicyStting(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyStting(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyStting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyID = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyStting(PolicyID, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyStting(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData retVal = this.EndGetPolicyStting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicySttingCompleted(object state) {
            if ((this.GetPolicySttingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicySttingCompleted(this, new GetPolicySttingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicySttingAsync(System.Guid PolicyID) {
            this.GetPolicySttingAsync(PolicyID, null);
        }
        
        public void GetPolicySttingAsync(System.Guid PolicyID, object userState) {
            if ((this.onBeginGetPolicySttingDelegate == null)) {
                this.onBeginGetPolicySttingDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyStting);
            }
            if ((this.onEndGetPolicySttingDelegate == null)) {
                this.onEndGetPolicySttingDelegate = new EndOperationDelegate(this.OnEndGetPolicyStting);
            }
            if ((this.onGetPolicySttingCompletedDelegate == null)) {
                this.onGetPolicySttingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicySttingCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicySttingDelegate, new object[] {
                        PolicyID}, this.onEndGetPolicySttingDelegate, this.onGetPolicySttingCompletedDelegate, userState);
        }
        
        public System.Nullable<System.DateTime> GetFollowUpDate(System.Guid PolicyID) {
            return base.Channel.GetFollowUpDate(PolicyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFollowUpDate(System.Guid PolicyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFollowUpDate(PolicyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Nullable<System.DateTime> EndGetFollowUpDate(System.IAsyncResult result) {
            return base.Channel.EndGetFollowUpDate(result);
        }
        
        private System.IAsyncResult OnBeginGetFollowUpDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyID = ((System.Guid)(inValues[0]));
            return this.BeginGetFollowUpDate(PolicyID, callback, asyncState);
        }
        
        private object[] OnEndGetFollowUpDate(System.IAsyncResult result) {
            System.Nullable<System.DateTime> retVal = this.EndGetFollowUpDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFollowUpDateCompleted(object state) {
            if ((this.GetFollowUpDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFollowUpDateCompleted(this, new GetFollowUpDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFollowUpDateAsync(System.Guid PolicyID) {
            this.GetFollowUpDateAsync(PolicyID, null);
        }
        
        public void GetFollowUpDateAsync(System.Guid PolicyID, object userState) {
            if ((this.onBeginGetFollowUpDateDelegate == null)) {
                this.onBeginGetFollowUpDateDelegate = new BeginOperationDelegate(this.OnBeginGetFollowUpDate);
            }
            if ((this.onEndGetFollowUpDateDelegate == null)) {
                this.onEndGetFollowUpDateDelegate = new EndOperationDelegate(this.OnEndGetFollowUpDate);
            }
            if ((this.onGetFollowUpDateCompletedDelegate == null)) {
                this.onGetFollowUpDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFollowUpDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetFollowUpDateDelegate, new object[] {
                        PolicyID}, this.onEndGetFollowUpDateDelegate, this.onGetFollowUpDateCompletedDelegate, userState);
        }
        
        public string GetPolicyProductType(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID) {
            return base.Channel.GetPolicyProductType(policyID, PayorID, CarrierID, CoverageID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyProductType(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyProductType(policyID, PayorID, CarrierID, CoverageID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPolicyProductType(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyProductType(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyProductType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid policyID = ((System.Guid)(inValues[0]));
            System.Guid PayorID = ((System.Guid)(inValues[1]));
            System.Guid CarrierID = ((System.Guid)(inValues[2]));
            System.Guid CoverageID = ((System.Guid)(inValues[3]));
            return this.BeginGetPolicyProductType(policyID, PayorID, CarrierID, CoverageID, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyProductType(System.IAsyncResult result) {
            string retVal = this.EndGetPolicyProductType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyProductTypeCompleted(object state) {
            if ((this.GetPolicyProductTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyProductTypeCompleted(this, new GetPolicyProductTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyProductTypeAsync(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID) {
            this.GetPolicyProductTypeAsync(policyID, PayorID, CarrierID, CoverageID, null);
        }
        
        public void GetPolicyProductTypeAsync(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, object userState) {
            if ((this.onBeginGetPolicyProductTypeDelegate == null)) {
                this.onBeginGetPolicyProductTypeDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyProductType);
            }
            if ((this.onEndGetPolicyProductTypeDelegate == null)) {
                this.onEndGetPolicyProductTypeDelegate = new EndOperationDelegate(this.OnEndGetPolicyProductType);
            }
            if ((this.onGetPolicyProductTypeCompletedDelegate == null)) {
                this.onGetPolicyProductTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyProductTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyProductTypeDelegate, new object[] {
                        policyID,
                        PayorID,
                        CarrierID,
                        CoverageID}, this.onEndGetPolicyProductTypeDelegate, this.onGetPolicyProductTypeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> GetPolicyClientWise(System.Guid LicenseeId, System.Guid ClientId) {
            return base.Channel.GetPolicyClientWise(LicenseeId, ClientId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyClientWise(System.Guid LicenseeId, System.Guid ClientId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyClientWise(LicenseeId, ClientId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> EndGetPolicyClientWise(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyClientWise(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyClientWise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            System.Guid ClientId = ((System.Guid)(inValues[1]));
            return this.BeginGetPolicyClientWise(LicenseeId, ClientId, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyClientWise(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData> retVal = this.EndGetPolicyClientWise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyClientWiseCompleted(object state) {
            if ((this.GetPolicyClientWiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyClientWiseCompleted(this, new GetPolicyClientWiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyClientWiseAsync(System.Guid LicenseeId, System.Guid ClientId) {
            this.GetPolicyClientWiseAsync(LicenseeId, ClientId, null);
        }
        
        public void GetPolicyClientWiseAsync(System.Guid LicenseeId, System.Guid ClientId, object userState) {
            if ((this.onBeginGetPolicyClientWiseDelegate == null)) {
                this.onBeginGetPolicyClientWiseDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyClientWise);
            }
            if ((this.onEndGetPolicyClientWiseDelegate == null)) {
                this.onEndGetPolicyClientWiseDelegate = new EndOperationDelegate(this.OnEndGetPolicyClientWise);
            }
            if ((this.onGetPolicyClientWiseCompletedDelegate == null)) {
                this.onGetPolicyClientWiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyClientWiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyClientWiseDelegate, new object[] {
                        LicenseeId,
                        ClientId}, this.onEndGetPolicyClientWiseDelegate, this.onGetPolicyClientWiseCompletedDelegate, userState);
        }
        
        public string GetPolicyUniqueKeyName() {
            return base.Channel.GetPolicyUniqueKeyName();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyUniqueKeyName(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyUniqueKeyName(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPolicyUniqueKeyName(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyUniqueKeyName(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyUniqueKeyName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPolicyUniqueKeyName(callback, asyncState);
        }
        
        private object[] OnEndGetPolicyUniqueKeyName(System.IAsyncResult result) {
            string retVal = this.EndGetPolicyUniqueKeyName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyUniqueKeyNameCompleted(object state) {
            if ((this.GetPolicyUniqueKeyNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyUniqueKeyNameCompleted(this, new GetPolicyUniqueKeyNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyUniqueKeyNameAsync() {
            this.GetPolicyUniqueKeyNameAsync(null);
        }
        
        public void GetPolicyUniqueKeyNameAsync(object userState) {
            if ((this.onBeginGetPolicyUniqueKeyNameDelegate == null)) {
                this.onBeginGetPolicyUniqueKeyNameDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyUniqueKeyName);
            }
            if ((this.onEndGetPolicyUniqueKeyNameDelegate == null)) {
                this.onEndGetPolicyUniqueKeyNameDelegate = new EndOperationDelegate(this.OnEndGetPolicyUniqueKeyName);
            }
            if ((this.onGetPolicyUniqueKeyNameCompletedDelegate == null)) {
                this.onGetPolicyUniqueKeyNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyUniqueKeyNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyUniqueKeyNameDelegate, null, this.onEndGetPolicyUniqueKeyNameDelegate, this.onGetPolicyUniqueKeyNameCompletedDelegate, userState);
        }
        
        public string CompareExcel(System.Data.DataTable dt) {
            return base.Channel.CompareExcel(dt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCompareExcel(System.Data.DataTable dt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCompareExcel(dt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCompareExcel(System.IAsyncResult result) {
            return base.Channel.EndCompareExcel(result);
        }
        
        private System.IAsyncResult OnBeginCompareExcel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Data.DataTable dt = ((System.Data.DataTable)(inValues[0]));
            return this.BeginCompareExcel(dt, callback, asyncState);
        }
        
        private object[] OnEndCompareExcel(System.IAsyncResult result) {
            string retVal = this.EndCompareExcel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCompareExcelCompleted(object state) {
            if ((this.CompareExcelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CompareExcelCompleted(this, new CompareExcelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CompareExcelAsync(System.Data.DataTable dt) {
            this.CompareExcelAsync(dt, null);
        }
        
        public void CompareExcelAsync(System.Data.DataTable dt, object userState) {
            if ((this.onBeginCompareExcelDelegate == null)) {
                this.onBeginCompareExcelDelegate = new BeginOperationDelegate(this.OnBeginCompareExcel);
            }
            if ((this.onEndCompareExcelDelegate == null)) {
                this.onEndCompareExcelDelegate = new EndOperationDelegate(this.OnEndCompareExcel);
            }
            if ((this.onCompareExcelCompletedDelegate == null)) {
                this.onCompareExcelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCompareExcelCompleted);
            }
            base.InvokeAsync(this.onBeginCompareExcelDelegate, new object[] {
                        dt}, this.onEndCompareExcelDelegate, this.onCompareExcelCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyImportStatus ImportPolicy(System.Data.DataTable tbExcel, System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GlobalAgentList, System.Guid LicenseeID, System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> CompTypeList) {
            return base.Channel.ImportPolicy(tbExcel, GlobalAgentList, LicenseeID, CompTypeList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginImportPolicy(System.Data.DataTable tbExcel, System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GlobalAgentList, System.Guid LicenseeID, System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> CompTypeList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImportPolicy(tbExcel, GlobalAgentList, LicenseeID, CompTypeList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyImportStatus EndImportPolicy(System.IAsyncResult result) {
            return base.Channel.EndImportPolicy(result);
        }
        
        private System.IAsyncResult OnBeginImportPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Data.DataTable tbExcel = ((System.Data.DataTable)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GlobalAgentList = ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(inValues[1]));
            System.Guid LicenseeID = ((System.Guid)(inValues[2]));
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> CompTypeList = ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType>)(inValues[3]));
            return this.BeginImportPolicy(tbExcel, GlobalAgentList, LicenseeID, CompTypeList, callback, asyncState);
        }
        
        private object[] OnEndImportPolicy(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyImportStatus retVal = this.EndImportPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnImportPolicyCompleted(object state) {
            if ((this.ImportPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImportPolicyCompleted(this, new ImportPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImportPolicyAsync(System.Data.DataTable tbExcel, System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GlobalAgentList, System.Guid LicenseeID, System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> CompTypeList) {
            this.ImportPolicyAsync(tbExcel, GlobalAgentList, LicenseeID, CompTypeList, null);
        }
        
        public void ImportPolicyAsync(System.Data.DataTable tbExcel, System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GlobalAgentList, System.Guid LicenseeID, System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> CompTypeList, object userState) {
            if ((this.onBeginImportPolicyDelegate == null)) {
                this.onBeginImportPolicyDelegate = new BeginOperationDelegate(this.OnBeginImportPolicy);
            }
            if ((this.onEndImportPolicyDelegate == null)) {
                this.onEndImportPolicyDelegate = new EndOperationDelegate(this.OnEndImportPolicy);
            }
            if ((this.onImportPolicyCompletedDelegate == null)) {
                this.onImportPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImportPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginImportPolicyDelegate, new object[] {
                        tbExcel,
                        GlobalAgentList,
                        LicenseeID,
                        CompTypeList}, this.onEndImportPolicyDelegate, this.onImportPolicyCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.INews")]
    public interface INews {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INews/AddUpdateNews", ReplyAction="http://tempuri.org/INews/AddUpdateNewsResponse")]
        void AddUpdateNews(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INews/AddUpdateNews", ReplyAction="http://tempuri.org/INews/AddUpdateNewsResponse")]
        System.IAsyncResult BeginAddUpdateNews(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INews/DeleteNews", ReplyAction="http://tempuri.org/INews/DeleteNewsResponse")]
        void DeleteNews(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INews/DeleteNews", ReplyAction="http://tempuri.org/INews/DeleteNewsResponse")]
        System.IAsyncResult BeginDeleteNews(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INews/GetNews", ReplyAction="http://tempuri.org/INews/GetNewsResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.News GetNews();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INews/GetNews", ReplyAction="http://tempuri.org/INews/GetNewsResponse")]
        System.IAsyncResult BeginGetNews(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.News EndGetNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INews/IsValidNews", ReplyAction="http://tempuri.org/INews/IsValidNewsResponse")]
        bool IsValidNews(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INews/IsValidNews", ReplyAction="http://tempuri.org/INews/IsValidNewsResponse")]
        System.IAsyncResult BeginIsValidNews(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INews/GetNewsList", ReplyAction="http://tempuri.org/INews/GetNewsListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.News> GetNewsList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INews/GetNewsList", ReplyAction="http://tempuri.org/INews/GetNewsListResponse")]
        System.IAsyncResult BeginGetNewsList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.News> EndGetNewsList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsChannel : MyAgencyVault.VM.MyAgencyVaultSvc.INews, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.News Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.News)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.News> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.News>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.INews>, MyAgencyVault.VM.MyAgencyVaultSvc.INews {
        
        private BeginOperationDelegate onBeginAddUpdateNewsDelegate;
        
        private EndOperationDelegate onEndAddUpdateNewsDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteNewsDelegate;
        
        private EndOperationDelegate onEndDeleteNewsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsDelegate;
        
        private EndOperationDelegate onEndGetNewsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidNewsDelegate;
        
        private EndOperationDelegate onEndIsValidNewsDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListDelegate;
        
        private EndOperationDelegate onEndGetNewsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListCompletedDelegate;
        
        public NewsClient() {
        }
        
        public NewsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateNewsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteNewsCompleted;
        
        public event System.EventHandler<GetNewsCompletedEventArgs> GetNewsCompleted;
        
        public event System.EventHandler<IsValidNewsCompletedEventArgs> IsValidNewsCompleted;
        
        public event System.EventHandler<GetNewsListCompletedEventArgs> GetNewsListCompleted;
        
        public void AddUpdateNews(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws) {
            base.Channel.AddUpdateNews(Nws);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateNews(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateNews(Nws, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateNews(System.IAsyncResult result) {
            base.Channel.EndAddUpdateNews(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.News Nws = ((MyAgencyVault.VM.MyAgencyVaultSvc.News)(inValues[0]));
            return this.BeginAddUpdateNews(Nws, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateNews(System.IAsyncResult result) {
            this.EndAddUpdateNews(result);
            return null;
        }
        
        private void OnAddUpdateNewsCompleted(object state) {
            if ((this.AddUpdateNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateNewsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateNewsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws) {
            this.AddUpdateNewsAsync(Nws, null);
        }
        
        public void AddUpdateNewsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws, object userState) {
            if ((this.onBeginAddUpdateNewsDelegate == null)) {
                this.onBeginAddUpdateNewsDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateNews);
            }
            if ((this.onEndAddUpdateNewsDelegate == null)) {
                this.onEndAddUpdateNewsDelegate = new EndOperationDelegate(this.OnEndAddUpdateNews);
            }
            if ((this.onAddUpdateNewsCompletedDelegate == null)) {
                this.onAddUpdateNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateNewsCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateNewsDelegate, new object[] {
                        Nws}, this.onEndAddUpdateNewsDelegate, this.onAddUpdateNewsCompletedDelegate, userState);
        }
        
        public void DeleteNews(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws) {
            base.Channel.DeleteNews(Nws);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteNews(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteNews(Nws, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteNews(System.IAsyncResult result) {
            base.Channel.EndDeleteNews(result);
        }
        
        private System.IAsyncResult OnBeginDeleteNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.News Nws = ((MyAgencyVault.VM.MyAgencyVaultSvc.News)(inValues[0]));
            return this.BeginDeleteNews(Nws, callback, asyncState);
        }
        
        private object[] OnEndDeleteNews(System.IAsyncResult result) {
            this.EndDeleteNews(result);
            return null;
        }
        
        private void OnDeleteNewsCompleted(object state) {
            if ((this.DeleteNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteNewsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteNewsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws) {
            this.DeleteNewsAsync(Nws, null);
        }
        
        public void DeleteNewsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws, object userState) {
            if ((this.onBeginDeleteNewsDelegate == null)) {
                this.onBeginDeleteNewsDelegate = new BeginOperationDelegate(this.OnBeginDeleteNews);
            }
            if ((this.onEndDeleteNewsDelegate == null)) {
                this.onEndDeleteNewsDelegate = new EndOperationDelegate(this.OnEndDeleteNews);
            }
            if ((this.onDeleteNewsCompletedDelegate == null)) {
                this.onDeleteNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteNewsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteNewsDelegate, new object[] {
                        Nws}, this.onEndDeleteNewsDelegate, this.onDeleteNewsCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.News GetNews() {
            return base.Channel.GetNews();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNews(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNews(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.News EndGetNews(System.IAsyncResult result) {
            return base.Channel.EndGetNews(result);
        }
        
        private System.IAsyncResult OnBeginGetNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetNews(callback, asyncState);
        }
        
        private object[] OnEndGetNews(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.News retVal = this.EndGetNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsCompleted(object state) {
            if ((this.GetNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsCompleted(this, new GetNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsAsync() {
            this.GetNewsAsync(null);
        }
        
        public void GetNewsAsync(object userState) {
            if ((this.onBeginGetNewsDelegate == null)) {
                this.onBeginGetNewsDelegate = new BeginOperationDelegate(this.OnBeginGetNews);
            }
            if ((this.onEndGetNewsDelegate == null)) {
                this.onEndGetNewsDelegate = new EndOperationDelegate(this.OnEndGetNews);
            }
            if ((this.onGetNewsCompletedDelegate == null)) {
                this.onGetNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsDelegate, null, this.onEndGetNewsDelegate, this.onGetNewsCompletedDelegate, userState);
        }
        
        public bool IsValidNews(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws) {
            return base.Channel.IsValidNews(Nws);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidNews(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidNews(Nws, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidNews(System.IAsyncResult result) {
            return base.Channel.EndIsValidNews(result);
        }
        
        private System.IAsyncResult OnBeginIsValidNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.News Nws = ((MyAgencyVault.VM.MyAgencyVaultSvc.News)(inValues[0]));
            return this.BeginIsValidNews(Nws, callback, asyncState);
        }
        
        private object[] OnEndIsValidNews(System.IAsyncResult result) {
            bool retVal = this.EndIsValidNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidNewsCompleted(object state) {
            if ((this.IsValidNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidNewsCompleted(this, new IsValidNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidNewsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws) {
            this.IsValidNewsAsync(Nws, null);
        }
        
        public void IsValidNewsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.News Nws, object userState) {
            if ((this.onBeginIsValidNewsDelegate == null)) {
                this.onBeginIsValidNewsDelegate = new BeginOperationDelegate(this.OnBeginIsValidNews);
            }
            if ((this.onEndIsValidNewsDelegate == null)) {
                this.onEndIsValidNewsDelegate = new EndOperationDelegate(this.OnEndIsValidNews);
            }
            if ((this.onIsValidNewsCompletedDelegate == null)) {
                this.onIsValidNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidNewsCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidNewsDelegate, new object[] {
                        Nws}, this.onEndIsValidNewsDelegate, this.onIsValidNewsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.News> GetNewsList() {
            return base.Channel.GetNewsList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNewsList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.News> EndGetNewsList(System.IAsyncResult result) {
            return base.Channel.EndGetNewsList(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetNewsList(callback, asyncState);
        }
        
        private object[] OnEndGetNewsList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.News> retVal = this.EndGetNewsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsListCompleted(object state) {
            if ((this.GetNewsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListCompleted(this, new GetNewsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListAsync() {
            this.GetNewsListAsync(null);
        }
        
        public void GetNewsListAsync(object userState) {
            if ((this.onBeginGetNewsListDelegate == null)) {
                this.onBeginGetNewsListDelegate = new BeginOperationDelegate(this.OnBeginGetNewsList);
            }
            if ((this.onEndGetNewsListDelegate == null)) {
                this.onEndGetNewsListDelegate = new EndOperationDelegate(this.OnEndGetNewsList);
            }
            if ((this.onGetNewsListCompletedDelegate == null)) {
                this.onGetNewsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListDelegate, null, this.onEndGetNewsListDelegate, this.onGetNewsListCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ILastViewPolicy")]
    public interface ILastViewPolicy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILastViewPolicy/AddLastViewPolicy", ReplyAction="http://tempuri.org/ILastViewPolicy/AddLastViewPolicyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ApplicationFault), Action="http://tempuri.org/ILastViewPolicy/AddLastViewPolicyApplicationFaultFault", Name="ApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
        void AddLastViewPolicy(MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy lastviewpolicy);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILastViewPolicy/AddLastViewPolicy", ReplyAction="http://tempuri.org/ILastViewPolicy/AddLastViewPolicyResponse")]
        System.IAsyncResult BeginAddLastViewPolicy(MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy lastviewpolicy, System.AsyncCallback callback, object asyncState);
        
        void EndAddLastViewPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILastViewPolicy/GetLastViewPolicy", ReplyAction="http://tempuri.org/ILastViewPolicy/GetLastViewPolicyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ApplicationFault), Action="http://tempuri.org/ILastViewPolicy/GetLastViewPolicyApplicationFaultFault", Name="ApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> GetLastViewPolicy(System.Guid userCredentialID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILastViewPolicy/GetLastViewPolicy", ReplyAction="http://tempuri.org/ILastViewPolicy/GetLastViewPolicyResponse")]
        System.IAsyncResult BeginGetLastViewPolicy(System.Guid userCredentialID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> EndGetLastViewPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILastViewPolicy/GetAllLastViewPolicy", ReplyAction="http://tempuri.org/ILastViewPolicy/GetAllLastViewPolicyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ApplicationFault), Action="http://tempuri.org/ILastViewPolicy/GetAllLastViewPolicyApplicationFaultFault", Name="ApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> GetAllLastViewPolicy();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILastViewPolicy/GetAllLastViewPolicy", ReplyAction="http://tempuri.org/ILastViewPolicy/GetAllLastViewPolicyResponse")]
        System.IAsyncResult BeginGetAllLastViewPolicy(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> EndGetAllLastViewPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILastViewPolicy/DeleteRecordCredientialWise", ReplyAction="http://tempuri.org/ILastViewPolicy/DeleteRecordCredientialWiseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ApplicationFault), Action="http://tempuri.org/ILastViewPolicy/DeleteRecordCredientialWiseApplicationFaultFau" +
            "lt", Name="ApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
        void DeleteRecordCredientialWise(System.Guid userCredentialID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILastViewPolicy/DeleteRecordCredientialWise", ReplyAction="http://tempuri.org/ILastViewPolicy/DeleteRecordCredientialWiseResponse")]
        System.IAsyncResult BeginDeleteRecordCredientialWise(System.Guid userCredentialID, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteRecordCredientialWise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILastViewPolicy/SaveLastViewedClients", ReplyAction="http://tempuri.org/ILastViewPolicy/SaveLastViewedClientsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ApplicationFault), Action="http://tempuri.org/ILastViewPolicy/SaveLastViewedClientsApplicationFaultFault", Name="ApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
        void SaveLastViewedClients(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> lastViewedClients, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILastViewPolicy/SaveLastViewedClients", ReplyAction="http://tempuri.org/ILastViewPolicy/SaveLastViewedClientsResponse")]
        System.IAsyncResult BeginSaveLastViewedClients(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> lastViewedClients, System.Guid userId, System.AsyncCallback callback, object asyncState);
        
        void EndSaveLastViewedClients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILastViewPolicy/GetLastViewedClients", ReplyAction="http://tempuri.org/ILastViewPolicy/GetLastViewedClientsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MyAgencyVault.VM.MyAgencyVaultSvc.ApplicationFault), Action="http://tempuri.org/ILastViewPolicy/GetLastViewedClientsApplicationFaultFault", Name="ApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/MyAgencyVault.BusinessLibrary")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> GetLastViewedClients(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILastViewPolicy/GetLastViewedClients", ReplyAction="http://tempuri.org/ILastViewPolicy/GetLastViewedClientsResponse")]
        System.IAsyncResult BeginGetLastViewedClients(System.Guid userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> EndGetLastViewedClients(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILastViewPolicyChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ILastViewPolicy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLastViewPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastViewPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLastViewPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLastViewPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLastViewedClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastViewedClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LastViewPolicyClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ILastViewPolicy>, MyAgencyVault.VM.MyAgencyVaultSvc.ILastViewPolicy {
        
        private BeginOperationDelegate onBeginAddLastViewPolicyDelegate;
        
        private EndOperationDelegate onEndAddLastViewPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onAddLastViewPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLastViewPolicyDelegate;
        
        private EndOperationDelegate onEndGetLastViewPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastViewPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLastViewPolicyDelegate;
        
        private EndOperationDelegate onEndGetAllLastViewPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLastViewPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRecordCredientialWiseDelegate;
        
        private EndOperationDelegate onEndDeleteRecordCredientialWiseDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRecordCredientialWiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveLastViewedClientsDelegate;
        
        private EndOperationDelegate onEndSaveLastViewedClientsDelegate;
        
        private System.Threading.SendOrPostCallback onSaveLastViewedClientsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLastViewedClientsDelegate;
        
        private EndOperationDelegate onEndGetLastViewedClientsDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastViewedClientsCompletedDelegate;
        
        public LastViewPolicyClient() {
        }
        
        public LastViewPolicyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LastViewPolicyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LastViewPolicyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LastViewPolicyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddLastViewPolicyCompleted;
        
        public event System.EventHandler<GetLastViewPolicyCompletedEventArgs> GetLastViewPolicyCompleted;
        
        public event System.EventHandler<GetAllLastViewPolicyCompletedEventArgs> GetAllLastViewPolicyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteRecordCredientialWiseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveLastViewedClientsCompleted;
        
        public event System.EventHandler<GetLastViewedClientsCompletedEventArgs> GetLastViewedClientsCompleted;
        
        public void AddLastViewPolicy(MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy lastviewpolicy) {
            base.Channel.AddLastViewPolicy(lastviewpolicy);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddLastViewPolicy(MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy lastviewpolicy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddLastViewPolicy(lastviewpolicy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddLastViewPolicy(System.IAsyncResult result) {
            base.Channel.EndAddLastViewPolicy(result);
        }
        
        private System.IAsyncResult OnBeginAddLastViewPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy lastviewpolicy = ((MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy)(inValues[0]));
            return this.BeginAddLastViewPolicy(lastviewpolicy, callback, asyncState);
        }
        
        private object[] OnEndAddLastViewPolicy(System.IAsyncResult result) {
            this.EndAddLastViewPolicy(result);
            return null;
        }
        
        private void OnAddLastViewPolicyCompleted(object state) {
            if ((this.AddLastViewPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddLastViewPolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddLastViewPolicyAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy lastviewpolicy) {
            this.AddLastViewPolicyAsync(lastviewpolicy, null);
        }
        
        public void AddLastViewPolicyAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy lastviewpolicy, object userState) {
            if ((this.onBeginAddLastViewPolicyDelegate == null)) {
                this.onBeginAddLastViewPolicyDelegate = new BeginOperationDelegate(this.OnBeginAddLastViewPolicy);
            }
            if ((this.onEndAddLastViewPolicyDelegate == null)) {
                this.onEndAddLastViewPolicyDelegate = new EndOperationDelegate(this.OnEndAddLastViewPolicy);
            }
            if ((this.onAddLastViewPolicyCompletedDelegate == null)) {
                this.onAddLastViewPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddLastViewPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginAddLastViewPolicyDelegate, new object[] {
                        lastviewpolicy}, this.onEndAddLastViewPolicyDelegate, this.onAddLastViewPolicyCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> GetLastViewPolicy(System.Guid userCredentialID) {
            return base.Channel.GetLastViewPolicy(userCredentialID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLastViewPolicy(System.Guid userCredentialID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastViewPolicy(userCredentialID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> EndGetLastViewPolicy(System.IAsyncResult result) {
            return base.Channel.EndGetLastViewPolicy(result);
        }
        
        private System.IAsyncResult OnBeginGetLastViewPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userCredentialID = ((System.Guid)(inValues[0]));
            return this.BeginGetLastViewPolicy(userCredentialID, callback, asyncState);
        }
        
        private object[] OnEndGetLastViewPolicy(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> retVal = this.EndGetLastViewPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLastViewPolicyCompleted(object state) {
            if ((this.GetLastViewPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastViewPolicyCompleted(this, new GetLastViewPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastViewPolicyAsync(System.Guid userCredentialID) {
            this.GetLastViewPolicyAsync(userCredentialID, null);
        }
        
        public void GetLastViewPolicyAsync(System.Guid userCredentialID, object userState) {
            if ((this.onBeginGetLastViewPolicyDelegate == null)) {
                this.onBeginGetLastViewPolicyDelegate = new BeginOperationDelegate(this.OnBeginGetLastViewPolicy);
            }
            if ((this.onEndGetLastViewPolicyDelegate == null)) {
                this.onEndGetLastViewPolicyDelegate = new EndOperationDelegate(this.OnEndGetLastViewPolicy);
            }
            if ((this.onGetLastViewPolicyCompletedDelegate == null)) {
                this.onGetLastViewPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastViewPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastViewPolicyDelegate, new object[] {
                        userCredentialID}, this.onEndGetLastViewPolicyDelegate, this.onGetLastViewPolicyCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> GetAllLastViewPolicy() {
            return base.Channel.GetAllLastViewPolicy();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllLastViewPolicy(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLastViewPolicy(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> EndGetAllLastViewPolicy(System.IAsyncResult result) {
            return base.Channel.EndGetAllLastViewPolicy(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLastViewPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllLastViewPolicy(callback, asyncState);
        }
        
        private object[] OnEndGetAllLastViewPolicy(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> retVal = this.EndGetAllLastViewPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLastViewPolicyCompleted(object state) {
            if ((this.GetAllLastViewPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLastViewPolicyCompleted(this, new GetAllLastViewPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLastViewPolicyAsync() {
            this.GetAllLastViewPolicyAsync(null);
        }
        
        public void GetAllLastViewPolicyAsync(object userState) {
            if ((this.onBeginGetAllLastViewPolicyDelegate == null)) {
                this.onBeginGetAllLastViewPolicyDelegate = new BeginOperationDelegate(this.OnBeginGetAllLastViewPolicy);
            }
            if ((this.onEndGetAllLastViewPolicyDelegate == null)) {
                this.onEndGetAllLastViewPolicyDelegate = new EndOperationDelegate(this.OnEndGetAllLastViewPolicy);
            }
            if ((this.onGetAllLastViewPolicyCompletedDelegate == null)) {
                this.onGetAllLastViewPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLastViewPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLastViewPolicyDelegate, null, this.onEndGetAllLastViewPolicyDelegate, this.onGetAllLastViewPolicyCompletedDelegate, userState);
        }
        
        public void DeleteRecordCredientialWise(System.Guid userCredentialID) {
            base.Channel.DeleteRecordCredientialWise(userCredentialID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteRecordCredientialWise(System.Guid userCredentialID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRecordCredientialWise(userCredentialID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteRecordCredientialWise(System.IAsyncResult result) {
            base.Channel.EndDeleteRecordCredientialWise(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRecordCredientialWise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userCredentialID = ((System.Guid)(inValues[0]));
            return this.BeginDeleteRecordCredientialWise(userCredentialID, callback, asyncState);
        }
        
        private object[] OnEndDeleteRecordCredientialWise(System.IAsyncResult result) {
            this.EndDeleteRecordCredientialWise(result);
            return null;
        }
        
        private void OnDeleteRecordCredientialWiseCompleted(object state) {
            if ((this.DeleteRecordCredientialWiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRecordCredientialWiseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRecordCredientialWiseAsync(System.Guid userCredentialID) {
            this.DeleteRecordCredientialWiseAsync(userCredentialID, null);
        }
        
        public void DeleteRecordCredientialWiseAsync(System.Guid userCredentialID, object userState) {
            if ((this.onBeginDeleteRecordCredientialWiseDelegate == null)) {
                this.onBeginDeleteRecordCredientialWiseDelegate = new BeginOperationDelegate(this.OnBeginDeleteRecordCredientialWise);
            }
            if ((this.onEndDeleteRecordCredientialWiseDelegate == null)) {
                this.onEndDeleteRecordCredientialWiseDelegate = new EndOperationDelegate(this.OnEndDeleteRecordCredientialWise);
            }
            if ((this.onDeleteRecordCredientialWiseCompletedDelegate == null)) {
                this.onDeleteRecordCredientialWiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRecordCredientialWiseCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRecordCredientialWiseDelegate, new object[] {
                        userCredentialID}, this.onEndDeleteRecordCredientialWiseDelegate, this.onDeleteRecordCredientialWiseCompletedDelegate, userState);
        }
        
        public void SaveLastViewedClients(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> lastViewedClients, System.Guid userId) {
            base.Channel.SaveLastViewedClients(lastViewedClients, userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveLastViewedClients(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> lastViewedClients, System.Guid userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveLastViewedClients(lastViewedClients, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveLastViewedClients(System.IAsyncResult result) {
            base.Channel.EndSaveLastViewedClients(result);
        }
        
        private System.IAsyncResult OnBeginSaveLastViewedClients(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> lastViewedClients = ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy>)(inValues[0]));
            System.Guid userId = ((System.Guid)(inValues[1]));
            return this.BeginSaveLastViewedClients(lastViewedClients, userId, callback, asyncState);
        }
        
        private object[] OnEndSaveLastViewedClients(System.IAsyncResult result) {
            this.EndSaveLastViewedClients(result);
            return null;
        }
        
        private void OnSaveLastViewedClientsCompleted(object state) {
            if ((this.SaveLastViewedClientsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveLastViewedClientsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveLastViewedClientsAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> lastViewedClients, System.Guid userId) {
            this.SaveLastViewedClientsAsync(lastViewedClients, userId, null);
        }
        
        public void SaveLastViewedClientsAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> lastViewedClients, System.Guid userId, object userState) {
            if ((this.onBeginSaveLastViewedClientsDelegate == null)) {
                this.onBeginSaveLastViewedClientsDelegate = new BeginOperationDelegate(this.OnBeginSaveLastViewedClients);
            }
            if ((this.onEndSaveLastViewedClientsDelegate == null)) {
                this.onEndSaveLastViewedClientsDelegate = new EndOperationDelegate(this.OnEndSaveLastViewedClients);
            }
            if ((this.onSaveLastViewedClientsCompletedDelegate == null)) {
                this.onSaveLastViewedClientsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveLastViewedClientsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveLastViewedClientsDelegate, new object[] {
                        lastViewedClients,
                        userId}, this.onEndSaveLastViewedClientsDelegate, this.onSaveLastViewedClientsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> GetLastViewedClients(System.Guid userID) {
            return base.Channel.GetLastViewedClients(userID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLastViewedClients(System.Guid userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastViewedClients(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> EndGetLastViewedClients(System.IAsyncResult result) {
            return base.Channel.EndGetLastViewedClients(result);
        }
        
        private System.IAsyncResult OnBeginGetLastViewedClients(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userID = ((System.Guid)(inValues[0]));
            return this.BeginGetLastViewedClients(userID, callback, asyncState);
        }
        
        private object[] OnEndGetLastViewedClients(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LastViewPolicy> retVal = this.EndGetLastViewedClients(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLastViewedClientsCompleted(object state) {
            if ((this.GetLastViewedClientsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastViewedClientsCompleted(this, new GetLastViewedClientsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastViewedClientsAsync(System.Guid userID) {
            this.GetLastViewedClientsAsync(userID, null);
        }
        
        public void GetLastViewedClientsAsync(System.Guid userID, object userState) {
            if ((this.onBeginGetLastViewedClientsDelegate == null)) {
                this.onBeginGetLastViewedClientsDelegate = new BeginOperationDelegate(this.OnBeginGetLastViewedClients);
            }
            if ((this.onEndGetLastViewedClientsDelegate == null)) {
                this.onEndGetLastViewedClientsDelegate = new EndOperationDelegate(this.OnEndGetLastViewedClients);
            }
            if ((this.onGetLastViewedClientsCompletedDelegate == null)) {
                this.onGetLastViewedClientsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastViewedClientsCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastViewedClientsDelegate, new object[] {
                        userID}, this.onEndGetLastViewedClientsDelegate, this.onGetLastViewedClientsCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IIncomingSchedule")]
    public interface IIncomingSchedule {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIncomingSchedule/AddUpdatePolicyIncomingSchedule", ReplyAction="http://tempuri.org/IIncomingSchedule/AddUpdatePolicyIncomingScheduleResponse")]
        void AddUpdatePolicyIncomingSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule schedule);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIncomingSchedule/AddUpdatePolicyIncomingSchedule", ReplyAction="http://tempuri.org/IIncomingSchedule/AddUpdatePolicyIncomingScheduleResponse")]
        System.IAsyncResult BeginAddUpdatePolicyIncomingSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule schedule, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePolicyIncomingSchedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIncomingSchedule/GetPolicyIncomingSchedule", ReplyAction="http://tempuri.org/IIncomingSchedule/GetPolicyIncomingScheduleResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule GetPolicyIncomingSchedule(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIncomingSchedule/GetPolicyIncomingSchedule", ReplyAction="http://tempuri.org/IIncomingSchedule/GetPolicyIncomingScheduleResponse")]
        System.IAsyncResult BeginGetPolicyIncomingSchedule(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule EndGetPolicyIncomingSchedule(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIncomingScheduleChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IIncomingSchedule, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyIncomingScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyIncomingScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IncomingScheduleClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IIncomingSchedule>, MyAgencyVault.VM.MyAgencyVaultSvc.IIncomingSchedule {
        
        private BeginOperationDelegate onBeginAddUpdatePolicyIncomingScheduleDelegate;
        
        private EndOperationDelegate onEndAddUpdatePolicyIncomingScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePolicyIncomingScheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyIncomingScheduleDelegate;
        
        private EndOperationDelegate onEndGetPolicyIncomingScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyIncomingScheduleCompletedDelegate;
        
        public IncomingScheduleClient() {
        }
        
        public IncomingScheduleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IncomingScheduleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IncomingScheduleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IncomingScheduleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePolicyIncomingScheduleCompleted;
        
        public event System.EventHandler<GetPolicyIncomingScheduleCompletedEventArgs> GetPolicyIncomingScheduleCompleted;
        
        public void AddUpdatePolicyIncomingSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule schedule) {
            base.Channel.AddUpdatePolicyIncomingSchedule(schedule);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePolicyIncomingSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule schedule, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePolicyIncomingSchedule(schedule, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePolicyIncomingSchedule(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePolicyIncomingSchedule(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePolicyIncomingSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule schedule = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule)(inValues[0]));
            return this.BeginAddUpdatePolicyIncomingSchedule(schedule, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePolicyIncomingSchedule(System.IAsyncResult result) {
            this.EndAddUpdatePolicyIncomingSchedule(result);
            return null;
        }
        
        private void OnAddUpdatePolicyIncomingScheduleCompleted(object state) {
            if ((this.AddUpdatePolicyIncomingScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePolicyIncomingScheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePolicyIncomingScheduleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule schedule) {
            this.AddUpdatePolicyIncomingScheduleAsync(schedule, null);
        }
        
        public void AddUpdatePolicyIncomingScheduleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule schedule, object userState) {
            if ((this.onBeginAddUpdatePolicyIncomingScheduleDelegate == null)) {
                this.onBeginAddUpdatePolicyIncomingScheduleDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePolicyIncomingSchedule);
            }
            if ((this.onEndAddUpdatePolicyIncomingScheduleDelegate == null)) {
                this.onEndAddUpdatePolicyIncomingScheduleDelegate = new EndOperationDelegate(this.OnEndAddUpdatePolicyIncomingSchedule);
            }
            if ((this.onAddUpdatePolicyIncomingScheduleCompletedDelegate == null)) {
                this.onAddUpdatePolicyIncomingScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePolicyIncomingScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePolicyIncomingScheduleDelegate, new object[] {
                        schedule}, this.onEndAddUpdatePolicyIncomingScheduleDelegate, this.onAddUpdatePolicyIncomingScheduleCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule GetPolicyIncomingSchedule(System.Guid PolicyId) {
            return base.Channel.GetPolicyIncomingSchedule(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyIncomingSchedule(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyIncomingSchedule(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule EndGetPolicyIncomingSchedule(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyIncomingSchedule(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyIncomingSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyIncomingSchedule(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyIncomingSchedule(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyIncomingSchedule retVal = this.EndGetPolicyIncomingSchedule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyIncomingScheduleCompleted(object state) {
            if ((this.GetPolicyIncomingScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyIncomingScheduleCompleted(this, new GetPolicyIncomingScheduleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyIncomingScheduleAsync(System.Guid PolicyId) {
            this.GetPolicyIncomingScheduleAsync(PolicyId, null);
        }
        
        public void GetPolicyIncomingScheduleAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetPolicyIncomingScheduleDelegate == null)) {
                this.onBeginGetPolicyIncomingScheduleDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyIncomingSchedule);
            }
            if ((this.onEndGetPolicyIncomingScheduleDelegate == null)) {
                this.onEndGetPolicyIncomingScheduleDelegate = new EndOperationDelegate(this.OnEndGetPolicyIncomingSchedule);
            }
            if ((this.onGetPolicyIncomingScheduleCompletedDelegate == null)) {
                this.onGetPolicyIncomingScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyIncomingScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyIncomingScheduleDelegate, new object[] {
                        PolicyId}, this.onEndGetPolicyIncomingScheduleDelegate, this.onGetPolicyIncomingScheduleCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IClientAndPayment")]
    public interface IClientAndPayment {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientAndPayment/GetClientsAndPayments", ReplyAction="http://tempuri.org/IClientAndPayment/GetClientsAndPaymentsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ClientAndPayment> GetClientsAndPayments(System.Guid StatementId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClientAndPayment/GetClientsAndPayments", ReplyAction="http://tempuri.org/IClientAndPayment/GetClientsAndPaymentsResponse")]
        System.IAsyncResult BeginGetClientsAndPayments(System.Guid StatementId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ClientAndPayment> EndGetClientsAndPayments(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientAndPaymentChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IClientAndPayment, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientsAndPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientsAndPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ClientAndPayment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ClientAndPayment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientAndPaymentClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IClientAndPayment>, MyAgencyVault.VM.MyAgencyVaultSvc.IClientAndPayment {
        
        private BeginOperationDelegate onBeginGetClientsAndPaymentsDelegate;
        
        private EndOperationDelegate onEndGetClientsAndPaymentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientsAndPaymentsCompletedDelegate;
        
        public ClientAndPaymentClient() {
        }
        
        public ClientAndPaymentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientAndPaymentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientAndPaymentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientAndPaymentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetClientsAndPaymentsCompletedEventArgs> GetClientsAndPaymentsCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ClientAndPayment> GetClientsAndPayments(System.Guid StatementId) {
            return base.Channel.GetClientsAndPayments(StatementId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetClientsAndPayments(System.Guid StatementId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClientsAndPayments(StatementId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ClientAndPayment> EndGetClientsAndPayments(System.IAsyncResult result) {
            return base.Channel.EndGetClientsAndPayments(result);
        }
        
        private System.IAsyncResult OnBeginGetClientsAndPayments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid StatementId = ((System.Guid)(inValues[0]));
            return this.BeginGetClientsAndPayments(StatementId, callback, asyncState);
        }
        
        private object[] OnEndGetClientsAndPayments(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ClientAndPayment> retVal = this.EndGetClientsAndPayments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientsAndPaymentsCompleted(object state) {
            if ((this.GetClientsAndPaymentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientsAndPaymentsCompleted(this, new GetClientsAndPaymentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientsAndPaymentsAsync(System.Guid StatementId) {
            this.GetClientsAndPaymentsAsync(StatementId, null);
        }
        
        public void GetClientsAndPaymentsAsync(System.Guid StatementId, object userState) {
            if ((this.onBeginGetClientsAndPaymentsDelegate == null)) {
                this.onBeginGetClientsAndPaymentsDelegate = new BeginOperationDelegate(this.OnBeginGetClientsAndPayments);
            }
            if ((this.onEndGetClientsAndPaymentsDelegate == null)) {
                this.onEndGetClientsAndPaymentsDelegate = new EndOperationDelegate(this.OnEndGetClientsAndPayments);
            }
            if ((this.onGetClientsAndPaymentsCompletedDelegate == null)) {
                this.onGetClientsAndPaymentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientsAndPaymentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientsAndPaymentsDelegate, new object[] {
                        StatementId}, this.onEndGetClientsAndPaymentsDelegate, this.onGetClientsAndPaymentsCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IOutgoingSchedule")]
    public interface IOutgoingSchedule {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOutgoingSchedule/AddUpdateOutgoingShedule", ReplyAction="http://tempuri.org/IOutgoingSchedule/AddUpdateOutgoingSheduleResponse")]
        void AddUpdateOutgoingShedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule outgoingSchedule);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOutgoingSchedule/AddUpdateOutgoingShedule", ReplyAction="http://tempuri.org/IOutgoingSchedule/AddUpdateOutgoingSheduleResponse")]
        System.IAsyncResult BeginAddUpdateOutgoingShedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule outgoingSchedule, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateOutgoingShedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOutgoingSchedule/GetOutgoingSheduleBy", ReplyAction="http://tempuri.org/IOutgoingSchedule/GetOutgoingSheduleByResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule GetOutgoingSheduleBy(System.Guid policyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOutgoingSchedule/GetOutgoingSheduleBy", ReplyAction="http://tempuri.org/IOutgoingSchedule/GetOutgoingSheduleByResponse")]
        System.IAsyncResult BeginGetOutgoingSheduleBy(System.Guid policyId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule EndGetOutgoingSheduleBy(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOutgoingScheduleChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IOutgoingSchedule, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOutgoingSheduleByCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOutgoingSheduleByCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OutgoingScheduleClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IOutgoingSchedule>, MyAgencyVault.VM.MyAgencyVaultSvc.IOutgoingSchedule {
        
        private BeginOperationDelegate onBeginAddUpdateOutgoingSheduleDelegate;
        
        private EndOperationDelegate onEndAddUpdateOutgoingSheduleDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateOutgoingSheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOutgoingSheduleByDelegate;
        
        private EndOperationDelegate onEndGetOutgoingSheduleByDelegate;
        
        private System.Threading.SendOrPostCallback onGetOutgoingSheduleByCompletedDelegate;
        
        public OutgoingScheduleClient() {
        }
        
        public OutgoingScheduleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OutgoingScheduleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OutgoingScheduleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OutgoingScheduleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateOutgoingSheduleCompleted;
        
        public event System.EventHandler<GetOutgoingSheduleByCompletedEventArgs> GetOutgoingSheduleByCompleted;
        
        public void AddUpdateOutgoingShedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule outgoingSchedule) {
            base.Channel.AddUpdateOutgoingShedule(outgoingSchedule);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateOutgoingShedule(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule outgoingSchedule, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateOutgoingShedule(outgoingSchedule, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateOutgoingShedule(System.IAsyncResult result) {
            base.Channel.EndAddUpdateOutgoingShedule(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateOutgoingShedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule outgoingSchedule = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule)(inValues[0]));
            return this.BeginAddUpdateOutgoingShedule(outgoingSchedule, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateOutgoingShedule(System.IAsyncResult result) {
            this.EndAddUpdateOutgoingShedule(result);
            return null;
        }
        
        private void OnAddUpdateOutgoingSheduleCompleted(object state) {
            if ((this.AddUpdateOutgoingSheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateOutgoingSheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateOutgoingSheduleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule outgoingSchedule) {
            this.AddUpdateOutgoingSheduleAsync(outgoingSchedule, null);
        }
        
        public void AddUpdateOutgoingSheduleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule outgoingSchedule, object userState) {
            if ((this.onBeginAddUpdateOutgoingSheduleDelegate == null)) {
                this.onBeginAddUpdateOutgoingSheduleDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateOutgoingShedule);
            }
            if ((this.onEndAddUpdateOutgoingSheduleDelegate == null)) {
                this.onEndAddUpdateOutgoingSheduleDelegate = new EndOperationDelegate(this.OnEndAddUpdateOutgoingShedule);
            }
            if ((this.onAddUpdateOutgoingSheduleCompletedDelegate == null)) {
                this.onAddUpdateOutgoingSheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateOutgoingSheduleCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateOutgoingSheduleDelegate, new object[] {
                        outgoingSchedule}, this.onEndAddUpdateOutgoingSheduleDelegate, this.onAddUpdateOutgoingSheduleCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule GetOutgoingSheduleBy(System.Guid policyId) {
            return base.Channel.GetOutgoingSheduleBy(policyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOutgoingSheduleBy(System.Guid policyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOutgoingSheduleBy(policyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule EndGetOutgoingSheduleBy(System.IAsyncResult result) {
            return base.Channel.EndGetOutgoingSheduleBy(result);
        }
        
        private System.IAsyncResult OnBeginGetOutgoingSheduleBy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid policyId = ((System.Guid)(inValues[0]));
            return this.BeginGetOutgoingSheduleBy(policyId, callback, asyncState);
        }
        
        private object[] OnEndGetOutgoingSheduleBy(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingSchedule retVal = this.EndGetOutgoingSheduleBy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOutgoingSheduleByCompleted(object state) {
            if ((this.GetOutgoingSheduleByCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOutgoingSheduleByCompleted(this, new GetOutgoingSheduleByCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOutgoingSheduleByAsync(System.Guid policyId) {
            this.GetOutgoingSheduleByAsync(policyId, null);
        }
        
        public void GetOutgoingSheduleByAsync(System.Guid policyId, object userState) {
            if ((this.onBeginGetOutgoingSheduleByDelegate == null)) {
                this.onBeginGetOutgoingSheduleByDelegate = new BeginOperationDelegate(this.OnBeginGetOutgoingSheduleBy);
            }
            if ((this.onEndGetOutgoingSheduleByDelegate == null)) {
                this.onEndGetOutgoingSheduleByDelegate = new EndOperationDelegate(this.OnEndGetOutgoingSheduleBy);
            }
            if ((this.onGetOutgoingSheduleByCompletedDelegate == null)) {
                this.onGetOutgoingSheduleByCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOutgoingSheduleByCompleted);
            }
            base.InvokeAsync(this.onBeginGetOutgoingSheduleByDelegate, new object[] {
                        policyId}, this.onEndGetOutgoingSheduleByDelegate, this.onGetOutgoingSheduleByCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPolicyToLearnPost")]
    public interface IPolicyToLearnPost {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyToLearnPost/AddUpdatPolicyToLearn", ReplyAction="http://tempuri.org/IPolicyToLearnPost/AddUpdatPolicyToLearnResponse")]
        void AddUpdatPolicyToLearn(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyToLearnPost/AddUpdatPolicyToLearn", ReplyAction="http://tempuri.org/IPolicyToLearnPost/AddUpdatPolicyToLearnResponse")]
        System.IAsyncResult BeginAddUpdatPolicyToLearn(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatPolicyToLearn(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPolicyToLearnPostChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyToLearnPost, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PolicyToLearnPostClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyToLearnPost>, MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyToLearnPost {
        
        private BeginOperationDelegate onBeginAddUpdatPolicyToLearnDelegate;
        
        private EndOperationDelegate onEndAddUpdatPolicyToLearnDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatPolicyToLearnCompletedDelegate;
        
        public PolicyToLearnPostClient() {
        }
        
        public PolicyToLearnPostClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PolicyToLearnPostClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyToLearnPostClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyToLearnPostClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatPolicyToLearnCompleted;
        
        public void AddUpdatPolicyToLearn(System.Guid PolicyId) {
            base.Channel.AddUpdatPolicyToLearn(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatPolicyToLearn(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatPolicyToLearn(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatPolicyToLearn(System.IAsyncResult result) {
            base.Channel.EndAddUpdatPolicyToLearn(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatPolicyToLearn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginAddUpdatPolicyToLearn(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatPolicyToLearn(System.IAsyncResult result) {
            this.EndAddUpdatPolicyToLearn(result);
            return null;
        }
        
        private void OnAddUpdatPolicyToLearnCompleted(object state) {
            if ((this.AddUpdatPolicyToLearnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatPolicyToLearnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatPolicyToLearnAsync(System.Guid PolicyId) {
            this.AddUpdatPolicyToLearnAsync(PolicyId, null);
        }
        
        public void AddUpdatPolicyToLearnAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginAddUpdatPolicyToLearnDelegate == null)) {
                this.onBeginAddUpdatPolicyToLearnDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatPolicyToLearn);
            }
            if ((this.onEndAddUpdatPolicyToLearnDelegate == null)) {
                this.onEndAddUpdatPolicyToLearnDelegate = new EndOperationDelegate(this.OnEndAddUpdatPolicyToLearn);
            }
            if ((this.onAddUpdatPolicyToLearnCompletedDelegate == null)) {
                this.onAddUpdatPolicyToLearnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatPolicyToLearnCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatPolicyToLearnDelegate, new object[] {
                        PolicyId}, this.onEndAddUpdatPolicyToLearnDelegate, this.onAddUpdatPolicyToLearnCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPayorToolField")]
    public interface IPayorToolField {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorToolField/AddUpdatePayorToolField", ReplyAction="http://tempuri.org/IPayorToolField/AddUpdatePayorToolFieldResponse")]
        void AddUpdatePayorToolField(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorToolField/AddUpdatePayorToolField", ReplyAction="http://tempuri.org/IPayorToolField/AddUpdatePayorToolFieldResponse")]
        System.IAsyncResult BeginAddUpdatePayorToolField(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePayorToolField(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorToolField/DeletePayorToolField", ReplyAction="http://tempuri.org/IPayorToolField/DeletePayorToolFieldResponse")]
        void DeletePayorToolField(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorToolField/DeletePayorToolField", ReplyAction="http://tempuri.org/IPayorToolField/DeletePayorToolFieldResponse")]
        System.IAsyncResult BeginDeletePayorToolField(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePayorToolField(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPayorToolFieldChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPayorToolField, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayorToolFieldClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPayorToolField>, MyAgencyVault.VM.MyAgencyVaultSvc.IPayorToolField {
        
        private BeginOperationDelegate onBeginAddUpdatePayorToolFieldDelegate;
        
        private EndOperationDelegate onEndAddUpdatePayorToolFieldDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePayorToolFieldCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePayorToolFieldDelegate;
        
        private EndOperationDelegate onEndDeletePayorToolFieldDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePayorToolFieldCompletedDelegate;
        
        public PayorToolFieldClient() {
        }
        
        public PayorToolFieldClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PayorToolFieldClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorToolFieldClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorToolFieldClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePayorToolFieldCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePayorToolFieldCompleted;
        
        public void AddUpdatePayorToolField(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld) {
            base.Channel.AddUpdatePayorToolField(PyrToolFld);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePayorToolField(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePayorToolField(PyrToolFld, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePayorToolField(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePayorToolField(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePayorToolField(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField)(inValues[0]));
            return this.BeginAddUpdatePayorToolField(PyrToolFld, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePayorToolField(System.IAsyncResult result) {
            this.EndAddUpdatePayorToolField(result);
            return null;
        }
        
        private void OnAddUpdatePayorToolFieldCompleted(object state) {
            if ((this.AddUpdatePayorToolFieldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePayorToolFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePayorToolFieldAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld) {
            this.AddUpdatePayorToolFieldAsync(PyrToolFld, null);
        }
        
        public void AddUpdatePayorToolFieldAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld, object userState) {
            if ((this.onBeginAddUpdatePayorToolFieldDelegate == null)) {
                this.onBeginAddUpdatePayorToolFieldDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePayorToolField);
            }
            if ((this.onEndAddUpdatePayorToolFieldDelegate == null)) {
                this.onEndAddUpdatePayorToolFieldDelegate = new EndOperationDelegate(this.OnEndAddUpdatePayorToolField);
            }
            if ((this.onAddUpdatePayorToolFieldCompletedDelegate == null)) {
                this.onAddUpdatePayorToolFieldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePayorToolFieldCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePayorToolFieldDelegate, new object[] {
                        PyrToolFld}, this.onEndAddUpdatePayorToolFieldDelegate, this.onAddUpdatePayorToolFieldCompletedDelegate, userState);
        }
        
        public void DeletePayorToolField(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld) {
            base.Channel.DeletePayorToolField(PyrToolFld);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePayorToolField(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePayorToolField(PyrToolFld, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePayorToolField(System.IAsyncResult result) {
            base.Channel.EndDeletePayorToolField(result);
        }
        
        private System.IAsyncResult OnBeginDeletePayorToolField(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField)(inValues[0]));
            return this.BeginDeletePayorToolField(PyrToolFld, callback, asyncState);
        }
        
        private object[] OnEndDeletePayorToolField(System.IAsyncResult result) {
            this.EndDeletePayorToolField(result);
            return null;
        }
        
        private void OnDeletePayorToolFieldCompleted(object state) {
            if ((this.DeletePayorToolFieldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePayorToolFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePayorToolFieldAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld) {
            this.DeletePayorToolFieldAsync(PyrToolFld, null);
        }
        
        public void DeletePayorToolFieldAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorToolField PyrToolFld, object userState) {
            if ((this.onBeginDeletePayorToolFieldDelegate == null)) {
                this.onBeginDeletePayorToolFieldDelegate = new BeginOperationDelegate(this.OnBeginDeletePayorToolField);
            }
            if ((this.onEndDeletePayorToolFieldDelegate == null)) {
                this.onEndDeletePayorToolFieldDelegate = new EndOperationDelegate(this.OnEndDeletePayorToolField);
            }
            if ((this.onDeletePayorToolFieldCompletedDelegate == null)) {
                this.onDeletePayorToolFieldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePayorToolFieldCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePayorToolFieldDelegate, new object[] {
                        PyrToolFld}, this.onEndDeletePayorToolFieldDelegate, this.onDeletePayorToolFieldCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.INote")]
    public interface INote {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/AddUpdateNote", ReplyAction="http://tempuri.org/INote/AddUpdateNoteResponse")]
        void AddUpdateNote(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INote/AddUpdateNote", ReplyAction="http://tempuri.org/INote/AddUpdateNoteResponse")]
        System.IAsyncResult BeginAddUpdateNote(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/DeleteNote", ReplyAction="http://tempuri.org/INote/DeleteNoteResponse")]
        void DeleteNote(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INote/DeleteNote", ReplyAction="http://tempuri.org/INote/DeleteNoteResponse")]
        System.IAsyncResult BeginDeleteNote(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/GetNote", ReplyAction="http://tempuri.org/INote/GetNoteResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> GetNote();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INote/GetNote", ReplyAction="http://tempuri.org/INote/GetNoteResponse")]
        System.IAsyncResult BeginGetNote(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> EndGetNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/GetNotesPolicyWise", ReplyAction="http://tempuri.org/INote/GetNotesPolicyWiseResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> GetNotesPolicyWise(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INote/GetNotesPolicyWise", ReplyAction="http://tempuri.org/INote/GetNotesPolicyWiseResponse")]
        System.IAsyncResult BeginGetNotesPolicyWise(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> EndGetNotesPolicyWise(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INoteChannel : MyAgencyVault.VM.MyAgencyVaultSvc.INote, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNotesPolicyWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNotesPolicyWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NoteClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.INote>, MyAgencyVault.VM.MyAgencyVaultSvc.INote {
        
        private BeginOperationDelegate onBeginAddUpdateNoteDelegate;
        
        private EndOperationDelegate onEndAddUpdateNoteDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteNoteDelegate;
        
        private EndOperationDelegate onEndDeleteNoteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNoteDelegate;
        
        private EndOperationDelegate onEndGetNoteDelegate;
        
        private System.Threading.SendOrPostCallback onGetNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNotesPolicyWiseDelegate;
        
        private EndOperationDelegate onEndGetNotesPolicyWiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetNotesPolicyWiseCompletedDelegate;
        
        public NoteClient() {
        }
        
        public NoteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NoteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NoteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NoteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateNoteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteNoteCompleted;
        
        public event System.EventHandler<GetNoteCompletedEventArgs> GetNoteCompleted;
        
        public event System.EventHandler<GetNotesPolicyWiseCompletedEventArgs> GetNotesPolicyWiseCompleted;
        
        public void AddUpdateNote(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not) {
            base.Channel.AddUpdateNote(Not);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateNote(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateNote(Not, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateNote(System.IAsyncResult result) {
            base.Channel.EndAddUpdateNote(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes)(inValues[0]));
            return this.BeginAddUpdateNote(Not, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateNote(System.IAsyncResult result) {
            this.EndAddUpdateNote(result);
            return null;
        }
        
        private void OnAddUpdateNoteCompleted(object state) {
            if ((this.AddUpdateNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateNoteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not) {
            this.AddUpdateNoteAsync(Not, null);
        }
        
        public void AddUpdateNoteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not, object userState) {
            if ((this.onBeginAddUpdateNoteDelegate == null)) {
                this.onBeginAddUpdateNoteDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateNote);
            }
            if ((this.onEndAddUpdateNoteDelegate == null)) {
                this.onEndAddUpdateNoteDelegate = new EndOperationDelegate(this.OnEndAddUpdateNote);
            }
            if ((this.onAddUpdateNoteCompletedDelegate == null)) {
                this.onAddUpdateNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateNoteCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateNoteDelegate, new object[] {
                        Not}, this.onEndAddUpdateNoteDelegate, this.onAddUpdateNoteCompletedDelegate, userState);
        }
        
        public void DeleteNote(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not) {
            base.Channel.DeleteNote(Not);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteNote(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteNote(Not, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteNote(System.IAsyncResult result) {
            base.Channel.EndDeleteNote(result);
        }
        
        private System.IAsyncResult OnBeginDeleteNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes)(inValues[0]));
            return this.BeginDeleteNote(Not, callback, asyncState);
        }
        
        private object[] OnEndDeleteNote(System.IAsyncResult result) {
            this.EndDeleteNote(result);
            return null;
        }
        
        private void OnDeleteNoteCompleted(object state) {
            if ((this.DeleteNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteNoteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not) {
            this.DeleteNoteAsync(Not, null);
        }
        
        public void DeleteNoteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes Not, object userState) {
            if ((this.onBeginDeleteNoteDelegate == null)) {
                this.onBeginDeleteNoteDelegate = new BeginOperationDelegate(this.OnBeginDeleteNote);
            }
            if ((this.onEndDeleteNoteDelegate == null)) {
                this.onEndDeleteNoteDelegate = new EndOperationDelegate(this.OnEndDeleteNote);
            }
            if ((this.onDeleteNoteCompletedDelegate == null)) {
                this.onDeleteNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteNoteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteNoteDelegate, new object[] {
                        Not}, this.onEndDeleteNoteDelegate, this.onDeleteNoteCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> GetNote() {
            return base.Channel.GetNote();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNote(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNote(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> EndGetNote(System.IAsyncResult result) {
            return base.Channel.EndGetNote(result);
        }
        
        private System.IAsyncResult OnBeginGetNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetNote(callback, asyncState);
        }
        
        private object[] OnEndGetNote(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> retVal = this.EndGetNote(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNoteCompleted(object state) {
            if ((this.GetNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNoteCompleted(this, new GetNoteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNoteAsync() {
            this.GetNoteAsync(null);
        }
        
        public void GetNoteAsync(object userState) {
            if ((this.onBeginGetNoteDelegate == null)) {
                this.onBeginGetNoteDelegate = new BeginOperationDelegate(this.OnBeginGetNote);
            }
            if ((this.onEndGetNoteDelegate == null)) {
                this.onEndGetNoteDelegate = new EndOperationDelegate(this.OnEndGetNote);
            }
            if ((this.onGetNoteCompletedDelegate == null)) {
                this.onGetNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNoteCompleted);
            }
            base.InvokeAsync(this.onBeginGetNoteDelegate, null, this.onEndGetNoteDelegate, this.onGetNoteCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> GetNotesPolicyWise(System.Guid PolicyId) {
            return base.Channel.GetNotesPolicyWise(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNotesPolicyWise(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNotesPolicyWise(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> EndGetNotesPolicyWise(System.IAsyncResult result) {
            return base.Channel.EndGetNotesPolicyWise(result);
        }
        
        private System.IAsyncResult OnBeginGetNotesPolicyWise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetNotesPolicyWise(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetNotesPolicyWise(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicyNotes> retVal = this.EndGetNotesPolicyWise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNotesPolicyWiseCompleted(object state) {
            if ((this.GetNotesPolicyWiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNotesPolicyWiseCompleted(this, new GetNotesPolicyWiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNotesPolicyWiseAsync(System.Guid PolicyId) {
            this.GetNotesPolicyWiseAsync(PolicyId, null);
        }
        
        public void GetNotesPolicyWiseAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetNotesPolicyWiseDelegate == null)) {
                this.onBeginGetNotesPolicyWiseDelegate = new BeginOperationDelegate(this.OnBeginGetNotesPolicyWise);
            }
            if ((this.onEndGetNotesPolicyWiseDelegate == null)) {
                this.onEndGetNotesPolicyWiseDelegate = new EndOperationDelegate(this.OnEndGetNotesPolicyWise);
            }
            if ((this.onGetNotesPolicyWiseCompletedDelegate == null)) {
                this.onGetNotesPolicyWiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNotesPolicyWiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetNotesPolicyWiseDelegate, new object[] {
                        PolicyId}, this.onEndGetNotesPolicyWiseDelegate, this.onGetNotesPolicyWiseCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IGlobalIncomingSchedule")]
    public interface IGlobalIncomingSchedule {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalIncomingSchedule/AddUpdateGlobalIncomingSchedule", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/AddUpdateGlobalIncomingScheduleRespons" +
            "e")]
        void AddUpdateGlobalIncomingSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule IncomingSch);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGlobalIncomingSchedule/AddUpdateGlobalIncomingSchedule", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/AddUpdateGlobalIncomingScheduleRespons" +
            "e")]
        System.IAsyncResult BeginAddUpdateGlobalIncomingSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule IncomingSch, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateGlobalIncomingSchedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalIncomingSchedule/GetGlobalIncomingSchedule", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/GetGlobalIncomingScheduleResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule GetGlobalIncomingSchedule(System.Guid carrierId, System.Guid coverageId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGlobalIncomingSchedule/GetGlobalIncomingSchedule", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/GetGlobalIncomingScheduleResponse")]
        System.IAsyncResult BeginGetGlobalIncomingSchedule(System.Guid carrierId, System.Guid coverageId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule EndGetGlobalIncomingSchedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalIncomingSchedule/ChangeScheduleType", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/ChangeScheduleTypeResponse")]
        void ChangeScheduleType(System.Guid carrierId, System.Guid coverageId, int scheduleType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGlobalIncomingSchedule/ChangeScheduleType", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/ChangeScheduleTypeResponse")]
        System.IAsyncResult BeginChangeScheduleType(System.Guid carrierId, System.Guid coverageId, int scheduleType, System.AsyncCallback callback, object asyncState);
        
        void EndChangeScheduleType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalIncomingSchedule/SavePayorSchedules", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/SavePayorSchedulesResponse")]
        void SavePayorSchedules(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule, int overwrite);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGlobalIncomingSchedule/SavePayorSchedules", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/SavePayorSchedulesResponse")]
        System.IAsyncResult BeginSavePayorSchedules(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule, int overwrite, System.AsyncCallback callback, object asyncState);
        
        void EndSavePayorSchedules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalIncomingSchedule/DeleteSchedule", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/DeleteScheduleResponse")]
        void DeleteSchedule(System.Guid ScheduleID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGlobalIncomingSchedule/DeleteSchedule", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/DeleteScheduleResponse")]
        System.IAsyncResult BeginDeleteSchedule(System.Guid ScheduleID, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteSchedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalIncomingSchedule/GetAllSchedules", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/GetAllSchedulesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule> GetAllSchedules(System.Guid LicenseeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGlobalIncomingSchedule/GetAllSchedules", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/GetAllSchedulesResponse")]
        System.IAsyncResult BeginGetAllSchedules(System.Guid LicenseeID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule> EndGetAllSchedules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalIncomingSchedule/GetPayorScheduleDetails", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/GetPayorScheduleDetailsResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule GetPayorScheduleDetails(System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, System.Guid LicenseeID, string ProductType, int IncomingPaymentTypeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGlobalIncomingSchedule/GetPayorScheduleDetails", ReplyAction="http://tempuri.org/IGlobalIncomingSchedule/GetPayorScheduleDetailsResponse")]
        System.IAsyncResult BeginGetPayorScheduleDetails(System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, System.Guid LicenseeID, string ProductType, int IncomingPaymentTypeID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule EndGetPayorScheduleDetails(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGlobalIncomingScheduleChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IGlobalIncomingSchedule, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGlobalIncomingScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGlobalIncomingScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorScheduleDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorScheduleDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GlobalIncomingScheduleClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IGlobalIncomingSchedule>, MyAgencyVault.VM.MyAgencyVaultSvc.IGlobalIncomingSchedule {
        
        private BeginOperationDelegate onBeginAddUpdateGlobalIncomingScheduleDelegate;
        
        private EndOperationDelegate onEndAddUpdateGlobalIncomingScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateGlobalIncomingScheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGlobalIncomingScheduleDelegate;
        
        private EndOperationDelegate onEndGetGlobalIncomingScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onGetGlobalIncomingScheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeScheduleTypeDelegate;
        
        private EndOperationDelegate onEndChangeScheduleTypeDelegate;
        
        private System.Threading.SendOrPostCallback onChangeScheduleTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePayorSchedulesDelegate;
        
        private EndOperationDelegate onEndSavePayorSchedulesDelegate;
        
        private System.Threading.SendOrPostCallback onSavePayorSchedulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteScheduleDelegate;
        
        private EndOperationDelegate onEndDeleteScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteScheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllSchedulesDelegate;
        
        private EndOperationDelegate onEndGetAllSchedulesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllSchedulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorScheduleDetailsDelegate;
        
        private EndOperationDelegate onEndGetPayorScheduleDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorScheduleDetailsCompletedDelegate;
        
        public GlobalIncomingScheduleClient() {
        }
        
        public GlobalIncomingScheduleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GlobalIncomingScheduleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GlobalIncomingScheduleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GlobalIncomingScheduleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateGlobalIncomingScheduleCompleted;
        
        public event System.EventHandler<GetGlobalIncomingScheduleCompletedEventArgs> GetGlobalIncomingScheduleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangeScheduleTypeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SavePayorSchedulesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteScheduleCompleted;
        
        public event System.EventHandler<GetAllSchedulesCompletedEventArgs> GetAllSchedulesCompleted;
        
        public event System.EventHandler<GetPayorScheduleDetailsCompletedEventArgs> GetPayorScheduleDetailsCompleted;
        
        public void AddUpdateGlobalIncomingSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule IncomingSch) {
            base.Channel.AddUpdateGlobalIncomingSchedule(IncomingSch);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateGlobalIncomingSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule IncomingSch, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateGlobalIncomingSchedule(IncomingSch, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateGlobalIncomingSchedule(System.IAsyncResult result) {
            base.Channel.EndAddUpdateGlobalIncomingSchedule(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateGlobalIncomingSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule IncomingSch = ((MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule)(inValues[0]));
            return this.BeginAddUpdateGlobalIncomingSchedule(IncomingSch, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateGlobalIncomingSchedule(System.IAsyncResult result) {
            this.EndAddUpdateGlobalIncomingSchedule(result);
            return null;
        }
        
        private void OnAddUpdateGlobalIncomingScheduleCompleted(object state) {
            if ((this.AddUpdateGlobalIncomingScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateGlobalIncomingScheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateGlobalIncomingScheduleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule IncomingSch) {
            this.AddUpdateGlobalIncomingScheduleAsync(IncomingSch, null);
        }
        
        public void AddUpdateGlobalIncomingScheduleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule IncomingSch, object userState) {
            if ((this.onBeginAddUpdateGlobalIncomingScheduleDelegate == null)) {
                this.onBeginAddUpdateGlobalIncomingScheduleDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateGlobalIncomingSchedule);
            }
            if ((this.onEndAddUpdateGlobalIncomingScheduleDelegate == null)) {
                this.onEndAddUpdateGlobalIncomingScheduleDelegate = new EndOperationDelegate(this.OnEndAddUpdateGlobalIncomingSchedule);
            }
            if ((this.onAddUpdateGlobalIncomingScheduleCompletedDelegate == null)) {
                this.onAddUpdateGlobalIncomingScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateGlobalIncomingScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateGlobalIncomingScheduleDelegate, new object[] {
                        IncomingSch}, this.onEndAddUpdateGlobalIncomingScheduleDelegate, this.onAddUpdateGlobalIncomingScheduleCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule GetGlobalIncomingSchedule(System.Guid carrierId, System.Guid coverageId) {
            return base.Channel.GetGlobalIncomingSchedule(carrierId, coverageId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetGlobalIncomingSchedule(System.Guid carrierId, System.Guid coverageId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGlobalIncomingSchedule(carrierId, coverageId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule EndGetGlobalIncomingSchedule(System.IAsyncResult result) {
            return base.Channel.EndGetGlobalIncomingSchedule(result);
        }
        
        private System.IAsyncResult OnBeginGetGlobalIncomingSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid carrierId = ((System.Guid)(inValues[0]));
            System.Guid coverageId = ((System.Guid)(inValues[1]));
            return this.BeginGetGlobalIncomingSchedule(carrierId, coverageId, callback, asyncState);
        }
        
        private object[] OnEndGetGlobalIncomingSchedule(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.GlobalIncomingSchedule retVal = this.EndGetGlobalIncomingSchedule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGlobalIncomingScheduleCompleted(object state) {
            if ((this.GetGlobalIncomingScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGlobalIncomingScheduleCompleted(this, new GetGlobalIncomingScheduleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGlobalIncomingScheduleAsync(System.Guid carrierId, System.Guid coverageId) {
            this.GetGlobalIncomingScheduleAsync(carrierId, coverageId, null);
        }
        
        public void GetGlobalIncomingScheduleAsync(System.Guid carrierId, System.Guid coverageId, object userState) {
            if ((this.onBeginGetGlobalIncomingScheduleDelegate == null)) {
                this.onBeginGetGlobalIncomingScheduleDelegate = new BeginOperationDelegate(this.OnBeginGetGlobalIncomingSchedule);
            }
            if ((this.onEndGetGlobalIncomingScheduleDelegate == null)) {
                this.onEndGetGlobalIncomingScheduleDelegate = new EndOperationDelegate(this.OnEndGetGlobalIncomingSchedule);
            }
            if ((this.onGetGlobalIncomingScheduleCompletedDelegate == null)) {
                this.onGetGlobalIncomingScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGlobalIncomingScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginGetGlobalIncomingScheduleDelegate, new object[] {
                        carrierId,
                        coverageId}, this.onEndGetGlobalIncomingScheduleDelegate, this.onGetGlobalIncomingScheduleCompletedDelegate, userState);
        }
        
        public void ChangeScheduleType(System.Guid carrierId, System.Guid coverageId, int scheduleType) {
            base.Channel.ChangeScheduleType(carrierId, coverageId, scheduleType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangeScheduleType(System.Guid carrierId, System.Guid coverageId, int scheduleType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeScheduleType(carrierId, coverageId, scheduleType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndChangeScheduleType(System.IAsyncResult result) {
            base.Channel.EndChangeScheduleType(result);
        }
        
        private System.IAsyncResult OnBeginChangeScheduleType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid carrierId = ((System.Guid)(inValues[0]));
            System.Guid coverageId = ((System.Guid)(inValues[1]));
            int scheduleType = ((int)(inValues[2]));
            return this.BeginChangeScheduleType(carrierId, coverageId, scheduleType, callback, asyncState);
        }
        
        private object[] OnEndChangeScheduleType(System.IAsyncResult result) {
            this.EndChangeScheduleType(result);
            return null;
        }
        
        private void OnChangeScheduleTypeCompleted(object state) {
            if ((this.ChangeScheduleTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeScheduleTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeScheduleTypeAsync(System.Guid carrierId, System.Guid coverageId, int scheduleType) {
            this.ChangeScheduleTypeAsync(carrierId, coverageId, scheduleType, null);
        }
        
        public void ChangeScheduleTypeAsync(System.Guid carrierId, System.Guid coverageId, int scheduleType, object userState) {
            if ((this.onBeginChangeScheduleTypeDelegate == null)) {
                this.onBeginChangeScheduleTypeDelegate = new BeginOperationDelegate(this.OnBeginChangeScheduleType);
            }
            if ((this.onEndChangeScheduleTypeDelegate == null)) {
                this.onEndChangeScheduleTypeDelegate = new EndOperationDelegate(this.OnEndChangeScheduleType);
            }
            if ((this.onChangeScheduleTypeCompletedDelegate == null)) {
                this.onChangeScheduleTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeScheduleTypeCompleted);
            }
            base.InvokeAsync(this.onBeginChangeScheduleTypeDelegate, new object[] {
                        carrierId,
                        coverageId,
                        scheduleType}, this.onEndChangeScheduleTypeDelegate, this.onChangeScheduleTypeCompletedDelegate, userState);
        }
        
        public void SavePayorSchedules(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule, int overwrite) {
            base.Channel.SavePayorSchedules(schedule, overwrite);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSavePayorSchedules(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule, int overwrite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePayorSchedules(schedule, overwrite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSavePayorSchedules(System.IAsyncResult result) {
            base.Channel.EndSavePayorSchedules(result);
        }
        
        private System.IAsyncResult OnBeginSavePayorSchedules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule)(inValues[0]));
            int overwrite = ((int)(inValues[1]));
            return this.BeginSavePayorSchedules(schedule, overwrite, callback, asyncState);
        }
        
        private object[] OnEndSavePayorSchedules(System.IAsyncResult result) {
            this.EndSavePayorSchedules(result);
            return null;
        }
        
        private void OnSavePayorSchedulesCompleted(object state) {
            if ((this.SavePayorSchedulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePayorSchedulesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePayorSchedulesAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule, int overwrite) {
            this.SavePayorSchedulesAsync(schedule, overwrite, null);
        }
        
        public void SavePayorSchedulesAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule, int overwrite, object userState) {
            if ((this.onBeginSavePayorSchedulesDelegate == null)) {
                this.onBeginSavePayorSchedulesDelegate = new BeginOperationDelegate(this.OnBeginSavePayorSchedules);
            }
            if ((this.onEndSavePayorSchedulesDelegate == null)) {
                this.onEndSavePayorSchedulesDelegate = new EndOperationDelegate(this.OnEndSavePayorSchedules);
            }
            if ((this.onSavePayorSchedulesCompletedDelegate == null)) {
                this.onSavePayorSchedulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePayorSchedulesCompleted);
            }
            base.InvokeAsync(this.onBeginSavePayorSchedulesDelegate, new object[] {
                        schedule,
                        overwrite}, this.onEndSavePayorSchedulesDelegate, this.onSavePayorSchedulesCompletedDelegate, userState);
        }
        
        public void DeleteSchedule(System.Guid ScheduleID) {
            base.Channel.DeleteSchedule(ScheduleID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteSchedule(System.Guid ScheduleID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSchedule(ScheduleID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteSchedule(System.IAsyncResult result) {
            base.Channel.EndDeleteSchedule(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid ScheduleID = ((System.Guid)(inValues[0]));
            return this.BeginDeleteSchedule(ScheduleID, callback, asyncState);
        }
        
        private object[] OnEndDeleteSchedule(System.IAsyncResult result) {
            this.EndDeleteSchedule(result);
            return null;
        }
        
        private void OnDeleteScheduleCompleted(object state) {
            if ((this.DeleteScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteScheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteScheduleAsync(System.Guid ScheduleID) {
            this.DeleteScheduleAsync(ScheduleID, null);
        }
        
        public void DeleteScheduleAsync(System.Guid ScheduleID, object userState) {
            if ((this.onBeginDeleteScheduleDelegate == null)) {
                this.onBeginDeleteScheduleDelegate = new BeginOperationDelegate(this.OnBeginDeleteSchedule);
            }
            if ((this.onEndDeleteScheduleDelegate == null)) {
                this.onEndDeleteScheduleDelegate = new EndOperationDelegate(this.OnEndDeleteSchedule);
            }
            if ((this.onDeleteScheduleCompletedDelegate == null)) {
                this.onDeleteScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteScheduleDelegate, new object[] {
                        ScheduleID}, this.onEndDeleteScheduleDelegate, this.onDeleteScheduleCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule> GetAllSchedules(System.Guid LicenseeID) {
            return base.Channel.GetAllSchedules(LicenseeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllSchedules(System.Guid LicenseeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllSchedules(LicenseeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule> EndGetAllSchedules(System.IAsyncResult result) {
            return base.Channel.EndGetAllSchedules(result);
        }
        
        private System.IAsyncResult OnBeginGetAllSchedules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeID = ((System.Guid)(inValues[0]));
            return this.BeginGetAllSchedules(LicenseeID, callback, asyncState);
        }
        
        private object[] OnEndGetAllSchedules(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule> retVal = this.EndGetAllSchedules(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllSchedulesCompleted(object state) {
            if ((this.GetAllSchedulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllSchedulesCompleted(this, new GetAllSchedulesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllSchedulesAsync(System.Guid LicenseeID) {
            this.GetAllSchedulesAsync(LicenseeID, null);
        }
        
        public void GetAllSchedulesAsync(System.Guid LicenseeID, object userState) {
            if ((this.onBeginGetAllSchedulesDelegate == null)) {
                this.onBeginGetAllSchedulesDelegate = new BeginOperationDelegate(this.OnBeginGetAllSchedules);
            }
            if ((this.onEndGetAllSchedulesDelegate == null)) {
                this.onEndGetAllSchedulesDelegate = new EndOperationDelegate(this.OnEndGetAllSchedules);
            }
            if ((this.onGetAllSchedulesCompletedDelegate == null)) {
                this.onGetAllSchedulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllSchedulesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllSchedulesDelegate, new object[] {
                        LicenseeID}, this.onEndGetAllSchedulesDelegate, this.onGetAllSchedulesCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule GetPayorScheduleDetails(System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, System.Guid LicenseeID, string ProductType, int IncomingPaymentTypeID) {
            return base.Channel.GetPayorScheduleDetails(PayorID, CarrierID, CoverageID, LicenseeID, ProductType, IncomingPaymentTypeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorScheduleDetails(System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, System.Guid LicenseeID, string ProductType, int IncomingPaymentTypeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorScheduleDetails(PayorID, CarrierID, CoverageID, LicenseeID, ProductType, IncomingPaymentTypeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule EndGetPayorScheduleDetails(System.IAsyncResult result) {
            return base.Channel.EndGetPayorScheduleDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorScheduleDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorID = ((System.Guid)(inValues[0]));
            System.Guid CarrierID = ((System.Guid)(inValues[1]));
            System.Guid CoverageID = ((System.Guid)(inValues[2]));
            System.Guid LicenseeID = ((System.Guid)(inValues[3]));
            string ProductType = ((string)(inValues[4]));
            int IncomingPaymentTypeID = ((int)(inValues[5]));
            return this.BeginGetPayorScheduleDetails(PayorID, CarrierID, CoverageID, LicenseeID, ProductType, IncomingPaymentTypeID, callback, asyncState);
        }
        
        private object[] OnEndGetPayorScheduleDetails(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule retVal = this.EndGetPayorScheduleDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorScheduleDetailsCompleted(object state) {
            if ((this.GetPayorScheduleDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorScheduleDetailsCompleted(this, new GetPayorScheduleDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorScheduleDetailsAsync(System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, System.Guid LicenseeID, string ProductType, int IncomingPaymentTypeID) {
            this.GetPayorScheduleDetailsAsync(PayorID, CarrierID, CoverageID, LicenseeID, ProductType, IncomingPaymentTypeID, null);
        }
        
        public void GetPayorScheduleDetailsAsync(System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, System.Guid LicenseeID, string ProductType, int IncomingPaymentTypeID, object userState) {
            if ((this.onBeginGetPayorScheduleDetailsDelegate == null)) {
                this.onBeginGetPayorScheduleDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetPayorScheduleDetails);
            }
            if ((this.onEndGetPayorScheduleDetailsDelegate == null)) {
                this.onEndGetPayorScheduleDetailsDelegate = new EndOperationDelegate(this.OnEndGetPayorScheduleDetails);
            }
            if ((this.onGetPayorScheduleDetailsCompletedDelegate == null)) {
                this.onGetPayorScheduleDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorScheduleDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorScheduleDetailsDelegate, new object[] {
                        PayorID,
                        CarrierID,
                        CoverageID,
                        LicenseeID,
                        ProductType,
                        IncomingPaymentTypeID}, this.onEndGetPayorScheduleDetailsDelegate, this.onGetPayorScheduleDetailsCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ILearnedToPolicyPost")]
    public interface ILearnedToPolicyPost {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILearnedToPolicyPost/AddLearnedToPolicy", ReplyAction="http://tempuri.org/ILearnedToPolicyPost/AddLearnedToPolicyResponse")]
        void AddLearnedToPolicy(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILearnedToPolicyPost/AddLearnedToPolicy", ReplyAction="http://tempuri.org/ILearnedToPolicyPost/AddLearnedToPolicyResponse")]
        System.IAsyncResult BeginAddLearnedToPolicy(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        void EndAddLearnedToPolicy(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILearnedToPolicyPostChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ILearnedToPolicyPost, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LearnedToPolicyPostClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ILearnedToPolicyPost>, MyAgencyVault.VM.MyAgencyVaultSvc.ILearnedToPolicyPost {
        
        private BeginOperationDelegate onBeginAddLearnedToPolicyDelegate;
        
        private EndOperationDelegate onEndAddLearnedToPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onAddLearnedToPolicyCompletedDelegate;
        
        public LearnedToPolicyPostClient() {
        }
        
        public LearnedToPolicyPostClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LearnedToPolicyPostClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LearnedToPolicyPostClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LearnedToPolicyPostClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddLearnedToPolicyCompleted;
        
        public void AddLearnedToPolicy(System.Guid PolicyId) {
            base.Channel.AddLearnedToPolicy(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddLearnedToPolicy(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddLearnedToPolicy(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddLearnedToPolicy(System.IAsyncResult result) {
            base.Channel.EndAddLearnedToPolicy(result);
        }
        
        private System.IAsyncResult OnBeginAddLearnedToPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginAddLearnedToPolicy(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndAddLearnedToPolicy(System.IAsyncResult result) {
            this.EndAddLearnedToPolicy(result);
            return null;
        }
        
        private void OnAddLearnedToPolicyCompleted(object state) {
            if ((this.AddLearnedToPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddLearnedToPolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddLearnedToPolicyAsync(System.Guid PolicyId) {
            this.AddLearnedToPolicyAsync(PolicyId, null);
        }
        
        public void AddLearnedToPolicyAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginAddLearnedToPolicyDelegate == null)) {
                this.onBeginAddLearnedToPolicyDelegate = new BeginOperationDelegate(this.OnBeginAddLearnedToPolicy);
            }
            if ((this.onEndAddLearnedToPolicyDelegate == null)) {
                this.onEndAddLearnedToPolicyDelegate = new EndOperationDelegate(this.OnEndAddLearnedToPolicy);
            }
            if ((this.onAddLearnedToPolicyCompletedDelegate == null)) {
                this.onAddLearnedToPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddLearnedToPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginAddLearnedToPolicyDelegate, new object[] {
                        PolicyId}, this.onEndAddLearnedToPolicyDelegate, this.onAddLearnedToPolicyCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IComDeptSupport")]
    public interface IComDeptSupport {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComDeptSupport/getSupportFiles", ReplyAction="http://tempuri.org/IComDeptSupport/getSupportFilesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupportData> getSupportFiles(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupport comSupport);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IComDeptSupport/getSupportFiles", ReplyAction="http://tempuri.org/IComDeptSupport/getSupportFilesResponse")]
        System.IAsyncResult BegingetSupportFiles(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupport comSupport, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupportData> EndgetSupportFiles(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IComDeptSupportChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IComDeptSupport, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getSupportFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getSupportFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupportData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupportData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComDeptSupportClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IComDeptSupport>, MyAgencyVault.VM.MyAgencyVaultSvc.IComDeptSupport {
        
        private BeginOperationDelegate onBegingetSupportFilesDelegate;
        
        private EndOperationDelegate onEndgetSupportFilesDelegate;
        
        private System.Threading.SendOrPostCallback ongetSupportFilesCompletedDelegate;
        
        public ComDeptSupportClient() {
        }
        
        public ComDeptSupportClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ComDeptSupportClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComDeptSupportClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComDeptSupportClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<getSupportFilesCompletedEventArgs> getSupportFilesCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupportData> getSupportFiles(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupport comSupport) {
            return base.Channel.getSupportFiles(comSupport);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetSupportFiles(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupport comSupport, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetSupportFiles(comSupport, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupportData> EndgetSupportFiles(System.IAsyncResult result) {
            return base.Channel.EndgetSupportFiles(result);
        }
        
        private System.IAsyncResult OnBegingetSupportFiles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupport comSupport = ((MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupport)(inValues[0]));
            return this.BegingetSupportFiles(comSupport, callback, asyncState);
        }
        
        private object[] OnEndgetSupportFiles(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupportData> retVal = this.EndgetSupportFiles(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetSupportFilesCompleted(object state) {
            if ((this.getSupportFilesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getSupportFilesCompleted(this, new getSupportFilesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getSupportFilesAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupport comSupport) {
            this.getSupportFilesAsync(comSupport, null);
        }
        
        public void getSupportFilesAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ComDeptSupport comSupport, object userState) {
            if ((this.onBegingetSupportFilesDelegate == null)) {
                this.onBegingetSupportFilesDelegate = new BeginOperationDelegate(this.OnBegingetSupportFiles);
            }
            if ((this.onEndgetSupportFilesDelegate == null)) {
                this.onEndgetSupportFilesDelegate = new EndOperationDelegate(this.OnEndgetSupportFiles);
            }
            if ((this.ongetSupportFilesCompletedDelegate == null)) {
                this.ongetSupportFilesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetSupportFilesCompleted);
            }
            base.InvokeAsync(this.onBegingetSupportFilesDelegate, new object[] {
                        comSupport}, this.onEndgetSupportFilesDelegate, this.ongetSupportFilesCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ISendMail")]
    public interface ISendMail {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendMail/SendMail", ReplyAction="http://tempuri.org/ISendMail/SendMailResponse")]
        bool SendMail(string toAddress, string subject, string body);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISendMail/SendMail", ReplyAction="http://tempuri.org/ISendMail/SendMailResponse")]
        System.IAsyncResult BeginSendMail(string toAddress, string subject, string body, System.AsyncCallback callback, object asyncState);
        
        bool EndSendMail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendMail/SendMailToDev", ReplyAction="http://tempuri.org/ISendMail/SendMailToDevResponse")]
        bool SendMailToDev(string toAddress, string subject, string body);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISendMail/SendMailToDev", ReplyAction="http://tempuri.org/ISendMail/SendMailToDevResponse")]
        System.IAsyncResult BeginSendMailToDev(string toAddress, string subject, string body, System.AsyncCallback callback, object asyncState);
        
        bool EndSendMailToDev(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendMail/GetAlertCommissionDepartmentMailId", ReplyAction="http://tempuri.org/ISendMail/GetAlertCommissionDepartmentMailIdResponse")]
        string GetAlertCommissionDepartmentMailId();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISendMail/GetAlertCommissionDepartmentMailId", ReplyAction="http://tempuri.org/ISendMail/GetAlertCommissionDepartmentMailIdResponse")]
        System.IAsyncResult BeginGetAlertCommissionDepartmentMailId(System.AsyncCallback callback, object asyncState);
        
        string EndGetAlertCommissionDepartmentMailId(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISendMailChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ISendMail, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendMailToDevCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendMailToDevCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAlertCommissionDepartmentMailIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAlertCommissionDepartmentMailIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendMailClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ISendMail>, MyAgencyVault.VM.MyAgencyVaultSvc.ISendMail {
        
        private BeginOperationDelegate onBeginSendMailDelegate;
        
        private EndOperationDelegate onEndSendMailDelegate;
        
        private System.Threading.SendOrPostCallback onSendMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendMailToDevDelegate;
        
        private EndOperationDelegate onEndSendMailToDevDelegate;
        
        private System.Threading.SendOrPostCallback onSendMailToDevCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAlertCommissionDepartmentMailIdDelegate;
        
        private EndOperationDelegate onEndGetAlertCommissionDepartmentMailIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetAlertCommissionDepartmentMailIdCompletedDelegate;
        
        public SendMailClient() {
        }
        
        public SendMailClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SendMailClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SendMailClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SendMailClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<SendMailCompletedEventArgs> SendMailCompleted;
        
        public event System.EventHandler<SendMailToDevCompletedEventArgs> SendMailToDevCompleted;
        
        public event System.EventHandler<GetAlertCommissionDepartmentMailIdCompletedEventArgs> GetAlertCommissionDepartmentMailIdCompleted;
        
        public bool SendMail(string toAddress, string subject, string body) {
            return base.Channel.SendMail(toAddress, subject, body);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendMail(string toAddress, string subject, string body, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendMail(toAddress, subject, body, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSendMail(System.IAsyncResult result) {
            return base.Channel.EndSendMail(result);
        }
        
        private System.IAsyncResult OnBeginSendMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string toAddress = ((string)(inValues[0]));
            string subject = ((string)(inValues[1]));
            string body = ((string)(inValues[2]));
            return this.BeginSendMail(toAddress, subject, body, callback, asyncState);
        }
        
        private object[] OnEndSendMail(System.IAsyncResult result) {
            bool retVal = this.EndSendMail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendMailCompleted(object state) {
            if ((this.SendMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendMailCompleted(this, new SendMailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendMailAsync(string toAddress, string subject, string body) {
            this.SendMailAsync(toAddress, subject, body, null);
        }
        
        public void SendMailAsync(string toAddress, string subject, string body, object userState) {
            if ((this.onBeginSendMailDelegate == null)) {
                this.onBeginSendMailDelegate = new BeginOperationDelegate(this.OnBeginSendMail);
            }
            if ((this.onEndSendMailDelegate == null)) {
                this.onEndSendMailDelegate = new EndOperationDelegate(this.OnEndSendMail);
            }
            if ((this.onSendMailCompletedDelegate == null)) {
                this.onSendMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMailCompleted);
            }
            base.InvokeAsync(this.onBeginSendMailDelegate, new object[] {
                        toAddress,
                        subject,
                        body}, this.onEndSendMailDelegate, this.onSendMailCompletedDelegate, userState);
        }
        
        public bool SendMailToDev(string toAddress, string subject, string body) {
            return base.Channel.SendMailToDev(toAddress, subject, body);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendMailToDev(string toAddress, string subject, string body, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendMailToDev(toAddress, subject, body, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSendMailToDev(System.IAsyncResult result) {
            return base.Channel.EndSendMailToDev(result);
        }
        
        private System.IAsyncResult OnBeginSendMailToDev(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string toAddress = ((string)(inValues[0]));
            string subject = ((string)(inValues[1]));
            string body = ((string)(inValues[2]));
            return this.BeginSendMailToDev(toAddress, subject, body, callback, asyncState);
        }
        
        private object[] OnEndSendMailToDev(System.IAsyncResult result) {
            bool retVal = this.EndSendMailToDev(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendMailToDevCompleted(object state) {
            if ((this.SendMailToDevCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendMailToDevCompleted(this, new SendMailToDevCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendMailToDevAsync(string toAddress, string subject, string body) {
            this.SendMailToDevAsync(toAddress, subject, body, null);
        }
        
        public void SendMailToDevAsync(string toAddress, string subject, string body, object userState) {
            if ((this.onBeginSendMailToDevDelegate == null)) {
                this.onBeginSendMailToDevDelegate = new BeginOperationDelegate(this.OnBeginSendMailToDev);
            }
            if ((this.onEndSendMailToDevDelegate == null)) {
                this.onEndSendMailToDevDelegate = new EndOperationDelegate(this.OnEndSendMailToDev);
            }
            if ((this.onSendMailToDevCompletedDelegate == null)) {
                this.onSendMailToDevCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMailToDevCompleted);
            }
            base.InvokeAsync(this.onBeginSendMailToDevDelegate, new object[] {
                        toAddress,
                        subject,
                        body}, this.onEndSendMailToDevDelegate, this.onSendMailToDevCompletedDelegate, userState);
        }
        
        public string GetAlertCommissionDepartmentMailId() {
            return base.Channel.GetAlertCommissionDepartmentMailId();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAlertCommissionDepartmentMailId(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAlertCommissionDepartmentMailId(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAlertCommissionDepartmentMailId(System.IAsyncResult result) {
            return base.Channel.EndGetAlertCommissionDepartmentMailId(result);
        }
        
        private System.IAsyncResult OnBeginGetAlertCommissionDepartmentMailId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAlertCommissionDepartmentMailId(callback, asyncState);
        }
        
        private object[] OnEndGetAlertCommissionDepartmentMailId(System.IAsyncResult result) {
            string retVal = this.EndGetAlertCommissionDepartmentMailId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAlertCommissionDepartmentMailIdCompleted(object state) {
            if ((this.GetAlertCommissionDepartmentMailIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAlertCommissionDepartmentMailIdCompleted(this, new GetAlertCommissionDepartmentMailIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAlertCommissionDepartmentMailIdAsync() {
            this.GetAlertCommissionDepartmentMailIdAsync(null);
        }
        
        public void GetAlertCommissionDepartmentMailIdAsync(object userState) {
            if ((this.onBeginGetAlertCommissionDepartmentMailIdDelegate == null)) {
                this.onBeginGetAlertCommissionDepartmentMailIdDelegate = new BeginOperationDelegate(this.OnBeginGetAlertCommissionDepartmentMailId);
            }
            if ((this.onEndGetAlertCommissionDepartmentMailIdDelegate == null)) {
                this.onEndGetAlertCommissionDepartmentMailIdDelegate = new EndOperationDelegate(this.OnEndGetAlertCommissionDepartmentMailId);
            }
            if ((this.onGetAlertCommissionDepartmentMailIdCompletedDelegate == null)) {
                this.onGetAlertCommissionDepartmentMailIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAlertCommissionDepartmentMailIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetAlertCommissionDepartmentMailIdDelegate, null, this.onEndGetAlertCommissionDepartmentMailIdDelegate, this.onGetAlertCommissionDepartmentMailIdCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IDataEntryUnit")]
    public interface IDataEntryUnit {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataEntryUnit/AddUpdateDEU", ReplyAction="http://tempuri.org/IDataEntryUnit/AddUpdateDEUResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ModifiyableBatchStatementData AddUpdateDEU(MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataEntryUnit/AddUpdateDEU", ReplyAction="http://tempuri.org/IDataEntryUnit/AddUpdateDEUResponse")]
        System.IAsyncResult BeginAddUpdateDEU(MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ModifiyableBatchStatementData EndAddUpdateDEU(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataEntryUnit/AddupdateDeuEntry", ReplyAction="http://tempuri.org/IDataEntryUnit/AddupdateDeuEntryResponse")]
        void AddupdateDeuEntry(MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DeuEntry);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataEntryUnit/AddupdateDeuEntry", ReplyAction="http://tempuri.org/IDataEntryUnit/AddupdateDeuEntryResponse")]
        System.IAsyncResult BeginAddupdateDeuEntry(MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DeuEntry, System.AsyncCallback callback, object asyncState);
        
        void EndAddupdateDeuEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataEntryUnit/GetDeuEntryidWise", ReplyAction="http://tempuri.org/IDataEntryUnit/GetDeuEntryidWiseResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.DEU GetDeuEntryidWise(System.Guid DeuEntryID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataEntryUnit/GetDeuEntryidWise", ReplyAction="http://tempuri.org/IDataEntryUnit/GetDeuEntryidWiseResponse")]
        System.IAsyncResult BeginGetDeuEntryidWise(System.Guid DeuEntryID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.DEU EndGetDeuEntryidWise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataEntryUnit/GetDeuFields", ReplyAction="http://tempuri.org/IDataEntryUnit/GetDeuFieldsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DataEntryField> GetDeuFields(System.Guid DeuEntryID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataEntryUnit/GetDeuFields", ReplyAction="http://tempuri.org/IDataEntryUnit/GetDeuFieldsResponse")]
        System.IAsyncResult BeginGetDeuFields(System.Guid DeuEntryID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DataEntryField> EndGetDeuFields(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataEntryUnit/IsPaymentFromCommissionDashBoardByPaymentEntryI" +
            "d", ReplyAction="http://tempuri.org/IDataEntryUnit/IsPaymentFromCommissionDashBoardByPaymentEntryI" +
            "dResponse")]
        bool IsPaymentFromCommissionDashBoardByPaymentEntryId(System.Guid PolicPaymentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataEntryUnit/IsPaymentFromCommissionDashBoardByPaymentEntryI" +
            "d", ReplyAction="http://tempuri.org/IDataEntryUnit/IsPaymentFromCommissionDashBoardByPaymentEntryI" +
            "dResponse")]
        System.IAsyncResult BeginIsPaymentFromCommissionDashBoardByPaymentEntryId(System.Guid PolicPaymentId, System.AsyncCallback callback, object asyncState);
        
        bool EndIsPaymentFromCommissionDashBoardByPaymentEntryId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataEntryUnit/IsPaymentFromCommissionDashBoardByDEUEntryId", ReplyAction="http://tempuri.org/IDataEntryUnit/IsPaymentFromCommissionDashBoardByDEUEntryIdRes" +
            "ponse")]
        bool IsPaymentFromCommissionDashBoardByDEUEntryId(System.Guid DeuEntryId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataEntryUnit/IsPaymentFromCommissionDashBoardByDEUEntryId", ReplyAction="http://tempuri.org/IDataEntryUnit/IsPaymentFromCommissionDashBoardByDEUEntryIdRes" +
            "ponse")]
        System.IAsyncResult BeginIsPaymentFromCommissionDashBoardByDEUEntryId(System.Guid DeuEntryId, System.AsyncCallback callback, object asyncState);
        
        bool EndIsPaymentFromCommissionDashBoardByDEUEntryId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataEntryUnit/GetDeuEntriesForStatement", ReplyAction="http://tempuri.org/IDataEntryUnit/GetDeuEntriesForStatementResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU> GetDeuEntriesForStatement(System.Guid StatementId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataEntryUnit/GetDeuEntriesForStatement", ReplyAction="http://tempuri.org/IDataEntryUnit/GetDeuEntriesForStatementResponse")]
        System.IAsyncResult BeginGetDeuEntriesForStatement(System.Guid StatementId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU> EndGetDeuEntriesForStatement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataEntryUnit/DeleteDeuEntryByID", ReplyAction="http://tempuri.org/IDataEntryUnit/DeleteDeuEntryByIDResponse")]
        void DeleteDeuEntryByID(System.Guid DeuEntryId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataEntryUnit/DeleteDeuEntryByID", ReplyAction="http://tempuri.org/IDataEntryUnit/DeleteDeuEntryByIDResponse")]
        System.IAsyncResult BeginDeleteDeuEntryByID(System.Guid DeuEntryId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDeuEntryByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataEntryUnit/DeleteDeuEntryAndPaymentEntryByDeuID", ReplyAction="http://tempuri.org/IDataEntryUnit/DeleteDeuEntryAndPaymentEntryByDeuIDResponse")]
        void DeleteDeuEntryAndPaymentEntryByDeuID(System.Guid DeuEntryId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataEntryUnit/DeleteDeuEntryAndPaymentEntryByDeuID", ReplyAction="http://tempuri.org/IDataEntryUnit/DeleteDeuEntryAndPaymentEntryByDeuIDResponse")]
        System.IAsyncResult BeginDeleteDeuEntryAndPaymentEntryByDeuID(System.Guid DeuEntryId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDeuEntryAndPaymentEntryByDeuID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataEntryUnit/GetProductTypeNickName", ReplyAction="http://tempuri.org/IDataEntryUnit/GetProductTypeNickNameResponse")]
        string GetProductTypeNickName(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataEntryUnit/GetProductTypeNickName", ReplyAction="http://tempuri.org/IDataEntryUnit/GetProductTypeNickNameResponse")]
        System.IAsyncResult BeginGetProductTypeNickName(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, System.AsyncCallback callback, object asyncState);
        
        string EndGetProductTypeNickName(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataEntryUnitChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IDataEntryUnit, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdateDEUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdateDEUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ModifiyableBatchStatementData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ModifiyableBatchStatementData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeuEntryidWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeuEntryidWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.DEU Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.DEU)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeuFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeuFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DataEntryField> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DataEntryField>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsPaymentFromCommissionDashBoardByPaymentEntryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsPaymentFromCommissionDashBoardByPaymentEntryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsPaymentFromCommissionDashBoardByDEUEntryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsPaymentFromCommissionDashBoardByDEUEntryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeuEntriesForStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeuEntriesForStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductTypeNickNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductTypeNickNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataEntryUnitClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IDataEntryUnit>, MyAgencyVault.VM.MyAgencyVaultSvc.IDataEntryUnit {
        
        private BeginOperationDelegate onBeginAddUpdateDEUDelegate;
        
        private EndOperationDelegate onEndAddUpdateDEUDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateDEUCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddupdateDeuEntryDelegate;
        
        private EndOperationDelegate onEndAddupdateDeuEntryDelegate;
        
        private System.Threading.SendOrPostCallback onAddupdateDeuEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeuEntryidWiseDelegate;
        
        private EndOperationDelegate onEndGetDeuEntryidWiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeuEntryidWiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeuFieldsDelegate;
        
        private EndOperationDelegate onEndGetDeuFieldsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeuFieldsCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsPaymentFromCommissionDashBoardByPaymentEntryIdDelegate;
        
        private EndOperationDelegate onEndIsPaymentFromCommissionDashBoardByPaymentEntryIdDelegate;
        
        private System.Threading.SendOrPostCallback onIsPaymentFromCommissionDashBoardByPaymentEntryIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsPaymentFromCommissionDashBoardByDEUEntryIdDelegate;
        
        private EndOperationDelegate onEndIsPaymentFromCommissionDashBoardByDEUEntryIdDelegate;
        
        private System.Threading.SendOrPostCallback onIsPaymentFromCommissionDashBoardByDEUEntryIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeuEntriesForStatementDelegate;
        
        private EndOperationDelegate onEndGetDeuEntriesForStatementDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeuEntriesForStatementCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDeuEntryByIDDelegate;
        
        private EndOperationDelegate onEndDeleteDeuEntryByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDeuEntryByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDeuEntryAndPaymentEntryByDeuIDDelegate;
        
        private EndOperationDelegate onEndDeleteDeuEntryAndPaymentEntryByDeuIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDeuEntryAndPaymentEntryByDeuIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductTypeNickNameDelegate;
        
        private EndOperationDelegate onEndGetProductTypeNickNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductTypeNickNameCompletedDelegate;
        
        public DataEntryUnitClient() {
        }
        
        public DataEntryUnitClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataEntryUnitClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataEntryUnitClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataEntryUnitClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<AddUpdateDEUCompletedEventArgs> AddUpdateDEUCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddupdateDeuEntryCompleted;
        
        public event System.EventHandler<GetDeuEntryidWiseCompletedEventArgs> GetDeuEntryidWiseCompleted;
        
        public event System.EventHandler<GetDeuFieldsCompletedEventArgs> GetDeuFieldsCompleted;
        
        public event System.EventHandler<IsPaymentFromCommissionDashBoardByPaymentEntryIdCompletedEventArgs> IsPaymentFromCommissionDashBoardByPaymentEntryIdCompleted;
        
        public event System.EventHandler<IsPaymentFromCommissionDashBoardByDEUEntryIdCompletedEventArgs> IsPaymentFromCommissionDashBoardByDEUEntryIdCompleted;
        
        public event System.EventHandler<GetDeuEntriesForStatementCompletedEventArgs> GetDeuEntriesForStatementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDeuEntryByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDeuEntryAndPaymentEntryByDeuIDCompleted;
        
        public event System.EventHandler<GetProductTypeNickNameCompletedEventArgs> GetProductTypeNickNameCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ModifiyableBatchStatementData AddUpdateDEU(MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields) {
            return base.Channel.AddUpdateDEU(deuFields);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateDEU(MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateDEU(deuFields, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ModifiyableBatchStatementData EndAddUpdateDEU(System.IAsyncResult result) {
            return base.Channel.EndAddUpdateDEU(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateDEU(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields = ((MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields)(inValues[0]));
            return this.BeginAddUpdateDEU(deuFields, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateDEU(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ModifiyableBatchStatementData retVal = this.EndAddUpdateDEU(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdateDEUCompleted(object state) {
            if ((this.AddUpdateDEUCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateDEUCompleted(this, new AddUpdateDEUCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateDEUAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields) {
            this.AddUpdateDEUAsync(deuFields, null);
        }
        
        public void AddUpdateDEUAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DEUFields deuFields, object userState) {
            if ((this.onBeginAddUpdateDEUDelegate == null)) {
                this.onBeginAddUpdateDEUDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateDEU);
            }
            if ((this.onEndAddUpdateDEUDelegate == null)) {
                this.onEndAddUpdateDEUDelegate = new EndOperationDelegate(this.OnEndAddUpdateDEU);
            }
            if ((this.onAddUpdateDEUCompletedDelegate == null)) {
                this.onAddUpdateDEUCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateDEUCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateDEUDelegate, new object[] {
                        deuFields}, this.onEndAddUpdateDEUDelegate, this.onAddUpdateDEUCompletedDelegate, userState);
        }
        
        public void AddupdateDeuEntry(MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DeuEntry) {
            base.Channel.AddupdateDeuEntry(_DeuEntry);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddupdateDeuEntry(MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DeuEntry, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddupdateDeuEntry(_DeuEntry, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddupdateDeuEntry(System.IAsyncResult result) {
            base.Channel.EndAddupdateDeuEntry(result);
        }
        
        private System.IAsyncResult OnBeginAddupdateDeuEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DeuEntry = ((MyAgencyVault.VM.MyAgencyVaultSvc.DEU)(inValues[0]));
            return this.BeginAddupdateDeuEntry(_DeuEntry, callback, asyncState);
        }
        
        private object[] OnEndAddupdateDeuEntry(System.IAsyncResult result) {
            this.EndAddupdateDeuEntry(result);
            return null;
        }
        
        private void OnAddupdateDeuEntryCompleted(object state) {
            if ((this.AddupdateDeuEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddupdateDeuEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddupdateDeuEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DeuEntry) {
            this.AddupdateDeuEntryAsync(_DeuEntry, null);
        }
        
        public void AddupdateDeuEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DEU _DeuEntry, object userState) {
            if ((this.onBeginAddupdateDeuEntryDelegate == null)) {
                this.onBeginAddupdateDeuEntryDelegate = new BeginOperationDelegate(this.OnBeginAddupdateDeuEntry);
            }
            if ((this.onEndAddupdateDeuEntryDelegate == null)) {
                this.onEndAddupdateDeuEntryDelegate = new EndOperationDelegate(this.OnEndAddupdateDeuEntry);
            }
            if ((this.onAddupdateDeuEntryCompletedDelegate == null)) {
                this.onAddupdateDeuEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddupdateDeuEntryCompleted);
            }
            base.InvokeAsync(this.onBeginAddupdateDeuEntryDelegate, new object[] {
                        _DeuEntry}, this.onEndAddupdateDeuEntryDelegate, this.onAddupdateDeuEntryCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.DEU GetDeuEntryidWise(System.Guid DeuEntryID) {
            return base.Channel.GetDeuEntryidWise(DeuEntryID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDeuEntryidWise(System.Guid DeuEntryID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeuEntryidWise(DeuEntryID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.DEU EndGetDeuEntryidWise(System.IAsyncResult result) {
            return base.Channel.EndGetDeuEntryidWise(result);
        }
        
        private System.IAsyncResult OnBeginGetDeuEntryidWise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid DeuEntryID = ((System.Guid)(inValues[0]));
            return this.BeginGetDeuEntryidWise(DeuEntryID, callback, asyncState);
        }
        
        private object[] OnEndGetDeuEntryidWise(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DEU retVal = this.EndGetDeuEntryidWise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeuEntryidWiseCompleted(object state) {
            if ((this.GetDeuEntryidWiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeuEntryidWiseCompleted(this, new GetDeuEntryidWiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeuEntryidWiseAsync(System.Guid DeuEntryID) {
            this.GetDeuEntryidWiseAsync(DeuEntryID, null);
        }
        
        public void GetDeuEntryidWiseAsync(System.Guid DeuEntryID, object userState) {
            if ((this.onBeginGetDeuEntryidWiseDelegate == null)) {
                this.onBeginGetDeuEntryidWiseDelegate = new BeginOperationDelegate(this.OnBeginGetDeuEntryidWise);
            }
            if ((this.onEndGetDeuEntryidWiseDelegate == null)) {
                this.onEndGetDeuEntryidWiseDelegate = new EndOperationDelegate(this.OnEndGetDeuEntryidWise);
            }
            if ((this.onGetDeuEntryidWiseCompletedDelegate == null)) {
                this.onGetDeuEntryidWiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeuEntryidWiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeuEntryidWiseDelegate, new object[] {
                        DeuEntryID}, this.onEndGetDeuEntryidWiseDelegate, this.onGetDeuEntryidWiseCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DataEntryField> GetDeuFields(System.Guid DeuEntryID) {
            return base.Channel.GetDeuFields(DeuEntryID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDeuFields(System.Guid DeuEntryID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeuFields(DeuEntryID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DataEntryField> EndGetDeuFields(System.IAsyncResult result) {
            return base.Channel.EndGetDeuFields(result);
        }
        
        private System.IAsyncResult OnBeginGetDeuFields(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid DeuEntryID = ((System.Guid)(inValues[0]));
            return this.BeginGetDeuFields(DeuEntryID, callback, asyncState);
        }
        
        private object[] OnEndGetDeuFields(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DataEntryField> retVal = this.EndGetDeuFields(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeuFieldsCompleted(object state) {
            if ((this.GetDeuFieldsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeuFieldsCompleted(this, new GetDeuFieldsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeuFieldsAsync(System.Guid DeuEntryID) {
            this.GetDeuFieldsAsync(DeuEntryID, null);
        }
        
        public void GetDeuFieldsAsync(System.Guid DeuEntryID, object userState) {
            if ((this.onBeginGetDeuFieldsDelegate == null)) {
                this.onBeginGetDeuFieldsDelegate = new BeginOperationDelegate(this.OnBeginGetDeuFields);
            }
            if ((this.onEndGetDeuFieldsDelegate == null)) {
                this.onEndGetDeuFieldsDelegate = new EndOperationDelegate(this.OnEndGetDeuFields);
            }
            if ((this.onGetDeuFieldsCompletedDelegate == null)) {
                this.onGetDeuFieldsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeuFieldsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeuFieldsDelegate, new object[] {
                        DeuEntryID}, this.onEndGetDeuFieldsDelegate, this.onGetDeuFieldsCompletedDelegate, userState);
        }
        
        public bool IsPaymentFromCommissionDashBoardByPaymentEntryId(System.Guid PolicPaymentId) {
            return base.Channel.IsPaymentFromCommissionDashBoardByPaymentEntryId(PolicPaymentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsPaymentFromCommissionDashBoardByPaymentEntryId(System.Guid PolicPaymentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsPaymentFromCommissionDashBoardByPaymentEntryId(PolicPaymentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsPaymentFromCommissionDashBoardByPaymentEntryId(System.IAsyncResult result) {
            return base.Channel.EndIsPaymentFromCommissionDashBoardByPaymentEntryId(result);
        }
        
        private System.IAsyncResult OnBeginIsPaymentFromCommissionDashBoardByPaymentEntryId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicPaymentId = ((System.Guid)(inValues[0]));
            return this.BeginIsPaymentFromCommissionDashBoardByPaymentEntryId(PolicPaymentId, callback, asyncState);
        }
        
        private object[] OnEndIsPaymentFromCommissionDashBoardByPaymentEntryId(System.IAsyncResult result) {
            bool retVal = this.EndIsPaymentFromCommissionDashBoardByPaymentEntryId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsPaymentFromCommissionDashBoardByPaymentEntryIdCompleted(object state) {
            if ((this.IsPaymentFromCommissionDashBoardByPaymentEntryIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsPaymentFromCommissionDashBoardByPaymentEntryIdCompleted(this, new IsPaymentFromCommissionDashBoardByPaymentEntryIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsPaymentFromCommissionDashBoardByPaymentEntryIdAsync(System.Guid PolicPaymentId) {
            this.IsPaymentFromCommissionDashBoardByPaymentEntryIdAsync(PolicPaymentId, null);
        }
        
        public void IsPaymentFromCommissionDashBoardByPaymentEntryIdAsync(System.Guid PolicPaymentId, object userState) {
            if ((this.onBeginIsPaymentFromCommissionDashBoardByPaymentEntryIdDelegate == null)) {
                this.onBeginIsPaymentFromCommissionDashBoardByPaymentEntryIdDelegate = new BeginOperationDelegate(this.OnBeginIsPaymentFromCommissionDashBoardByPaymentEntryId);
            }
            if ((this.onEndIsPaymentFromCommissionDashBoardByPaymentEntryIdDelegate == null)) {
                this.onEndIsPaymentFromCommissionDashBoardByPaymentEntryIdDelegate = new EndOperationDelegate(this.OnEndIsPaymentFromCommissionDashBoardByPaymentEntryId);
            }
            if ((this.onIsPaymentFromCommissionDashBoardByPaymentEntryIdCompletedDelegate == null)) {
                this.onIsPaymentFromCommissionDashBoardByPaymentEntryIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsPaymentFromCommissionDashBoardByPaymentEntryIdCompleted);
            }
            base.InvokeAsync(this.onBeginIsPaymentFromCommissionDashBoardByPaymentEntryIdDelegate, new object[] {
                        PolicPaymentId}, this.onEndIsPaymentFromCommissionDashBoardByPaymentEntryIdDelegate, this.onIsPaymentFromCommissionDashBoardByPaymentEntryIdCompletedDelegate, userState);
        }
        
        public bool IsPaymentFromCommissionDashBoardByDEUEntryId(System.Guid DeuEntryId) {
            return base.Channel.IsPaymentFromCommissionDashBoardByDEUEntryId(DeuEntryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsPaymentFromCommissionDashBoardByDEUEntryId(System.Guid DeuEntryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsPaymentFromCommissionDashBoardByDEUEntryId(DeuEntryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsPaymentFromCommissionDashBoardByDEUEntryId(System.IAsyncResult result) {
            return base.Channel.EndIsPaymentFromCommissionDashBoardByDEUEntryId(result);
        }
        
        private System.IAsyncResult OnBeginIsPaymentFromCommissionDashBoardByDEUEntryId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid DeuEntryId = ((System.Guid)(inValues[0]));
            return this.BeginIsPaymentFromCommissionDashBoardByDEUEntryId(DeuEntryId, callback, asyncState);
        }
        
        private object[] OnEndIsPaymentFromCommissionDashBoardByDEUEntryId(System.IAsyncResult result) {
            bool retVal = this.EndIsPaymentFromCommissionDashBoardByDEUEntryId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsPaymentFromCommissionDashBoardByDEUEntryIdCompleted(object state) {
            if ((this.IsPaymentFromCommissionDashBoardByDEUEntryIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsPaymentFromCommissionDashBoardByDEUEntryIdCompleted(this, new IsPaymentFromCommissionDashBoardByDEUEntryIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsPaymentFromCommissionDashBoardByDEUEntryIdAsync(System.Guid DeuEntryId) {
            this.IsPaymentFromCommissionDashBoardByDEUEntryIdAsync(DeuEntryId, null);
        }
        
        public void IsPaymentFromCommissionDashBoardByDEUEntryIdAsync(System.Guid DeuEntryId, object userState) {
            if ((this.onBeginIsPaymentFromCommissionDashBoardByDEUEntryIdDelegate == null)) {
                this.onBeginIsPaymentFromCommissionDashBoardByDEUEntryIdDelegate = new BeginOperationDelegate(this.OnBeginIsPaymentFromCommissionDashBoardByDEUEntryId);
            }
            if ((this.onEndIsPaymentFromCommissionDashBoardByDEUEntryIdDelegate == null)) {
                this.onEndIsPaymentFromCommissionDashBoardByDEUEntryIdDelegate = new EndOperationDelegate(this.OnEndIsPaymentFromCommissionDashBoardByDEUEntryId);
            }
            if ((this.onIsPaymentFromCommissionDashBoardByDEUEntryIdCompletedDelegate == null)) {
                this.onIsPaymentFromCommissionDashBoardByDEUEntryIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsPaymentFromCommissionDashBoardByDEUEntryIdCompleted);
            }
            base.InvokeAsync(this.onBeginIsPaymentFromCommissionDashBoardByDEUEntryIdDelegate, new object[] {
                        DeuEntryId}, this.onEndIsPaymentFromCommissionDashBoardByDEUEntryIdDelegate, this.onIsPaymentFromCommissionDashBoardByDEUEntryIdCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU> GetDeuEntriesForStatement(System.Guid StatementId) {
            return base.Channel.GetDeuEntriesForStatement(StatementId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDeuEntriesForStatement(System.Guid StatementId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeuEntriesForStatement(StatementId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU> EndGetDeuEntriesForStatement(System.IAsyncResult result) {
            return base.Channel.EndGetDeuEntriesForStatement(result);
        }
        
        private System.IAsyncResult OnBeginGetDeuEntriesForStatement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid StatementId = ((System.Guid)(inValues[0]));
            return this.BeginGetDeuEntriesForStatement(StatementId, callback, asyncState);
        }
        
        private object[] OnEndGetDeuEntriesForStatement(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExposedDEU> retVal = this.EndGetDeuEntriesForStatement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeuEntriesForStatementCompleted(object state) {
            if ((this.GetDeuEntriesForStatementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeuEntriesForStatementCompleted(this, new GetDeuEntriesForStatementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeuEntriesForStatementAsync(System.Guid StatementId) {
            this.GetDeuEntriesForStatementAsync(StatementId, null);
        }
        
        public void GetDeuEntriesForStatementAsync(System.Guid StatementId, object userState) {
            if ((this.onBeginGetDeuEntriesForStatementDelegate == null)) {
                this.onBeginGetDeuEntriesForStatementDelegate = new BeginOperationDelegate(this.OnBeginGetDeuEntriesForStatement);
            }
            if ((this.onEndGetDeuEntriesForStatementDelegate == null)) {
                this.onEndGetDeuEntriesForStatementDelegate = new EndOperationDelegate(this.OnEndGetDeuEntriesForStatement);
            }
            if ((this.onGetDeuEntriesForStatementCompletedDelegate == null)) {
                this.onGetDeuEntriesForStatementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeuEntriesForStatementCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeuEntriesForStatementDelegate, new object[] {
                        StatementId}, this.onEndGetDeuEntriesForStatementDelegate, this.onGetDeuEntriesForStatementCompletedDelegate, userState);
        }
        
        public void DeleteDeuEntryByID(System.Guid DeuEntryId) {
            base.Channel.DeleteDeuEntryByID(DeuEntryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDeuEntryByID(System.Guid DeuEntryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDeuEntryByID(DeuEntryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDeuEntryByID(System.IAsyncResult result) {
            base.Channel.EndDeleteDeuEntryByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDeuEntryByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid DeuEntryId = ((System.Guid)(inValues[0]));
            return this.BeginDeleteDeuEntryByID(DeuEntryId, callback, asyncState);
        }
        
        private object[] OnEndDeleteDeuEntryByID(System.IAsyncResult result) {
            this.EndDeleteDeuEntryByID(result);
            return null;
        }
        
        private void OnDeleteDeuEntryByIDCompleted(object state) {
            if ((this.DeleteDeuEntryByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDeuEntryByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDeuEntryByIDAsync(System.Guid DeuEntryId) {
            this.DeleteDeuEntryByIDAsync(DeuEntryId, null);
        }
        
        public void DeleteDeuEntryByIDAsync(System.Guid DeuEntryId, object userState) {
            if ((this.onBeginDeleteDeuEntryByIDDelegate == null)) {
                this.onBeginDeleteDeuEntryByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteDeuEntryByID);
            }
            if ((this.onEndDeleteDeuEntryByIDDelegate == null)) {
                this.onEndDeleteDeuEntryByIDDelegate = new EndOperationDelegate(this.OnEndDeleteDeuEntryByID);
            }
            if ((this.onDeleteDeuEntryByIDCompletedDelegate == null)) {
                this.onDeleteDeuEntryByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDeuEntryByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDeuEntryByIDDelegate, new object[] {
                        DeuEntryId}, this.onEndDeleteDeuEntryByIDDelegate, this.onDeleteDeuEntryByIDCompletedDelegate, userState);
        }
        
        public void DeleteDeuEntryAndPaymentEntryByDeuID(System.Guid DeuEntryId) {
            base.Channel.DeleteDeuEntryAndPaymentEntryByDeuID(DeuEntryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDeuEntryAndPaymentEntryByDeuID(System.Guid DeuEntryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDeuEntryAndPaymentEntryByDeuID(DeuEntryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDeuEntryAndPaymentEntryByDeuID(System.IAsyncResult result) {
            base.Channel.EndDeleteDeuEntryAndPaymentEntryByDeuID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDeuEntryAndPaymentEntryByDeuID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid DeuEntryId = ((System.Guid)(inValues[0]));
            return this.BeginDeleteDeuEntryAndPaymentEntryByDeuID(DeuEntryId, callback, asyncState);
        }
        
        private object[] OnEndDeleteDeuEntryAndPaymentEntryByDeuID(System.IAsyncResult result) {
            this.EndDeleteDeuEntryAndPaymentEntryByDeuID(result);
            return null;
        }
        
        private void OnDeleteDeuEntryAndPaymentEntryByDeuIDCompleted(object state) {
            if ((this.DeleteDeuEntryAndPaymentEntryByDeuIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDeuEntryAndPaymentEntryByDeuIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDeuEntryAndPaymentEntryByDeuIDAsync(System.Guid DeuEntryId) {
            this.DeleteDeuEntryAndPaymentEntryByDeuIDAsync(DeuEntryId, null);
        }
        
        public void DeleteDeuEntryAndPaymentEntryByDeuIDAsync(System.Guid DeuEntryId, object userState) {
            if ((this.onBeginDeleteDeuEntryAndPaymentEntryByDeuIDDelegate == null)) {
                this.onBeginDeleteDeuEntryAndPaymentEntryByDeuIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteDeuEntryAndPaymentEntryByDeuID);
            }
            if ((this.onEndDeleteDeuEntryAndPaymentEntryByDeuIDDelegate == null)) {
                this.onEndDeleteDeuEntryAndPaymentEntryByDeuIDDelegate = new EndOperationDelegate(this.OnEndDeleteDeuEntryAndPaymentEntryByDeuID);
            }
            if ((this.onDeleteDeuEntryAndPaymentEntryByDeuIDCompletedDelegate == null)) {
                this.onDeleteDeuEntryAndPaymentEntryByDeuIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDeuEntryAndPaymentEntryByDeuIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDeuEntryAndPaymentEntryByDeuIDDelegate, new object[] {
                        DeuEntryId}, this.onEndDeleteDeuEntryAndPaymentEntryByDeuIDDelegate, this.onDeleteDeuEntryAndPaymentEntryByDeuIDCompletedDelegate, userState);
        }
        
        public string GetProductTypeNickName(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID) {
            return base.Channel.GetProductTypeNickName(policyID, PayorID, CarrierID, CoverageID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProductTypeNickName(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductTypeNickName(policyID, PayorID, CarrierID, CoverageID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetProductTypeNickName(System.IAsyncResult result) {
            return base.Channel.EndGetProductTypeNickName(result);
        }
        
        private System.IAsyncResult OnBeginGetProductTypeNickName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid policyID = ((System.Guid)(inValues[0]));
            System.Guid PayorID = ((System.Guid)(inValues[1]));
            System.Guid CarrierID = ((System.Guid)(inValues[2]));
            System.Guid CoverageID = ((System.Guid)(inValues[3]));
            return this.BeginGetProductTypeNickName(policyID, PayorID, CarrierID, CoverageID, callback, asyncState);
        }
        
        private object[] OnEndGetProductTypeNickName(System.IAsyncResult result) {
            string retVal = this.EndGetProductTypeNickName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductTypeNickNameCompleted(object state) {
            if ((this.GetProductTypeNickNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductTypeNickNameCompleted(this, new GetProductTypeNickNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductTypeNickNameAsync(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID) {
            this.GetProductTypeNickNameAsync(policyID, PayorID, CarrierID, CoverageID, null);
        }
        
        public void GetProductTypeNickNameAsync(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, object userState) {
            if ((this.onBeginGetProductTypeNickNameDelegate == null)) {
                this.onBeginGetProductTypeNickNameDelegate = new BeginOperationDelegate(this.OnBeginGetProductTypeNickName);
            }
            if ((this.onEndGetProductTypeNickNameDelegate == null)) {
                this.onEndGetProductTypeNickNameDelegate = new EndOperationDelegate(this.OnEndGetProductTypeNickName);
            }
            if ((this.onGetProductTypeNickNameCompletedDelegate == null)) {
                this.onGetProductTypeNickNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductTypeNickNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductTypeNickNameDelegate, new object[] {
                        policyID,
                        PayorID,
                        CarrierID,
                        CoverageID}, this.onEndGetProductTypeNickNameDelegate, this.onGetProductTypeNickNameCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IMavService")]
    public interface IMavService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMavService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IMavService/GetDataUsingDataContractResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType GetDataUsingDataContract(MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMavService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IMavService/GetDataUsingDataContractResponse")]
        System.IAsyncResult BeginGetDataUsingDataContract(MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType composite, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMavService/GetServerURL", ReplyAction="http://tempuri.org/IMavService/GetServerURLResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.NewVersionInfo GetServerURL(string appVersion);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMavService/GetServerURL", ReplyAction="http://tempuri.org/IMavService/GetServerURLResponse")]
        System.IAsyncResult BeginGetServerURL(string appVersion, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.NewVersionInfo EndGetServerURL(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMavServiceChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IMavService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServerURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServerURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.NewVersionInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.NewVersionInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MavServiceClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IMavService>, MyAgencyVault.VM.MyAgencyVaultSvc.IMavService {
        
        private BeginOperationDelegate onBeginGetDataUsingDataContractDelegate;
        
        private EndOperationDelegate onEndGetDataUsingDataContractDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataUsingDataContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServerURLDelegate;
        
        private EndOperationDelegate onEndGetServerURLDelegate;
        
        private System.Threading.SendOrPostCallback onGetServerURLCompletedDelegate;
        
        public MavServiceClient() {
        }
        
        public MavServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MavServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MavServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MavServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetDataUsingDataContractCompletedEventArgs> GetDataUsingDataContractCompleted;
        
        public event System.EventHandler<GetServerURLCompletedEventArgs> GetServerURLCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType GetDataUsingDataContract(MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDataUsingDataContract(MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType composite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result) {
            return base.Channel.EndGetDataUsingDataContract(result);
        }
        
        private System.IAsyncResult OnBeginGetDataUsingDataContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType composite = ((MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType)(inValues[0]));
            return this.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        private object[] OnEndGetDataUsingDataContract(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType retVal = this.EndGetDataUsingDataContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataUsingDataContractCompleted(object state) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataUsingDataContractAsync(MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        public void GetDataUsingDataContractAsync(MyAgencyVault.VM.MyAgencyVaultSvc.CompositeType composite, object userState) {
            if ((this.onBeginGetDataUsingDataContractDelegate == null)) {
                this.onBeginGetDataUsingDataContractDelegate = new BeginOperationDelegate(this.OnBeginGetDataUsingDataContract);
            }
            if ((this.onEndGetDataUsingDataContractDelegate == null)) {
                this.onEndGetDataUsingDataContractDelegate = new EndOperationDelegate(this.OnEndGetDataUsingDataContract);
            }
            if ((this.onGetDataUsingDataContractCompletedDelegate == null)) {
                this.onGetDataUsingDataContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataUsingDataContractDelegate, new object[] {
                        composite}, this.onEndGetDataUsingDataContractDelegate, this.onGetDataUsingDataContractCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.NewVersionInfo GetServerURL(string appVersion) {
            return base.Channel.GetServerURL(appVersion);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServerURL(string appVersion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServerURL(appVersion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.NewVersionInfo EndGetServerURL(System.IAsyncResult result) {
            return base.Channel.EndGetServerURL(result);
        }
        
        private System.IAsyncResult OnBeginGetServerURL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string appVersion = ((string)(inValues[0]));
            return this.BeginGetServerURL(appVersion, callback, asyncState);
        }
        
        private object[] OnEndGetServerURL(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.NewVersionInfo retVal = this.EndGetServerURL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServerURLCompleted(object state) {
            if ((this.GetServerURLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServerURLCompleted(this, new GetServerURLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServerURLAsync(string appVersion) {
            this.GetServerURLAsync(appVersion, null);
        }
        
        public void GetServerURLAsync(string appVersion, object userState) {
            if ((this.onBeginGetServerURLDelegate == null)) {
                this.onBeginGetServerURLDelegate = new BeginOperationDelegate(this.OnBeginGetServerURL);
            }
            if ((this.onEndGetServerURLDelegate == null)) {
                this.onEndGetServerURLDelegate = new EndOperationDelegate(this.OnEndGetServerURL);
            }
            if ((this.onGetServerURLCompletedDelegate == null)) {
                this.onGetServerURLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServerURLCompleted);
            }
            base.InvokeAsync(this.onBeginGetServerURLDelegate, new object[] {
                        appVersion}, this.onEndGetServerURLDelegate, this.onGetServerURLCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPolicyDetails")]
    public interface IPolicyDetails {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyDetails/AddUpdatePolicyDetails", ReplyAction="http://tempuri.org/IPolicyDetails/AddUpdatePolicyDetailsResponse")]
        void AddUpdatePolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyDetails/AddUpdatePolicyDetails", ReplyAction="http://tempuri.org/IPolicyDetails/AddUpdatePolicyDetailsResponse")]
        System.IAsyncResult BeginAddUpdatePolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePolicyDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyDetails/DeletePolicyDetails", ReplyAction="http://tempuri.org/IPolicyDetails/DeletePolicyDetailsResponse")]
        void DeletePolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyDetails/DeletePolicyDetails", ReplyAction="http://tempuri.org/IPolicyDetails/DeletePolicyDetailsResponse")]
        System.IAsyncResult BeginDeletePolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePolicyDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyDetails/GetPolicyDetails", ReplyAction="http://tempuri.org/IPolicyDetails/GetPolicyDetailsResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData GetPolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyDetails/GetPolicyDetails", ReplyAction="http://tempuri.org/IPolicyDetails/GetPolicyDetailsResponse")]
        System.IAsyncResult BeginGetPolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData EndGetPolicyDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyDetails/IsValidPolicyDetails", ReplyAction="http://tempuri.org/IPolicyDetails/IsValidPolicyDetailsResponse")]
        bool IsValidPolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyDetails/IsValidPolicyDetails", ReplyAction="http://tempuri.org/IPolicyDetails/IsValidPolicyDetailsResponse")]
        System.IAsyncResult BeginIsValidPolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidPolicyDetails(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPolicyDetailsChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyDetails, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidPolicyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidPolicyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PolicyDetailsClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyDetails>, MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyDetails {
        
        private BeginOperationDelegate onBeginAddUpdatePolicyDetailsDelegate;
        
        private EndOperationDelegate onEndAddUpdatePolicyDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePolicyDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePolicyDetailsDelegate;
        
        private EndOperationDelegate onEndDeletePolicyDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePolicyDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyDetailsDelegate;
        
        private EndOperationDelegate onEndGetPolicyDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidPolicyDetailsDelegate;
        
        private EndOperationDelegate onEndIsValidPolicyDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidPolicyDetailsCompletedDelegate;
        
        public PolicyDetailsClient() {
        }
        
        public PolicyDetailsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PolicyDetailsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyDetailsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyDetailsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePolicyDetailsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePolicyDetailsCompleted;
        
        public event System.EventHandler<GetPolicyDetailsCompletedEventArgs> GetPolicyDetailsCompleted;
        
        public event System.EventHandler<IsValidPolicyDetailsCompletedEventArgs> IsValidPolicyDetailsCompleted;
        
        public void AddUpdatePolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl) {
            base.Channel.AddUpdatePolicyDetails(PolicyDtl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePolicyDetails(PolicyDtl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePolicyDetails(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePolicyDetails(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePolicyDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            return this.BeginAddUpdatePolicyDetails(PolicyDtl, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePolicyDetails(System.IAsyncResult result) {
            this.EndAddUpdatePolicyDetails(result);
            return null;
        }
        
        private void OnAddUpdatePolicyDetailsCompleted(object state) {
            if ((this.AddUpdatePolicyDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePolicyDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePolicyDetailsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl) {
            this.AddUpdatePolicyDetailsAsync(PolicyDtl, null);
        }
        
        public void AddUpdatePolicyDetailsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl, object userState) {
            if ((this.onBeginAddUpdatePolicyDetailsDelegate == null)) {
                this.onBeginAddUpdatePolicyDetailsDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePolicyDetails);
            }
            if ((this.onEndAddUpdatePolicyDetailsDelegate == null)) {
                this.onEndAddUpdatePolicyDetailsDelegate = new EndOperationDelegate(this.OnEndAddUpdatePolicyDetails);
            }
            if ((this.onAddUpdatePolicyDetailsCompletedDelegate == null)) {
                this.onAddUpdatePolicyDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePolicyDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePolicyDetailsDelegate, new object[] {
                        PolicyDtl}, this.onEndAddUpdatePolicyDetailsDelegate, this.onAddUpdatePolicyDetailsCompletedDelegate, userState);
        }
        
        public void DeletePolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl) {
            base.Channel.DeletePolicyDetails(PolicyDtl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePolicyDetails(PolicyDtl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePolicyDetails(System.IAsyncResult result) {
            base.Channel.EndDeletePolicyDetails(result);
        }
        
        private System.IAsyncResult OnBeginDeletePolicyDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            return this.BeginDeletePolicyDetails(PolicyDtl, callback, asyncState);
        }
        
        private object[] OnEndDeletePolicyDetails(System.IAsyncResult result) {
            this.EndDeletePolicyDetails(result);
            return null;
        }
        
        private void OnDeletePolicyDetailsCompleted(object state) {
            if ((this.DeletePolicyDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePolicyDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePolicyDetailsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl) {
            this.DeletePolicyDetailsAsync(PolicyDtl, null);
        }
        
        public void DeletePolicyDetailsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl, object userState) {
            if ((this.onBeginDeletePolicyDetailsDelegate == null)) {
                this.onBeginDeletePolicyDetailsDelegate = new BeginOperationDelegate(this.OnBeginDeletePolicyDetails);
            }
            if ((this.onEndDeletePolicyDetailsDelegate == null)) {
                this.onEndDeletePolicyDetailsDelegate = new EndOperationDelegate(this.OnEndDeletePolicyDetails);
            }
            if ((this.onDeletePolicyDetailsCompletedDelegate == null)) {
                this.onDeletePolicyDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePolicyDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePolicyDetailsDelegate, new object[] {
                        PolicyDtl}, this.onEndDeletePolicyDetailsDelegate, this.onDeletePolicyDetailsCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData GetPolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl) {
            return base.Channel.GetPolicyDetails(PolicyDtl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyDetails(PolicyDtl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData EndGetPolicyDetails(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            return this.BeginGetPolicyDetails(PolicyDtl, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyDetails(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData retVal = this.EndGetPolicyDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyDetailsCompleted(object state) {
            if ((this.GetPolicyDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyDetailsCompleted(this, new GetPolicyDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyDetailsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl) {
            this.GetPolicyDetailsAsync(PolicyDtl, null);
        }
        
        public void GetPolicyDetailsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl, object userState) {
            if ((this.onBeginGetPolicyDetailsDelegate == null)) {
                this.onBeginGetPolicyDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyDetails);
            }
            if ((this.onEndGetPolicyDetailsDelegate == null)) {
                this.onEndGetPolicyDetailsDelegate = new EndOperationDelegate(this.OnEndGetPolicyDetails);
            }
            if ((this.onGetPolicyDetailsCompletedDelegate == null)) {
                this.onGetPolicyDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyDetailsDelegate, new object[] {
                        PolicyDtl}, this.onEndGetPolicyDetailsDelegate, this.onGetPolicyDetailsCompletedDelegate, userState);
        }
        
        public bool IsValidPolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl) {
            return base.Channel.IsValidPolicyDetails(PolicyDtl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidPolicyDetails(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidPolicyDetails(PolicyDtl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidPolicyDetails(System.IAsyncResult result) {
            return base.Channel.EndIsValidPolicyDetails(result);
        }
        
        private System.IAsyncResult OnBeginIsValidPolicyDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData)(inValues[0]));
            return this.BeginIsValidPolicyDetails(PolicyDtl, callback, asyncState);
        }
        
        private object[] OnEndIsValidPolicyDetails(System.IAsyncResult result) {
            bool retVal = this.EndIsValidPolicyDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidPolicyDetailsCompleted(object state) {
            if ((this.IsValidPolicyDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidPolicyDetailsCompleted(this, new IsValidPolicyDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidPolicyDetailsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl) {
            this.IsValidPolicyDetailsAsync(PolicyDtl, null);
        }
        
        public void IsValidPolicyDetailsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyDetailsData PolicyDtl, object userState) {
            if ((this.onBeginIsValidPolicyDetailsDelegate == null)) {
                this.onBeginIsValidPolicyDetailsDelegate = new BeginOperationDelegate(this.OnBeginIsValidPolicyDetails);
            }
            if ((this.onEndIsValidPolicyDetailsDelegate == null)) {
                this.onEndIsValidPolicyDetailsDelegate = new EndOperationDelegate(this.OnEndIsValidPolicyDetails);
            }
            if ((this.onIsValidPolicyDetailsCompletedDelegate == null)) {
                this.onIsValidPolicyDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidPolicyDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidPolicyDetailsDelegate, new object[] {
                        PolicyDtl}, this.onEndIsValidPolicyDetailsDelegate, this.onIsValidPolicyDetailsCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPayorTool")]
    public interface IPayorTool {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTool/AddUpdatePayorToolMgr", ReplyAction="http://tempuri.org/IPayorTool/AddUpdatePayorToolMgrResponse")]
        void AddUpdatePayorToolMgr(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTool/AddUpdatePayorToolMgr", ReplyAction="http://tempuri.org/IPayorTool/AddUpdatePayorToolMgrResponse")]
        System.IAsyncResult BeginAddUpdatePayorToolMgr(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePayorToolMgr(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTool/DeletePayorToolMgr", ReplyAction="http://tempuri.org/IPayorTool/DeletePayorToolMgrResponse")]
        void DeletePayorToolMgr(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.Nullable<System.Guid> TemplateID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTool/DeletePayorToolMgr", ReplyAction="http://tempuri.org/IPayorTool/DeletePayorToolMgrResponse")]
        System.IAsyncResult BeginDeletePayorToolMgr(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.Nullable<System.Guid> TemplateID, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePayorToolMgr(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTool/GetPayorToolMgr", ReplyAction="http://tempuri.org/IPayorTool/GetPayorToolMgrResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool GetPayorToolMgr(System.Guid PayorID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTool/GetPayorToolMgr", ReplyAction="http://tempuri.org/IPayorTool/GetPayorToolMgrResponse")]
        System.IAsyncResult BeginGetPayorToolMgr(System.Guid PayorID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool EndGetPayorToolMgr(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTool/GetPayorToolId", ReplyAction="http://tempuri.org/IPayorTool/GetPayorToolIdResponse")]
        System.Guid GetPayorToolId(System.Guid PayorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTool/GetPayorToolId", ReplyAction="http://tempuri.org/IPayorTool/GetPayorToolIdResponse")]
        System.IAsyncResult BeginGetPayorToolId(System.Guid PayorId, System.AsyncCallback callback, object asyncState);
        
        System.Guid EndGetPayorToolId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTool/AddUpdatePayorToolTemplate", ReplyAction="http://tempuri.org/IPayorTool/AddUpdatePayorToolTemplateResponse")]
        bool AddUpdatePayorToolTemplate(System.Guid tempID, string strTemName, bool isDeleted, System.Guid PayorID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTool/AddUpdatePayorToolTemplate", ReplyAction="http://tempuri.org/IPayorTool/AddUpdatePayorToolTemplateResponse")]
        System.IAsyncResult BeginAddUpdatePayorToolTemplate(System.Guid tempID, string strTemName, bool isDeleted, System.Guid PayorID, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUpdatePayorToolTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTool/DeletePayorToolTemplate", ReplyAction="http://tempuri.org/IPayorTool/DeletePayorToolTemplateResponse")]
        bool DeletePayorToolTemplate(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.Nullable<System.Guid> GuidID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTool/DeletePayorToolTemplate", ReplyAction="http://tempuri.org/IPayorTool/DeletePayorToolTemplateResponse")]
        System.IAsyncResult BeginDeletePayorToolTemplate(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.Nullable<System.Guid> GuidID, System.AsyncCallback callback, object asyncState);
        
        bool EndDeletePayorToolTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTool/GetPayorToolTemplate", ReplyAction="http://tempuri.org/IPayorTool/GetPayorToolTemplateResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> GetPayorToolTemplate(System.Guid PayorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTool/GetPayorToolTemplate", ReplyAction="http://tempuri.org/IPayorTool/GetPayorToolTemplateResponse")]
        System.IAsyncResult BeginGetPayorToolTemplate(System.Guid PayorId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> EndGetPayorToolTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTool/GetPayorToolMgrWithTemplate", ReplyAction="http://tempuri.org/IPayorTool/GetPayorToolMgrWithTemplateResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool GetPayorToolMgrWithTemplate(System.Guid PayorID, System.Nullable<System.Guid> TempID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTool/GetPayorToolMgrWithTemplate", ReplyAction="http://tempuri.org/IPayorTool/GetPayorToolMgrWithTemplateResponse")]
        System.IAsyncResult BeginGetPayorToolMgrWithTemplate(System.Guid PayorID, System.Nullable<System.Guid> TempID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool EndGetPayorToolMgrWithTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTool/IsAvailablePayorTempalate", ReplyAction="http://tempuri.org/IPayorTool/IsAvailablePayorTempalateResponse")]
        bool IsAvailablePayorTempalate(System.Guid SourcePayorID, System.Nullable<System.Guid> SourceTempID, System.Guid DestinationPayorID, System.Nullable<System.Guid> DestiTempID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTool/IsAvailablePayorTempalate", ReplyAction="http://tempuri.org/IPayorTool/IsAvailablePayorTempalateResponse")]
        System.IAsyncResult BeginIsAvailablePayorTempalate(System.Guid SourcePayorID, System.Nullable<System.Guid> SourceTempID, System.Guid DestinationPayorID, System.Nullable<System.Guid> DestiTempID, System.AsyncCallback callback, object asyncState);
        
        bool EndIsAvailablePayorTempalate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTool/UpdateDulicatePayorTool", ReplyAction="http://tempuri.org/IPayorTool/UpdateDulicatePayorToolResponse")]
        bool UpdateDulicatePayorTool(System.Guid SourcePayorID, System.Nullable<System.Guid> SourceTempID, System.Guid DestinationPayorID, System.Nullable<System.Guid> DestiTempID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTool/UpdateDulicatePayorTool", ReplyAction="http://tempuri.org/IPayorTool/UpdateDulicatePayorToolResponse")]
        System.IAsyncResult BeginUpdateDulicatePayorTool(System.Guid SourcePayorID, System.Nullable<System.Guid> SourceTempID, System.Guid DestinationPayorID, System.Nullable<System.Guid> DestiTempID, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateDulicatePayorTool(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPayorToolChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPayorTool, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorToolMgrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorToolMgrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorToolIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorToolIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdatePayorToolTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdatePayorToolTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePayorToolTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePayorToolTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorToolTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorToolTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorToolMgrWithTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorToolMgrWithTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsAvailablePayorTempalateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsAvailablePayorTempalateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateDulicatePayorToolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateDulicatePayorToolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayorToolClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPayorTool>, MyAgencyVault.VM.MyAgencyVaultSvc.IPayorTool {
        
        private BeginOperationDelegate onBeginAddUpdatePayorToolMgrDelegate;
        
        private EndOperationDelegate onEndAddUpdatePayorToolMgrDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePayorToolMgrCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePayorToolMgrDelegate;
        
        private EndOperationDelegate onEndDeletePayorToolMgrDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePayorToolMgrCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorToolMgrDelegate;
        
        private EndOperationDelegate onEndGetPayorToolMgrDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorToolMgrCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorToolIdDelegate;
        
        private EndOperationDelegate onEndGetPayorToolIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorToolIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdatePayorToolTemplateDelegate;
        
        private EndOperationDelegate onEndAddUpdatePayorToolTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePayorToolTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePayorToolTemplateDelegate;
        
        private EndOperationDelegate onEndDeletePayorToolTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePayorToolTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorToolTemplateDelegate;
        
        private EndOperationDelegate onEndGetPayorToolTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorToolTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorToolMgrWithTemplateDelegate;
        
        private EndOperationDelegate onEndGetPayorToolMgrWithTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorToolMgrWithTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsAvailablePayorTempalateDelegate;
        
        private EndOperationDelegate onEndIsAvailablePayorTempalateDelegate;
        
        private System.Threading.SendOrPostCallback onIsAvailablePayorTempalateCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDulicatePayorToolDelegate;
        
        private EndOperationDelegate onEndUpdateDulicatePayorToolDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDulicatePayorToolCompletedDelegate;
        
        public PayorToolClient() {
        }
        
        public PayorToolClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PayorToolClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorToolClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorToolClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePayorToolMgrCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePayorToolMgrCompleted;
        
        public event System.EventHandler<GetPayorToolMgrCompletedEventArgs> GetPayorToolMgrCompleted;
        
        public event System.EventHandler<GetPayorToolIdCompletedEventArgs> GetPayorToolIdCompleted;
        
        public event System.EventHandler<AddUpdatePayorToolTemplateCompletedEventArgs> AddUpdatePayorToolTemplateCompleted;
        
        public event System.EventHandler<DeletePayorToolTemplateCompletedEventArgs> DeletePayorToolTemplateCompleted;
        
        public event System.EventHandler<GetPayorToolTemplateCompletedEventArgs> GetPayorToolTemplateCompleted;
        
        public event System.EventHandler<GetPayorToolMgrWithTemplateCompletedEventArgs> GetPayorToolMgrWithTemplateCompleted;
        
        public event System.EventHandler<IsAvailablePayorTempalateCompletedEventArgs> IsAvailablePayorTempalateCompleted;
        
        public event System.EventHandler<UpdateDulicatePayorToolCompletedEventArgs> UpdateDulicatePayorToolCompleted;
        
        public void AddUpdatePayorToolMgr(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool) {
            base.Channel.AddUpdatePayorToolMgr(PyorTool);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePayorToolMgr(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePayorToolMgr(PyorTool, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePayorToolMgr(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePayorToolMgr(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePayorToolMgr(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool)(inValues[0]));
            return this.BeginAddUpdatePayorToolMgr(PyorTool, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePayorToolMgr(System.IAsyncResult result) {
            this.EndAddUpdatePayorToolMgr(result);
            return null;
        }
        
        private void OnAddUpdatePayorToolMgrCompleted(object state) {
            if ((this.AddUpdatePayorToolMgrCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePayorToolMgrCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePayorToolMgrAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool) {
            this.AddUpdatePayorToolMgrAsync(PyorTool, null);
        }
        
        public void AddUpdatePayorToolMgrAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, object userState) {
            if ((this.onBeginAddUpdatePayorToolMgrDelegate == null)) {
                this.onBeginAddUpdatePayorToolMgrDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePayorToolMgr);
            }
            if ((this.onEndAddUpdatePayorToolMgrDelegate == null)) {
                this.onEndAddUpdatePayorToolMgrDelegate = new EndOperationDelegate(this.OnEndAddUpdatePayorToolMgr);
            }
            if ((this.onAddUpdatePayorToolMgrCompletedDelegate == null)) {
                this.onAddUpdatePayorToolMgrCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePayorToolMgrCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePayorToolMgrDelegate, new object[] {
                        PyorTool}, this.onEndAddUpdatePayorToolMgrDelegate, this.onAddUpdatePayorToolMgrCompletedDelegate, userState);
        }
        
        public void DeletePayorToolMgr(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.Nullable<System.Guid> TemplateID) {
            base.Channel.DeletePayorToolMgr(PyorTool, TemplateID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePayorToolMgr(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.Nullable<System.Guid> TemplateID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePayorToolMgr(PyorTool, TemplateID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePayorToolMgr(System.IAsyncResult result) {
            base.Channel.EndDeletePayorToolMgr(result);
        }
        
        private System.IAsyncResult OnBeginDeletePayorToolMgr(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool)(inValues[0]));
            System.Nullable<System.Guid> TemplateID = ((System.Nullable<System.Guid>)(inValues[1]));
            return this.BeginDeletePayorToolMgr(PyorTool, TemplateID, callback, asyncState);
        }
        
        private object[] OnEndDeletePayorToolMgr(System.IAsyncResult result) {
            this.EndDeletePayorToolMgr(result);
            return null;
        }
        
        private void OnDeletePayorToolMgrCompleted(object state) {
            if ((this.DeletePayorToolMgrCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePayorToolMgrCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePayorToolMgrAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.Nullable<System.Guid> TemplateID) {
            this.DeletePayorToolMgrAsync(PyorTool, TemplateID, null);
        }
        
        public void DeletePayorToolMgrAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.Nullable<System.Guid> TemplateID, object userState) {
            if ((this.onBeginDeletePayorToolMgrDelegate == null)) {
                this.onBeginDeletePayorToolMgrDelegate = new BeginOperationDelegate(this.OnBeginDeletePayorToolMgr);
            }
            if ((this.onEndDeletePayorToolMgrDelegate == null)) {
                this.onEndDeletePayorToolMgrDelegate = new EndOperationDelegate(this.OnEndDeletePayorToolMgr);
            }
            if ((this.onDeletePayorToolMgrCompletedDelegate == null)) {
                this.onDeletePayorToolMgrCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePayorToolMgrCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePayorToolMgrDelegate, new object[] {
                        PyorTool,
                        TemplateID}, this.onEndDeletePayorToolMgrDelegate, this.onDeletePayorToolMgrCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool GetPayorToolMgr(System.Guid PayorID) {
            return base.Channel.GetPayorToolMgr(PayorID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorToolMgr(System.Guid PayorID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorToolMgr(PayorID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool EndGetPayorToolMgr(System.IAsyncResult result) {
            return base.Channel.EndGetPayorToolMgr(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorToolMgr(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorID = ((System.Guid)(inValues[0]));
            return this.BeginGetPayorToolMgr(PayorID, callback, asyncState);
        }
        
        private object[] OnEndGetPayorToolMgr(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool retVal = this.EndGetPayorToolMgr(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorToolMgrCompleted(object state) {
            if ((this.GetPayorToolMgrCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorToolMgrCompleted(this, new GetPayorToolMgrCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorToolMgrAsync(System.Guid PayorID) {
            this.GetPayorToolMgrAsync(PayorID, null);
        }
        
        public void GetPayorToolMgrAsync(System.Guid PayorID, object userState) {
            if ((this.onBeginGetPayorToolMgrDelegate == null)) {
                this.onBeginGetPayorToolMgrDelegate = new BeginOperationDelegate(this.OnBeginGetPayorToolMgr);
            }
            if ((this.onEndGetPayorToolMgrDelegate == null)) {
                this.onEndGetPayorToolMgrDelegate = new EndOperationDelegate(this.OnEndGetPayorToolMgr);
            }
            if ((this.onGetPayorToolMgrCompletedDelegate == null)) {
                this.onGetPayorToolMgrCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorToolMgrCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorToolMgrDelegate, new object[] {
                        PayorID}, this.onEndGetPayorToolMgrDelegate, this.onGetPayorToolMgrCompletedDelegate, userState);
        }
        
        public System.Guid GetPayorToolId(System.Guid PayorId) {
            return base.Channel.GetPayorToolId(PayorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorToolId(System.Guid PayorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorToolId(PayorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Guid EndGetPayorToolId(System.IAsyncResult result) {
            return base.Channel.EndGetPayorToolId(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorToolId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            return this.BeginGetPayorToolId(PayorId, callback, asyncState);
        }
        
        private object[] OnEndGetPayorToolId(System.IAsyncResult result) {
            System.Guid retVal = this.EndGetPayorToolId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorToolIdCompleted(object state) {
            if ((this.GetPayorToolIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorToolIdCompleted(this, new GetPayorToolIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorToolIdAsync(System.Guid PayorId) {
            this.GetPayorToolIdAsync(PayorId, null);
        }
        
        public void GetPayorToolIdAsync(System.Guid PayorId, object userState) {
            if ((this.onBeginGetPayorToolIdDelegate == null)) {
                this.onBeginGetPayorToolIdDelegate = new BeginOperationDelegate(this.OnBeginGetPayorToolId);
            }
            if ((this.onEndGetPayorToolIdDelegate == null)) {
                this.onEndGetPayorToolIdDelegate = new EndOperationDelegate(this.OnEndGetPayorToolId);
            }
            if ((this.onGetPayorToolIdCompletedDelegate == null)) {
                this.onGetPayorToolIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorToolIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorToolIdDelegate, new object[] {
                        PayorId}, this.onEndGetPayorToolIdDelegate, this.onGetPayorToolIdCompletedDelegate, userState);
        }
        
        public bool AddUpdatePayorToolTemplate(System.Guid tempID, string strTemName, bool isDeleted, System.Guid PayorID) {
            return base.Channel.AddUpdatePayorToolTemplate(tempID, strTemName, isDeleted, PayorID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePayorToolTemplate(System.Guid tempID, string strTemName, bool isDeleted, System.Guid PayorID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePayorToolTemplate(tempID, strTemName, isDeleted, PayorID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddUpdatePayorToolTemplate(System.IAsyncResult result) {
            return base.Channel.EndAddUpdatePayorToolTemplate(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePayorToolTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid tempID = ((System.Guid)(inValues[0]));
            string strTemName = ((string)(inValues[1]));
            bool isDeleted = ((bool)(inValues[2]));
            System.Guid PayorID = ((System.Guid)(inValues[3]));
            return this.BeginAddUpdatePayorToolTemplate(tempID, strTemName, isDeleted, PayorID, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePayorToolTemplate(System.IAsyncResult result) {
            bool retVal = this.EndAddUpdatePayorToolTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdatePayorToolTemplateCompleted(object state) {
            if ((this.AddUpdatePayorToolTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePayorToolTemplateCompleted(this, new AddUpdatePayorToolTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePayorToolTemplateAsync(System.Guid tempID, string strTemName, bool isDeleted, System.Guid PayorID) {
            this.AddUpdatePayorToolTemplateAsync(tempID, strTemName, isDeleted, PayorID, null);
        }
        
        public void AddUpdatePayorToolTemplateAsync(System.Guid tempID, string strTemName, bool isDeleted, System.Guid PayorID, object userState) {
            if ((this.onBeginAddUpdatePayorToolTemplateDelegate == null)) {
                this.onBeginAddUpdatePayorToolTemplateDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePayorToolTemplate);
            }
            if ((this.onEndAddUpdatePayorToolTemplateDelegate == null)) {
                this.onEndAddUpdatePayorToolTemplateDelegate = new EndOperationDelegate(this.OnEndAddUpdatePayorToolTemplate);
            }
            if ((this.onAddUpdatePayorToolTemplateCompletedDelegate == null)) {
                this.onAddUpdatePayorToolTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePayorToolTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePayorToolTemplateDelegate, new object[] {
                        tempID,
                        strTemName,
                        isDeleted,
                        PayorID}, this.onEndAddUpdatePayorToolTemplateDelegate, this.onAddUpdatePayorToolTemplateCompletedDelegate, userState);
        }
        
        public bool DeletePayorToolTemplate(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.Nullable<System.Guid> GuidID) {
            return base.Channel.DeletePayorToolTemplate(PyorTool, GuidID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePayorToolTemplate(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.Nullable<System.Guid> GuidID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePayorToolTemplate(PyorTool, GuidID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeletePayorToolTemplate(System.IAsyncResult result) {
            return base.Channel.EndDeletePayorToolTemplate(result);
        }
        
        private System.IAsyncResult OnBeginDeletePayorToolTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool)(inValues[0]));
            System.Nullable<System.Guid> GuidID = ((System.Nullable<System.Guid>)(inValues[1]));
            return this.BeginDeletePayorToolTemplate(PyorTool, GuidID, callback, asyncState);
        }
        
        private object[] OnEndDeletePayorToolTemplate(System.IAsyncResult result) {
            bool retVal = this.EndDeletePayorToolTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePayorToolTemplateCompleted(object state) {
            if ((this.DeletePayorToolTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePayorToolTemplateCompleted(this, new DeletePayorToolTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePayorToolTemplateAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.Nullable<System.Guid> GuidID) {
            this.DeletePayorToolTemplateAsync(PyorTool, GuidID, null);
        }
        
        public void DeletePayorToolTemplateAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool PyorTool, System.Nullable<System.Guid> GuidID, object userState) {
            if ((this.onBeginDeletePayorToolTemplateDelegate == null)) {
                this.onBeginDeletePayorToolTemplateDelegate = new BeginOperationDelegate(this.OnBeginDeletePayorToolTemplate);
            }
            if ((this.onEndDeletePayorToolTemplateDelegate == null)) {
                this.onEndDeletePayorToolTemplateDelegate = new EndOperationDelegate(this.OnEndDeletePayorToolTemplate);
            }
            if ((this.onDeletePayorToolTemplateCompletedDelegate == null)) {
                this.onDeletePayorToolTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePayorToolTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePayorToolTemplateDelegate, new object[] {
                        PyorTool,
                        GuidID}, this.onEndDeletePayorToolTemplateDelegate, this.onDeletePayorToolTemplateCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> GetPayorToolTemplate(System.Guid PayorId) {
            return base.Channel.GetPayorToolTemplate(PayorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorToolTemplate(System.Guid PayorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorToolTemplate(PayorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> EndGetPayorToolTemplate(System.IAsyncResult result) {
            return base.Channel.EndGetPayorToolTemplate(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorToolTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            return this.BeginGetPayorToolTemplate(PayorId, callback, asyncState);
        }
        
        private object[] OnEndGetPayorToolTemplate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> retVal = this.EndGetPayorToolTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorToolTemplateCompleted(object state) {
            if ((this.GetPayorToolTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorToolTemplateCompleted(this, new GetPayorToolTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorToolTemplateAsync(System.Guid PayorId) {
            this.GetPayorToolTemplateAsync(PayorId, null);
        }
        
        public void GetPayorToolTemplateAsync(System.Guid PayorId, object userState) {
            if ((this.onBeginGetPayorToolTemplateDelegate == null)) {
                this.onBeginGetPayorToolTemplateDelegate = new BeginOperationDelegate(this.OnBeginGetPayorToolTemplate);
            }
            if ((this.onEndGetPayorToolTemplateDelegate == null)) {
                this.onEndGetPayorToolTemplateDelegate = new EndOperationDelegate(this.OnEndGetPayorToolTemplate);
            }
            if ((this.onGetPayorToolTemplateCompletedDelegate == null)) {
                this.onGetPayorToolTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorToolTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorToolTemplateDelegate, new object[] {
                        PayorId}, this.onEndGetPayorToolTemplateDelegate, this.onGetPayorToolTemplateCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool GetPayorToolMgrWithTemplate(System.Guid PayorID, System.Nullable<System.Guid> TempID) {
            return base.Channel.GetPayorToolMgrWithTemplate(PayorID, TempID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorToolMgrWithTemplate(System.Guid PayorID, System.Nullable<System.Guid> TempID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorToolMgrWithTemplate(PayorID, TempID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool EndGetPayorToolMgrWithTemplate(System.IAsyncResult result) {
            return base.Channel.EndGetPayorToolMgrWithTemplate(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorToolMgrWithTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorID = ((System.Guid)(inValues[0]));
            System.Nullable<System.Guid> TempID = ((System.Nullable<System.Guid>)(inValues[1]));
            return this.BeginGetPayorToolMgrWithTemplate(PayorID, TempID, callback, asyncState);
        }
        
        private object[] OnEndGetPayorToolMgrWithTemplate(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorTool retVal = this.EndGetPayorToolMgrWithTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorToolMgrWithTemplateCompleted(object state) {
            if ((this.GetPayorToolMgrWithTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorToolMgrWithTemplateCompleted(this, new GetPayorToolMgrWithTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorToolMgrWithTemplateAsync(System.Guid PayorID, System.Nullable<System.Guid> TempID) {
            this.GetPayorToolMgrWithTemplateAsync(PayorID, TempID, null);
        }
        
        public void GetPayorToolMgrWithTemplateAsync(System.Guid PayorID, System.Nullable<System.Guid> TempID, object userState) {
            if ((this.onBeginGetPayorToolMgrWithTemplateDelegate == null)) {
                this.onBeginGetPayorToolMgrWithTemplateDelegate = new BeginOperationDelegate(this.OnBeginGetPayorToolMgrWithTemplate);
            }
            if ((this.onEndGetPayorToolMgrWithTemplateDelegate == null)) {
                this.onEndGetPayorToolMgrWithTemplateDelegate = new EndOperationDelegate(this.OnEndGetPayorToolMgrWithTemplate);
            }
            if ((this.onGetPayorToolMgrWithTemplateCompletedDelegate == null)) {
                this.onGetPayorToolMgrWithTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorToolMgrWithTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorToolMgrWithTemplateDelegate, new object[] {
                        PayorID,
                        TempID}, this.onEndGetPayorToolMgrWithTemplateDelegate, this.onGetPayorToolMgrWithTemplateCompletedDelegate, userState);
        }
        
        public bool IsAvailablePayorTempalate(System.Guid SourcePayorID, System.Nullable<System.Guid> SourceTempID, System.Guid DestinationPayorID, System.Nullable<System.Guid> DestiTempID) {
            return base.Channel.IsAvailablePayorTempalate(SourcePayorID, SourceTempID, DestinationPayorID, DestiTempID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsAvailablePayorTempalate(System.Guid SourcePayorID, System.Nullable<System.Guid> SourceTempID, System.Guid DestinationPayorID, System.Nullable<System.Guid> DestiTempID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsAvailablePayorTempalate(SourcePayorID, SourceTempID, DestinationPayorID, DestiTempID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsAvailablePayorTempalate(System.IAsyncResult result) {
            return base.Channel.EndIsAvailablePayorTempalate(result);
        }
        
        private System.IAsyncResult OnBeginIsAvailablePayorTempalate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid SourcePayorID = ((System.Guid)(inValues[0]));
            System.Nullable<System.Guid> SourceTempID = ((System.Nullable<System.Guid>)(inValues[1]));
            System.Guid DestinationPayorID = ((System.Guid)(inValues[2]));
            System.Nullable<System.Guid> DestiTempID = ((System.Nullable<System.Guid>)(inValues[3]));
            return this.BeginIsAvailablePayorTempalate(SourcePayorID, SourceTempID, DestinationPayorID, DestiTempID, callback, asyncState);
        }
        
        private object[] OnEndIsAvailablePayorTempalate(System.IAsyncResult result) {
            bool retVal = this.EndIsAvailablePayorTempalate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsAvailablePayorTempalateCompleted(object state) {
            if ((this.IsAvailablePayorTempalateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsAvailablePayorTempalateCompleted(this, new IsAvailablePayorTempalateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsAvailablePayorTempalateAsync(System.Guid SourcePayorID, System.Nullable<System.Guid> SourceTempID, System.Guid DestinationPayorID, System.Nullable<System.Guid> DestiTempID) {
            this.IsAvailablePayorTempalateAsync(SourcePayorID, SourceTempID, DestinationPayorID, DestiTempID, null);
        }
        
        public void IsAvailablePayorTempalateAsync(System.Guid SourcePayorID, System.Nullable<System.Guid> SourceTempID, System.Guid DestinationPayorID, System.Nullable<System.Guid> DestiTempID, object userState) {
            if ((this.onBeginIsAvailablePayorTempalateDelegate == null)) {
                this.onBeginIsAvailablePayorTempalateDelegate = new BeginOperationDelegate(this.OnBeginIsAvailablePayorTempalate);
            }
            if ((this.onEndIsAvailablePayorTempalateDelegate == null)) {
                this.onEndIsAvailablePayorTempalateDelegate = new EndOperationDelegate(this.OnEndIsAvailablePayorTempalate);
            }
            if ((this.onIsAvailablePayorTempalateCompletedDelegate == null)) {
                this.onIsAvailablePayorTempalateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsAvailablePayorTempalateCompleted);
            }
            base.InvokeAsync(this.onBeginIsAvailablePayorTempalateDelegate, new object[] {
                        SourcePayorID,
                        SourceTempID,
                        DestinationPayorID,
                        DestiTempID}, this.onEndIsAvailablePayorTempalateDelegate, this.onIsAvailablePayorTempalateCompletedDelegate, userState);
        }
        
        public bool UpdateDulicatePayorTool(System.Guid SourcePayorID, System.Nullable<System.Guid> SourceTempID, System.Guid DestinationPayorID, System.Nullable<System.Guid> DestiTempID) {
            return base.Channel.UpdateDulicatePayorTool(SourcePayorID, SourceTempID, DestinationPayorID, DestiTempID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDulicatePayorTool(System.Guid SourcePayorID, System.Nullable<System.Guid> SourceTempID, System.Guid DestinationPayorID, System.Nullable<System.Guid> DestiTempID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDulicatePayorTool(SourcePayorID, SourceTempID, DestinationPayorID, DestiTempID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateDulicatePayorTool(System.IAsyncResult result) {
            return base.Channel.EndUpdateDulicatePayorTool(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDulicatePayorTool(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid SourcePayorID = ((System.Guid)(inValues[0]));
            System.Nullable<System.Guid> SourceTempID = ((System.Nullable<System.Guid>)(inValues[1]));
            System.Guid DestinationPayorID = ((System.Guid)(inValues[2]));
            System.Nullable<System.Guid> DestiTempID = ((System.Nullable<System.Guid>)(inValues[3]));
            return this.BeginUpdateDulicatePayorTool(SourcePayorID, SourceTempID, DestinationPayorID, DestiTempID, callback, asyncState);
        }
        
        private object[] OnEndUpdateDulicatePayorTool(System.IAsyncResult result) {
            bool retVal = this.EndUpdateDulicatePayorTool(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateDulicatePayorToolCompleted(object state) {
            if ((this.UpdateDulicatePayorToolCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDulicatePayorToolCompleted(this, new UpdateDulicatePayorToolCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDulicatePayorToolAsync(System.Guid SourcePayorID, System.Nullable<System.Guid> SourceTempID, System.Guid DestinationPayorID, System.Nullable<System.Guid> DestiTempID) {
            this.UpdateDulicatePayorToolAsync(SourcePayorID, SourceTempID, DestinationPayorID, DestiTempID, null);
        }
        
        public void UpdateDulicatePayorToolAsync(System.Guid SourcePayorID, System.Nullable<System.Guid> SourceTempID, System.Guid DestinationPayorID, System.Nullable<System.Guid> DestiTempID, object userState) {
            if ((this.onBeginUpdateDulicatePayorToolDelegate == null)) {
                this.onBeginUpdateDulicatePayorToolDelegate = new BeginOperationDelegate(this.OnBeginUpdateDulicatePayorTool);
            }
            if ((this.onEndUpdateDulicatePayorToolDelegate == null)) {
                this.onEndUpdateDulicatePayorToolDelegate = new EndOperationDelegate(this.OnEndUpdateDulicatePayorTool);
            }
            if ((this.onUpdateDulicatePayorToolCompletedDelegate == null)) {
                this.onUpdateDulicatePayorToolCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDulicatePayorToolCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDulicatePayorToolDelegate, new object[] {
                        SourcePayorID,
                        SourceTempID,
                        DestinationPayorID,
                        DestiTempID}, this.onEndUpdateDulicatePayorToolDelegate, this.onUpdateDulicatePayorToolCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ILinkPaymentReciptRecords")]
    public interface ILinkPaymentReciptRecords {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILinkPaymentReciptRecords/GetLinkPaymentReciptRecordsByPolicyI" +
            "d", ReplyAction="http://tempuri.org/ILinkPaymentReciptRecords/GetLinkPaymentReciptRecordsByPolicyI" +
            "dResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords> GetLinkPaymentReciptRecordsByPolicyId(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILinkPaymentReciptRecords/GetLinkPaymentReciptRecordsByPolicyI" +
            "d", ReplyAction="http://tempuri.org/ILinkPaymentReciptRecords/GetLinkPaymentReciptRecordsByPolicyI" +
            "dResponse")]
        System.IAsyncResult BeginGetLinkPaymentReciptRecordsByPolicyId(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords> EndGetLinkPaymentReciptRecordsByPolicyId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILinkPaymentReciptRecords/AddUpdateLinkPaymentReciptRecords", ReplyAction="http://tempuri.org/ILinkPaymentReciptRecords/AddUpdateLinkPaymentReciptRecordsRes" +
            "ponse")]
        void AddUpdateLinkPaymentReciptRecords(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords _LinkPaymentReciptRecords);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILinkPaymentReciptRecords/AddUpdateLinkPaymentReciptRecords", ReplyAction="http://tempuri.org/ILinkPaymentReciptRecords/AddUpdateLinkPaymentReciptRecordsRes" +
            "ponse")]
        System.IAsyncResult BeginAddUpdateLinkPaymentReciptRecords(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords _LinkPaymentReciptRecords, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateLinkPaymentReciptRecords(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILinkPaymentReciptRecordsChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ILinkPaymentReciptRecords, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLinkPaymentReciptRecordsByPolicyIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLinkPaymentReciptRecordsByPolicyIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LinkPaymentReciptRecordsClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ILinkPaymentReciptRecords>, MyAgencyVault.VM.MyAgencyVaultSvc.ILinkPaymentReciptRecords {
        
        private BeginOperationDelegate onBeginGetLinkPaymentReciptRecordsByPolicyIdDelegate;
        
        private EndOperationDelegate onEndGetLinkPaymentReciptRecordsByPolicyIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetLinkPaymentReciptRecordsByPolicyIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateLinkPaymentReciptRecordsDelegate;
        
        private EndOperationDelegate onEndAddUpdateLinkPaymentReciptRecordsDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateLinkPaymentReciptRecordsCompletedDelegate;
        
        public LinkPaymentReciptRecordsClient() {
        }
        
        public LinkPaymentReciptRecordsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LinkPaymentReciptRecordsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LinkPaymentReciptRecordsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LinkPaymentReciptRecordsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetLinkPaymentReciptRecordsByPolicyIdCompletedEventArgs> GetLinkPaymentReciptRecordsByPolicyIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateLinkPaymentReciptRecordsCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords> GetLinkPaymentReciptRecordsByPolicyId(System.Guid PolicyId) {
            return base.Channel.GetLinkPaymentReciptRecordsByPolicyId(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLinkPaymentReciptRecordsByPolicyId(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLinkPaymentReciptRecordsByPolicyId(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords> EndGetLinkPaymentReciptRecordsByPolicyId(System.IAsyncResult result) {
            return base.Channel.EndGetLinkPaymentReciptRecordsByPolicyId(result);
        }
        
        private System.IAsyncResult OnBeginGetLinkPaymentReciptRecordsByPolicyId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetLinkPaymentReciptRecordsByPolicyId(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetLinkPaymentReciptRecordsByPolicyId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords> retVal = this.EndGetLinkPaymentReciptRecordsByPolicyId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLinkPaymentReciptRecordsByPolicyIdCompleted(object state) {
            if ((this.GetLinkPaymentReciptRecordsByPolicyIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLinkPaymentReciptRecordsByPolicyIdCompleted(this, new GetLinkPaymentReciptRecordsByPolicyIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLinkPaymentReciptRecordsByPolicyIdAsync(System.Guid PolicyId) {
            this.GetLinkPaymentReciptRecordsByPolicyIdAsync(PolicyId, null);
        }
        
        public void GetLinkPaymentReciptRecordsByPolicyIdAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetLinkPaymentReciptRecordsByPolicyIdDelegate == null)) {
                this.onBeginGetLinkPaymentReciptRecordsByPolicyIdDelegate = new BeginOperationDelegate(this.OnBeginGetLinkPaymentReciptRecordsByPolicyId);
            }
            if ((this.onEndGetLinkPaymentReciptRecordsByPolicyIdDelegate == null)) {
                this.onEndGetLinkPaymentReciptRecordsByPolicyIdDelegate = new EndOperationDelegate(this.OnEndGetLinkPaymentReciptRecordsByPolicyId);
            }
            if ((this.onGetLinkPaymentReciptRecordsByPolicyIdCompletedDelegate == null)) {
                this.onGetLinkPaymentReciptRecordsByPolicyIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLinkPaymentReciptRecordsByPolicyIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetLinkPaymentReciptRecordsByPolicyIdDelegate, new object[] {
                        PolicyId}, this.onEndGetLinkPaymentReciptRecordsByPolicyIdDelegate, this.onGetLinkPaymentReciptRecordsByPolicyIdCompletedDelegate, userState);
        }
        
        public void AddUpdateLinkPaymentReciptRecords(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords _LinkPaymentReciptRecords) {
            base.Channel.AddUpdateLinkPaymentReciptRecords(_LinkPaymentReciptRecords);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateLinkPaymentReciptRecords(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords _LinkPaymentReciptRecords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateLinkPaymentReciptRecords(_LinkPaymentReciptRecords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateLinkPaymentReciptRecords(System.IAsyncResult result) {
            base.Channel.EndAddUpdateLinkPaymentReciptRecords(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateLinkPaymentReciptRecords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords _LinkPaymentReciptRecords = ((MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords)(inValues[0]));
            return this.BeginAddUpdateLinkPaymentReciptRecords(_LinkPaymentReciptRecords, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateLinkPaymentReciptRecords(System.IAsyncResult result) {
            this.EndAddUpdateLinkPaymentReciptRecords(result);
            return null;
        }
        
        private void OnAddUpdateLinkPaymentReciptRecordsCompleted(object state) {
            if ((this.AddUpdateLinkPaymentReciptRecordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateLinkPaymentReciptRecordsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateLinkPaymentReciptRecordsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords _LinkPaymentReciptRecords) {
            this.AddUpdateLinkPaymentReciptRecordsAsync(_LinkPaymentReciptRecords, null);
        }
        
        public void AddUpdateLinkPaymentReciptRecordsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentReciptRecords _LinkPaymentReciptRecords, object userState) {
            if ((this.onBeginAddUpdateLinkPaymentReciptRecordsDelegate == null)) {
                this.onBeginAddUpdateLinkPaymentReciptRecordsDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateLinkPaymentReciptRecords);
            }
            if ((this.onEndAddUpdateLinkPaymentReciptRecordsDelegate == null)) {
                this.onEndAddUpdateLinkPaymentReciptRecordsDelegate = new EndOperationDelegate(this.OnEndAddUpdateLinkPaymentReciptRecords);
            }
            if ((this.onAddUpdateLinkPaymentReciptRecordsCompletedDelegate == null)) {
                this.onAddUpdateLinkPaymentReciptRecordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateLinkPaymentReciptRecordsCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateLinkPaymentReciptRecordsDelegate, new object[] {
                        _LinkPaymentReciptRecords}, this.onEndAddUpdateLinkPaymentReciptRecordsDelegate, this.onAddUpdateLinkPaymentReciptRecordsCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ICommissionEntry")]
    public interface ICommissionEntry {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommissionEntry/AddUpdateCommissionEntry", ReplyAction="http://tempuri.org/ICommissionEntry/AddUpdateCommissionEntryResponse")]
        void AddUpdateCommissionEntry(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICommissionEntry/AddUpdateCommissionEntry", ReplyAction="http://tempuri.org/ICommissionEntry/AddUpdateCommissionEntryResponse")]
        System.IAsyncResult BeginAddUpdateCommissionEntry(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateCommissionEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommissionEntry/DeleteCommissionEntry", ReplyAction="http://tempuri.org/ICommissionEntry/DeleteCommissionEntryResponse")]
        void DeleteCommissionEntry(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICommissionEntry/DeleteCommissionEntry", ReplyAction="http://tempuri.org/ICommissionEntry/DeleteCommissionEntryResponse")]
        System.IAsyncResult BeginDeleteCommissionEntry(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteCommissionEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommissionEntry/GetCommissionEntry", ReplyAction="http://tempuri.org/ICommissionEntry/GetCommissionEntryResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry GetCommissionEntry();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICommissionEntry/GetCommissionEntry", ReplyAction="http://tempuri.org/ICommissionEntry/GetCommissionEntryResponse")]
        System.IAsyncResult BeginGetCommissionEntry(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry EndGetCommissionEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommissionEntry/IsValidCommissionEntry", ReplyAction="http://tempuri.org/ICommissionEntry/IsValidCommissionEntryResponse")]
        bool IsValidCommissionEntry(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICommissionEntry/IsValidCommissionEntry", ReplyAction="http://tempuri.org/ICommissionEntry/IsValidCommissionEntryResponse")]
        System.IAsyncResult BeginIsValidCommissionEntry(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidCommissionEntry(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommissionEntryChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ICommissionEntry, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCommissionEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCommissionEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidCommissionEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidCommissionEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommissionEntryClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ICommissionEntry>, MyAgencyVault.VM.MyAgencyVaultSvc.ICommissionEntry {
        
        private BeginOperationDelegate onBeginAddUpdateCommissionEntryDelegate;
        
        private EndOperationDelegate onEndAddUpdateCommissionEntryDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateCommissionEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCommissionEntryDelegate;
        
        private EndOperationDelegate onEndDeleteCommissionEntryDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCommissionEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCommissionEntryDelegate;
        
        private EndOperationDelegate onEndGetCommissionEntryDelegate;
        
        private System.Threading.SendOrPostCallback onGetCommissionEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidCommissionEntryDelegate;
        
        private EndOperationDelegate onEndIsValidCommissionEntryDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidCommissionEntryCompletedDelegate;
        
        public CommissionEntryClient() {
        }
        
        public CommissionEntryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommissionEntryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommissionEntryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommissionEntryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateCommissionEntryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCommissionEntryCompleted;
        
        public event System.EventHandler<GetCommissionEntryCompletedEventArgs> GetCommissionEntryCompleted;
        
        public event System.EventHandler<IsValidCommissionEntryCompletedEventArgs> IsValidCommissionEntryCompleted;
        
        public void AddUpdateCommissionEntry(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt) {
            base.Channel.AddUpdateCommissionEntry(CommisionEnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateCommissionEntry(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateCommissionEntry(CommisionEnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateCommissionEntry(System.IAsyncResult result) {
            base.Channel.EndAddUpdateCommissionEntry(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateCommissionEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry)(inValues[0]));
            return this.BeginAddUpdateCommissionEntry(CommisionEnt, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateCommissionEntry(System.IAsyncResult result) {
            this.EndAddUpdateCommissionEntry(result);
            return null;
        }
        
        private void OnAddUpdateCommissionEntryCompleted(object state) {
            if ((this.AddUpdateCommissionEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateCommissionEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateCommissionEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt) {
            this.AddUpdateCommissionEntryAsync(CommisionEnt, null);
        }
        
        public void AddUpdateCommissionEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt, object userState) {
            if ((this.onBeginAddUpdateCommissionEntryDelegate == null)) {
                this.onBeginAddUpdateCommissionEntryDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateCommissionEntry);
            }
            if ((this.onEndAddUpdateCommissionEntryDelegate == null)) {
                this.onEndAddUpdateCommissionEntryDelegate = new EndOperationDelegate(this.OnEndAddUpdateCommissionEntry);
            }
            if ((this.onAddUpdateCommissionEntryCompletedDelegate == null)) {
                this.onAddUpdateCommissionEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateCommissionEntryCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateCommissionEntryDelegate, new object[] {
                        CommisionEnt}, this.onEndAddUpdateCommissionEntryDelegate, this.onAddUpdateCommissionEntryCompletedDelegate, userState);
        }
        
        public void DeleteCommissionEntry(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt) {
            base.Channel.DeleteCommissionEntry(CommisionEnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteCommissionEntry(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteCommissionEntry(CommisionEnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteCommissionEntry(System.IAsyncResult result) {
            base.Channel.EndDeleteCommissionEntry(result);
        }
        
        private System.IAsyncResult OnBeginDeleteCommissionEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry)(inValues[0]));
            return this.BeginDeleteCommissionEntry(CommisionEnt, callback, asyncState);
        }
        
        private object[] OnEndDeleteCommissionEntry(System.IAsyncResult result) {
            this.EndDeleteCommissionEntry(result);
            return null;
        }
        
        private void OnDeleteCommissionEntryCompleted(object state) {
            if ((this.DeleteCommissionEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCommissionEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCommissionEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt) {
            this.DeleteCommissionEntryAsync(CommisionEnt, null);
        }
        
        public void DeleteCommissionEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt, object userState) {
            if ((this.onBeginDeleteCommissionEntryDelegate == null)) {
                this.onBeginDeleteCommissionEntryDelegate = new BeginOperationDelegate(this.OnBeginDeleteCommissionEntry);
            }
            if ((this.onEndDeleteCommissionEntryDelegate == null)) {
                this.onEndDeleteCommissionEntryDelegate = new EndOperationDelegate(this.OnEndDeleteCommissionEntry);
            }
            if ((this.onDeleteCommissionEntryCompletedDelegate == null)) {
                this.onDeleteCommissionEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCommissionEntryCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCommissionEntryDelegate, new object[] {
                        CommisionEnt}, this.onEndDeleteCommissionEntryDelegate, this.onDeleteCommissionEntryCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry GetCommissionEntry() {
            return base.Channel.GetCommissionEntry();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCommissionEntry(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCommissionEntry(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry EndGetCommissionEntry(System.IAsyncResult result) {
            return base.Channel.EndGetCommissionEntry(result);
        }
        
        private System.IAsyncResult OnBeginGetCommissionEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCommissionEntry(callback, asyncState);
        }
        
        private object[] OnEndGetCommissionEntry(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry retVal = this.EndGetCommissionEntry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCommissionEntryCompleted(object state) {
            if ((this.GetCommissionEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCommissionEntryCompleted(this, new GetCommissionEntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCommissionEntryAsync() {
            this.GetCommissionEntryAsync(null);
        }
        
        public void GetCommissionEntryAsync(object userState) {
            if ((this.onBeginGetCommissionEntryDelegate == null)) {
                this.onBeginGetCommissionEntryDelegate = new BeginOperationDelegate(this.OnBeginGetCommissionEntry);
            }
            if ((this.onEndGetCommissionEntryDelegate == null)) {
                this.onEndGetCommissionEntryDelegate = new EndOperationDelegate(this.OnEndGetCommissionEntry);
            }
            if ((this.onGetCommissionEntryCompletedDelegate == null)) {
                this.onGetCommissionEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCommissionEntryCompleted);
            }
            base.InvokeAsync(this.onBeginGetCommissionEntryDelegate, null, this.onEndGetCommissionEntryDelegate, this.onGetCommissionEntryCompletedDelegate, userState);
        }
        
        public bool IsValidCommissionEntry(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt) {
            return base.Channel.IsValidCommissionEntry(CommisionEnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidCommissionEntry(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidCommissionEntry(CommisionEnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidCommissionEntry(System.IAsyncResult result) {
            return base.Channel.EndIsValidCommissionEntry(result);
        }
        
        private System.IAsyncResult OnBeginIsValidCommissionEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry)(inValues[0]));
            return this.BeginIsValidCommissionEntry(CommisionEnt, callback, asyncState);
        }
        
        private object[] OnEndIsValidCommissionEntry(System.IAsyncResult result) {
            bool retVal = this.EndIsValidCommissionEntry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidCommissionEntryCompleted(object state) {
            if ((this.IsValidCommissionEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidCommissionEntryCompleted(this, new IsValidCommissionEntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidCommissionEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt) {
            this.IsValidCommissionEntryAsync(CommisionEnt, null);
        }
        
        public void IsValidCommissionEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.CommissionEntry CommisionEnt, object userState) {
            if ((this.onBeginIsValidCommissionEntryDelegate == null)) {
                this.onBeginIsValidCommissionEntryDelegate = new BeginOperationDelegate(this.OnBeginIsValidCommissionEntry);
            }
            if ((this.onEndIsValidCommissionEntryDelegate == null)) {
                this.onEndIsValidCommissionEntryDelegate = new EndOperationDelegate(this.OnEndIsValidCommissionEntry);
            }
            if ((this.onIsValidCommissionEntryCompletedDelegate == null)) {
                this.onIsValidCommissionEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidCommissionEntryCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidCommissionEntryDelegate, new object[] {
                        CommisionEnt}, this.onEndIsValidCommissionEntryDelegate, this.onIsValidCommissionEntryCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IIssueCategory")]
    public interface IIssueCategory {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIssueCategory/GetCategory", ReplyAction="http://tempuri.org/IIssueCategory/GetCategoryResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory GetCategory(int CategoryID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIssueCategory/GetCategory", ReplyAction="http://tempuri.org/IIssueCategory/GetCategoryResponse")]
        System.IAsyncResult BeginGetCategory(int CategoryID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory EndGetCategory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIssueCategory/GetAllCategory", ReplyAction="http://tempuri.org/IIssueCategory/GetAllCategoryResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory> GetAllCategory();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIssueCategory/GetAllCategory", ReplyAction="http://tempuri.org/IIssueCategory/GetAllCategoryResponse")]
        System.IAsyncResult BeginGetAllCategory(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory> EndGetAllCategory(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIssueCategoryChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IIssueCategory, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IssueCategoryClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IIssueCategory>, MyAgencyVault.VM.MyAgencyVaultSvc.IIssueCategory {
        
        private BeginOperationDelegate onBeginGetCategoryDelegate;
        
        private EndOperationDelegate onEndGetCategoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetCategoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCategoryDelegate;
        
        private EndOperationDelegate onEndGetAllCategoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCategoryCompletedDelegate;
        
        public IssueCategoryClient() {
        }
        
        public IssueCategoryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IssueCategoryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IssueCategoryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IssueCategoryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetCategoryCompletedEventArgs> GetCategoryCompleted;
        
        public event System.EventHandler<GetAllCategoryCompletedEventArgs> GetAllCategoryCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory GetCategory(int CategoryID) {
            return base.Channel.GetCategory(CategoryID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCategory(int CategoryID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCategory(CategoryID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory EndGetCategory(System.IAsyncResult result) {
            return base.Channel.EndGetCategory(result);
        }
        
        private System.IAsyncResult OnBeginGetCategory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CategoryID = ((int)(inValues[0]));
            return this.BeginGetCategory(CategoryID, callback, asyncState);
        }
        
        private object[] OnEndGetCategory(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory retVal = this.EndGetCategory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCategoryCompleted(object state) {
            if ((this.GetCategoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCategoryCompleted(this, new GetCategoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCategoryAsync(int CategoryID) {
            this.GetCategoryAsync(CategoryID, null);
        }
        
        public void GetCategoryAsync(int CategoryID, object userState) {
            if ((this.onBeginGetCategoryDelegate == null)) {
                this.onBeginGetCategoryDelegate = new BeginOperationDelegate(this.OnBeginGetCategory);
            }
            if ((this.onEndGetCategoryDelegate == null)) {
                this.onEndGetCategoryDelegate = new EndOperationDelegate(this.OnEndGetCategory);
            }
            if ((this.onGetCategoryCompletedDelegate == null)) {
                this.onGetCategoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCategoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetCategoryDelegate, new object[] {
                        CategoryID}, this.onEndGetCategoryDelegate, this.onGetCategoryCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory> GetAllCategory() {
            return base.Channel.GetAllCategory();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllCategory(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCategory(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory> EndGetAllCategory(System.IAsyncResult result) {
            return base.Channel.EndGetAllCategory(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCategory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllCategory(callback, asyncState);
        }
        
        private object[] OnEndGetAllCategory(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueCategory> retVal = this.EndGetAllCategory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCategoryCompleted(object state) {
            if ((this.GetAllCategoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCategoryCompleted(this, new GetAllCategoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCategoryAsync() {
            this.GetAllCategoryAsync(null);
        }
        
        public void GetAllCategoryAsync(object userState) {
            if ((this.onBeginGetAllCategoryDelegate == null)) {
                this.onBeginGetAllCategoryDelegate = new BeginOperationDelegate(this.OnBeginGetAllCategory);
            }
            if ((this.onEndGetAllCategoryDelegate == null)) {
                this.onEndGetAllCategoryDelegate = new EndOperationDelegate(this.OnEndGetAllCategory);
            }
            if ((this.onGetAllCategoryCompletedDelegate == null)) {
                this.onGetAllCategoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCategoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCategoryDelegate, null, this.onEndGetAllCategoryDelegate, this.onGetAllCategoryCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IOutgoingPayment")]
    public interface IOutgoingPayment {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOutgoingPayment/AddUpdateOutgoingPayment", ReplyAction="http://tempuri.org/IOutgoingPayment/AddUpdateOutgoingPaymentResponse")]
        void AddUpdateOutgoingPayment(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> GisgoingSchedule, bool IsCustomSchedule, bool IsTieredSchedule);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOutgoingPayment/AddUpdateOutgoingPayment", ReplyAction="http://tempuri.org/IOutgoingPayment/AddUpdateOutgoingPaymentResponse")]
        System.IAsyncResult BeginAddUpdateOutgoingPayment(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> GisgoingSchedule, bool IsCustomSchedule, bool IsTieredSchedule, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateOutgoingPayment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOutgoingPayment/DeleteOutgoingPayment", ReplyAction="http://tempuri.org/IOutgoingPayment/DeleteOutgoingPaymentResponse")]
        void DeleteOutgoingPayment(MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment OutGoingPymnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOutgoingPayment/DeleteOutgoingPayment", ReplyAction="http://tempuri.org/IOutgoingPayment/DeleteOutgoingPaymentResponse")]
        System.IAsyncResult BeginDeleteOutgoingPayment(MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment OutGoingPymnt, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteOutgoingPayment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOutgoingPayment/GetOutgoingPayments", ReplyAction="http://tempuri.org/IOutgoingPayment/GetOutgoingPaymentsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> GetOutgoingPayments();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOutgoingPayment/GetOutgoingPayments", ReplyAction="http://tempuri.org/IOutgoingPayment/GetOutgoingPaymentsResponse")]
        System.IAsyncResult BeginGetOutgoingPayments(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> EndGetOutgoingPayments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOutgoingPayment/GetOutgoingSheduleForPolicy", ReplyAction="http://tempuri.org/IOutgoingPayment/GetOutgoingSheduleForPolicyResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> GetOutgoingSheduleForPolicy(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOutgoingPayment/GetOutgoingSheduleForPolicy", ReplyAction="http://tempuri.org/IOutgoingPayment/GetOutgoingSheduleForPolicyResponse")]
        System.IAsyncResult BeginGetOutgoingSheduleForPolicy(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> EndGetOutgoingSheduleForPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOutgoingPayment/CheckIsPaymentFromDEUForOutgoingPaymentID", ReplyAction="http://tempuri.org/IOutgoingPayment/CheckIsPaymentFromDEUForOutgoingPaymentIDResp" +
            "onse")]
        bool CheckIsPaymentFromDEUForOutgoingPaymentID(System.Guid OutgoingPaymentid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOutgoingPayment/CheckIsPaymentFromDEUForOutgoingPaymentID", ReplyAction="http://tempuri.org/IOutgoingPayment/CheckIsPaymentFromDEUForOutgoingPaymentIDResp" +
            "onse")]
        System.IAsyncResult BeginCheckIsPaymentFromDEUForOutgoingPaymentID(System.Guid OutgoingPaymentid, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckIsPaymentFromDEUForOutgoingPaymentID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOutgoingPayment/GetOutgoingPaymentByID", ReplyAction="http://tempuri.org/IOutgoingPayment/GetOutgoingPaymentByIDResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution GetOutgoingPaymentByID(System.Guid OutgoingPaymentid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOutgoingPayment/GetOutgoingPaymentByID", ReplyAction="http://tempuri.org/IOutgoingPayment/GetOutgoingPaymentByIDResponse")]
        System.IAsyncResult BeginGetOutgoingPaymentByID(System.Guid OutgoingPaymentid, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution EndGetOutgoingPaymentByID(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOutgoingPaymentChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IOutgoingPayment, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOutgoingPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOutgoingPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOutgoingSheduleForPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOutgoingSheduleForPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckIsPaymentFromDEUForOutgoingPaymentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckIsPaymentFromDEUForOutgoingPaymentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOutgoingPaymentByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOutgoingPaymentByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OutgoingPaymentClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IOutgoingPayment>, MyAgencyVault.VM.MyAgencyVaultSvc.IOutgoingPayment {
        
        private BeginOperationDelegate onBeginAddUpdateOutgoingPaymentDelegate;
        
        private EndOperationDelegate onEndAddUpdateOutgoingPaymentDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateOutgoingPaymentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteOutgoingPaymentDelegate;
        
        private EndOperationDelegate onEndDeleteOutgoingPaymentDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteOutgoingPaymentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOutgoingPaymentsDelegate;
        
        private EndOperationDelegate onEndGetOutgoingPaymentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetOutgoingPaymentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOutgoingSheduleForPolicyDelegate;
        
        private EndOperationDelegate onEndGetOutgoingSheduleForPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onGetOutgoingSheduleForPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckIsPaymentFromDEUForOutgoingPaymentIDDelegate;
        
        private EndOperationDelegate onEndCheckIsPaymentFromDEUForOutgoingPaymentIDDelegate;
        
        private System.Threading.SendOrPostCallback onCheckIsPaymentFromDEUForOutgoingPaymentIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOutgoingPaymentByIDDelegate;
        
        private EndOperationDelegate onEndGetOutgoingPaymentByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetOutgoingPaymentByIDCompletedDelegate;
        
        public OutgoingPaymentClient() {
        }
        
        public OutgoingPaymentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OutgoingPaymentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OutgoingPaymentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OutgoingPaymentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateOutgoingPaymentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteOutgoingPaymentCompleted;
        
        public event System.EventHandler<GetOutgoingPaymentsCompletedEventArgs> GetOutgoingPaymentsCompleted;
        
        public event System.EventHandler<GetOutgoingSheduleForPolicyCompletedEventArgs> GetOutgoingSheduleForPolicyCompleted;
        
        public event System.EventHandler<CheckIsPaymentFromDEUForOutgoingPaymentIDCompletedEventArgs> CheckIsPaymentFromDEUForOutgoingPaymentIDCompleted;
        
        public event System.EventHandler<GetOutgoingPaymentByIDCompletedEventArgs> GetOutgoingPaymentByIDCompleted;
        
        public void AddUpdateOutgoingPayment(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> GisgoingSchedule, bool IsCustomSchedule, bool IsTieredSchedule) {
            base.Channel.AddUpdateOutgoingPayment(GisgoingSchedule, IsCustomSchedule, IsTieredSchedule);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateOutgoingPayment(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> GisgoingSchedule, bool IsCustomSchedule, bool IsTieredSchedule, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateOutgoingPayment(GisgoingSchedule, IsCustomSchedule, IsTieredSchedule, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateOutgoingPayment(System.IAsyncResult result) {
            base.Channel.EndAddUpdateOutgoingPayment(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateOutgoingPayment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> GisgoingSchedule = ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment>)(inValues[0]));
            bool IsCustomSchedule = ((bool)(inValues[1]));
            bool IsTieredSchedule = ((bool)(inValues[2]));
            return this.BeginAddUpdateOutgoingPayment(GisgoingSchedule, IsCustomSchedule, IsTieredSchedule, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateOutgoingPayment(System.IAsyncResult result) {
            this.EndAddUpdateOutgoingPayment(result);
            return null;
        }
        
        private void OnAddUpdateOutgoingPaymentCompleted(object state) {
            if ((this.AddUpdateOutgoingPaymentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateOutgoingPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateOutgoingPaymentAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> GisgoingSchedule, bool IsCustomSchedule, bool IsTieredSchedule) {
            this.AddUpdateOutgoingPaymentAsync(GisgoingSchedule, IsCustomSchedule, IsTieredSchedule, null);
        }
        
        public void AddUpdateOutgoingPaymentAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> GisgoingSchedule, bool IsCustomSchedule, bool IsTieredSchedule, object userState) {
            if ((this.onBeginAddUpdateOutgoingPaymentDelegate == null)) {
                this.onBeginAddUpdateOutgoingPaymentDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateOutgoingPayment);
            }
            if ((this.onEndAddUpdateOutgoingPaymentDelegate == null)) {
                this.onEndAddUpdateOutgoingPaymentDelegate = new EndOperationDelegate(this.OnEndAddUpdateOutgoingPayment);
            }
            if ((this.onAddUpdateOutgoingPaymentCompletedDelegate == null)) {
                this.onAddUpdateOutgoingPaymentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateOutgoingPaymentCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateOutgoingPaymentDelegate, new object[] {
                        GisgoingSchedule,
                        IsCustomSchedule,
                        IsTieredSchedule}, this.onEndAddUpdateOutgoingPaymentDelegate, this.onAddUpdateOutgoingPaymentCompletedDelegate, userState);
        }
        
        public void DeleteOutgoingPayment(MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment OutGoingPymnt) {
            base.Channel.DeleteOutgoingPayment(OutGoingPymnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteOutgoingPayment(MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment OutGoingPymnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteOutgoingPayment(OutGoingPymnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteOutgoingPayment(System.IAsyncResult result) {
            base.Channel.EndDeleteOutgoingPayment(result);
        }
        
        private System.IAsyncResult OnBeginDeleteOutgoingPayment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment OutGoingPymnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment)(inValues[0]));
            return this.BeginDeleteOutgoingPayment(OutGoingPymnt, callback, asyncState);
        }
        
        private object[] OnEndDeleteOutgoingPayment(System.IAsyncResult result) {
            this.EndDeleteOutgoingPayment(result);
            return null;
        }
        
        private void OnDeleteOutgoingPaymentCompleted(object state) {
            if ((this.DeleteOutgoingPaymentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteOutgoingPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteOutgoingPaymentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment OutGoingPymnt) {
            this.DeleteOutgoingPaymentAsync(OutGoingPymnt, null);
        }
        
        public void DeleteOutgoingPaymentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment OutGoingPymnt, object userState) {
            if ((this.onBeginDeleteOutgoingPaymentDelegate == null)) {
                this.onBeginDeleteOutgoingPaymentDelegate = new BeginOperationDelegate(this.OnBeginDeleteOutgoingPayment);
            }
            if ((this.onEndDeleteOutgoingPaymentDelegate == null)) {
                this.onEndDeleteOutgoingPaymentDelegate = new EndOperationDelegate(this.OnEndDeleteOutgoingPayment);
            }
            if ((this.onDeleteOutgoingPaymentCompletedDelegate == null)) {
                this.onDeleteOutgoingPaymentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteOutgoingPaymentCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteOutgoingPaymentDelegate, new object[] {
                        OutGoingPymnt}, this.onEndDeleteOutgoingPaymentDelegate, this.onDeleteOutgoingPaymentCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> GetOutgoingPayments() {
            return base.Channel.GetOutgoingPayments();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOutgoingPayments(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOutgoingPayments(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> EndGetOutgoingPayments(System.IAsyncResult result) {
            return base.Channel.EndGetOutgoingPayments(result);
        }
        
        private System.IAsyncResult OnBeginGetOutgoingPayments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetOutgoingPayments(callback, asyncState);
        }
        
        private object[] OnEndGetOutgoingPayments(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> retVal = this.EndGetOutgoingPayments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOutgoingPaymentsCompleted(object state) {
            if ((this.GetOutgoingPaymentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOutgoingPaymentsCompleted(this, new GetOutgoingPaymentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOutgoingPaymentsAsync() {
            this.GetOutgoingPaymentsAsync(null);
        }
        
        public void GetOutgoingPaymentsAsync(object userState) {
            if ((this.onBeginGetOutgoingPaymentsDelegate == null)) {
                this.onBeginGetOutgoingPaymentsDelegate = new BeginOperationDelegate(this.OnBeginGetOutgoingPayments);
            }
            if ((this.onEndGetOutgoingPaymentsDelegate == null)) {
                this.onEndGetOutgoingPaymentsDelegate = new EndOperationDelegate(this.OnEndGetOutgoingPayments);
            }
            if ((this.onGetOutgoingPaymentsCompletedDelegate == null)) {
                this.onGetOutgoingPaymentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOutgoingPaymentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetOutgoingPaymentsDelegate, null, this.onEndGetOutgoingPaymentsDelegate, this.onGetOutgoingPaymentsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> GetOutgoingSheduleForPolicy(System.Guid PolicyId) {
            return base.Channel.GetOutgoingSheduleForPolicy(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOutgoingSheduleForPolicy(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOutgoingSheduleForPolicy(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> EndGetOutgoingSheduleForPolicy(System.IAsyncResult result) {
            return base.Channel.EndGetOutgoingSheduleForPolicy(result);
        }
        
        private System.IAsyncResult OnBeginGetOutgoingSheduleForPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetOutgoingSheduleForPolicy(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetOutgoingSheduleForPolicy(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.OutGoingPayment> retVal = this.EndGetOutgoingSheduleForPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOutgoingSheduleForPolicyCompleted(object state) {
            if ((this.GetOutgoingSheduleForPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOutgoingSheduleForPolicyCompleted(this, new GetOutgoingSheduleForPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOutgoingSheduleForPolicyAsync(System.Guid PolicyId) {
            this.GetOutgoingSheduleForPolicyAsync(PolicyId, null);
        }
        
        public void GetOutgoingSheduleForPolicyAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetOutgoingSheduleForPolicyDelegate == null)) {
                this.onBeginGetOutgoingSheduleForPolicyDelegate = new BeginOperationDelegate(this.OnBeginGetOutgoingSheduleForPolicy);
            }
            if ((this.onEndGetOutgoingSheduleForPolicyDelegate == null)) {
                this.onEndGetOutgoingSheduleForPolicyDelegate = new EndOperationDelegate(this.OnEndGetOutgoingSheduleForPolicy);
            }
            if ((this.onGetOutgoingSheduleForPolicyCompletedDelegate == null)) {
                this.onGetOutgoingSheduleForPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOutgoingSheduleForPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginGetOutgoingSheduleForPolicyDelegate, new object[] {
                        PolicyId}, this.onEndGetOutgoingSheduleForPolicyDelegate, this.onGetOutgoingSheduleForPolicyCompletedDelegate, userState);
        }
        
        public bool CheckIsPaymentFromDEUForOutgoingPaymentID(System.Guid OutgoingPaymentid) {
            return base.Channel.CheckIsPaymentFromDEUForOutgoingPaymentID(OutgoingPaymentid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckIsPaymentFromDEUForOutgoingPaymentID(System.Guid OutgoingPaymentid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckIsPaymentFromDEUForOutgoingPaymentID(OutgoingPaymentid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckIsPaymentFromDEUForOutgoingPaymentID(System.IAsyncResult result) {
            return base.Channel.EndCheckIsPaymentFromDEUForOutgoingPaymentID(result);
        }
        
        private System.IAsyncResult OnBeginCheckIsPaymentFromDEUForOutgoingPaymentID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid OutgoingPaymentid = ((System.Guid)(inValues[0]));
            return this.BeginCheckIsPaymentFromDEUForOutgoingPaymentID(OutgoingPaymentid, callback, asyncState);
        }
        
        private object[] OnEndCheckIsPaymentFromDEUForOutgoingPaymentID(System.IAsyncResult result) {
            bool retVal = this.EndCheckIsPaymentFromDEUForOutgoingPaymentID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckIsPaymentFromDEUForOutgoingPaymentIDCompleted(object state) {
            if ((this.CheckIsPaymentFromDEUForOutgoingPaymentIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckIsPaymentFromDEUForOutgoingPaymentIDCompleted(this, new CheckIsPaymentFromDEUForOutgoingPaymentIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckIsPaymentFromDEUForOutgoingPaymentIDAsync(System.Guid OutgoingPaymentid) {
            this.CheckIsPaymentFromDEUForOutgoingPaymentIDAsync(OutgoingPaymentid, null);
        }
        
        public void CheckIsPaymentFromDEUForOutgoingPaymentIDAsync(System.Guid OutgoingPaymentid, object userState) {
            if ((this.onBeginCheckIsPaymentFromDEUForOutgoingPaymentIDDelegate == null)) {
                this.onBeginCheckIsPaymentFromDEUForOutgoingPaymentIDDelegate = new BeginOperationDelegate(this.OnBeginCheckIsPaymentFromDEUForOutgoingPaymentID);
            }
            if ((this.onEndCheckIsPaymentFromDEUForOutgoingPaymentIDDelegate == null)) {
                this.onEndCheckIsPaymentFromDEUForOutgoingPaymentIDDelegate = new EndOperationDelegate(this.OnEndCheckIsPaymentFromDEUForOutgoingPaymentID);
            }
            if ((this.onCheckIsPaymentFromDEUForOutgoingPaymentIDCompletedDelegate == null)) {
                this.onCheckIsPaymentFromDEUForOutgoingPaymentIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckIsPaymentFromDEUForOutgoingPaymentIDCompleted);
            }
            base.InvokeAsync(this.onBeginCheckIsPaymentFromDEUForOutgoingPaymentIDDelegate, new object[] {
                        OutgoingPaymentid}, this.onEndCheckIsPaymentFromDEUForOutgoingPaymentIDDelegate, this.onCheckIsPaymentFromDEUForOutgoingPaymentIDCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution GetOutgoingPaymentByID(System.Guid OutgoingPaymentid) {
            return base.Channel.GetOutgoingPaymentByID(OutgoingPaymentid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOutgoingPaymentByID(System.Guid OutgoingPaymentid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOutgoingPaymentByID(OutgoingPaymentid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution EndGetOutgoingPaymentByID(System.IAsyncResult result) {
            return base.Channel.EndGetOutgoingPaymentByID(result);
        }
        
        private System.IAsyncResult OnBeginGetOutgoingPaymentByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid OutgoingPaymentid = ((System.Guid)(inValues[0]));
            return this.BeginGetOutgoingPaymentByID(OutgoingPaymentid, callback, asyncState);
        }
        
        private object[] OnEndGetOutgoingPaymentByID(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyOutgoingDistribution retVal = this.EndGetOutgoingPaymentByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOutgoingPaymentByIDCompleted(object state) {
            if ((this.GetOutgoingPaymentByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOutgoingPaymentByIDCompleted(this, new GetOutgoingPaymentByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOutgoingPaymentByIDAsync(System.Guid OutgoingPaymentid) {
            this.GetOutgoingPaymentByIDAsync(OutgoingPaymentid, null);
        }
        
        public void GetOutgoingPaymentByIDAsync(System.Guid OutgoingPaymentid, object userState) {
            if ((this.onBeginGetOutgoingPaymentByIDDelegate == null)) {
                this.onBeginGetOutgoingPaymentByIDDelegate = new BeginOperationDelegate(this.OnBeginGetOutgoingPaymentByID);
            }
            if ((this.onEndGetOutgoingPaymentByIDDelegate == null)) {
                this.onEndGetOutgoingPaymentByIDDelegate = new EndOperationDelegate(this.OnEndGetOutgoingPaymentByID);
            }
            if ((this.onGetOutgoingPaymentByIDCompletedDelegate == null)) {
                this.onGetOutgoingPaymentByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOutgoingPaymentByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetOutgoingPaymentByIDDelegate, new object[] {
                        OutgoingPaymentid}, this.onEndGetOutgoingPaymentByIDDelegate, this.onGetOutgoingPaymentByIDCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ILinkPaymentPolicies")]
    public interface ILinkPaymentPolicies {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILinkPaymentPolicies/GetPendingPoliciesForLinkedPolicy", ReplyAction="http://tempuri.org/ILinkPaymentPolicies/GetPendingPoliciesForLinkedPolicyResponse" +
            "")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies> GetPendingPoliciesForLinkedPolicy(System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILinkPaymentPolicies/GetPendingPoliciesForLinkedPolicy", ReplyAction="http://tempuri.org/ILinkPaymentPolicies/GetPendingPoliciesForLinkedPolicyResponse" +
            "")]
        System.IAsyncResult BeginGetPendingPoliciesForLinkedPolicy(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies> EndGetPendingPoliciesForLinkedPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILinkPaymentPolicies/GetAllPoliciesForLinkedPolicy", ReplyAction="http://tempuri.org/ILinkPaymentPolicies/GetAllPoliciesForLinkedPolicyResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies> GetAllPoliciesForLinkedPolicy(System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILinkPaymentPolicies/GetAllPoliciesForLinkedPolicy", ReplyAction="http://tempuri.org/ILinkPaymentPolicies/GetAllPoliciesForLinkedPolicyResponse")]
        System.IAsyncResult BeginGetAllPoliciesForLinkedPolicy(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies> EndGetAllPoliciesForLinkedPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILinkPaymentPolicies/AddUpdateLinkPayment", ReplyAction="http://tempuri.org/ILinkPaymentPolicies/AddUpdateLinkPaymentResponse")]
        void AddUpdateLinkPayment(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies _LinkPaymentPolicies);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILinkPaymentPolicies/AddUpdateLinkPayment", ReplyAction="http://tempuri.org/ILinkPaymentPolicies/AddUpdateLinkPaymentResponse")]
        System.IAsyncResult BeginAddUpdateLinkPayment(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies _LinkPaymentPolicies, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateLinkPayment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILinkPaymentPolicies/DoLinkPolicy", ReplyAction="http://tempuri.org/ILinkPaymentPolicies/DoLinkPolicyResponse")]
        void DoLinkPolicy(System.Guid LicenseeId, bool IsReverse, bool IsLinkWithExistingPolicy, System.Guid PendingPolicyId, System.Guid ClientId, System.Guid activePolicyId, System.Guid PolicyPaymentEntryId, System.Guid CurrentUser, System.Guid PendingPayorId, System.Guid ActivePayorId, bool IsAgencyVersion, bool IsPaidMarked, bool IsScheduleMatches, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILinkPaymentPolicies/DoLinkPolicy", ReplyAction="http://tempuri.org/ILinkPaymentPolicies/DoLinkPolicyResponse")]
        System.IAsyncResult BeginDoLinkPolicy(
                    System.Guid LicenseeId, 
                    bool IsReverse, 
                    bool IsLinkWithExistingPolicy, 
                    System.Guid PendingPolicyId, 
                    System.Guid ClientId, 
                    System.Guid activePolicyId, 
                    System.Guid PolicyPaymentEntryId, 
                    System.Guid CurrentUser, 
                    System.Guid PendingPayorId, 
                    System.Guid ActivePayorId, 
                    bool IsAgencyVersion, 
                    bool IsPaidMarked, 
                    bool IsScheduleMatches, 
                    MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        void EndDoLinkPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILinkPaymentPolicies/MakePolicyActive", ReplyAction="http://tempuri.org/ILinkPaymentPolicies/MakePolicyActiveResponse")]
        void MakePolicyActive(System.Guid PolicyId, System.Guid ClientId, System.Nullable<System.Guid> CurrentUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILinkPaymentPolicies/MakePolicyActive", ReplyAction="http://tempuri.org/ILinkPaymentPolicies/MakePolicyActiveResponse")]
        System.IAsyncResult BeginMakePolicyActive(System.Guid PolicyId, System.Guid ClientId, System.Nullable<System.Guid> CurrentUserID, System.AsyncCallback callback, object asyncState);
        
        void EndMakePolicyActive(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILinkPaymentPolicies/ScheduleMatches", ReplyAction="http://tempuri.org/ILinkPaymentPolicies/ScheduleMatchesResponse")]
        bool ScheduleMatches(System.Guid EntryId, System.Guid ActivePolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILinkPaymentPolicies/ScheduleMatches", ReplyAction="http://tempuri.org/ILinkPaymentPolicies/ScheduleMatchesResponse")]
        System.IAsyncResult BeginScheduleMatches(System.Guid EntryId, System.Guid ActivePolicyId, System.AsyncCallback callback, object asyncState);
        
        bool EndScheduleMatches(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILinkPaymentPoliciesChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ILinkPaymentPolicies, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPendingPoliciesForLinkedPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPendingPoliciesForLinkedPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPoliciesForLinkedPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPoliciesForLinkedPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScheduleMatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ScheduleMatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LinkPaymentPoliciesClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ILinkPaymentPolicies>, MyAgencyVault.VM.MyAgencyVaultSvc.ILinkPaymentPolicies {
        
        private BeginOperationDelegate onBeginGetPendingPoliciesForLinkedPolicyDelegate;
        
        private EndOperationDelegate onEndGetPendingPoliciesForLinkedPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onGetPendingPoliciesForLinkedPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPoliciesForLinkedPolicyDelegate;
        
        private EndOperationDelegate onEndGetAllPoliciesForLinkedPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPoliciesForLinkedPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateLinkPaymentDelegate;
        
        private EndOperationDelegate onEndAddUpdateLinkPaymentDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateLinkPaymentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoLinkPolicyDelegate;
        
        private EndOperationDelegate onEndDoLinkPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onDoLinkPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginMakePolicyActiveDelegate;
        
        private EndOperationDelegate onEndMakePolicyActiveDelegate;
        
        private System.Threading.SendOrPostCallback onMakePolicyActiveCompletedDelegate;
        
        private BeginOperationDelegate onBeginScheduleMatchesDelegate;
        
        private EndOperationDelegate onEndScheduleMatchesDelegate;
        
        private System.Threading.SendOrPostCallback onScheduleMatchesCompletedDelegate;
        
        public LinkPaymentPoliciesClient() {
        }
        
        public LinkPaymentPoliciesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LinkPaymentPoliciesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LinkPaymentPoliciesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LinkPaymentPoliciesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetPendingPoliciesForLinkedPolicyCompletedEventArgs> GetPendingPoliciesForLinkedPolicyCompleted;
        
        public event System.EventHandler<GetAllPoliciesForLinkedPolicyCompletedEventArgs> GetAllPoliciesForLinkedPolicyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateLinkPaymentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoLinkPolicyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MakePolicyActiveCompleted;
        
        public event System.EventHandler<ScheduleMatchesCompletedEventArgs> ScheduleMatchesCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies> GetPendingPoliciesForLinkedPolicy(System.Guid LicenseeId) {
            return base.Channel.GetPendingPoliciesForLinkedPolicy(LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPendingPoliciesForLinkedPolicy(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPendingPoliciesForLinkedPolicy(LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies> EndGetPendingPoliciesForLinkedPolicy(System.IAsyncResult result) {
            return base.Channel.EndGetPendingPoliciesForLinkedPolicy(result);
        }
        
        private System.IAsyncResult OnBeginGetPendingPoliciesForLinkedPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            return this.BeginGetPendingPoliciesForLinkedPolicy(LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndGetPendingPoliciesForLinkedPolicy(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies> retVal = this.EndGetPendingPoliciesForLinkedPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPendingPoliciesForLinkedPolicyCompleted(object state) {
            if ((this.GetPendingPoliciesForLinkedPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPendingPoliciesForLinkedPolicyCompleted(this, new GetPendingPoliciesForLinkedPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPendingPoliciesForLinkedPolicyAsync(System.Guid LicenseeId) {
            this.GetPendingPoliciesForLinkedPolicyAsync(LicenseeId, null);
        }
        
        public void GetPendingPoliciesForLinkedPolicyAsync(System.Guid LicenseeId, object userState) {
            if ((this.onBeginGetPendingPoliciesForLinkedPolicyDelegate == null)) {
                this.onBeginGetPendingPoliciesForLinkedPolicyDelegate = new BeginOperationDelegate(this.OnBeginGetPendingPoliciesForLinkedPolicy);
            }
            if ((this.onEndGetPendingPoliciesForLinkedPolicyDelegate == null)) {
                this.onEndGetPendingPoliciesForLinkedPolicyDelegate = new EndOperationDelegate(this.OnEndGetPendingPoliciesForLinkedPolicy);
            }
            if ((this.onGetPendingPoliciesForLinkedPolicyCompletedDelegate == null)) {
                this.onGetPendingPoliciesForLinkedPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPendingPoliciesForLinkedPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginGetPendingPoliciesForLinkedPolicyDelegate, new object[] {
                        LicenseeId}, this.onEndGetPendingPoliciesForLinkedPolicyDelegate, this.onGetPendingPoliciesForLinkedPolicyCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies> GetAllPoliciesForLinkedPolicy(System.Guid LicenseeId) {
            return base.Channel.GetAllPoliciesForLinkedPolicy(LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPoliciesForLinkedPolicy(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPoliciesForLinkedPolicy(LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies> EndGetAllPoliciesForLinkedPolicy(System.IAsyncResult result) {
            return base.Channel.EndGetAllPoliciesForLinkedPolicy(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPoliciesForLinkedPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            return this.BeginGetAllPoliciesForLinkedPolicy(LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndGetAllPoliciesForLinkedPolicy(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies> retVal = this.EndGetAllPoliciesForLinkedPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPoliciesForLinkedPolicyCompleted(object state) {
            if ((this.GetAllPoliciesForLinkedPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPoliciesForLinkedPolicyCompleted(this, new GetAllPoliciesForLinkedPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPoliciesForLinkedPolicyAsync(System.Guid LicenseeId) {
            this.GetAllPoliciesForLinkedPolicyAsync(LicenseeId, null);
        }
        
        public void GetAllPoliciesForLinkedPolicyAsync(System.Guid LicenseeId, object userState) {
            if ((this.onBeginGetAllPoliciesForLinkedPolicyDelegate == null)) {
                this.onBeginGetAllPoliciesForLinkedPolicyDelegate = new BeginOperationDelegate(this.OnBeginGetAllPoliciesForLinkedPolicy);
            }
            if ((this.onEndGetAllPoliciesForLinkedPolicyDelegate == null)) {
                this.onEndGetAllPoliciesForLinkedPolicyDelegate = new EndOperationDelegate(this.OnEndGetAllPoliciesForLinkedPolicy);
            }
            if ((this.onGetAllPoliciesForLinkedPolicyCompletedDelegate == null)) {
                this.onGetAllPoliciesForLinkedPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPoliciesForLinkedPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPoliciesForLinkedPolicyDelegate, new object[] {
                        LicenseeId}, this.onEndGetAllPoliciesForLinkedPolicyDelegate, this.onGetAllPoliciesForLinkedPolicyCompletedDelegate, userState);
        }
        
        public void AddUpdateLinkPayment(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies _LinkPaymentPolicies) {
            base.Channel.AddUpdateLinkPayment(_LinkPaymentPolicies);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateLinkPayment(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies _LinkPaymentPolicies, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateLinkPayment(_LinkPaymentPolicies, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateLinkPayment(System.IAsyncResult result) {
            base.Channel.EndAddUpdateLinkPayment(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateLinkPayment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies _LinkPaymentPolicies = ((MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies)(inValues[0]));
            return this.BeginAddUpdateLinkPayment(_LinkPaymentPolicies, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateLinkPayment(System.IAsyncResult result) {
            this.EndAddUpdateLinkPayment(result);
            return null;
        }
        
        private void OnAddUpdateLinkPaymentCompleted(object state) {
            if ((this.AddUpdateLinkPaymentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateLinkPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateLinkPaymentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies _LinkPaymentPolicies) {
            this.AddUpdateLinkPaymentAsync(_LinkPaymentPolicies, null);
        }
        
        public void AddUpdateLinkPaymentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LinkPaymentPolicies _LinkPaymentPolicies, object userState) {
            if ((this.onBeginAddUpdateLinkPaymentDelegate == null)) {
                this.onBeginAddUpdateLinkPaymentDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateLinkPayment);
            }
            if ((this.onEndAddUpdateLinkPaymentDelegate == null)) {
                this.onEndAddUpdateLinkPaymentDelegate = new EndOperationDelegate(this.OnEndAddUpdateLinkPayment);
            }
            if ((this.onAddUpdateLinkPaymentCompletedDelegate == null)) {
                this.onAddUpdateLinkPaymentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateLinkPaymentCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateLinkPaymentDelegate, new object[] {
                        _LinkPaymentPolicies}, this.onEndAddUpdateLinkPaymentDelegate, this.onAddUpdateLinkPaymentCompletedDelegate, userState);
        }
        
        public void DoLinkPolicy(System.Guid LicenseeId, bool IsReverse, bool IsLinkWithExistingPolicy, System.Guid PendingPolicyId, System.Guid ClientId, System.Guid activePolicyId, System.Guid PolicyPaymentEntryId, System.Guid CurrentUser, System.Guid PendingPayorId, System.Guid ActivePayorId, bool IsAgencyVersion, bool IsPaidMarked, bool IsScheduleMatches, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            base.Channel.DoLinkPolicy(LicenseeId, IsReverse, IsLinkWithExistingPolicy, PendingPolicyId, ClientId, activePolicyId, PolicyPaymentEntryId, CurrentUser, PendingPayorId, ActivePayorId, IsAgencyVersion, IsPaidMarked, IsScheduleMatches, _UserRole);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoLinkPolicy(
                    System.Guid LicenseeId, 
                    bool IsReverse, 
                    bool IsLinkWithExistingPolicy, 
                    System.Guid PendingPolicyId, 
                    System.Guid ClientId, 
                    System.Guid activePolicyId, 
                    System.Guid PolicyPaymentEntryId, 
                    System.Guid CurrentUser, 
                    System.Guid PendingPayorId, 
                    System.Guid ActivePayorId, 
                    bool IsAgencyVersion, 
                    bool IsPaidMarked, 
                    bool IsScheduleMatches, 
                    MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginDoLinkPolicy(LicenseeId, IsReverse, IsLinkWithExistingPolicy, PendingPolicyId, ClientId, activePolicyId, PolicyPaymentEntryId, CurrentUser, PendingPayorId, ActivePayorId, IsAgencyVersion, IsPaidMarked, IsScheduleMatches, _UserRole, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDoLinkPolicy(System.IAsyncResult result) {
            base.Channel.EndDoLinkPolicy(result);
        }
        
        private System.IAsyncResult OnBeginDoLinkPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            bool IsReverse = ((bool)(inValues[1]));
            bool IsLinkWithExistingPolicy = ((bool)(inValues[2]));
            System.Guid PendingPolicyId = ((System.Guid)(inValues[3]));
            System.Guid ClientId = ((System.Guid)(inValues[4]));
            System.Guid activePolicyId = ((System.Guid)(inValues[5]));
            System.Guid PolicyPaymentEntryId = ((System.Guid)(inValues[6]));
            System.Guid CurrentUser = ((System.Guid)(inValues[7]));
            System.Guid PendingPayorId = ((System.Guid)(inValues[8]));
            System.Guid ActivePayorId = ((System.Guid)(inValues[9]));
            bool IsAgencyVersion = ((bool)(inValues[10]));
            bool IsPaidMarked = ((bool)(inValues[11]));
            bool IsScheduleMatches = ((bool)(inValues[12]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[13]));
            return this.BeginDoLinkPolicy(LicenseeId, IsReverse, IsLinkWithExistingPolicy, PendingPolicyId, ClientId, activePolicyId, PolicyPaymentEntryId, CurrentUser, PendingPayorId, ActivePayorId, IsAgencyVersion, IsPaidMarked, IsScheduleMatches, _UserRole, callback, asyncState);
        }
        
        private object[] OnEndDoLinkPolicy(System.IAsyncResult result) {
            this.EndDoLinkPolicy(result);
            return null;
        }
        
        private void OnDoLinkPolicyCompleted(object state) {
            if ((this.DoLinkPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoLinkPolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoLinkPolicyAsync(System.Guid LicenseeId, bool IsReverse, bool IsLinkWithExistingPolicy, System.Guid PendingPolicyId, System.Guid ClientId, System.Guid activePolicyId, System.Guid PolicyPaymentEntryId, System.Guid CurrentUser, System.Guid PendingPayorId, System.Guid ActivePayorId, bool IsAgencyVersion, bool IsPaidMarked, bool IsScheduleMatches, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole) {
            this.DoLinkPolicyAsync(LicenseeId, IsReverse, IsLinkWithExistingPolicy, PendingPolicyId, ClientId, activePolicyId, PolicyPaymentEntryId, CurrentUser, PendingPayorId, ActivePayorId, IsAgencyVersion, IsPaidMarked, IsScheduleMatches, _UserRole, null);
        }
        
        public void DoLinkPolicyAsync(System.Guid LicenseeId, bool IsReverse, bool IsLinkWithExistingPolicy, System.Guid PendingPolicyId, System.Guid ClientId, System.Guid activePolicyId, System.Guid PolicyPaymentEntryId, System.Guid CurrentUser, System.Guid PendingPayorId, System.Guid ActivePayorId, bool IsAgencyVersion, bool IsPaidMarked, bool IsScheduleMatches, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole _UserRole, object userState) {
            if ((this.onBeginDoLinkPolicyDelegate == null)) {
                this.onBeginDoLinkPolicyDelegate = new BeginOperationDelegate(this.OnBeginDoLinkPolicy);
            }
            if ((this.onEndDoLinkPolicyDelegate == null)) {
                this.onEndDoLinkPolicyDelegate = new EndOperationDelegate(this.OnEndDoLinkPolicy);
            }
            if ((this.onDoLinkPolicyCompletedDelegate == null)) {
                this.onDoLinkPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoLinkPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginDoLinkPolicyDelegate, new object[] {
                        LicenseeId,
                        IsReverse,
                        IsLinkWithExistingPolicy,
                        PendingPolicyId,
                        ClientId,
                        activePolicyId,
                        PolicyPaymentEntryId,
                        CurrentUser,
                        PendingPayorId,
                        ActivePayorId,
                        IsAgencyVersion,
                        IsPaidMarked,
                        IsScheduleMatches,
                        _UserRole}, this.onEndDoLinkPolicyDelegate, this.onDoLinkPolicyCompletedDelegate, userState);
        }
        
        public void MakePolicyActive(System.Guid PolicyId, System.Guid ClientId, System.Nullable<System.Guid> CurrentUserID) {
            base.Channel.MakePolicyActive(PolicyId, ClientId, CurrentUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMakePolicyActive(System.Guid PolicyId, System.Guid ClientId, System.Nullable<System.Guid> CurrentUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMakePolicyActive(PolicyId, ClientId, CurrentUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndMakePolicyActive(System.IAsyncResult result) {
            base.Channel.EndMakePolicyActive(result);
        }
        
        private System.IAsyncResult OnBeginMakePolicyActive(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            System.Guid ClientId = ((System.Guid)(inValues[1]));
            System.Nullable<System.Guid> CurrentUserID = ((System.Nullable<System.Guid>)(inValues[2]));
            return this.BeginMakePolicyActive(PolicyId, ClientId, CurrentUserID, callback, asyncState);
        }
        
        private object[] OnEndMakePolicyActive(System.IAsyncResult result) {
            this.EndMakePolicyActive(result);
            return null;
        }
        
        private void OnMakePolicyActiveCompleted(object state) {
            if ((this.MakePolicyActiveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MakePolicyActiveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MakePolicyActiveAsync(System.Guid PolicyId, System.Guid ClientId, System.Nullable<System.Guid> CurrentUserID) {
            this.MakePolicyActiveAsync(PolicyId, ClientId, CurrentUserID, null);
        }
        
        public void MakePolicyActiveAsync(System.Guid PolicyId, System.Guid ClientId, System.Nullable<System.Guid> CurrentUserID, object userState) {
            if ((this.onBeginMakePolicyActiveDelegate == null)) {
                this.onBeginMakePolicyActiveDelegate = new BeginOperationDelegate(this.OnBeginMakePolicyActive);
            }
            if ((this.onEndMakePolicyActiveDelegate == null)) {
                this.onEndMakePolicyActiveDelegate = new EndOperationDelegate(this.OnEndMakePolicyActive);
            }
            if ((this.onMakePolicyActiveCompletedDelegate == null)) {
                this.onMakePolicyActiveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMakePolicyActiveCompleted);
            }
            base.InvokeAsync(this.onBeginMakePolicyActiveDelegate, new object[] {
                        PolicyId,
                        ClientId,
                        CurrentUserID}, this.onEndMakePolicyActiveDelegate, this.onMakePolicyActiveCompletedDelegate, userState);
        }
        
        public bool ScheduleMatches(System.Guid EntryId, System.Guid ActivePolicyId) {
            return base.Channel.ScheduleMatches(EntryId, ActivePolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginScheduleMatches(System.Guid EntryId, System.Guid ActivePolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginScheduleMatches(EntryId, ActivePolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndScheduleMatches(System.IAsyncResult result) {
            return base.Channel.EndScheduleMatches(result);
        }
        
        private System.IAsyncResult OnBeginScheduleMatches(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid EntryId = ((System.Guid)(inValues[0]));
            System.Guid ActivePolicyId = ((System.Guid)(inValues[1]));
            return this.BeginScheduleMatches(EntryId, ActivePolicyId, callback, asyncState);
        }
        
        private object[] OnEndScheduleMatches(System.IAsyncResult result) {
            bool retVal = this.EndScheduleMatches(result);
            return new object[] {
                    retVal};
        }
        
        private void OnScheduleMatchesCompleted(object state) {
            if ((this.ScheduleMatchesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ScheduleMatchesCompleted(this, new ScheduleMatchesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ScheduleMatchesAsync(System.Guid EntryId, System.Guid ActivePolicyId) {
            this.ScheduleMatchesAsync(EntryId, ActivePolicyId, null);
        }
        
        public void ScheduleMatchesAsync(System.Guid EntryId, System.Guid ActivePolicyId, object userState) {
            if ((this.onBeginScheduleMatchesDelegate == null)) {
                this.onBeginScheduleMatchesDelegate = new BeginOperationDelegate(this.OnBeginScheduleMatches);
            }
            if ((this.onEndScheduleMatchesDelegate == null)) {
                this.onEndScheduleMatchesDelegate = new EndOperationDelegate(this.OnEndScheduleMatches);
            }
            if ((this.onScheduleMatchesCompletedDelegate == null)) {
                this.onScheduleMatchesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnScheduleMatchesCompleted);
            }
            base.InvokeAsync(this.onBeginScheduleMatchesDelegate, new object[] {
                        EntryId,
                        ActivePolicyId}, this.onEndScheduleMatchesDelegate, this.onScheduleMatchesCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ILicensee")]
    public interface ILicensee {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/AddUpdateLicensee", ReplyAction="http://tempuri.org/ILicensee/AddUpdateLicenseeResponse")]
        void AddUpdateLicensee(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/AddUpdateLicensee", ReplyAction="http://tempuri.org/ILicensee/AddUpdateLicenseeResponse")]
        System.IAsyncResult BeginAddUpdateLicensee(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateLicensee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/DeleteLicensee", ReplyAction="http://tempuri.org/ILicensee/DeleteLicenseeResponse")]
        void DeleteLicensee(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/DeleteLicensee", ReplyAction="http://tempuri.org/ILicensee/DeleteLicenseeResponse")]
        System.IAsyncResult BeginDeleteLicensee(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteLicensee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/GetLicenseeList", ReplyAction="http://tempuri.org/ILicensee/GetLicenseeListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> GetLicenseeList(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatusEnum status, System.Guid licenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/GetLicenseeList", ReplyAction="http://tempuri.org/ILicensee/GetLicenseeListResponse")]
        System.IAsyncResult BeginGetLicenseeList(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatusEnum status, System.Guid licenseeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> EndGetLicenseeList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/ExportCardPayees", ReplyAction="http://tempuri.org/ILicensee/ExportCardPayeesResponse")]
        bool ExportCardPayees();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/ExportCardPayees", ReplyAction="http://tempuri.org/ILicensee/ExportCardPayeesResponse")]
        System.IAsyncResult BeginExportCardPayees(System.AsyncCallback callback, object asyncState);
        
        bool EndExportCardPayees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/ExportCheckPayees", ReplyAction="http://tempuri.org/ILicensee/ExportCheckPayeesResponse")]
        bool ExportCheckPayees();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/ExportCheckPayees", ReplyAction="http://tempuri.org/ILicensee/ExportCheckPayeesResponse")]
        System.IAsyncResult BeginExportCheckPayees(System.AsyncCallback callback, object asyncState);
        
        bool EndExportCheckPayees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/ImportDataFromFile", ReplyAction="http://tempuri.org/ILicensee/ImportDataFromFileResponse")]
        bool ImportDataFromFile();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/ImportDataFromFile", ReplyAction="http://tempuri.org/ILicensee/ImportDataFromFileResponse")]
        System.IAsyncResult BeginImportDataFromFile(System.AsyncCallback callback, object asyncState);
        
        bool EndImportDataFromFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/GetLicenseeByID", ReplyAction="http://tempuri.org/ILicensee/GetLicenseeByIDResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData GetLicenseeByID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/GetLicenseeByID", ReplyAction="http://tempuri.org/ILicensee/GetLicenseeByIDResponse")]
        System.IAsyncResult BeginGetLicenseeByID(System.Guid id, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData EndGetLicenseeByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/getPaymentTypes", ReplyAction="http://tempuri.org/ILicensee/getPaymentTypesResponse")]
        System.Collections.ObjectModel.ObservableCollection<string> getPaymentTypes();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/getPaymentTypes", ReplyAction="http://tempuri.org/ILicensee/getPaymentTypesResponse")]
        System.IAsyncResult BegingetPaymentTypes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndgetPaymentTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/GetDisplayedLicenseeList", ReplyAction="http://tempuri.org/ILicensee/GetDisplayedLicenseeListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> GetDisplayedLicenseeList(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/GetDisplayedLicenseeList", ReplyAction="http://tempuri.org/ILicensee/GetDisplayedLicenseeListResponse")]
        System.IAsyncResult BeginGetDisplayedLicenseeList(System.Guid id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> EndGetDisplayedLicenseeList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/SetLastLoginTime", ReplyAction="http://tempuri.org/ILicensee/SetLastLoginTimeResponse")]
        void SetLastLoginTime(System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/SetLastLoginTime", ReplyAction="http://tempuri.org/ILicensee/SetLastLoginTimeResponse")]
        System.IAsyncResult BeginSetLastLoginTime(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        void EndSetLastLoginTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/SetLastUploadTime", ReplyAction="http://tempuri.org/ILicensee/SetLastUploadTimeResponse")]
        void SetLastUploadTime(System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/SetLastUploadTime", ReplyAction="http://tempuri.org/ILicensee/SetLastUploadTimeResponse")]
        System.IAsyncResult BeginSetLastUploadTime(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        void EndSetLastUploadTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/getLicenseesBalance", ReplyAction="http://tempuri.org/ILicensee/getLicenseesBalanceResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeBalance> getLicenseesBalance();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/getLicenseesBalance", ReplyAction="http://tempuri.org/ILicensee/getLicenseesBalanceResponse")]
        System.IAsyncResult BegingetLicenseesBalance(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeBalance> EndgetLicenseesBalance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensee/GetDisplayedLicenseeListPolicyManger", ReplyAction="http://tempuri.org/ILicensee/GetDisplayedLicenseeListPolicyMangerResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> GetDisplayedLicenseeListPolicyManger(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicensee/GetDisplayedLicenseeListPolicyManger", ReplyAction="http://tempuri.org/ILicensee/GetDisplayedLicenseeListPolicyMangerResponse")]
        System.IAsyncResult BeginGetDisplayedLicenseeListPolicyManger(System.Guid id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> EndGetDisplayedLicenseeListPolicyManger(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILicenseeChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ILicensee, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLicenseeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLicenseeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExportCardPayeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExportCardPayeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExportCheckPayeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExportCheckPayeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportDataFromFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ImportDataFromFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLicenseeByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLicenseeByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getPaymentTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getPaymentTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDisplayedLicenseeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDisplayedLicenseeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getLicenseesBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getLicenseesBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeBalance> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeBalance>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDisplayedLicenseeListPolicyMangerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDisplayedLicenseeListPolicyMangerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LicenseeClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ILicensee>, MyAgencyVault.VM.MyAgencyVaultSvc.ILicensee {
        
        private BeginOperationDelegate onBeginAddUpdateLicenseeDelegate;
        
        private EndOperationDelegate onEndAddUpdateLicenseeDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateLicenseeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteLicenseeDelegate;
        
        private EndOperationDelegate onEndDeleteLicenseeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteLicenseeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLicenseeListDelegate;
        
        private EndOperationDelegate onEndGetLicenseeListDelegate;
        
        private System.Threading.SendOrPostCallback onGetLicenseeListCompletedDelegate;
        
        private BeginOperationDelegate onBeginExportCardPayeesDelegate;
        
        private EndOperationDelegate onEndExportCardPayeesDelegate;
        
        private System.Threading.SendOrPostCallback onExportCardPayeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginExportCheckPayeesDelegate;
        
        private EndOperationDelegate onEndExportCheckPayeesDelegate;
        
        private System.Threading.SendOrPostCallback onExportCheckPayeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginImportDataFromFileDelegate;
        
        private EndOperationDelegate onEndImportDataFromFileDelegate;
        
        private System.Threading.SendOrPostCallback onImportDataFromFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLicenseeByIDDelegate;
        
        private EndOperationDelegate onEndGetLicenseeByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetLicenseeByIDCompletedDelegate;
        
        private BeginOperationDelegate onBegingetPaymentTypesDelegate;
        
        private EndOperationDelegate onEndgetPaymentTypesDelegate;
        
        private System.Threading.SendOrPostCallback ongetPaymentTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDisplayedLicenseeListDelegate;
        
        private EndOperationDelegate onEndGetDisplayedLicenseeListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDisplayedLicenseeListCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetLastLoginTimeDelegate;
        
        private EndOperationDelegate onEndSetLastLoginTimeDelegate;
        
        private System.Threading.SendOrPostCallback onSetLastLoginTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetLastUploadTimeDelegate;
        
        private EndOperationDelegate onEndSetLastUploadTimeDelegate;
        
        private System.Threading.SendOrPostCallback onSetLastUploadTimeCompletedDelegate;
        
        private BeginOperationDelegate onBegingetLicenseesBalanceDelegate;
        
        private EndOperationDelegate onEndgetLicenseesBalanceDelegate;
        
        private System.Threading.SendOrPostCallback ongetLicenseesBalanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDisplayedLicenseeListPolicyMangerDelegate;
        
        private EndOperationDelegate onEndGetDisplayedLicenseeListPolicyMangerDelegate;
        
        private System.Threading.SendOrPostCallback onGetDisplayedLicenseeListPolicyMangerCompletedDelegate;
        
        public LicenseeClient() {
        }
        
        public LicenseeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LicenseeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateLicenseeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteLicenseeCompleted;
        
        public event System.EventHandler<GetLicenseeListCompletedEventArgs> GetLicenseeListCompleted;
        
        public event System.EventHandler<ExportCardPayeesCompletedEventArgs> ExportCardPayeesCompleted;
        
        public event System.EventHandler<ExportCheckPayeesCompletedEventArgs> ExportCheckPayeesCompleted;
        
        public event System.EventHandler<ImportDataFromFileCompletedEventArgs> ImportDataFromFileCompleted;
        
        public event System.EventHandler<GetLicenseeByIDCompletedEventArgs> GetLicenseeByIDCompleted;
        
        public event System.EventHandler<getPaymentTypesCompletedEventArgs> getPaymentTypesCompleted;
        
        public event System.EventHandler<GetDisplayedLicenseeListCompletedEventArgs> GetDisplayedLicenseeListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetLastLoginTimeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetLastUploadTimeCompleted;
        
        public event System.EventHandler<getLicenseesBalanceCompletedEventArgs> getLicenseesBalanceCompleted;
        
        public event System.EventHandler<GetDisplayedLicenseeListPolicyMangerCompletedEventArgs> GetDisplayedLicenseeListPolicyMangerCompleted;
        
        public void AddUpdateLicensee(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License) {
            base.Channel.AddUpdateLicensee(License);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateLicensee(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateLicensee(License, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateLicensee(System.IAsyncResult result) {
            base.Channel.EndAddUpdateLicensee(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateLicensee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License = ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData)(inValues[0]));
            return this.BeginAddUpdateLicensee(License, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateLicensee(System.IAsyncResult result) {
            this.EndAddUpdateLicensee(result);
            return null;
        }
        
        private void OnAddUpdateLicenseeCompleted(object state) {
            if ((this.AddUpdateLicenseeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateLicenseeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateLicenseeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License) {
            this.AddUpdateLicenseeAsync(License, null);
        }
        
        public void AddUpdateLicenseeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License, object userState) {
            if ((this.onBeginAddUpdateLicenseeDelegate == null)) {
                this.onBeginAddUpdateLicenseeDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateLicensee);
            }
            if ((this.onEndAddUpdateLicenseeDelegate == null)) {
                this.onEndAddUpdateLicenseeDelegate = new EndOperationDelegate(this.OnEndAddUpdateLicensee);
            }
            if ((this.onAddUpdateLicenseeCompletedDelegate == null)) {
                this.onAddUpdateLicenseeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateLicenseeCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateLicenseeDelegate, new object[] {
                        License}, this.onEndAddUpdateLicenseeDelegate, this.onAddUpdateLicenseeCompletedDelegate, userState);
        }
        
        public void DeleteLicensee(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License) {
            base.Channel.DeleteLicensee(License);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteLicensee(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteLicensee(License, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteLicensee(System.IAsyncResult result) {
            base.Channel.EndDeleteLicensee(result);
        }
        
        private System.IAsyncResult OnBeginDeleteLicensee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License = ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData)(inValues[0]));
            return this.BeginDeleteLicensee(License, callback, asyncState);
        }
        
        private object[] OnEndDeleteLicensee(System.IAsyncResult result) {
            this.EndDeleteLicensee(result);
            return null;
        }
        
        private void OnDeleteLicenseeCompleted(object state) {
            if ((this.DeleteLicenseeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteLicenseeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteLicenseeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License) {
            this.DeleteLicenseeAsync(License, null);
        }
        
        public void DeleteLicenseeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData License, object userState) {
            if ((this.onBeginDeleteLicenseeDelegate == null)) {
                this.onBeginDeleteLicenseeDelegate = new BeginOperationDelegate(this.OnBeginDeleteLicensee);
            }
            if ((this.onEndDeleteLicenseeDelegate == null)) {
                this.onEndDeleteLicenseeDelegate = new EndOperationDelegate(this.OnEndDeleteLicensee);
            }
            if ((this.onDeleteLicenseeCompletedDelegate == null)) {
                this.onDeleteLicenseeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteLicenseeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteLicenseeDelegate, new object[] {
                        License}, this.onEndDeleteLicenseeDelegate, this.onDeleteLicenseeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> GetLicenseeList(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatusEnum status, System.Guid licenseeId) {
            return base.Channel.GetLicenseeList(status, licenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLicenseeList(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatusEnum status, System.Guid licenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLicenseeList(status, licenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> EndGetLicenseeList(System.IAsyncResult result) {
            return base.Channel.EndGetLicenseeList(result);
        }
        
        private System.IAsyncResult OnBeginGetLicenseeList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatusEnum status = ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatusEnum)(inValues[0]));
            System.Guid licenseeId = ((System.Guid)(inValues[1]));
            return this.BeginGetLicenseeList(status, licenseeId, callback, asyncState);
        }
        
        private object[] OnEndGetLicenseeList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> retVal = this.EndGetLicenseeList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLicenseeListCompleted(object state) {
            if ((this.GetLicenseeListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLicenseeListCompleted(this, new GetLicenseeListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLicenseeListAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatusEnum status, System.Guid licenseeId) {
            this.GetLicenseeListAsync(status, licenseeId, null);
        }
        
        public void GetLicenseeListAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeStatusEnum status, System.Guid licenseeId, object userState) {
            if ((this.onBeginGetLicenseeListDelegate == null)) {
                this.onBeginGetLicenseeListDelegate = new BeginOperationDelegate(this.OnBeginGetLicenseeList);
            }
            if ((this.onEndGetLicenseeListDelegate == null)) {
                this.onEndGetLicenseeListDelegate = new EndOperationDelegate(this.OnEndGetLicenseeList);
            }
            if ((this.onGetLicenseeListCompletedDelegate == null)) {
                this.onGetLicenseeListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLicenseeListCompleted);
            }
            base.InvokeAsync(this.onBeginGetLicenseeListDelegate, new object[] {
                        status,
                        licenseeId}, this.onEndGetLicenseeListDelegate, this.onGetLicenseeListCompletedDelegate, userState);
        }
        
        public bool ExportCardPayees() {
            return base.Channel.ExportCardPayees();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExportCardPayees(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExportCardPayees(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndExportCardPayees(System.IAsyncResult result) {
            return base.Channel.EndExportCardPayees(result);
        }
        
        private System.IAsyncResult OnBeginExportCardPayees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginExportCardPayees(callback, asyncState);
        }
        
        private object[] OnEndExportCardPayees(System.IAsyncResult result) {
            bool retVal = this.EndExportCardPayees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExportCardPayeesCompleted(object state) {
            if ((this.ExportCardPayeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExportCardPayeesCompleted(this, new ExportCardPayeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExportCardPayeesAsync() {
            this.ExportCardPayeesAsync(null);
        }
        
        public void ExportCardPayeesAsync(object userState) {
            if ((this.onBeginExportCardPayeesDelegate == null)) {
                this.onBeginExportCardPayeesDelegate = new BeginOperationDelegate(this.OnBeginExportCardPayees);
            }
            if ((this.onEndExportCardPayeesDelegate == null)) {
                this.onEndExportCardPayeesDelegate = new EndOperationDelegate(this.OnEndExportCardPayees);
            }
            if ((this.onExportCardPayeesCompletedDelegate == null)) {
                this.onExportCardPayeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExportCardPayeesCompleted);
            }
            base.InvokeAsync(this.onBeginExportCardPayeesDelegate, null, this.onEndExportCardPayeesDelegate, this.onExportCardPayeesCompletedDelegate, userState);
        }
        
        public bool ExportCheckPayees() {
            return base.Channel.ExportCheckPayees();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExportCheckPayees(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExportCheckPayees(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndExportCheckPayees(System.IAsyncResult result) {
            return base.Channel.EndExportCheckPayees(result);
        }
        
        private System.IAsyncResult OnBeginExportCheckPayees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginExportCheckPayees(callback, asyncState);
        }
        
        private object[] OnEndExportCheckPayees(System.IAsyncResult result) {
            bool retVal = this.EndExportCheckPayees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExportCheckPayeesCompleted(object state) {
            if ((this.ExportCheckPayeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExportCheckPayeesCompleted(this, new ExportCheckPayeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExportCheckPayeesAsync() {
            this.ExportCheckPayeesAsync(null);
        }
        
        public void ExportCheckPayeesAsync(object userState) {
            if ((this.onBeginExportCheckPayeesDelegate == null)) {
                this.onBeginExportCheckPayeesDelegate = new BeginOperationDelegate(this.OnBeginExportCheckPayees);
            }
            if ((this.onEndExportCheckPayeesDelegate == null)) {
                this.onEndExportCheckPayeesDelegate = new EndOperationDelegate(this.OnEndExportCheckPayees);
            }
            if ((this.onExportCheckPayeesCompletedDelegate == null)) {
                this.onExportCheckPayeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExportCheckPayeesCompleted);
            }
            base.InvokeAsync(this.onBeginExportCheckPayeesDelegate, null, this.onEndExportCheckPayeesDelegate, this.onExportCheckPayeesCompletedDelegate, userState);
        }
        
        public bool ImportDataFromFile() {
            return base.Channel.ImportDataFromFile();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginImportDataFromFile(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImportDataFromFile(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndImportDataFromFile(System.IAsyncResult result) {
            return base.Channel.EndImportDataFromFile(result);
        }
        
        private System.IAsyncResult OnBeginImportDataFromFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginImportDataFromFile(callback, asyncState);
        }
        
        private object[] OnEndImportDataFromFile(System.IAsyncResult result) {
            bool retVal = this.EndImportDataFromFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnImportDataFromFileCompleted(object state) {
            if ((this.ImportDataFromFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImportDataFromFileCompleted(this, new ImportDataFromFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImportDataFromFileAsync() {
            this.ImportDataFromFileAsync(null);
        }
        
        public void ImportDataFromFileAsync(object userState) {
            if ((this.onBeginImportDataFromFileDelegate == null)) {
                this.onBeginImportDataFromFileDelegate = new BeginOperationDelegate(this.OnBeginImportDataFromFile);
            }
            if ((this.onEndImportDataFromFileDelegate == null)) {
                this.onEndImportDataFromFileDelegate = new EndOperationDelegate(this.OnEndImportDataFromFile);
            }
            if ((this.onImportDataFromFileCompletedDelegate == null)) {
                this.onImportDataFromFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImportDataFromFileCompleted);
            }
            base.InvokeAsync(this.onBeginImportDataFromFileDelegate, null, this.onEndImportDataFromFileDelegate, this.onImportDataFromFileCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData GetLicenseeByID(System.Guid id) {
            return base.Channel.GetLicenseeByID(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLicenseeByID(System.Guid id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLicenseeByID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData EndGetLicenseeByID(System.IAsyncResult result) {
            return base.Channel.EndGetLicenseeByID(result);
        }
        
        private System.IAsyncResult OnBeginGetLicenseeByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid id = ((System.Guid)(inValues[0]));
            return this.BeginGetLicenseeByID(id, callback, asyncState);
        }
        
        private object[] OnEndGetLicenseeByID(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData retVal = this.EndGetLicenseeByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLicenseeByIDCompleted(object state) {
            if ((this.GetLicenseeByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLicenseeByIDCompleted(this, new GetLicenseeByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLicenseeByIDAsync(System.Guid id) {
            this.GetLicenseeByIDAsync(id, null);
        }
        
        public void GetLicenseeByIDAsync(System.Guid id, object userState) {
            if ((this.onBeginGetLicenseeByIDDelegate == null)) {
                this.onBeginGetLicenseeByIDDelegate = new BeginOperationDelegate(this.OnBeginGetLicenseeByID);
            }
            if ((this.onEndGetLicenseeByIDDelegate == null)) {
                this.onEndGetLicenseeByIDDelegate = new EndOperationDelegate(this.OnEndGetLicenseeByID);
            }
            if ((this.onGetLicenseeByIDCompletedDelegate == null)) {
                this.onGetLicenseeByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLicenseeByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetLicenseeByIDDelegate, new object[] {
                        id}, this.onEndGetLicenseeByIDDelegate, this.onGetLicenseeByIDCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> getPaymentTypes() {
            return base.Channel.getPaymentTypes();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetPaymentTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetPaymentTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<string> EndgetPaymentTypes(System.IAsyncResult result) {
            return base.Channel.EndgetPaymentTypes(result);
        }
        
        private System.IAsyncResult OnBegingetPaymentTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetPaymentTypes(callback, asyncState);
        }
        
        private object[] OnEndgetPaymentTypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = this.EndgetPaymentTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetPaymentTypesCompleted(object state) {
            if ((this.getPaymentTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getPaymentTypesCompleted(this, new getPaymentTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getPaymentTypesAsync() {
            this.getPaymentTypesAsync(null);
        }
        
        public void getPaymentTypesAsync(object userState) {
            if ((this.onBegingetPaymentTypesDelegate == null)) {
                this.onBegingetPaymentTypesDelegate = new BeginOperationDelegate(this.OnBegingetPaymentTypes);
            }
            if ((this.onEndgetPaymentTypesDelegate == null)) {
                this.onEndgetPaymentTypesDelegate = new EndOperationDelegate(this.OnEndgetPaymentTypes);
            }
            if ((this.ongetPaymentTypesCompletedDelegate == null)) {
                this.ongetPaymentTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetPaymentTypesCompleted);
            }
            base.InvokeAsync(this.onBegingetPaymentTypesDelegate, null, this.onEndgetPaymentTypesDelegate, this.ongetPaymentTypesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> GetDisplayedLicenseeList(System.Guid id) {
            return base.Channel.GetDisplayedLicenseeList(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDisplayedLicenseeList(System.Guid id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDisplayedLicenseeList(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> EndGetDisplayedLicenseeList(System.IAsyncResult result) {
            return base.Channel.EndGetDisplayedLicenseeList(result);
        }
        
        private System.IAsyncResult OnBeginGetDisplayedLicenseeList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid id = ((System.Guid)(inValues[0]));
            return this.BeginGetDisplayedLicenseeList(id, callback, asyncState);
        }
        
        private object[] OnEndGetDisplayedLicenseeList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> retVal = this.EndGetDisplayedLicenseeList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDisplayedLicenseeListCompleted(object state) {
            if ((this.GetDisplayedLicenseeListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDisplayedLicenseeListCompleted(this, new GetDisplayedLicenseeListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDisplayedLicenseeListAsync(System.Guid id) {
            this.GetDisplayedLicenseeListAsync(id, null);
        }
        
        public void GetDisplayedLicenseeListAsync(System.Guid id, object userState) {
            if ((this.onBeginGetDisplayedLicenseeListDelegate == null)) {
                this.onBeginGetDisplayedLicenseeListDelegate = new BeginOperationDelegate(this.OnBeginGetDisplayedLicenseeList);
            }
            if ((this.onEndGetDisplayedLicenseeListDelegate == null)) {
                this.onEndGetDisplayedLicenseeListDelegate = new EndOperationDelegate(this.OnEndGetDisplayedLicenseeList);
            }
            if ((this.onGetDisplayedLicenseeListCompletedDelegate == null)) {
                this.onGetDisplayedLicenseeListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDisplayedLicenseeListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDisplayedLicenseeListDelegate, new object[] {
                        id}, this.onEndGetDisplayedLicenseeListDelegate, this.onGetDisplayedLicenseeListCompletedDelegate, userState);
        }
        
        public void SetLastLoginTime(System.Guid LicenseeId) {
            base.Channel.SetLastLoginTime(LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetLastLoginTime(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetLastLoginTime(LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetLastLoginTime(System.IAsyncResult result) {
            base.Channel.EndSetLastLoginTime(result);
        }
        
        private System.IAsyncResult OnBeginSetLastLoginTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            return this.BeginSetLastLoginTime(LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndSetLastLoginTime(System.IAsyncResult result) {
            this.EndSetLastLoginTime(result);
            return null;
        }
        
        private void OnSetLastLoginTimeCompleted(object state) {
            if ((this.SetLastLoginTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetLastLoginTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetLastLoginTimeAsync(System.Guid LicenseeId) {
            this.SetLastLoginTimeAsync(LicenseeId, null);
        }
        
        public void SetLastLoginTimeAsync(System.Guid LicenseeId, object userState) {
            if ((this.onBeginSetLastLoginTimeDelegate == null)) {
                this.onBeginSetLastLoginTimeDelegate = new BeginOperationDelegate(this.OnBeginSetLastLoginTime);
            }
            if ((this.onEndSetLastLoginTimeDelegate == null)) {
                this.onEndSetLastLoginTimeDelegate = new EndOperationDelegate(this.OnEndSetLastLoginTime);
            }
            if ((this.onSetLastLoginTimeCompletedDelegate == null)) {
                this.onSetLastLoginTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetLastLoginTimeCompleted);
            }
            base.InvokeAsync(this.onBeginSetLastLoginTimeDelegate, new object[] {
                        LicenseeId}, this.onEndSetLastLoginTimeDelegate, this.onSetLastLoginTimeCompletedDelegate, userState);
        }
        
        public void SetLastUploadTime(System.Guid LicenseeId) {
            base.Channel.SetLastUploadTime(LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetLastUploadTime(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetLastUploadTime(LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetLastUploadTime(System.IAsyncResult result) {
            base.Channel.EndSetLastUploadTime(result);
        }
        
        private System.IAsyncResult OnBeginSetLastUploadTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            return this.BeginSetLastUploadTime(LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndSetLastUploadTime(System.IAsyncResult result) {
            this.EndSetLastUploadTime(result);
            return null;
        }
        
        private void OnSetLastUploadTimeCompleted(object state) {
            if ((this.SetLastUploadTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetLastUploadTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetLastUploadTimeAsync(System.Guid LicenseeId) {
            this.SetLastUploadTimeAsync(LicenseeId, null);
        }
        
        public void SetLastUploadTimeAsync(System.Guid LicenseeId, object userState) {
            if ((this.onBeginSetLastUploadTimeDelegate == null)) {
                this.onBeginSetLastUploadTimeDelegate = new BeginOperationDelegate(this.OnBeginSetLastUploadTime);
            }
            if ((this.onEndSetLastUploadTimeDelegate == null)) {
                this.onEndSetLastUploadTimeDelegate = new EndOperationDelegate(this.OnEndSetLastUploadTime);
            }
            if ((this.onSetLastUploadTimeCompletedDelegate == null)) {
                this.onSetLastUploadTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetLastUploadTimeCompleted);
            }
            base.InvokeAsync(this.onBeginSetLastUploadTimeDelegate, new object[] {
                        LicenseeId}, this.onEndSetLastUploadTimeDelegate, this.onSetLastUploadTimeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeBalance> getLicenseesBalance() {
            return base.Channel.getLicenseesBalance();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetLicenseesBalance(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetLicenseesBalance(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeBalance> EndgetLicenseesBalance(System.IAsyncResult result) {
            return base.Channel.EndgetLicenseesBalance(result);
        }
        
        private System.IAsyncResult OnBegingetLicenseesBalance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetLicenseesBalance(callback, asyncState);
        }
        
        private object[] OnEndgetLicenseesBalance(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeBalance> retVal = this.EndgetLicenseesBalance(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetLicenseesBalanceCompleted(object state) {
            if ((this.getLicenseesBalanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getLicenseesBalanceCompleted(this, new getLicenseesBalanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getLicenseesBalanceAsync() {
            this.getLicenseesBalanceAsync(null);
        }
        
        public void getLicenseesBalanceAsync(object userState) {
            if ((this.onBegingetLicenseesBalanceDelegate == null)) {
                this.onBegingetLicenseesBalanceDelegate = new BeginOperationDelegate(this.OnBegingetLicenseesBalance);
            }
            if ((this.onEndgetLicenseesBalanceDelegate == null)) {
                this.onEndgetLicenseesBalanceDelegate = new EndOperationDelegate(this.OnEndgetLicenseesBalance);
            }
            if ((this.ongetLicenseesBalanceCompletedDelegate == null)) {
                this.ongetLicenseesBalanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetLicenseesBalanceCompleted);
            }
            base.InvokeAsync(this.onBegingetLicenseesBalanceDelegate, null, this.onEndgetLicenseesBalanceDelegate, this.ongetLicenseesBalanceCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> GetDisplayedLicenseeListPolicyManger(System.Guid id) {
            return base.Channel.GetDisplayedLicenseeListPolicyManger(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDisplayedLicenseeListPolicyManger(System.Guid id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDisplayedLicenseeListPolicyManger(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> EndGetDisplayedLicenseeListPolicyManger(System.IAsyncResult result) {
            return base.Channel.EndGetDisplayedLicenseeListPolicyManger(result);
        }
        
        private System.IAsyncResult OnBeginGetDisplayedLicenseeListPolicyManger(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid id = ((System.Guid)(inValues[0]));
            return this.BeginGetDisplayedLicenseeListPolicyManger(id, callback, asyncState);
        }
        
        private object[] OnEndGetDisplayedLicenseeListPolicyManger(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeDisplayData> retVal = this.EndGetDisplayedLicenseeListPolicyManger(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDisplayedLicenseeListPolicyMangerCompleted(object state) {
            if ((this.GetDisplayedLicenseeListPolicyMangerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDisplayedLicenseeListPolicyMangerCompleted(this, new GetDisplayedLicenseeListPolicyMangerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDisplayedLicenseeListPolicyMangerAsync(System.Guid id) {
            this.GetDisplayedLicenseeListPolicyMangerAsync(id, null);
        }
        
        public void GetDisplayedLicenseeListPolicyMangerAsync(System.Guid id, object userState) {
            if ((this.onBeginGetDisplayedLicenseeListPolicyMangerDelegate == null)) {
                this.onBeginGetDisplayedLicenseeListPolicyMangerDelegate = new BeginOperationDelegate(this.OnBeginGetDisplayedLicenseeListPolicyManger);
            }
            if ((this.onEndGetDisplayedLicenseeListPolicyMangerDelegate == null)) {
                this.onEndGetDisplayedLicenseeListPolicyMangerDelegate = new EndOperationDelegate(this.OnEndGetDisplayedLicenseeListPolicyManger);
            }
            if ((this.onGetDisplayedLicenseeListPolicyMangerCompletedDelegate == null)) {
                this.onGetDisplayedLicenseeListPolicyMangerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDisplayedLicenseeListPolicyMangerCompleted);
            }
            base.InvokeAsync(this.onBeginGetDisplayedLicenseeListPolicyMangerDelegate, new object[] {
                        id}, this.onEndGetDisplayedLicenseeListPolicyMangerDelegate, this.onGetDisplayedLicenseeListPolicyMangerCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IFormula")]
    public interface IFormula {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormula/GetFormula", ReplyAction="http://tempuri.org/IFormula/GetFormulaResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Formula GetFormula();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFormula/GetFormula", ReplyAction="http://tempuri.org/IFormula/GetFormulaResponse")]
        System.IAsyncResult BeginGetFormula(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Formula EndGetFormula(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFormulaChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IFormula, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFormulaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFormulaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Formula Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Formula)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormulaClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IFormula>, MyAgencyVault.VM.MyAgencyVaultSvc.IFormula {
        
        private BeginOperationDelegate onBeginGetFormulaDelegate;
        
        private EndOperationDelegate onEndGetFormulaDelegate;
        
        private System.Threading.SendOrPostCallback onGetFormulaCompletedDelegate;
        
        public FormulaClient() {
        }
        
        public FormulaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FormulaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FormulaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FormulaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetFormulaCompletedEventArgs> GetFormulaCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Formula GetFormula() {
            return base.Channel.GetFormula();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFormula(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFormula(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Formula EndGetFormula(System.IAsyncResult result) {
            return base.Channel.EndGetFormula(result);
        }
        
        private System.IAsyncResult OnBeginGetFormula(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetFormula(callback, asyncState);
        }
        
        private object[] OnEndGetFormula(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Formula retVal = this.EndGetFormula(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFormulaCompleted(object state) {
            if ((this.GetFormulaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFormulaCompleted(this, new GetFormulaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFormulaAsync() {
            this.GetFormulaAsync(null);
        }
        
        public void GetFormulaAsync(object userState) {
            if ((this.onBeginGetFormulaDelegate == null)) {
                this.onBeginGetFormulaDelegate = new BeginOperationDelegate(this.OnBeginGetFormula);
            }
            if ((this.onEndGetFormulaDelegate == null)) {
                this.onEndGetFormulaDelegate = new EndOperationDelegate(this.OnEndGetFormula);
            }
            if ((this.onGetFormulaCompletedDelegate == null)) {
                this.onGetFormulaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFormulaCompleted);
            }
            base.InvokeAsync(this.onBeginGetFormulaDelegate, null, this.onEndGetFormulaDelegate, this.onGetFormulaCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IFollowupIssue")]
    public interface IFollowupIssue {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/test", ReplyAction="http://tempuri.org/IFollowupIssue/testResponse")]
        void test();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/test", ReplyAction="http://tempuri.org/IFollowupIssue/testResponse")]
        System.IAsyncResult Begintest(System.AsyncCallback callback, object asyncState);
        
        void Endtest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/GetIssues", ReplyAction="http://tempuri.org/IFollowupIssue/GetIssuesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> GetIssues(System.Guid policyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/GetIssues", ReplyAction="http://tempuri.org/IFollowupIssue/GetIssuesResponse")]
        System.IAsyncResult BeginGetIssues(System.Guid policyID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> EndGetIssues(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/GetAllIssues", ReplyAction="http://tempuri.org/IFollowupIssue/GetAllIssuesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> GetAllIssues(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/GetAllIssues", ReplyAction="http://tempuri.org/IFollowupIssue/GetAllIssuesResponse")]
        System.IAsyncResult BeginGetAllIssues(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> EndGetAllIssues(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/GetIssueDetail", ReplyAction="http://tempuri.org/IFollowupIssue/GetIssueDetailResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssuePolicyDetail> GetIssueDetail(System.Guid PolicyId, System.Guid FollowUpIssueid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/GetIssueDetail", ReplyAction="http://tempuri.org/IFollowupIssue/GetIssueDetailResponse")]
        System.IAsyncResult BeginGetIssueDetail(System.Guid PolicyId, System.Guid FollowUpIssueid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssuePolicyDetail> EndGetIssueDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/GetIncomingPayment", ReplyAction="http://tempuri.org/IFollowupIssue/GetIncomingPaymentResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowupIncomingPament> GetIncomingPayment(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/GetIncomingPayment", ReplyAction="http://tempuri.org/IFollowupIssue/GetIncomingPaymentResponse")]
        System.IAsyncResult BeginGetIncomingPayment(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowupIncomingPament> EndGetIncomingPayment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/GetIssuesNote", ReplyAction="http://tempuri.org/IFollowupIssue/GetIssuesNoteResponse")]
        string GetIssuesNote(System.Guid IssueID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/GetIssuesNote", ReplyAction="http://tempuri.org/IFollowupIssue/GetIssuesNoteResponse")]
        System.IAsyncResult BeginGetIssuesNote(System.Guid IssueID, System.AsyncCallback callback, object asyncState);
        
        string EndGetIssuesNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/GetPayorContact", ReplyAction="http://tempuri.org/IFollowupIssue/GetPayorContactResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowUPPayorContacts> GetPayorContact(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/GetPayorContact", ReplyAction="http://tempuri.org/IFollowupIssue/GetPayorContactResponse")]
        System.IAsyncResult BeginGetPayorContact(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowUPPayorContacts> EndGetPayorContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/AddUpdatePolicyIssueNotes", ReplyAction="http://tempuri.org/IFollowupIssue/AddUpdatePolicyIssueNotesResponse")]
        void AddUpdatePolicyIssueNotes(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/AddUpdatePolicyIssueNotes", ReplyAction="http://tempuri.org/IFollowupIssue/AddUpdatePolicyIssueNotesResponse")]
        System.IAsyncResult BeginAddUpdatePolicyIssueNotes(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePolicyIssueNotes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/AddUpdatePolicyIssueNotesScr", ReplyAction="http://tempuri.org/IFollowupIssue/AddUpdatePolicyIssueNotesScrResponse")]
        void AddUpdatePolicyIssueNotesScr(System.Guid ModifiedBy, System.Guid IssueId, string PolicyIssueNote);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/AddUpdatePolicyIssueNotesScr", ReplyAction="http://tempuri.org/IFollowupIssue/AddUpdatePolicyIssueNotesScrResponse")]
        System.IAsyncResult BeginAddUpdatePolicyIssueNotesScr(System.Guid ModifiedBy, System.Guid IssueId, string PolicyIssueNote, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePolicyIssueNotesScr(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/AddUpdatePolicyIssuePayment", ReplyAction="http://tempuri.org/IFollowupIssue/AddUpdatePolicyIssuePaymentResponse")]
        void AddUpdatePolicyIssuePayment(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/AddUpdatePolicyIssuePayment", ReplyAction="http://tempuri.org/IFollowupIssue/AddUpdatePolicyIssuePaymentResponse")]
        System.IAsyncResult BeginAddUpdatePolicyIssuePayment(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePolicyIssuePayment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/AddUpdateIssue", ReplyAction="http://tempuri.org/IFollowupIssue/AddUpdateIssueResponse")]
        void AddUpdateIssue(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/AddUpdateIssue", ReplyAction="http://tempuri.org/IFollowupIssue/AddUpdateIssueResponse")]
        System.IAsyncResult BeginAddUpdateIssue(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateIssue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/CheckrefershButton", ReplyAction="http://tempuri.org/IFollowupIssue/CheckrefershButtonResponse")]
        string CheckrefershButton(System.Guid policyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/CheckrefershButton", ReplyAction="http://tempuri.org/IFollowupIssue/CheckrefershButtonResponse")]
        System.IAsyncResult BeginCheckrefershButton(System.Guid policyId, System.AsyncCallback callback, object asyncState);
        
        string EndCheckrefershButton(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/AddPaymentData", ReplyAction="http://tempuri.org/IFollowupIssue/AddPaymentDataResponse")]
        void AddPaymentData(System.Guid IssueId, decimal Payment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/AddPaymentData", ReplyAction="http://tempuri.org/IFollowupIssue/AddPaymentDataResponse")]
        System.IAsyncResult BeginAddPaymentData(System.Guid IssueId, decimal Payment, System.AsyncCallback callback, object asyncState);
        
        void EndAddPaymentData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/EmailToAgencyPayor", ReplyAction="http://tempuri.org/IFollowupIssue/EmailToAgencyPayorResponse")]
        void EmailToAgencyPayor(MyAgencyVault.EmailFax.MailData _MailData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/EmailToAgencyPayor", ReplyAction="http://tempuri.org/IFollowupIssue/EmailToAgencyPayorResponse")]
        System.IAsyncResult BeginEmailToAgencyPayor(MyAgencyVault.EmailFax.MailData _MailData, System.AsyncCallback callback, object asyncState);
        
        void EndEmailToAgencyPayor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/SendCloseStatemant", ReplyAction="http://tempuri.org/IFollowupIssue/SendCloseStatemantResponse")]
        void SendCloseStatemant(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/SendCloseStatemant", ReplyAction="http://tempuri.org/IFollowupIssue/SendCloseStatemantResponse")]
        System.IAsyncResult BeginSendCloseStatemant(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, System.AsyncCallback callback, object asyncState);
        
        void EndSendCloseStatemant(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/SendMailToCloseBatch", ReplyAction="http://tempuri.org/IFollowupIssue/SendMailToCloseBatchResponse")]
        void SendMailToCloseBatch(MyAgencyVault.EmailFax.MailData _MailData, string strBatchNumber, string strMailBody);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/SendMailToCloseBatch", ReplyAction="http://tempuri.org/IFollowupIssue/SendMailToCloseBatchResponse")]
        System.IAsyncResult BeginSendMailToCloseBatch(MyAgencyVault.EmailFax.MailData _MailData, string strBatchNumber, string strMailBody, System.AsyncCallback callback, object asyncState);
        
        void EndSendMailToCloseBatch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/SendMailOfCarrierProduct", ReplyAction="http://tempuri.org/IFollowupIssue/SendMailOfCarrierProductResponse")]
        void SendMailOfCarrierProduct(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/SendMailOfCarrierProduct", ReplyAction="http://tempuri.org/IFollowupIssue/SendMailOfCarrierProductResponse")]
        System.IAsyncResult BeginSendMailOfCarrierProduct(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, System.AsyncCallback callback, object asyncState);
        
        void EndSendMailOfCarrierProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/SendMailToUpload", ReplyAction="http://tempuri.org/IFollowupIssue/SendMailToUploadResponse")]
        void SendMailToUpload(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/SendMailToUpload", ReplyAction="http://tempuri.org/IFollowupIssue/SendMailToUploadResponse")]
        System.IAsyncResult BeginSendMailToUpload(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, System.AsyncCallback callback, object asyncState);
        
        void EndSendMailToUpload(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/SendRemainderMail", ReplyAction="http://tempuri.org/IFollowupIssue/SendRemainderMailResponse")]
        void SendRemainderMail(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, System.DateTime dtCutOfDay);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/SendRemainderMail", ReplyAction="http://tempuri.org/IFollowupIssue/SendRemainderMailResponse")]
        System.IAsyncResult BeginSendRemainderMail(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, System.DateTime dtCutOfDay, System.AsyncCallback callback, object asyncState);
        
        void EndSendRemainderMail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/SendLoginLogoutMail", ReplyAction="http://tempuri.org/IFollowupIssue/SendLoginLogoutMailResponse")]
        void SendLoginLogoutMail(MyAgencyVault.EmailFax.MailData _MailData, string strLoginLogoutType, string strMailBody);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/SendLoginLogoutMail", ReplyAction="http://tempuri.org/IFollowupIssue/SendLoginLogoutMailResponse")]
        System.IAsyncResult BeginSendLoginLogoutMail(MyAgencyVault.EmailFax.MailData _MailData, string strLoginLogoutType, string strMailBody, System.AsyncCallback callback, object asyncState);
        
        void EndSendLoginLogoutMail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/SendNotificationMail", ReplyAction="http://tempuri.org/IFollowupIssue/SendNotificationMailResponse")]
        void SendNotificationMail(MyAgencyVault.EmailFax.MailData _MailData, string strSubject, string strMailBody);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/SendNotificationMail", ReplyAction="http://tempuri.org/IFollowupIssue/SendNotificationMailResponse")]
        System.IAsyncResult BeginSendNotificationMail(MyAgencyVault.EmailFax.MailData _MailData, string strSubject, string strMailBody, System.AsyncCallback callback, object asyncState);
        
        void EndSendNotificationMail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/SendLinkedPolicyConfirmationMail", ReplyAction="http://tempuri.org/IFollowupIssue/SendLinkedPolicyConfirmationMailResponse")]
        void SendLinkedPolicyConfirmationMail(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, string strPendingPolicy, string strActivePolicy);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/SendLinkedPolicyConfirmationMail", ReplyAction="http://tempuri.org/IFollowupIssue/SendLinkedPolicyConfirmationMailResponse")]
        System.IAsyncResult BeginSendLinkedPolicyConfirmationMail(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, string strPendingPolicy, string strActivePolicy, System.AsyncCallback callback, object asyncState);
        
        void EndSendLinkedPolicyConfirmationMail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/GetFewIssueAccordingtoMode", ReplyAction="http://tempuri.org/IFollowupIssue/GetFewIssueAccordingtoModeResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> GetFewIssueAccordingtoMode(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, int intDays);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/GetFewIssueAccordingtoMode", ReplyAction="http://tempuri.org/IFollowupIssue/GetFewIssueAccordingtoModeResponse")]
        System.IAsyncResult BeginGetFewIssueAccordingtoMode(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, int intDays, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> EndGetFewIssueAccordingtoMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/GetFewIssueAccordingtoModeScr", ReplyAction="http://tempuri.org/IFollowupIssue/GetFewIssueAccordingtoModeScrResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> GetFewIssueAccordingtoModeScr(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, int intDays);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/GetFewIssueAccordingtoModeScr", ReplyAction="http://tempuri.org/IFollowupIssue/GetFewIssueAccordingtoModeScrResponse")]
        System.IAsyncResult BeginGetFewIssueAccordingtoModeScr(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, int intDays, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> EndGetFewIssueAccordingtoModeScr(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/GetFewIssueForCommissionDashBoard", ReplyAction="http://tempuri.org/IFollowupIssue/GetFewIssueForCommissionDashBoardResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> GetFewIssueForCommissionDashBoard(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/GetFewIssueForCommissionDashBoard", ReplyAction="http://tempuri.org/IFollowupIssue/GetFewIssueForCommissionDashBoardResponse")]
        System.IAsyncResult BeginGetFewIssueForCommissionDashBoard(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> EndGetFewIssueForCommissionDashBoard(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/FillMasterIssueOptions", ReplyAction="http://tempuri.org/IFollowupIssue/FillMasterIssueOptionsResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.MasterIssuesOption FillMasterIssueOptions();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/FillMasterIssueOptions", ReplyAction="http://tempuri.org/IFollowupIssue/FillMasterIssueOptionsResponse")]
        System.IAsyncResult BeginFillMasterIssueOptions(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.MasterIssuesOption EndFillMasterIssueOptions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/UpdateIssuesSrc", ReplyAction="http://tempuri.org/IFollowupIssue/UpdateIssuesSrcResponse")]
        void UpdateIssuesSrc(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue _DisplayFollowupIssue, int PreviousStatusId, System.Guid ModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/UpdateIssuesSrc", ReplyAction="http://tempuri.org/IFollowupIssue/UpdateIssuesSrcResponse")]
        System.IAsyncResult BeginUpdateIssuesSrc(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue _DisplayFollowupIssue, int PreviousStatusId, System.Guid ModifiedBy, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateIssuesSrc(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/GetFollowUpIssueForPaymentEntry", ReplyAction="http://tempuri.org/IFollowupIssue/GetFollowUpIssueForPaymentEntryResponse")]
        System.Nullable<System.Guid> GetFollowUpIssueForPaymentEntry(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/GetFollowUpIssueForPaymentEntry", ReplyAction="http://tempuri.org/IFollowupIssue/GetFollowUpIssueForPaymentEntryResponse")]
        System.IAsyncResult BeginGetFollowUpIssueForPaymentEntry(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.Guid> EndGetFollowUpIssueForPaymentEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/DeleteIssue", ReplyAction="http://tempuri.org/IFollowupIssue/DeleteIssueResponse")]
        void DeleteIssue(System.Guid IssueID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/DeleteIssue", ReplyAction="http://tempuri.org/IFollowupIssue/DeleteIssueResponse")]
        System.IAsyncResult BeginDeleteIssue(System.Guid IssueID, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteIssue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowupIssue/RemoveCommisionIssue", ReplyAction="http://tempuri.org/IFollowupIssue/RemoveCommisionIssueResponse")]
        void RemoveCommisionIssue(System.Guid IssueID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFollowupIssue/RemoveCommisionIssue", ReplyAction="http://tempuri.org/IFollowupIssue/RemoveCommisionIssueResponse")]
        System.IAsyncResult BeginRemoveCommisionIssue(System.Guid IssueID, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveCommisionIssue(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFollowupIssueChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IFollowupIssue, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIssuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIssuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllIssuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllIssuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIssueDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIssueDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssuePolicyDetail> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssuePolicyDetail>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIncomingPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIncomingPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowupIncomingPament> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowupIncomingPament>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIssuesNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIssuesNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowUPPayorContacts> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowUPPayorContacts>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckrefershButtonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckrefershButtonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFewIssueAccordingtoModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFewIssueAccordingtoModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFewIssueAccordingtoModeScrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFewIssueAccordingtoModeScrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFewIssueForCommissionDashBoardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFewIssueForCommissionDashBoardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FillMasterIssueOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FillMasterIssueOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.MasterIssuesOption Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.MasterIssuesOption)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFollowUpIssueForPaymentEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFollowUpIssueForPaymentEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.Guid> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.Guid>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FollowupIssueClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IFollowupIssue>, MyAgencyVault.VM.MyAgencyVaultSvc.IFollowupIssue {
        
        private BeginOperationDelegate onBegintestDelegate;
        
        private EndOperationDelegate onEndtestDelegate;
        
        private System.Threading.SendOrPostCallback ontestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIssuesDelegate;
        
        private EndOperationDelegate onEndGetIssuesDelegate;
        
        private System.Threading.SendOrPostCallback onGetIssuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllIssuesDelegate;
        
        private EndOperationDelegate onEndGetAllIssuesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllIssuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIssueDetailDelegate;
        
        private EndOperationDelegate onEndGetIssueDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetIssueDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIncomingPaymentDelegate;
        
        private EndOperationDelegate onEndGetIncomingPaymentDelegate;
        
        private System.Threading.SendOrPostCallback onGetIncomingPaymentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIssuesNoteDelegate;
        
        private EndOperationDelegate onEndGetIssuesNoteDelegate;
        
        private System.Threading.SendOrPostCallback onGetIssuesNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorContactDelegate;
        
        private EndOperationDelegate onEndGetPayorContactDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorContactCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdatePolicyIssueNotesDelegate;
        
        private EndOperationDelegate onEndAddUpdatePolicyIssueNotesDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePolicyIssueNotesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdatePolicyIssueNotesScrDelegate;
        
        private EndOperationDelegate onEndAddUpdatePolicyIssueNotesScrDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePolicyIssueNotesScrCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdatePolicyIssuePaymentDelegate;
        
        private EndOperationDelegate onEndAddUpdatePolicyIssuePaymentDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePolicyIssuePaymentCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateIssueDelegate;
        
        private EndOperationDelegate onEndAddUpdateIssueDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateIssueCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckrefershButtonDelegate;
        
        private EndOperationDelegate onEndCheckrefershButtonDelegate;
        
        private System.Threading.SendOrPostCallback onCheckrefershButtonCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPaymentDataDelegate;
        
        private EndOperationDelegate onEndAddPaymentDataDelegate;
        
        private System.Threading.SendOrPostCallback onAddPaymentDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmailToAgencyPayorDelegate;
        
        private EndOperationDelegate onEndEmailToAgencyPayorDelegate;
        
        private System.Threading.SendOrPostCallback onEmailToAgencyPayorCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendCloseStatemantDelegate;
        
        private EndOperationDelegate onEndSendCloseStatemantDelegate;
        
        private System.Threading.SendOrPostCallback onSendCloseStatemantCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendMailToCloseBatchDelegate;
        
        private EndOperationDelegate onEndSendMailToCloseBatchDelegate;
        
        private System.Threading.SendOrPostCallback onSendMailToCloseBatchCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendMailOfCarrierProductDelegate;
        
        private EndOperationDelegate onEndSendMailOfCarrierProductDelegate;
        
        private System.Threading.SendOrPostCallback onSendMailOfCarrierProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendMailToUploadDelegate;
        
        private EndOperationDelegate onEndSendMailToUploadDelegate;
        
        private System.Threading.SendOrPostCallback onSendMailToUploadCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendRemainderMailDelegate;
        
        private EndOperationDelegate onEndSendRemainderMailDelegate;
        
        private System.Threading.SendOrPostCallback onSendRemainderMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendLoginLogoutMailDelegate;
        
        private EndOperationDelegate onEndSendLoginLogoutMailDelegate;
        
        private System.Threading.SendOrPostCallback onSendLoginLogoutMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendNotificationMailDelegate;
        
        private EndOperationDelegate onEndSendNotificationMailDelegate;
        
        private System.Threading.SendOrPostCallback onSendNotificationMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendLinkedPolicyConfirmationMailDelegate;
        
        private EndOperationDelegate onEndSendLinkedPolicyConfirmationMailDelegate;
        
        private System.Threading.SendOrPostCallback onSendLinkedPolicyConfirmationMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFewIssueAccordingtoModeDelegate;
        
        private EndOperationDelegate onEndGetFewIssueAccordingtoModeDelegate;
        
        private System.Threading.SendOrPostCallback onGetFewIssueAccordingtoModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFewIssueAccordingtoModeScrDelegate;
        
        private EndOperationDelegate onEndGetFewIssueAccordingtoModeScrDelegate;
        
        private System.Threading.SendOrPostCallback onGetFewIssueAccordingtoModeScrCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFewIssueForCommissionDashBoardDelegate;
        
        private EndOperationDelegate onEndGetFewIssueForCommissionDashBoardDelegate;
        
        private System.Threading.SendOrPostCallback onGetFewIssueForCommissionDashBoardCompletedDelegate;
        
        private BeginOperationDelegate onBeginFillMasterIssueOptionsDelegate;
        
        private EndOperationDelegate onEndFillMasterIssueOptionsDelegate;
        
        private System.Threading.SendOrPostCallback onFillMasterIssueOptionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateIssuesSrcDelegate;
        
        private EndOperationDelegate onEndUpdateIssuesSrcDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateIssuesSrcCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFollowUpIssueForPaymentEntryDelegate;
        
        private EndOperationDelegate onEndGetFollowUpIssueForPaymentEntryDelegate;
        
        private System.Threading.SendOrPostCallback onGetFollowUpIssueForPaymentEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteIssueDelegate;
        
        private EndOperationDelegate onEndDeleteIssueDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteIssueCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveCommisionIssueDelegate;
        
        private EndOperationDelegate onEndRemoveCommisionIssueDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveCommisionIssueCompletedDelegate;
        
        public FollowupIssueClient() {
        }
        
        public FollowupIssueClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FollowupIssueClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FollowupIssueClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FollowupIssueClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> testCompleted;
        
        public event System.EventHandler<GetIssuesCompletedEventArgs> GetIssuesCompleted;
        
        public event System.EventHandler<GetAllIssuesCompletedEventArgs> GetAllIssuesCompleted;
        
        public event System.EventHandler<GetIssueDetailCompletedEventArgs> GetIssueDetailCompleted;
        
        public event System.EventHandler<GetIncomingPaymentCompletedEventArgs> GetIncomingPaymentCompleted;
        
        public event System.EventHandler<GetIssuesNoteCompletedEventArgs> GetIssuesNoteCompleted;
        
        public event System.EventHandler<GetPayorContactCompletedEventArgs> GetPayorContactCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePolicyIssueNotesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePolicyIssueNotesScrCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePolicyIssuePaymentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateIssueCompleted;
        
        public event System.EventHandler<CheckrefershButtonCompletedEventArgs> CheckrefershButtonCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddPaymentDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EmailToAgencyPayorCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendCloseStatemantCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendMailToCloseBatchCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendMailOfCarrierProductCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendMailToUploadCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendRemainderMailCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendLoginLogoutMailCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendNotificationMailCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendLinkedPolicyConfirmationMailCompleted;
        
        public event System.EventHandler<GetFewIssueAccordingtoModeCompletedEventArgs> GetFewIssueAccordingtoModeCompleted;
        
        public event System.EventHandler<GetFewIssueAccordingtoModeScrCompletedEventArgs> GetFewIssueAccordingtoModeScrCompleted;
        
        public event System.EventHandler<GetFewIssueForCommissionDashBoardCompletedEventArgs> GetFewIssueForCommissionDashBoardCompleted;
        
        public event System.EventHandler<FillMasterIssueOptionsCompletedEventArgs> FillMasterIssueOptionsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateIssuesSrcCompleted;
        
        public event System.EventHandler<GetFollowUpIssueForPaymentEntryCompletedEventArgs> GetFollowUpIssueForPaymentEntryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteIssueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveCommisionIssueCompleted;
        
        public void test() {
            base.Channel.test();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Begintest(System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begintest(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void Endtest(System.IAsyncResult result) {
            base.Channel.Endtest(result);
        }
        
        private System.IAsyncResult OnBegintest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.Begintest(callback, asyncState);
        }
        
        private object[] OnEndtest(System.IAsyncResult result) {
            this.Endtest(result);
            return null;
        }
        
        private void OntestCompleted(object state) {
            if ((this.testCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.testCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void testAsync() {
            this.testAsync(null);
        }
        
        public void testAsync(object userState) {
            if ((this.onBegintestDelegate == null)) {
                this.onBegintestDelegate = new BeginOperationDelegate(this.OnBegintest);
            }
            if ((this.onEndtestDelegate == null)) {
                this.onEndtestDelegate = new EndOperationDelegate(this.OnEndtest);
            }
            if ((this.ontestCompletedDelegate == null)) {
                this.ontestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OntestCompleted);
            }
            base.InvokeAsync(this.onBegintestDelegate, null, this.onEndtestDelegate, this.ontestCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> GetIssues(System.Guid policyID) {
            return base.Channel.GetIssues(policyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIssues(System.Guid policyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIssues(policyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> EndGetIssues(System.IAsyncResult result) {
            return base.Channel.EndGetIssues(result);
        }
        
        private System.IAsyncResult OnBeginGetIssues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid policyID = ((System.Guid)(inValues[0]));
            return this.BeginGetIssues(policyID, callback, asyncState);
        }
        
        private object[] OnEndGetIssues(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> retVal = this.EndGetIssues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIssuesCompleted(object state) {
            if ((this.GetIssuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIssuesCompleted(this, new GetIssuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIssuesAsync(System.Guid policyID) {
            this.GetIssuesAsync(policyID, null);
        }
        
        public void GetIssuesAsync(System.Guid policyID, object userState) {
            if ((this.onBeginGetIssuesDelegate == null)) {
                this.onBeginGetIssuesDelegate = new BeginOperationDelegate(this.OnBeginGetIssues);
            }
            if ((this.onEndGetIssuesDelegate == null)) {
                this.onEndGetIssuesDelegate = new EndOperationDelegate(this.OnEndGetIssues);
            }
            if ((this.onGetIssuesCompletedDelegate == null)) {
                this.onGetIssuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIssuesCompleted);
            }
            base.InvokeAsync(this.onBeginGetIssuesDelegate, new object[] {
                        policyID}, this.onEndGetIssuesDelegate, this.onGetIssuesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> GetAllIssues(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup) {
            return base.Channel.GetAllIssues(Status, PayorID, AgencyID, Followup);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllIssues(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllIssues(Status, PayorID, AgencyID, Followup, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> EndGetAllIssues(System.IAsyncResult result) {
            return base.Channel.EndGetAllIssues(result);
        }
        
        private System.IAsyncResult OnBeginGetAllIssues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Status = ((int)(inValues[0]));
            System.Guid PayorID = ((System.Guid)(inValues[1]));
            System.Guid AgencyID = ((System.Guid)(inValues[2]));
            bool Followup = ((bool)(inValues[3]));
            return this.BeginGetAllIssues(Status, PayorID, AgencyID, Followup, callback, asyncState);
        }
        
        private object[] OnEndGetAllIssues(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> retVal = this.EndGetAllIssues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllIssuesCompleted(object state) {
            if ((this.GetAllIssuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllIssuesCompleted(this, new GetAllIssuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllIssuesAsync(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup) {
            this.GetAllIssuesAsync(Status, PayorID, AgencyID, Followup, null);
        }
        
        public void GetAllIssuesAsync(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, object userState) {
            if ((this.onBeginGetAllIssuesDelegate == null)) {
                this.onBeginGetAllIssuesDelegate = new BeginOperationDelegate(this.OnBeginGetAllIssues);
            }
            if ((this.onEndGetAllIssuesDelegate == null)) {
                this.onEndGetAllIssuesDelegate = new EndOperationDelegate(this.OnEndGetAllIssues);
            }
            if ((this.onGetAllIssuesCompletedDelegate == null)) {
                this.onGetAllIssuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllIssuesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllIssuesDelegate, new object[] {
                        Status,
                        PayorID,
                        AgencyID,
                        Followup}, this.onEndGetAllIssuesDelegate, this.onGetAllIssuesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssuePolicyDetail> GetIssueDetail(System.Guid PolicyId, System.Guid FollowUpIssueid) {
            return base.Channel.GetIssueDetail(PolicyId, FollowUpIssueid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIssueDetail(System.Guid PolicyId, System.Guid FollowUpIssueid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIssueDetail(PolicyId, FollowUpIssueid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssuePolicyDetail> EndGetIssueDetail(System.IAsyncResult result) {
            return base.Channel.EndGetIssueDetail(result);
        }
        
        private System.IAsyncResult OnBeginGetIssueDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            System.Guid FollowUpIssueid = ((System.Guid)(inValues[1]));
            return this.BeginGetIssueDetail(PolicyId, FollowUpIssueid, callback, asyncState);
        }
        
        private object[] OnEndGetIssueDetail(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssuePolicyDetail> retVal = this.EndGetIssueDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIssueDetailCompleted(object state) {
            if ((this.GetIssueDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIssueDetailCompleted(this, new GetIssueDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIssueDetailAsync(System.Guid PolicyId, System.Guid FollowUpIssueid) {
            this.GetIssueDetailAsync(PolicyId, FollowUpIssueid, null);
        }
        
        public void GetIssueDetailAsync(System.Guid PolicyId, System.Guid FollowUpIssueid, object userState) {
            if ((this.onBeginGetIssueDetailDelegate == null)) {
                this.onBeginGetIssueDetailDelegate = new BeginOperationDelegate(this.OnBeginGetIssueDetail);
            }
            if ((this.onEndGetIssueDetailDelegate == null)) {
                this.onEndGetIssueDetailDelegate = new EndOperationDelegate(this.OnEndGetIssueDetail);
            }
            if ((this.onGetIssueDetailCompletedDelegate == null)) {
                this.onGetIssueDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIssueDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetIssueDetailDelegate, new object[] {
                        PolicyId,
                        FollowUpIssueid}, this.onEndGetIssueDetailDelegate, this.onGetIssueDetailCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowupIncomingPament> GetIncomingPayment(System.Guid PolicyId) {
            return base.Channel.GetIncomingPayment(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIncomingPayment(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIncomingPayment(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowupIncomingPament> EndGetIncomingPayment(System.IAsyncResult result) {
            return base.Channel.EndGetIncomingPayment(result);
        }
        
        private System.IAsyncResult OnBeginGetIncomingPayment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetIncomingPayment(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetIncomingPayment(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowupIncomingPament> retVal = this.EndGetIncomingPayment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIncomingPaymentCompleted(object state) {
            if ((this.GetIncomingPaymentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIncomingPaymentCompleted(this, new GetIncomingPaymentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIncomingPaymentAsync(System.Guid PolicyId) {
            this.GetIncomingPaymentAsync(PolicyId, null);
        }
        
        public void GetIncomingPaymentAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetIncomingPaymentDelegate == null)) {
                this.onBeginGetIncomingPaymentDelegate = new BeginOperationDelegate(this.OnBeginGetIncomingPayment);
            }
            if ((this.onEndGetIncomingPaymentDelegate == null)) {
                this.onEndGetIncomingPaymentDelegate = new EndOperationDelegate(this.OnEndGetIncomingPayment);
            }
            if ((this.onGetIncomingPaymentCompletedDelegate == null)) {
                this.onGetIncomingPaymentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIncomingPaymentCompleted);
            }
            base.InvokeAsync(this.onBeginGetIncomingPaymentDelegate, new object[] {
                        PolicyId}, this.onEndGetIncomingPaymentDelegate, this.onGetIncomingPaymentCompletedDelegate, userState);
        }
        
        public string GetIssuesNote(System.Guid IssueID) {
            return base.Channel.GetIssuesNote(IssueID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIssuesNote(System.Guid IssueID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIssuesNote(IssueID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetIssuesNote(System.IAsyncResult result) {
            return base.Channel.EndGetIssuesNote(result);
        }
        
        private System.IAsyncResult OnBeginGetIssuesNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid IssueID = ((System.Guid)(inValues[0]));
            return this.BeginGetIssuesNote(IssueID, callback, asyncState);
        }
        
        private object[] OnEndGetIssuesNote(System.IAsyncResult result) {
            string retVal = this.EndGetIssuesNote(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIssuesNoteCompleted(object state) {
            if ((this.GetIssuesNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIssuesNoteCompleted(this, new GetIssuesNoteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIssuesNoteAsync(System.Guid IssueID) {
            this.GetIssuesNoteAsync(IssueID, null);
        }
        
        public void GetIssuesNoteAsync(System.Guid IssueID, object userState) {
            if ((this.onBeginGetIssuesNoteDelegate == null)) {
                this.onBeginGetIssuesNoteDelegate = new BeginOperationDelegate(this.OnBeginGetIssuesNote);
            }
            if ((this.onEndGetIssuesNoteDelegate == null)) {
                this.onEndGetIssuesNoteDelegate = new EndOperationDelegate(this.OnEndGetIssuesNote);
            }
            if ((this.onGetIssuesNoteCompletedDelegate == null)) {
                this.onGetIssuesNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIssuesNoteCompleted);
            }
            base.InvokeAsync(this.onBeginGetIssuesNoteDelegate, new object[] {
                        IssueID}, this.onEndGetIssuesNoteDelegate, this.onGetIssuesNoteCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowUPPayorContacts> GetPayorContact(System.Guid PolicyId) {
            return base.Channel.GetPayorContact(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorContact(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorContact(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowUPPayorContacts> EndGetPayorContact(System.IAsyncResult result) {
            return base.Channel.EndGetPayorContact(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetPayorContact(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetPayorContact(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.FollowUPPayorContacts> retVal = this.EndGetPayorContact(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorContactCompleted(object state) {
            if ((this.GetPayorContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorContactCompleted(this, new GetPayorContactCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorContactAsync(System.Guid PolicyId) {
            this.GetPayorContactAsync(PolicyId, null);
        }
        
        public void GetPayorContactAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetPayorContactDelegate == null)) {
                this.onBeginGetPayorContactDelegate = new BeginOperationDelegate(this.OnBeginGetPayorContact);
            }
            if ((this.onEndGetPayorContactDelegate == null)) {
                this.onEndGetPayorContactDelegate = new EndOperationDelegate(this.OnEndGetPayorContact);
            }
            if ((this.onGetPayorContactCompletedDelegate == null)) {
                this.onGetPayorContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorContactCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorContactDelegate, new object[] {
                        PolicyId}, this.onEndGetPayorContactDelegate, this.onGetPayorContactCompletedDelegate, userState);
        }
        
        public void AddUpdatePolicyIssueNotes(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss) {
            base.Channel.AddUpdatePolicyIssueNotes(followupiss);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePolicyIssueNotes(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePolicyIssueNotes(followupiss, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePolicyIssueNotes(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePolicyIssueNotes(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePolicyIssueNotes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss = ((MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue)(inValues[0]));
            return this.BeginAddUpdatePolicyIssueNotes(followupiss, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePolicyIssueNotes(System.IAsyncResult result) {
            this.EndAddUpdatePolicyIssueNotes(result);
            return null;
        }
        
        private void OnAddUpdatePolicyIssueNotesCompleted(object state) {
            if ((this.AddUpdatePolicyIssueNotesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePolicyIssueNotesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePolicyIssueNotesAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss) {
            this.AddUpdatePolicyIssueNotesAsync(followupiss, null);
        }
        
        public void AddUpdatePolicyIssueNotesAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss, object userState) {
            if ((this.onBeginAddUpdatePolicyIssueNotesDelegate == null)) {
                this.onBeginAddUpdatePolicyIssueNotesDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePolicyIssueNotes);
            }
            if ((this.onEndAddUpdatePolicyIssueNotesDelegate == null)) {
                this.onEndAddUpdatePolicyIssueNotesDelegate = new EndOperationDelegate(this.OnEndAddUpdatePolicyIssueNotes);
            }
            if ((this.onAddUpdatePolicyIssueNotesCompletedDelegate == null)) {
                this.onAddUpdatePolicyIssueNotesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePolicyIssueNotesCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePolicyIssueNotesDelegate, new object[] {
                        followupiss}, this.onEndAddUpdatePolicyIssueNotesDelegate, this.onAddUpdatePolicyIssueNotesCompletedDelegate, userState);
        }
        
        public void AddUpdatePolicyIssueNotesScr(System.Guid ModifiedBy, System.Guid IssueId, string PolicyIssueNote) {
            base.Channel.AddUpdatePolicyIssueNotesScr(ModifiedBy, IssueId, PolicyIssueNote);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePolicyIssueNotesScr(System.Guid ModifiedBy, System.Guid IssueId, string PolicyIssueNote, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePolicyIssueNotesScr(ModifiedBy, IssueId, PolicyIssueNote, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePolicyIssueNotesScr(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePolicyIssueNotesScr(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePolicyIssueNotesScr(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid ModifiedBy = ((System.Guid)(inValues[0]));
            System.Guid IssueId = ((System.Guid)(inValues[1]));
            string PolicyIssueNote = ((string)(inValues[2]));
            return this.BeginAddUpdatePolicyIssueNotesScr(ModifiedBy, IssueId, PolicyIssueNote, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePolicyIssueNotesScr(System.IAsyncResult result) {
            this.EndAddUpdatePolicyIssueNotesScr(result);
            return null;
        }
        
        private void OnAddUpdatePolicyIssueNotesScrCompleted(object state) {
            if ((this.AddUpdatePolicyIssueNotesScrCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePolicyIssueNotesScrCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePolicyIssueNotesScrAsync(System.Guid ModifiedBy, System.Guid IssueId, string PolicyIssueNote) {
            this.AddUpdatePolicyIssueNotesScrAsync(ModifiedBy, IssueId, PolicyIssueNote, null);
        }
        
        public void AddUpdatePolicyIssueNotesScrAsync(System.Guid ModifiedBy, System.Guid IssueId, string PolicyIssueNote, object userState) {
            if ((this.onBeginAddUpdatePolicyIssueNotesScrDelegate == null)) {
                this.onBeginAddUpdatePolicyIssueNotesScrDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePolicyIssueNotesScr);
            }
            if ((this.onEndAddUpdatePolicyIssueNotesScrDelegate == null)) {
                this.onEndAddUpdatePolicyIssueNotesScrDelegate = new EndOperationDelegate(this.OnEndAddUpdatePolicyIssueNotesScr);
            }
            if ((this.onAddUpdatePolicyIssueNotesScrCompletedDelegate == null)) {
                this.onAddUpdatePolicyIssueNotesScrCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePolicyIssueNotesScrCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePolicyIssueNotesScrDelegate, new object[] {
                        ModifiedBy,
                        IssueId,
                        PolicyIssueNote}, this.onEndAddUpdatePolicyIssueNotesScrDelegate, this.onAddUpdatePolicyIssueNotesScrCompletedDelegate, userState);
        }
        
        public void AddUpdatePolicyIssuePayment(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss) {
            base.Channel.AddUpdatePolicyIssuePayment(followupiss);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePolicyIssuePayment(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePolicyIssuePayment(followupiss, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePolicyIssuePayment(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePolicyIssuePayment(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePolicyIssuePayment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss = ((MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue)(inValues[0]));
            return this.BeginAddUpdatePolicyIssuePayment(followupiss, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePolicyIssuePayment(System.IAsyncResult result) {
            this.EndAddUpdatePolicyIssuePayment(result);
            return null;
        }
        
        private void OnAddUpdatePolicyIssuePaymentCompleted(object state) {
            if ((this.AddUpdatePolicyIssuePaymentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePolicyIssuePaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePolicyIssuePaymentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss) {
            this.AddUpdatePolicyIssuePaymentAsync(followupiss, null);
        }
        
        public void AddUpdatePolicyIssuePaymentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss, object userState) {
            if ((this.onBeginAddUpdatePolicyIssuePaymentDelegate == null)) {
                this.onBeginAddUpdatePolicyIssuePaymentDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePolicyIssuePayment);
            }
            if ((this.onEndAddUpdatePolicyIssuePaymentDelegate == null)) {
                this.onEndAddUpdatePolicyIssuePaymentDelegate = new EndOperationDelegate(this.OnEndAddUpdatePolicyIssuePayment);
            }
            if ((this.onAddUpdatePolicyIssuePaymentCompletedDelegate == null)) {
                this.onAddUpdatePolicyIssuePaymentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePolicyIssuePaymentCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePolicyIssuePaymentDelegate, new object[] {
                        followupiss}, this.onEndAddUpdatePolicyIssuePaymentDelegate, this.onAddUpdatePolicyIssuePaymentCompletedDelegate, userState);
        }
        
        public void AddUpdateIssue(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss) {
            base.Channel.AddUpdateIssue(followupiss);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateIssue(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateIssue(followupiss, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateIssue(System.IAsyncResult result) {
            base.Channel.EndAddUpdateIssue(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss = ((MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue)(inValues[0]));
            return this.BeginAddUpdateIssue(followupiss, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateIssue(System.IAsyncResult result) {
            this.EndAddUpdateIssue(result);
            return null;
        }
        
        private void OnAddUpdateIssueCompleted(object state) {
            if ((this.AddUpdateIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateIssueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateIssueAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss) {
            this.AddUpdateIssueAsync(followupiss, null);
        }
        
        public void AddUpdateIssueAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue followupiss, object userState) {
            if ((this.onBeginAddUpdateIssueDelegate == null)) {
                this.onBeginAddUpdateIssueDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateIssue);
            }
            if ((this.onEndAddUpdateIssueDelegate == null)) {
                this.onEndAddUpdateIssueDelegate = new EndOperationDelegate(this.OnEndAddUpdateIssue);
            }
            if ((this.onAddUpdateIssueCompletedDelegate == null)) {
                this.onAddUpdateIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateIssueCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateIssueDelegate, new object[] {
                        followupiss}, this.onEndAddUpdateIssueDelegate, this.onAddUpdateIssueCompletedDelegate, userState);
        }
        
        public string CheckrefershButton(System.Guid policyId) {
            return base.Channel.CheckrefershButton(policyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckrefershButton(System.Guid policyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckrefershButton(policyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCheckrefershButton(System.IAsyncResult result) {
            return base.Channel.EndCheckrefershButton(result);
        }
        
        private System.IAsyncResult OnBeginCheckrefershButton(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid policyId = ((System.Guid)(inValues[0]));
            return this.BeginCheckrefershButton(policyId, callback, asyncState);
        }
        
        private object[] OnEndCheckrefershButton(System.IAsyncResult result) {
            string retVal = this.EndCheckrefershButton(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckrefershButtonCompleted(object state) {
            if ((this.CheckrefershButtonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckrefershButtonCompleted(this, new CheckrefershButtonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckrefershButtonAsync(System.Guid policyId) {
            this.CheckrefershButtonAsync(policyId, null);
        }
        
        public void CheckrefershButtonAsync(System.Guid policyId, object userState) {
            if ((this.onBeginCheckrefershButtonDelegate == null)) {
                this.onBeginCheckrefershButtonDelegate = new BeginOperationDelegate(this.OnBeginCheckrefershButton);
            }
            if ((this.onEndCheckrefershButtonDelegate == null)) {
                this.onEndCheckrefershButtonDelegate = new EndOperationDelegate(this.OnEndCheckrefershButton);
            }
            if ((this.onCheckrefershButtonCompletedDelegate == null)) {
                this.onCheckrefershButtonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckrefershButtonCompleted);
            }
            base.InvokeAsync(this.onBeginCheckrefershButtonDelegate, new object[] {
                        policyId}, this.onEndCheckrefershButtonDelegate, this.onCheckrefershButtonCompletedDelegate, userState);
        }
        
        public void AddPaymentData(System.Guid IssueId, decimal Payment) {
            base.Channel.AddPaymentData(IssueId, Payment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddPaymentData(System.Guid IssueId, decimal Payment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPaymentData(IssueId, Payment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddPaymentData(System.IAsyncResult result) {
            base.Channel.EndAddPaymentData(result);
        }
        
        private System.IAsyncResult OnBeginAddPaymentData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid IssueId = ((System.Guid)(inValues[0]));
            decimal Payment = ((decimal)(inValues[1]));
            return this.BeginAddPaymentData(IssueId, Payment, callback, asyncState);
        }
        
        private object[] OnEndAddPaymentData(System.IAsyncResult result) {
            this.EndAddPaymentData(result);
            return null;
        }
        
        private void OnAddPaymentDataCompleted(object state) {
            if ((this.AddPaymentDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPaymentDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPaymentDataAsync(System.Guid IssueId, decimal Payment) {
            this.AddPaymentDataAsync(IssueId, Payment, null);
        }
        
        public void AddPaymentDataAsync(System.Guid IssueId, decimal Payment, object userState) {
            if ((this.onBeginAddPaymentDataDelegate == null)) {
                this.onBeginAddPaymentDataDelegate = new BeginOperationDelegate(this.OnBeginAddPaymentData);
            }
            if ((this.onEndAddPaymentDataDelegate == null)) {
                this.onEndAddPaymentDataDelegate = new EndOperationDelegate(this.OnEndAddPaymentData);
            }
            if ((this.onAddPaymentDataCompletedDelegate == null)) {
                this.onAddPaymentDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPaymentDataCompleted);
            }
            base.InvokeAsync(this.onBeginAddPaymentDataDelegate, new object[] {
                        IssueId,
                        Payment}, this.onEndAddPaymentDataDelegate, this.onAddPaymentDataCompletedDelegate, userState);
        }
        
        public void EmailToAgencyPayor(MyAgencyVault.EmailFax.MailData _MailData) {
            base.Channel.EmailToAgencyPayor(_MailData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEmailToAgencyPayor(MyAgencyVault.EmailFax.MailData _MailData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmailToAgencyPayor(_MailData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEmailToAgencyPayor(System.IAsyncResult result) {
            base.Channel.EndEmailToAgencyPayor(result);
        }
        
        private System.IAsyncResult OnBeginEmailToAgencyPayor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.EmailFax.MailData _MailData = ((MyAgencyVault.EmailFax.MailData)(inValues[0]));
            return this.BeginEmailToAgencyPayor(_MailData, callback, asyncState);
        }
        
        private object[] OnEndEmailToAgencyPayor(System.IAsyncResult result) {
            this.EndEmailToAgencyPayor(result);
            return null;
        }
        
        private void OnEmailToAgencyPayorCompleted(object state) {
            if ((this.EmailToAgencyPayorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmailToAgencyPayorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmailToAgencyPayorAsync(MyAgencyVault.EmailFax.MailData _MailData) {
            this.EmailToAgencyPayorAsync(_MailData, null);
        }
        
        public void EmailToAgencyPayorAsync(MyAgencyVault.EmailFax.MailData _MailData, object userState) {
            if ((this.onBeginEmailToAgencyPayorDelegate == null)) {
                this.onBeginEmailToAgencyPayorDelegate = new BeginOperationDelegate(this.OnBeginEmailToAgencyPayor);
            }
            if ((this.onEndEmailToAgencyPayorDelegate == null)) {
                this.onEndEmailToAgencyPayorDelegate = new EndOperationDelegate(this.OnEndEmailToAgencyPayor);
            }
            if ((this.onEmailToAgencyPayorCompletedDelegate == null)) {
                this.onEmailToAgencyPayorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmailToAgencyPayorCompleted);
            }
            base.InvokeAsync(this.onBeginEmailToAgencyPayorDelegate, new object[] {
                        _MailData}, this.onEndEmailToAgencyPayorDelegate, this.onEmailToAgencyPayorCompletedDelegate, userState);
        }
        
        public void SendCloseStatemant(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody) {
            base.Channel.SendCloseStatemant(_MailData, strMailBody);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendCloseStatemant(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendCloseStatemant(_MailData, strMailBody, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendCloseStatemant(System.IAsyncResult result) {
            base.Channel.EndSendCloseStatemant(result);
        }
        
        private System.IAsyncResult OnBeginSendCloseStatemant(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.EmailFax.MailData _MailData = ((MyAgencyVault.EmailFax.MailData)(inValues[0]));
            string strMailBody = ((string)(inValues[1]));
            return this.BeginSendCloseStatemant(_MailData, strMailBody, callback, asyncState);
        }
        
        private object[] OnEndSendCloseStatemant(System.IAsyncResult result) {
            this.EndSendCloseStatemant(result);
            return null;
        }
        
        private void OnSendCloseStatemantCompleted(object state) {
            if ((this.SendCloseStatemantCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendCloseStatemantCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendCloseStatemantAsync(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody) {
            this.SendCloseStatemantAsync(_MailData, strMailBody, null);
        }
        
        public void SendCloseStatemantAsync(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, object userState) {
            if ((this.onBeginSendCloseStatemantDelegate == null)) {
                this.onBeginSendCloseStatemantDelegate = new BeginOperationDelegate(this.OnBeginSendCloseStatemant);
            }
            if ((this.onEndSendCloseStatemantDelegate == null)) {
                this.onEndSendCloseStatemantDelegate = new EndOperationDelegate(this.OnEndSendCloseStatemant);
            }
            if ((this.onSendCloseStatemantCompletedDelegate == null)) {
                this.onSendCloseStatemantCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendCloseStatemantCompleted);
            }
            base.InvokeAsync(this.onBeginSendCloseStatemantDelegate, new object[] {
                        _MailData,
                        strMailBody}, this.onEndSendCloseStatemantDelegate, this.onSendCloseStatemantCompletedDelegate, userState);
        }
        
        public void SendMailToCloseBatch(MyAgencyVault.EmailFax.MailData _MailData, string strBatchNumber, string strMailBody) {
            base.Channel.SendMailToCloseBatch(_MailData, strBatchNumber, strMailBody);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendMailToCloseBatch(MyAgencyVault.EmailFax.MailData _MailData, string strBatchNumber, string strMailBody, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendMailToCloseBatch(_MailData, strBatchNumber, strMailBody, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendMailToCloseBatch(System.IAsyncResult result) {
            base.Channel.EndSendMailToCloseBatch(result);
        }
        
        private System.IAsyncResult OnBeginSendMailToCloseBatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.EmailFax.MailData _MailData = ((MyAgencyVault.EmailFax.MailData)(inValues[0]));
            string strBatchNumber = ((string)(inValues[1]));
            string strMailBody = ((string)(inValues[2]));
            return this.BeginSendMailToCloseBatch(_MailData, strBatchNumber, strMailBody, callback, asyncState);
        }
        
        private object[] OnEndSendMailToCloseBatch(System.IAsyncResult result) {
            this.EndSendMailToCloseBatch(result);
            return null;
        }
        
        private void OnSendMailToCloseBatchCompleted(object state) {
            if ((this.SendMailToCloseBatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendMailToCloseBatchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendMailToCloseBatchAsync(MyAgencyVault.EmailFax.MailData _MailData, string strBatchNumber, string strMailBody) {
            this.SendMailToCloseBatchAsync(_MailData, strBatchNumber, strMailBody, null);
        }
        
        public void SendMailToCloseBatchAsync(MyAgencyVault.EmailFax.MailData _MailData, string strBatchNumber, string strMailBody, object userState) {
            if ((this.onBeginSendMailToCloseBatchDelegate == null)) {
                this.onBeginSendMailToCloseBatchDelegate = new BeginOperationDelegate(this.OnBeginSendMailToCloseBatch);
            }
            if ((this.onEndSendMailToCloseBatchDelegate == null)) {
                this.onEndSendMailToCloseBatchDelegate = new EndOperationDelegate(this.OnEndSendMailToCloseBatch);
            }
            if ((this.onSendMailToCloseBatchCompletedDelegate == null)) {
                this.onSendMailToCloseBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMailToCloseBatchCompleted);
            }
            base.InvokeAsync(this.onBeginSendMailToCloseBatchDelegate, new object[] {
                        _MailData,
                        strBatchNumber,
                        strMailBody}, this.onEndSendMailToCloseBatchDelegate, this.onSendMailToCloseBatchCompletedDelegate, userState);
        }
        
        public void SendMailOfCarrierProduct(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody) {
            base.Channel.SendMailOfCarrierProduct(_MailData, strMailBody);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendMailOfCarrierProduct(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendMailOfCarrierProduct(_MailData, strMailBody, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendMailOfCarrierProduct(System.IAsyncResult result) {
            base.Channel.EndSendMailOfCarrierProduct(result);
        }
        
        private System.IAsyncResult OnBeginSendMailOfCarrierProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.EmailFax.MailData _MailData = ((MyAgencyVault.EmailFax.MailData)(inValues[0]));
            string strMailBody = ((string)(inValues[1]));
            return this.BeginSendMailOfCarrierProduct(_MailData, strMailBody, callback, asyncState);
        }
        
        private object[] OnEndSendMailOfCarrierProduct(System.IAsyncResult result) {
            this.EndSendMailOfCarrierProduct(result);
            return null;
        }
        
        private void OnSendMailOfCarrierProductCompleted(object state) {
            if ((this.SendMailOfCarrierProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendMailOfCarrierProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendMailOfCarrierProductAsync(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody) {
            this.SendMailOfCarrierProductAsync(_MailData, strMailBody, null);
        }
        
        public void SendMailOfCarrierProductAsync(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, object userState) {
            if ((this.onBeginSendMailOfCarrierProductDelegate == null)) {
                this.onBeginSendMailOfCarrierProductDelegate = new BeginOperationDelegate(this.OnBeginSendMailOfCarrierProduct);
            }
            if ((this.onEndSendMailOfCarrierProductDelegate == null)) {
                this.onEndSendMailOfCarrierProductDelegate = new EndOperationDelegate(this.OnEndSendMailOfCarrierProduct);
            }
            if ((this.onSendMailOfCarrierProductCompletedDelegate == null)) {
                this.onSendMailOfCarrierProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMailOfCarrierProductCompleted);
            }
            base.InvokeAsync(this.onBeginSendMailOfCarrierProductDelegate, new object[] {
                        _MailData,
                        strMailBody}, this.onEndSendMailOfCarrierProductDelegate, this.onSendMailOfCarrierProductCompletedDelegate, userState);
        }
        
        public void SendMailToUpload(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody) {
            base.Channel.SendMailToUpload(_MailData, strMailBody);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendMailToUpload(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendMailToUpload(_MailData, strMailBody, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendMailToUpload(System.IAsyncResult result) {
            base.Channel.EndSendMailToUpload(result);
        }
        
        private System.IAsyncResult OnBeginSendMailToUpload(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.EmailFax.MailData _MailData = ((MyAgencyVault.EmailFax.MailData)(inValues[0]));
            string strMailBody = ((string)(inValues[1]));
            return this.BeginSendMailToUpload(_MailData, strMailBody, callback, asyncState);
        }
        
        private object[] OnEndSendMailToUpload(System.IAsyncResult result) {
            this.EndSendMailToUpload(result);
            return null;
        }
        
        private void OnSendMailToUploadCompleted(object state) {
            if ((this.SendMailToUploadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendMailToUploadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendMailToUploadAsync(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody) {
            this.SendMailToUploadAsync(_MailData, strMailBody, null);
        }
        
        public void SendMailToUploadAsync(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, object userState) {
            if ((this.onBeginSendMailToUploadDelegate == null)) {
                this.onBeginSendMailToUploadDelegate = new BeginOperationDelegate(this.OnBeginSendMailToUpload);
            }
            if ((this.onEndSendMailToUploadDelegate == null)) {
                this.onEndSendMailToUploadDelegate = new EndOperationDelegate(this.OnEndSendMailToUpload);
            }
            if ((this.onSendMailToUploadCompletedDelegate == null)) {
                this.onSendMailToUploadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMailToUploadCompleted);
            }
            base.InvokeAsync(this.onBeginSendMailToUploadDelegate, new object[] {
                        _MailData,
                        strMailBody}, this.onEndSendMailToUploadDelegate, this.onSendMailToUploadCompletedDelegate, userState);
        }
        
        public void SendRemainderMail(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, System.DateTime dtCutOfDay) {
            base.Channel.SendRemainderMail(_MailData, strMailBody, dtCutOfDay);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendRemainderMail(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, System.DateTime dtCutOfDay, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendRemainderMail(_MailData, strMailBody, dtCutOfDay, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendRemainderMail(System.IAsyncResult result) {
            base.Channel.EndSendRemainderMail(result);
        }
        
        private System.IAsyncResult OnBeginSendRemainderMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.EmailFax.MailData _MailData = ((MyAgencyVault.EmailFax.MailData)(inValues[0]));
            string strMailBody = ((string)(inValues[1]));
            System.DateTime dtCutOfDay = ((System.DateTime)(inValues[2]));
            return this.BeginSendRemainderMail(_MailData, strMailBody, dtCutOfDay, callback, asyncState);
        }
        
        private object[] OnEndSendRemainderMail(System.IAsyncResult result) {
            this.EndSendRemainderMail(result);
            return null;
        }
        
        private void OnSendRemainderMailCompleted(object state) {
            if ((this.SendRemainderMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendRemainderMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendRemainderMailAsync(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, System.DateTime dtCutOfDay) {
            this.SendRemainderMailAsync(_MailData, strMailBody, dtCutOfDay, null);
        }
        
        public void SendRemainderMailAsync(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, System.DateTime dtCutOfDay, object userState) {
            if ((this.onBeginSendRemainderMailDelegate == null)) {
                this.onBeginSendRemainderMailDelegate = new BeginOperationDelegate(this.OnBeginSendRemainderMail);
            }
            if ((this.onEndSendRemainderMailDelegate == null)) {
                this.onEndSendRemainderMailDelegate = new EndOperationDelegate(this.OnEndSendRemainderMail);
            }
            if ((this.onSendRemainderMailCompletedDelegate == null)) {
                this.onSendRemainderMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendRemainderMailCompleted);
            }
            base.InvokeAsync(this.onBeginSendRemainderMailDelegate, new object[] {
                        _MailData,
                        strMailBody,
                        dtCutOfDay}, this.onEndSendRemainderMailDelegate, this.onSendRemainderMailCompletedDelegate, userState);
        }
        
        public void SendLoginLogoutMail(MyAgencyVault.EmailFax.MailData _MailData, string strLoginLogoutType, string strMailBody) {
            base.Channel.SendLoginLogoutMail(_MailData, strLoginLogoutType, strMailBody);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendLoginLogoutMail(MyAgencyVault.EmailFax.MailData _MailData, string strLoginLogoutType, string strMailBody, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendLoginLogoutMail(_MailData, strLoginLogoutType, strMailBody, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendLoginLogoutMail(System.IAsyncResult result) {
            base.Channel.EndSendLoginLogoutMail(result);
        }
        
        private System.IAsyncResult OnBeginSendLoginLogoutMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.EmailFax.MailData _MailData = ((MyAgencyVault.EmailFax.MailData)(inValues[0]));
            string strLoginLogoutType = ((string)(inValues[1]));
            string strMailBody = ((string)(inValues[2]));
            return this.BeginSendLoginLogoutMail(_MailData, strLoginLogoutType, strMailBody, callback, asyncState);
        }
        
        private object[] OnEndSendLoginLogoutMail(System.IAsyncResult result) {
            this.EndSendLoginLogoutMail(result);
            return null;
        }
        
        private void OnSendLoginLogoutMailCompleted(object state) {
            if ((this.SendLoginLogoutMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendLoginLogoutMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendLoginLogoutMailAsync(MyAgencyVault.EmailFax.MailData _MailData, string strLoginLogoutType, string strMailBody) {
            this.SendLoginLogoutMailAsync(_MailData, strLoginLogoutType, strMailBody, null);
        }
        
        public void SendLoginLogoutMailAsync(MyAgencyVault.EmailFax.MailData _MailData, string strLoginLogoutType, string strMailBody, object userState) {
            if ((this.onBeginSendLoginLogoutMailDelegate == null)) {
                this.onBeginSendLoginLogoutMailDelegate = new BeginOperationDelegate(this.OnBeginSendLoginLogoutMail);
            }
            if ((this.onEndSendLoginLogoutMailDelegate == null)) {
                this.onEndSendLoginLogoutMailDelegate = new EndOperationDelegate(this.OnEndSendLoginLogoutMail);
            }
            if ((this.onSendLoginLogoutMailCompletedDelegate == null)) {
                this.onSendLoginLogoutMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendLoginLogoutMailCompleted);
            }
            base.InvokeAsync(this.onBeginSendLoginLogoutMailDelegate, new object[] {
                        _MailData,
                        strLoginLogoutType,
                        strMailBody}, this.onEndSendLoginLogoutMailDelegate, this.onSendLoginLogoutMailCompletedDelegate, userState);
        }
        
        public void SendNotificationMail(MyAgencyVault.EmailFax.MailData _MailData, string strSubject, string strMailBody) {
            base.Channel.SendNotificationMail(_MailData, strSubject, strMailBody);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendNotificationMail(MyAgencyVault.EmailFax.MailData _MailData, string strSubject, string strMailBody, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendNotificationMail(_MailData, strSubject, strMailBody, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendNotificationMail(System.IAsyncResult result) {
            base.Channel.EndSendNotificationMail(result);
        }
        
        private System.IAsyncResult OnBeginSendNotificationMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.EmailFax.MailData _MailData = ((MyAgencyVault.EmailFax.MailData)(inValues[0]));
            string strSubject = ((string)(inValues[1]));
            string strMailBody = ((string)(inValues[2]));
            return this.BeginSendNotificationMail(_MailData, strSubject, strMailBody, callback, asyncState);
        }
        
        private object[] OnEndSendNotificationMail(System.IAsyncResult result) {
            this.EndSendNotificationMail(result);
            return null;
        }
        
        private void OnSendNotificationMailCompleted(object state) {
            if ((this.SendNotificationMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendNotificationMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendNotificationMailAsync(MyAgencyVault.EmailFax.MailData _MailData, string strSubject, string strMailBody) {
            this.SendNotificationMailAsync(_MailData, strSubject, strMailBody, null);
        }
        
        public void SendNotificationMailAsync(MyAgencyVault.EmailFax.MailData _MailData, string strSubject, string strMailBody, object userState) {
            if ((this.onBeginSendNotificationMailDelegate == null)) {
                this.onBeginSendNotificationMailDelegate = new BeginOperationDelegate(this.OnBeginSendNotificationMail);
            }
            if ((this.onEndSendNotificationMailDelegate == null)) {
                this.onEndSendNotificationMailDelegate = new EndOperationDelegate(this.OnEndSendNotificationMail);
            }
            if ((this.onSendNotificationMailCompletedDelegate == null)) {
                this.onSendNotificationMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendNotificationMailCompleted);
            }
            base.InvokeAsync(this.onBeginSendNotificationMailDelegate, new object[] {
                        _MailData,
                        strSubject,
                        strMailBody}, this.onEndSendNotificationMailDelegate, this.onSendNotificationMailCompletedDelegate, userState);
        }
        
        public void SendLinkedPolicyConfirmationMail(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, string strPendingPolicy, string strActivePolicy) {
            base.Channel.SendLinkedPolicyConfirmationMail(_MailData, strMailBody, strPendingPolicy, strActivePolicy);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendLinkedPolicyConfirmationMail(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, string strPendingPolicy, string strActivePolicy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendLinkedPolicyConfirmationMail(_MailData, strMailBody, strPendingPolicy, strActivePolicy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendLinkedPolicyConfirmationMail(System.IAsyncResult result) {
            base.Channel.EndSendLinkedPolicyConfirmationMail(result);
        }
        
        private System.IAsyncResult OnBeginSendLinkedPolicyConfirmationMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.EmailFax.MailData _MailData = ((MyAgencyVault.EmailFax.MailData)(inValues[0]));
            string strMailBody = ((string)(inValues[1]));
            string strPendingPolicy = ((string)(inValues[2]));
            string strActivePolicy = ((string)(inValues[3]));
            return this.BeginSendLinkedPolicyConfirmationMail(_MailData, strMailBody, strPendingPolicy, strActivePolicy, callback, asyncState);
        }
        
        private object[] OnEndSendLinkedPolicyConfirmationMail(System.IAsyncResult result) {
            this.EndSendLinkedPolicyConfirmationMail(result);
            return null;
        }
        
        private void OnSendLinkedPolicyConfirmationMailCompleted(object state) {
            if ((this.SendLinkedPolicyConfirmationMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendLinkedPolicyConfirmationMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendLinkedPolicyConfirmationMailAsync(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, string strPendingPolicy, string strActivePolicy) {
            this.SendLinkedPolicyConfirmationMailAsync(_MailData, strMailBody, strPendingPolicy, strActivePolicy, null);
        }
        
        public void SendLinkedPolicyConfirmationMailAsync(MyAgencyVault.EmailFax.MailData _MailData, string strMailBody, string strPendingPolicy, string strActivePolicy, object userState) {
            if ((this.onBeginSendLinkedPolicyConfirmationMailDelegate == null)) {
                this.onBeginSendLinkedPolicyConfirmationMailDelegate = new BeginOperationDelegate(this.OnBeginSendLinkedPolicyConfirmationMail);
            }
            if ((this.onEndSendLinkedPolicyConfirmationMailDelegate == null)) {
                this.onEndSendLinkedPolicyConfirmationMailDelegate = new EndOperationDelegate(this.OnEndSendLinkedPolicyConfirmationMail);
            }
            if ((this.onSendLinkedPolicyConfirmationMailCompletedDelegate == null)) {
                this.onSendLinkedPolicyConfirmationMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendLinkedPolicyConfirmationMailCompleted);
            }
            base.InvokeAsync(this.onBeginSendLinkedPolicyConfirmationMailDelegate, new object[] {
                        _MailData,
                        strMailBody,
                        strPendingPolicy,
                        strActivePolicy}, this.onEndSendLinkedPolicyConfirmationMailDelegate, this.onSendLinkedPolicyConfirmationMailCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> GetFewIssueAccordingtoMode(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, int intDays) {
            return base.Channel.GetFewIssueAccordingtoMode(Status, PayorID, AgencyID, Followup, intDays);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFewIssueAccordingtoMode(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, int intDays, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFewIssueAccordingtoMode(Status, PayorID, AgencyID, Followup, intDays, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> EndGetFewIssueAccordingtoMode(System.IAsyncResult result) {
            return base.Channel.EndGetFewIssueAccordingtoMode(result);
        }
        
        private System.IAsyncResult OnBeginGetFewIssueAccordingtoMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Status = ((int)(inValues[0]));
            System.Guid PayorID = ((System.Guid)(inValues[1]));
            System.Guid AgencyID = ((System.Guid)(inValues[2]));
            bool Followup = ((bool)(inValues[3]));
            int intDays = ((int)(inValues[4]));
            return this.BeginGetFewIssueAccordingtoMode(Status, PayorID, AgencyID, Followup, intDays, callback, asyncState);
        }
        
        private object[] OnEndGetFewIssueAccordingtoMode(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> retVal = this.EndGetFewIssueAccordingtoMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFewIssueAccordingtoModeCompleted(object state) {
            if ((this.GetFewIssueAccordingtoModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFewIssueAccordingtoModeCompleted(this, new GetFewIssueAccordingtoModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFewIssueAccordingtoModeAsync(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, int intDays) {
            this.GetFewIssueAccordingtoModeAsync(Status, PayorID, AgencyID, Followup, intDays, null);
        }
        
        public void GetFewIssueAccordingtoModeAsync(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, int intDays, object userState) {
            if ((this.onBeginGetFewIssueAccordingtoModeDelegate == null)) {
                this.onBeginGetFewIssueAccordingtoModeDelegate = new BeginOperationDelegate(this.OnBeginGetFewIssueAccordingtoMode);
            }
            if ((this.onEndGetFewIssueAccordingtoModeDelegate == null)) {
                this.onEndGetFewIssueAccordingtoModeDelegate = new EndOperationDelegate(this.OnEndGetFewIssueAccordingtoMode);
            }
            if ((this.onGetFewIssueAccordingtoModeCompletedDelegate == null)) {
                this.onGetFewIssueAccordingtoModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFewIssueAccordingtoModeCompleted);
            }
            base.InvokeAsync(this.onBeginGetFewIssueAccordingtoModeDelegate, new object[] {
                        Status,
                        PayorID,
                        AgencyID,
                        Followup,
                        intDays}, this.onEndGetFewIssueAccordingtoModeDelegate, this.onGetFewIssueAccordingtoModeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> GetFewIssueAccordingtoModeScr(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, int intDays) {
            return base.Channel.GetFewIssueAccordingtoModeScr(Status, PayorID, AgencyID, Followup, intDays);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFewIssueAccordingtoModeScr(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, int intDays, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFewIssueAccordingtoModeScr(Status, PayorID, AgencyID, Followup, intDays, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> EndGetFewIssueAccordingtoModeScr(System.IAsyncResult result) {
            return base.Channel.EndGetFewIssueAccordingtoModeScr(result);
        }
        
        private System.IAsyncResult OnBeginGetFewIssueAccordingtoModeScr(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Status = ((int)(inValues[0]));
            System.Guid PayorID = ((System.Guid)(inValues[1]));
            System.Guid AgencyID = ((System.Guid)(inValues[2]));
            bool Followup = ((bool)(inValues[3]));
            int intDays = ((int)(inValues[4]));
            return this.BeginGetFewIssueAccordingtoModeScr(Status, PayorID, AgencyID, Followup, intDays, callback, asyncState);
        }
        
        private object[] OnEndGetFewIssueAccordingtoModeScr(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> retVal = this.EndGetFewIssueAccordingtoModeScr(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFewIssueAccordingtoModeScrCompleted(object state) {
            if ((this.GetFewIssueAccordingtoModeScrCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFewIssueAccordingtoModeScrCompleted(this, new GetFewIssueAccordingtoModeScrCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFewIssueAccordingtoModeScrAsync(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, int intDays) {
            this.GetFewIssueAccordingtoModeScrAsync(Status, PayorID, AgencyID, Followup, intDays, null);
        }
        
        public void GetFewIssueAccordingtoModeScrAsync(int Status, System.Guid PayorID, System.Guid AgencyID, bool Followup, int intDays, object userState) {
            if ((this.onBeginGetFewIssueAccordingtoModeScrDelegate == null)) {
                this.onBeginGetFewIssueAccordingtoModeScrDelegate = new BeginOperationDelegate(this.OnBeginGetFewIssueAccordingtoModeScr);
            }
            if ((this.onEndGetFewIssueAccordingtoModeScrDelegate == null)) {
                this.onEndGetFewIssueAccordingtoModeScrDelegate = new EndOperationDelegate(this.OnEndGetFewIssueAccordingtoModeScr);
            }
            if ((this.onGetFewIssueAccordingtoModeScrCompletedDelegate == null)) {
                this.onGetFewIssueAccordingtoModeScrCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFewIssueAccordingtoModeScrCompleted);
            }
            base.InvokeAsync(this.onBeginGetFewIssueAccordingtoModeScrDelegate, new object[] {
                        Status,
                        PayorID,
                        AgencyID,
                        Followup,
                        intDays}, this.onEndGetFewIssueAccordingtoModeScrDelegate, this.onGetFewIssueAccordingtoModeScrCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> GetFewIssueForCommissionDashBoard(System.Guid PolicyId) {
            return base.Channel.GetFewIssueForCommissionDashBoard(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFewIssueForCommissionDashBoard(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFewIssueForCommissionDashBoard(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> EndGetFewIssueForCommissionDashBoard(System.IAsyncResult result) {
            return base.Channel.EndGetFewIssueForCommissionDashBoard(result);
        }
        
        private System.IAsyncResult OnBeginGetFewIssueForCommissionDashBoard(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetFewIssueForCommissionDashBoard(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetFewIssueForCommissionDashBoard(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue> retVal = this.EndGetFewIssueForCommissionDashBoard(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFewIssueForCommissionDashBoardCompleted(object state) {
            if ((this.GetFewIssueForCommissionDashBoardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFewIssueForCommissionDashBoardCompleted(this, new GetFewIssueForCommissionDashBoardCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFewIssueForCommissionDashBoardAsync(System.Guid PolicyId) {
            this.GetFewIssueForCommissionDashBoardAsync(PolicyId, null);
        }
        
        public void GetFewIssueForCommissionDashBoardAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetFewIssueForCommissionDashBoardDelegate == null)) {
                this.onBeginGetFewIssueForCommissionDashBoardDelegate = new BeginOperationDelegate(this.OnBeginGetFewIssueForCommissionDashBoard);
            }
            if ((this.onEndGetFewIssueForCommissionDashBoardDelegate == null)) {
                this.onEndGetFewIssueForCommissionDashBoardDelegate = new EndOperationDelegate(this.OnEndGetFewIssueForCommissionDashBoard);
            }
            if ((this.onGetFewIssueForCommissionDashBoardCompletedDelegate == null)) {
                this.onGetFewIssueForCommissionDashBoardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFewIssueForCommissionDashBoardCompleted);
            }
            base.InvokeAsync(this.onBeginGetFewIssueForCommissionDashBoardDelegate, new object[] {
                        PolicyId}, this.onEndGetFewIssueForCommissionDashBoardDelegate, this.onGetFewIssueForCommissionDashBoardCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.MasterIssuesOption FillMasterIssueOptions() {
            return base.Channel.FillMasterIssueOptions();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFillMasterIssueOptions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFillMasterIssueOptions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.MasterIssuesOption EndFillMasterIssueOptions(System.IAsyncResult result) {
            return base.Channel.EndFillMasterIssueOptions(result);
        }
        
        private System.IAsyncResult OnBeginFillMasterIssueOptions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginFillMasterIssueOptions(callback, asyncState);
        }
        
        private object[] OnEndFillMasterIssueOptions(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.MasterIssuesOption retVal = this.EndFillMasterIssueOptions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFillMasterIssueOptionsCompleted(object state) {
            if ((this.FillMasterIssueOptionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FillMasterIssueOptionsCompleted(this, new FillMasterIssueOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FillMasterIssueOptionsAsync() {
            this.FillMasterIssueOptionsAsync(null);
        }
        
        public void FillMasterIssueOptionsAsync(object userState) {
            if ((this.onBeginFillMasterIssueOptionsDelegate == null)) {
                this.onBeginFillMasterIssueOptionsDelegate = new BeginOperationDelegate(this.OnBeginFillMasterIssueOptions);
            }
            if ((this.onEndFillMasterIssueOptionsDelegate == null)) {
                this.onEndFillMasterIssueOptionsDelegate = new EndOperationDelegate(this.OnEndFillMasterIssueOptions);
            }
            if ((this.onFillMasterIssueOptionsCompletedDelegate == null)) {
                this.onFillMasterIssueOptionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFillMasterIssueOptionsCompleted);
            }
            base.InvokeAsync(this.onBeginFillMasterIssueOptionsDelegate, null, this.onEndFillMasterIssueOptionsDelegate, this.onFillMasterIssueOptionsCompletedDelegate, userState);
        }
        
        public void UpdateIssuesSrc(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue _DisplayFollowupIssue, int PreviousStatusId, System.Guid ModifiedBy) {
            base.Channel.UpdateIssuesSrc(_DisplayFollowupIssue, PreviousStatusId, ModifiedBy);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateIssuesSrc(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue _DisplayFollowupIssue, int PreviousStatusId, System.Guid ModifiedBy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateIssuesSrc(_DisplayFollowupIssue, PreviousStatusId, ModifiedBy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateIssuesSrc(System.IAsyncResult result) {
            base.Channel.EndUpdateIssuesSrc(result);
        }
        
        private System.IAsyncResult OnBeginUpdateIssuesSrc(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue _DisplayFollowupIssue = ((MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue)(inValues[0]));
            int PreviousStatusId = ((int)(inValues[1]));
            System.Guid ModifiedBy = ((System.Guid)(inValues[2]));
            return this.BeginUpdateIssuesSrc(_DisplayFollowupIssue, PreviousStatusId, ModifiedBy, callback, asyncState);
        }
        
        private object[] OnEndUpdateIssuesSrc(System.IAsyncResult result) {
            this.EndUpdateIssuesSrc(result);
            return null;
        }
        
        private void OnUpdateIssuesSrcCompleted(object state) {
            if ((this.UpdateIssuesSrcCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateIssuesSrcCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateIssuesSrcAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue _DisplayFollowupIssue, int PreviousStatusId, System.Guid ModifiedBy) {
            this.UpdateIssuesSrcAsync(_DisplayFollowupIssue, PreviousStatusId, ModifiedBy, null);
        }
        
        public void UpdateIssuesSrcAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayFollowupIssue _DisplayFollowupIssue, int PreviousStatusId, System.Guid ModifiedBy, object userState) {
            if ((this.onBeginUpdateIssuesSrcDelegate == null)) {
                this.onBeginUpdateIssuesSrcDelegate = new BeginOperationDelegate(this.OnBeginUpdateIssuesSrc);
            }
            if ((this.onEndUpdateIssuesSrcDelegate == null)) {
                this.onEndUpdateIssuesSrcDelegate = new EndOperationDelegate(this.OnEndUpdateIssuesSrc);
            }
            if ((this.onUpdateIssuesSrcCompletedDelegate == null)) {
                this.onUpdateIssuesSrcCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateIssuesSrcCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateIssuesSrcDelegate, new object[] {
                        _DisplayFollowupIssue,
                        PreviousStatusId,
                        ModifiedBy}, this.onEndUpdateIssuesSrcDelegate, this.onUpdateIssuesSrcCompletedDelegate, userState);
        }
        
        public System.Nullable<System.Guid> GetFollowUpIssueForPaymentEntry(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry) {
            return base.Channel.GetFollowUpIssueForPaymentEntry(PaymentEntry);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFollowUpIssueForPaymentEntry(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFollowUpIssueForPaymentEntry(PaymentEntry, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Nullable<System.Guid> EndGetFollowUpIssueForPaymentEntry(System.IAsyncResult result) {
            return base.Channel.EndGetFollowUpIssueForPaymentEntry(result);
        }
        
        private System.IAsyncResult OnBeginGetFollowUpIssueForPaymentEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost)(inValues[0]));
            return this.BeginGetFollowUpIssueForPaymentEntry(PaymentEntry, callback, asyncState);
        }
        
        private object[] OnEndGetFollowUpIssueForPaymentEntry(System.IAsyncResult result) {
            System.Nullable<System.Guid> retVal = this.EndGetFollowUpIssueForPaymentEntry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFollowUpIssueForPaymentEntryCompleted(object state) {
            if ((this.GetFollowUpIssueForPaymentEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFollowUpIssueForPaymentEntryCompleted(this, new GetFollowUpIssueForPaymentEntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFollowUpIssueForPaymentEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry) {
            this.GetFollowUpIssueForPaymentEntryAsync(PaymentEntry, null);
        }
        
        public void GetFollowUpIssueForPaymentEntryAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyPaymentEntriesPost PaymentEntry, object userState) {
            if ((this.onBeginGetFollowUpIssueForPaymentEntryDelegate == null)) {
                this.onBeginGetFollowUpIssueForPaymentEntryDelegate = new BeginOperationDelegate(this.OnBeginGetFollowUpIssueForPaymentEntry);
            }
            if ((this.onEndGetFollowUpIssueForPaymentEntryDelegate == null)) {
                this.onEndGetFollowUpIssueForPaymentEntryDelegate = new EndOperationDelegate(this.OnEndGetFollowUpIssueForPaymentEntry);
            }
            if ((this.onGetFollowUpIssueForPaymentEntryCompletedDelegate == null)) {
                this.onGetFollowUpIssueForPaymentEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFollowUpIssueForPaymentEntryCompleted);
            }
            base.InvokeAsync(this.onBeginGetFollowUpIssueForPaymentEntryDelegate, new object[] {
                        PaymentEntry}, this.onEndGetFollowUpIssueForPaymentEntryDelegate, this.onGetFollowUpIssueForPaymentEntryCompletedDelegate, userState);
        }
        
        public void DeleteIssue(System.Guid IssueID) {
            base.Channel.DeleteIssue(IssueID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteIssue(System.Guid IssueID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteIssue(IssueID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteIssue(System.IAsyncResult result) {
            base.Channel.EndDeleteIssue(result);
        }
        
        private System.IAsyncResult OnBeginDeleteIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid IssueID = ((System.Guid)(inValues[0]));
            return this.BeginDeleteIssue(IssueID, callback, asyncState);
        }
        
        private object[] OnEndDeleteIssue(System.IAsyncResult result) {
            this.EndDeleteIssue(result);
            return null;
        }
        
        private void OnDeleteIssueCompleted(object state) {
            if ((this.DeleteIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteIssueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteIssueAsync(System.Guid IssueID) {
            this.DeleteIssueAsync(IssueID, null);
        }
        
        public void DeleteIssueAsync(System.Guid IssueID, object userState) {
            if ((this.onBeginDeleteIssueDelegate == null)) {
                this.onBeginDeleteIssueDelegate = new BeginOperationDelegate(this.OnBeginDeleteIssue);
            }
            if ((this.onEndDeleteIssueDelegate == null)) {
                this.onEndDeleteIssueDelegate = new EndOperationDelegate(this.OnEndDeleteIssue);
            }
            if ((this.onDeleteIssueCompletedDelegate == null)) {
                this.onDeleteIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteIssueCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteIssueDelegate, new object[] {
                        IssueID}, this.onEndDeleteIssueDelegate, this.onDeleteIssueCompletedDelegate, userState);
        }
        
        public void RemoveCommisionIssue(System.Guid IssueID) {
            base.Channel.RemoveCommisionIssue(IssueID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveCommisionIssue(System.Guid IssueID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveCommisionIssue(IssueID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveCommisionIssue(System.IAsyncResult result) {
            base.Channel.EndRemoveCommisionIssue(result);
        }
        
        private System.IAsyncResult OnBeginRemoveCommisionIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid IssueID = ((System.Guid)(inValues[0]));
            return this.BeginRemoveCommisionIssue(IssueID, callback, asyncState);
        }
        
        private object[] OnEndRemoveCommisionIssue(System.IAsyncResult result) {
            this.EndRemoveCommisionIssue(result);
            return null;
        }
        
        private void OnRemoveCommisionIssueCompleted(object state) {
            if ((this.RemoveCommisionIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveCommisionIssueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveCommisionIssueAsync(System.Guid IssueID) {
            this.RemoveCommisionIssueAsync(IssueID, null);
        }
        
        public void RemoveCommisionIssueAsync(System.Guid IssueID, object userState) {
            if ((this.onBeginRemoveCommisionIssueDelegate == null)) {
                this.onBeginRemoveCommisionIssueDelegate = new BeginOperationDelegate(this.OnBeginRemoveCommisionIssue);
            }
            if ((this.onEndRemoveCommisionIssueDelegate == null)) {
                this.onEndRemoveCommisionIssueDelegate = new EndOperationDelegate(this.OnEndRemoveCommisionIssue);
            }
            if ((this.onRemoveCommisionIssueCompletedDelegate == null)) {
                this.onRemoveCommisionIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveCommisionIssueCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveCommisionIssueDelegate, new object[] {
                        IssueID}, this.onEndRemoveCommisionIssueDelegate, this.onRemoveCommisionIssueCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPayorSource")]
    public interface IPayorSource {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorSource/AddUpdatePayorSource", ReplyAction="http://tempuri.org/IPayorSource/AddUpdatePayorSourceResponse")]
        void AddUpdatePayorSource(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorSource/AddUpdatePayorSource", ReplyAction="http://tempuri.org/IPayorSource/AddUpdatePayorSourceResponse")]
        System.IAsyncResult BeginAddUpdatePayorSource(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePayorSource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorSource/GetPayorSource", ReplyAction="http://tempuri.org/IPayorSource/GetPayorSourceResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource GetPayorSource(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorSource/GetPayorSource", ReplyAction="http://tempuri.org/IPayorSource/GetPayorSourceResponse")]
        System.IAsyncResult BeginGetPayorSource(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource EndGetPayorSource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorSource/AddPayorConfigSource", ReplyAction="http://tempuri.org/IPayorSource/AddPayorConfigSourceResponse")]
        void AddPayorConfigSource(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorSource/AddPayorConfigSource", ReplyAction="http://tempuri.org/IPayorSource/AddPayorConfigSourceResponse")]
        System.IAsyncResult BeginAddPayorConfigSource(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source, System.AsyncCallback callback, object asyncState);
        
        void EndAddPayorConfigSource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorSource/UpdateFollowUpDateAndserviceStatus", ReplyAction="http://tempuri.org/IPayorSource/UpdateFollowUpDateAndserviceStatusResponse")]
        void UpdateFollowUpDateAndserviceStatus(string Name, string Value);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorSource/UpdateFollowUpDateAndserviceStatus", ReplyAction="http://tempuri.org/IPayorSource/UpdateFollowUpDateAndserviceStatusResponse")]
        System.IAsyncResult BeginUpdateFollowUpDateAndserviceStatus(string Name, string Value, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateFollowUpDateAndserviceStatus(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPayorSourceChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPayorSource, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayorSourceClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPayorSource>, MyAgencyVault.VM.MyAgencyVaultSvc.IPayorSource {
        
        private BeginOperationDelegate onBeginAddUpdatePayorSourceDelegate;
        
        private EndOperationDelegate onEndAddUpdatePayorSourceDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePayorSourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorSourceDelegate;
        
        private EndOperationDelegate onEndGetPayorSourceDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorSourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPayorConfigSourceDelegate;
        
        private EndOperationDelegate onEndAddPayorConfigSourceDelegate;
        
        private System.Threading.SendOrPostCallback onAddPayorConfigSourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFollowUpDateAndserviceStatusDelegate;
        
        private EndOperationDelegate onEndUpdateFollowUpDateAndserviceStatusDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFollowUpDateAndserviceStatusCompletedDelegate;
        
        public PayorSourceClient() {
        }
        
        public PayorSourceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PayorSourceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorSourceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorSourceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePayorSourceCompleted;
        
        public event System.EventHandler<GetPayorSourceCompletedEventArgs> GetPayorSourceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddPayorConfigSourceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateFollowUpDateAndserviceStatusCompleted;
        
        public void AddUpdatePayorSource(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source) {
            base.Channel.AddUpdatePayorSource(source);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePayorSource(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePayorSource(source, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePayorSource(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePayorSource(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePayorSource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource)(inValues[0]));
            return this.BeginAddUpdatePayorSource(source, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePayorSource(System.IAsyncResult result) {
            this.EndAddUpdatePayorSource(result);
            return null;
        }
        
        private void OnAddUpdatePayorSourceCompleted(object state) {
            if ((this.AddUpdatePayorSourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePayorSourceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePayorSourceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source) {
            this.AddUpdatePayorSourceAsync(source, null);
        }
        
        public void AddUpdatePayorSourceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source, object userState) {
            if ((this.onBeginAddUpdatePayorSourceDelegate == null)) {
                this.onBeginAddUpdatePayorSourceDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePayorSource);
            }
            if ((this.onEndAddUpdatePayorSourceDelegate == null)) {
                this.onEndAddUpdatePayorSourceDelegate = new EndOperationDelegate(this.OnEndAddUpdatePayorSource);
            }
            if ((this.onAddUpdatePayorSourceCompletedDelegate == null)) {
                this.onAddUpdatePayorSourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePayorSourceCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePayorSourceDelegate, new object[] {
                        source}, this.onEndAddUpdatePayorSourceDelegate, this.onAddUpdatePayorSourceCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource GetPayorSource(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source) {
            return base.Channel.GetPayorSource(source);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorSource(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorSource(source, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource EndGetPayorSource(System.IAsyncResult result) {
            return base.Channel.EndGetPayorSource(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorSource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource)(inValues[0]));
            return this.BeginGetPayorSource(source, callback, asyncState);
        }
        
        private object[] OnEndGetPayorSource(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource retVal = this.EndGetPayorSource(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorSourceCompleted(object state) {
            if ((this.GetPayorSourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorSourceCompleted(this, new GetPayorSourceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorSourceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source) {
            this.GetPayorSourceAsync(source, null);
        }
        
        public void GetPayorSourceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source, object userState) {
            if ((this.onBeginGetPayorSourceDelegate == null)) {
                this.onBeginGetPayorSourceDelegate = new BeginOperationDelegate(this.OnBeginGetPayorSource);
            }
            if ((this.onEndGetPayorSourceDelegate == null)) {
                this.onEndGetPayorSourceDelegate = new EndOperationDelegate(this.OnEndGetPayorSource);
            }
            if ((this.onGetPayorSourceCompletedDelegate == null)) {
                this.onGetPayorSourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorSourceCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorSourceDelegate, new object[] {
                        source}, this.onEndGetPayorSourceDelegate, this.onGetPayorSourceCompletedDelegate, userState);
        }
        
        public void AddPayorConfigSource(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source) {
            base.Channel.AddPayorConfigSource(source);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddPayorConfigSource(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPayorConfigSource(source, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddPayorConfigSource(System.IAsyncResult result) {
            base.Channel.EndAddPayorConfigSource(result);
        }
        
        private System.IAsyncResult OnBeginAddPayorConfigSource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource)(inValues[0]));
            return this.BeginAddPayorConfigSource(source, callback, asyncState);
        }
        
        private object[] OnEndAddPayorConfigSource(System.IAsyncResult result) {
            this.EndAddPayorConfigSource(result);
            return null;
        }
        
        private void OnAddPayorConfigSourceCompleted(object state) {
            if ((this.AddPayorConfigSourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPayorConfigSourceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPayorConfigSourceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source) {
            this.AddPayorConfigSourceAsync(source, null);
        }
        
        public void AddPayorConfigSourceAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorSource source, object userState) {
            if ((this.onBeginAddPayorConfigSourceDelegate == null)) {
                this.onBeginAddPayorConfigSourceDelegate = new BeginOperationDelegate(this.OnBeginAddPayorConfigSource);
            }
            if ((this.onEndAddPayorConfigSourceDelegate == null)) {
                this.onEndAddPayorConfigSourceDelegate = new EndOperationDelegate(this.OnEndAddPayorConfigSource);
            }
            if ((this.onAddPayorConfigSourceCompletedDelegate == null)) {
                this.onAddPayorConfigSourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPayorConfigSourceCompleted);
            }
            base.InvokeAsync(this.onBeginAddPayorConfigSourceDelegate, new object[] {
                        source}, this.onEndAddPayorConfigSourceDelegate, this.onAddPayorConfigSourceCompletedDelegate, userState);
        }
        
        public void UpdateFollowUpDateAndserviceStatus(string Name, string Value) {
            base.Channel.UpdateFollowUpDateAndserviceStatus(Name, Value);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateFollowUpDateAndserviceStatus(string Name, string Value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFollowUpDateAndserviceStatus(Name, Value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateFollowUpDateAndserviceStatus(System.IAsyncResult result) {
            base.Channel.EndUpdateFollowUpDateAndserviceStatus(result);
        }
        
        private System.IAsyncResult OnBeginUpdateFollowUpDateAndserviceStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Name = ((string)(inValues[0]));
            string Value = ((string)(inValues[1]));
            return this.BeginUpdateFollowUpDateAndserviceStatus(Name, Value, callback, asyncState);
        }
        
        private object[] OnEndUpdateFollowUpDateAndserviceStatus(System.IAsyncResult result) {
            this.EndUpdateFollowUpDateAndserviceStatus(result);
            return null;
        }
        
        private void OnUpdateFollowUpDateAndserviceStatusCompleted(object state) {
            if ((this.UpdateFollowUpDateAndserviceStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFollowUpDateAndserviceStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFollowUpDateAndserviceStatusAsync(string Name, string Value) {
            this.UpdateFollowUpDateAndserviceStatusAsync(Name, Value, null);
        }
        
        public void UpdateFollowUpDateAndserviceStatusAsync(string Name, string Value, object userState) {
            if ((this.onBeginUpdateFollowUpDateAndserviceStatusDelegate == null)) {
                this.onBeginUpdateFollowUpDateAndserviceStatusDelegate = new BeginOperationDelegate(this.OnBeginUpdateFollowUpDateAndserviceStatus);
            }
            if ((this.onEndUpdateFollowUpDateAndserviceStatusDelegate == null)) {
                this.onEndUpdateFollowUpDateAndserviceStatusDelegate = new EndOperationDelegate(this.OnEndUpdateFollowUpDateAndserviceStatus);
            }
            if ((this.onUpdateFollowUpDateAndserviceStatusCompletedDelegate == null)) {
                this.onUpdateFollowUpDateAndserviceStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFollowUpDateAndserviceStatusCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFollowUpDateAndserviceStatusDelegate, new object[] {
                        Name,
                        Value}, this.onEndUpdateFollowUpDateAndserviceStatusDelegate, this.onUpdateFollowUpDateAndserviceStatusCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ILicenseeNote")]
    public interface ILicenseeNote {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseeNote/AddUpdateLicenseeNote", ReplyAction="http://tempuri.org/ILicenseeNote/AddUpdateLicenseeNoteResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote AddUpdateLicenseeNote(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicenseeNote/AddUpdateLicenseeNote", ReplyAction="http://tempuri.org/ILicenseeNote/AddUpdateLicenseeNoteResponse")]
        System.IAsyncResult BeginAddUpdateLicenseeNote(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote EndAddUpdateLicenseeNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseeNote/DeleteLicenseeNote", ReplyAction="http://tempuri.org/ILicenseeNote/DeleteLicenseeNoteResponse")]
        void DeleteLicenseeNote(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicenseeNote/DeleteLicenseeNote", ReplyAction="http://tempuri.org/ILicenseeNote/DeleteLicenseeNoteResponse")]
        System.IAsyncResult BeginDeleteLicenseeNote(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteLicenseeNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseeNote/IsValidLicenseeNote", ReplyAction="http://tempuri.org/ILicenseeNote/IsValidLicenseeNoteResponse")]
        bool IsValidLicenseeNote(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicenseeNote/IsValidLicenseeNote", ReplyAction="http://tempuri.org/ILicenseeNote/IsValidLicenseeNoteResponse")]
        System.IAsyncResult BeginIsValidLicenseeNote(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidLicenseeNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseeNote/GetLicenseeNoteOfID", ReplyAction="http://tempuri.org/ILicenseeNote/GetLicenseeNoteOfIDResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote GetLicenseeNoteOfID(System.Guid Id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicenseeNote/GetLicenseeNoteOfID", ReplyAction="http://tempuri.org/ILicenseeNote/GetLicenseeNoteOfIDResponse")]
        System.IAsyncResult BeginGetLicenseeNoteOfID(System.Guid Id, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote EndGetLicenseeNoteOfID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseeNote/GetLicenseeNotes", ReplyAction="http://tempuri.org/ILicenseeNote/GetLicenseeNotesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote> GetLicenseeNotes(System.Guid lincenseeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicenseeNote/GetLicenseeNotes", ReplyAction="http://tempuri.org/ILicenseeNote/GetLicenseeNotesResponse")]
        System.IAsyncResult BeginGetLicenseeNotes(System.Guid lincenseeID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote> EndGetLicenseeNotes(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILicenseeNoteChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ILicenseeNote, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdateLicenseeNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdateLicenseeNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidLicenseeNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidLicenseeNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLicenseeNoteOfIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLicenseeNoteOfIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLicenseeNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLicenseeNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LicenseeNoteClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ILicenseeNote>, MyAgencyVault.VM.MyAgencyVaultSvc.ILicenseeNote {
        
        private BeginOperationDelegate onBeginAddUpdateLicenseeNoteDelegate;
        
        private EndOperationDelegate onEndAddUpdateLicenseeNoteDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateLicenseeNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteLicenseeNoteDelegate;
        
        private EndOperationDelegate onEndDeleteLicenseeNoteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteLicenseeNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidLicenseeNoteDelegate;
        
        private EndOperationDelegate onEndIsValidLicenseeNoteDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidLicenseeNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLicenseeNoteOfIDDelegate;
        
        private EndOperationDelegate onEndGetLicenseeNoteOfIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetLicenseeNoteOfIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLicenseeNotesDelegate;
        
        private EndOperationDelegate onEndGetLicenseeNotesDelegate;
        
        private System.Threading.SendOrPostCallback onGetLicenseeNotesCompletedDelegate;
        
        public LicenseeNoteClient() {
        }
        
        public LicenseeNoteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LicenseeNoteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseeNoteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseeNoteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<AddUpdateLicenseeNoteCompletedEventArgs> AddUpdateLicenseeNoteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteLicenseeNoteCompleted;
        
        public event System.EventHandler<IsValidLicenseeNoteCompletedEventArgs> IsValidLicenseeNoteCompleted;
        
        public event System.EventHandler<GetLicenseeNoteOfIDCompletedEventArgs> GetLicenseeNoteOfIDCompleted;
        
        public event System.EventHandler<GetLicenseeNotesCompletedEventArgs> GetLicenseeNotesCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote AddUpdateLicenseeNote(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote) {
            return base.Channel.AddUpdateLicenseeNote(LNote);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateLicenseeNote(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateLicenseeNote(LNote, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote EndAddUpdateLicenseeNote(System.IAsyncResult result) {
            return base.Channel.EndAddUpdateLicenseeNote(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateLicenseeNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote = ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote)(inValues[0]));
            return this.BeginAddUpdateLicenseeNote(LNote, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateLicenseeNote(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote retVal = this.EndAddUpdateLicenseeNote(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdateLicenseeNoteCompleted(object state) {
            if ((this.AddUpdateLicenseeNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateLicenseeNoteCompleted(this, new AddUpdateLicenseeNoteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateLicenseeNoteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote) {
            this.AddUpdateLicenseeNoteAsync(LNote, null);
        }
        
        public void AddUpdateLicenseeNoteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote, object userState) {
            if ((this.onBeginAddUpdateLicenseeNoteDelegate == null)) {
                this.onBeginAddUpdateLicenseeNoteDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateLicenseeNote);
            }
            if ((this.onEndAddUpdateLicenseeNoteDelegate == null)) {
                this.onEndAddUpdateLicenseeNoteDelegate = new EndOperationDelegate(this.OnEndAddUpdateLicenseeNote);
            }
            if ((this.onAddUpdateLicenseeNoteCompletedDelegate == null)) {
                this.onAddUpdateLicenseeNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateLicenseeNoteCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateLicenseeNoteDelegate, new object[] {
                        LNote}, this.onEndAddUpdateLicenseeNoteDelegate, this.onAddUpdateLicenseeNoteCompletedDelegate, userState);
        }
        
        public void DeleteLicenseeNote(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote) {
            base.Channel.DeleteLicenseeNote(LNote);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteLicenseeNote(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteLicenseeNote(LNote, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteLicenseeNote(System.IAsyncResult result) {
            base.Channel.EndDeleteLicenseeNote(result);
        }
        
        private System.IAsyncResult OnBeginDeleteLicenseeNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote = ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote)(inValues[0]));
            return this.BeginDeleteLicenseeNote(LNote, callback, asyncState);
        }
        
        private object[] OnEndDeleteLicenseeNote(System.IAsyncResult result) {
            this.EndDeleteLicenseeNote(result);
            return null;
        }
        
        private void OnDeleteLicenseeNoteCompleted(object state) {
            if ((this.DeleteLicenseeNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteLicenseeNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteLicenseeNoteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote) {
            this.DeleteLicenseeNoteAsync(LNote, null);
        }
        
        public void DeleteLicenseeNoteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote, object userState) {
            if ((this.onBeginDeleteLicenseeNoteDelegate == null)) {
                this.onBeginDeleteLicenseeNoteDelegate = new BeginOperationDelegate(this.OnBeginDeleteLicenseeNote);
            }
            if ((this.onEndDeleteLicenseeNoteDelegate == null)) {
                this.onEndDeleteLicenseeNoteDelegate = new EndOperationDelegate(this.OnEndDeleteLicenseeNote);
            }
            if ((this.onDeleteLicenseeNoteCompletedDelegate == null)) {
                this.onDeleteLicenseeNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteLicenseeNoteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteLicenseeNoteDelegate, new object[] {
                        LNote}, this.onEndDeleteLicenseeNoteDelegate, this.onDeleteLicenseeNoteCompletedDelegate, userState);
        }
        
        public bool IsValidLicenseeNote(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote) {
            return base.Channel.IsValidLicenseeNote(LNote);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidLicenseeNote(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidLicenseeNote(LNote, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidLicenseeNote(System.IAsyncResult result) {
            return base.Channel.EndIsValidLicenseeNote(result);
        }
        
        private System.IAsyncResult OnBeginIsValidLicenseeNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote = ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote)(inValues[0]));
            return this.BeginIsValidLicenseeNote(LNote, callback, asyncState);
        }
        
        private object[] OnEndIsValidLicenseeNote(System.IAsyncResult result) {
            bool retVal = this.EndIsValidLicenseeNote(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidLicenseeNoteCompleted(object state) {
            if ((this.IsValidLicenseeNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidLicenseeNoteCompleted(this, new IsValidLicenseeNoteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidLicenseeNoteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote) {
            this.IsValidLicenseeNoteAsync(LNote, null);
        }
        
        public void IsValidLicenseeNoteAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote LNote, object userState) {
            if ((this.onBeginIsValidLicenseeNoteDelegate == null)) {
                this.onBeginIsValidLicenseeNoteDelegate = new BeginOperationDelegate(this.OnBeginIsValidLicenseeNote);
            }
            if ((this.onEndIsValidLicenseeNoteDelegate == null)) {
                this.onEndIsValidLicenseeNoteDelegate = new EndOperationDelegate(this.OnEndIsValidLicenseeNote);
            }
            if ((this.onIsValidLicenseeNoteCompletedDelegate == null)) {
                this.onIsValidLicenseeNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidLicenseeNoteCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidLicenseeNoteDelegate, new object[] {
                        LNote}, this.onEndIsValidLicenseeNoteDelegate, this.onIsValidLicenseeNoteCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote GetLicenseeNoteOfID(System.Guid Id) {
            return base.Channel.GetLicenseeNoteOfID(Id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLicenseeNoteOfID(System.Guid Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLicenseeNoteOfID(Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote EndGetLicenseeNoteOfID(System.IAsyncResult result) {
            return base.Channel.EndGetLicenseeNoteOfID(result);
        }
        
        private System.IAsyncResult OnBeginGetLicenseeNoteOfID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid Id = ((System.Guid)(inValues[0]));
            return this.BeginGetLicenseeNoteOfID(Id, callback, asyncState);
        }
        
        private object[] OnEndGetLicenseeNoteOfID(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote retVal = this.EndGetLicenseeNoteOfID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLicenseeNoteOfIDCompleted(object state) {
            if ((this.GetLicenseeNoteOfIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLicenseeNoteOfIDCompleted(this, new GetLicenseeNoteOfIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLicenseeNoteOfIDAsync(System.Guid Id) {
            this.GetLicenseeNoteOfIDAsync(Id, null);
        }
        
        public void GetLicenseeNoteOfIDAsync(System.Guid Id, object userState) {
            if ((this.onBeginGetLicenseeNoteOfIDDelegate == null)) {
                this.onBeginGetLicenseeNoteOfIDDelegate = new BeginOperationDelegate(this.OnBeginGetLicenseeNoteOfID);
            }
            if ((this.onEndGetLicenseeNoteOfIDDelegate == null)) {
                this.onEndGetLicenseeNoteOfIDDelegate = new EndOperationDelegate(this.OnEndGetLicenseeNoteOfID);
            }
            if ((this.onGetLicenseeNoteOfIDCompletedDelegate == null)) {
                this.onGetLicenseeNoteOfIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLicenseeNoteOfIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetLicenseeNoteOfIDDelegate, new object[] {
                        Id}, this.onEndGetLicenseeNoteOfIDDelegate, this.onGetLicenseeNoteOfIDCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote> GetLicenseeNotes(System.Guid lincenseeID) {
            return base.Channel.GetLicenseeNotes(lincenseeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLicenseeNotes(System.Guid lincenseeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLicenseeNotes(lincenseeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote> EndGetLicenseeNotes(System.IAsyncResult result) {
            return base.Channel.EndGetLicenseeNotes(result);
        }
        
        private System.IAsyncResult OnBeginGetLicenseeNotes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid lincenseeID = ((System.Guid)(inValues[0]));
            return this.BeginGetLicenseeNotes(lincenseeID, callback, asyncState);
        }
        
        private object[] OnEndGetLicenseeNotes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeNote> retVal = this.EndGetLicenseeNotes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLicenseeNotesCompleted(object state) {
            if ((this.GetLicenseeNotesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLicenseeNotesCompleted(this, new GetLicenseeNotesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLicenseeNotesAsync(System.Guid lincenseeID) {
            this.GetLicenseeNotesAsync(lincenseeID, null);
        }
        
        public void GetLicenseeNotesAsync(System.Guid lincenseeID, object userState) {
            if ((this.onBeginGetLicenseeNotesDelegate == null)) {
                this.onBeginGetLicenseeNotesDelegate = new BeginOperationDelegate(this.OnBeginGetLicenseeNotes);
            }
            if ((this.onEndGetLicenseeNotesDelegate == null)) {
                this.onEndGetLicenseeNotesDelegate = new EndOperationDelegate(this.OnEndGetLicenseeNotes);
            }
            if ((this.onGetLicenseeNotesCompletedDelegate == null)) {
                this.onGetLicenseeNotesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLicenseeNotesCompleted);
            }
            base.InvokeAsync(this.onBeginGetLicenseeNotesDelegate, new object[] {
                        lincenseeID}, this.onEndGetLicenseeNotesDelegate, this.onGetLicenseeNotesCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPayorDefaults")]
    public interface IPayorDefaults {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorDefaults/AddUpdatePayorDefaults", ReplyAction="http://tempuri.org/IPayorDefaults/AddUpdatePayorDefaultsResponse")]
        void AddUpdatePayorDefaults(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorDefaults/AddUpdatePayorDefaults", ReplyAction="http://tempuri.org/IPayorDefaults/AddUpdatePayorDefaultsResponse")]
        System.IAsyncResult BeginAddUpdatePayorDefaults(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePayorDefaults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorDefaults/DeletePayorDefaults", ReplyAction="http://tempuri.org/IPayorDefaults/DeletePayorDefaultsResponse")]
        void DeletePayorDefaults(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorDefaults/DeletePayorDefaults", ReplyAction="http://tempuri.org/IPayorDefaults/DeletePayorDefaultsResponse")]
        System.IAsyncResult BeginDeletePayorDefaults(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePayorDefaults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorDefaults/GetPayorDefaults", ReplyAction="http://tempuri.org/IPayorDefaults/GetPayorDefaultsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults> GetPayorDefaults();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorDefaults/GetPayorDefaults", ReplyAction="http://tempuri.org/IPayorDefaults/GetPayorDefaultsResponse")]
        System.IAsyncResult BeginGetPayorDefaults(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults> EndGetPayorDefaults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorDefaults/IsValidPayorDefaults", ReplyAction="http://tempuri.org/IPayorDefaults/IsValidPayorDefaultsResponse")]
        bool IsValidPayorDefaults(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorDefaults/IsValidPayorDefaults", ReplyAction="http://tempuri.org/IPayorDefaults/IsValidPayorDefaultsResponse")]
        System.IAsyncResult BeginIsValidPayorDefaults(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidPayorDefaults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorDefaults/UpdateStatementDates", ReplyAction="http://tempuri.org/IPayorDefaults/UpdateStatementDatesResponse")]
        void UpdateStatementDates(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorDefaults/UpdateStatementDates", ReplyAction="http://tempuri.org/IPayorDefaults/UpdateStatementDatesResponse")]
        System.IAsyncResult BeginUpdateStatementDates(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateStatementDates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorDefaults/GetPayorDefaultBy", ReplyAction="http://tempuri.org/IPayorDefaults/GetPayorDefaultByResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults GetPayorDefaultBy(System.Guid globalPayerId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorDefaults/GetPayorDefaultBy", ReplyAction="http://tempuri.org/IPayorDefaults/GetPayorDefaultByResponse")]
        System.IAsyncResult BeginGetPayorDefaultBy(System.Guid globalPayerId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults EndGetPayorDefaultBy(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPayorDefaultsChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPayorDefaults, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorDefaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorDefaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidPayorDefaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidPayorDefaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorDefaultByCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorDefaultByCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayorDefaultsClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPayorDefaults>, MyAgencyVault.VM.MyAgencyVaultSvc.IPayorDefaults {
        
        private BeginOperationDelegate onBeginAddUpdatePayorDefaultsDelegate;
        
        private EndOperationDelegate onEndAddUpdatePayorDefaultsDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePayorDefaultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePayorDefaultsDelegate;
        
        private EndOperationDelegate onEndDeletePayorDefaultsDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePayorDefaultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorDefaultsDelegate;
        
        private EndOperationDelegate onEndGetPayorDefaultsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorDefaultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidPayorDefaultsDelegate;
        
        private EndOperationDelegate onEndIsValidPayorDefaultsDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidPayorDefaultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateStatementDatesDelegate;
        
        private EndOperationDelegate onEndUpdateStatementDatesDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateStatementDatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorDefaultByDelegate;
        
        private EndOperationDelegate onEndGetPayorDefaultByDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorDefaultByCompletedDelegate;
        
        public PayorDefaultsClient() {
        }
        
        public PayorDefaultsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PayorDefaultsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorDefaultsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorDefaultsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePayorDefaultsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePayorDefaultsCompleted;
        
        public event System.EventHandler<GetPayorDefaultsCompletedEventArgs> GetPayorDefaultsCompleted;
        
        public event System.EventHandler<IsValidPayorDefaultsCompletedEventArgs> IsValidPayorDefaultsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateStatementDatesCompleted;
        
        public event System.EventHandler<GetPayorDefaultByCompletedEventArgs> GetPayorDefaultByCompleted;
        
        public void AddUpdatePayorDefaults(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults) {
            base.Channel.AddUpdatePayorDefaults(PyrToolDafults);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePayorDefaults(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePayorDefaults(PyrToolDafults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePayorDefaults(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePayorDefaults(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePayorDefaults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults)(inValues[0]));
            return this.BeginAddUpdatePayorDefaults(PyrToolDafults, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePayorDefaults(System.IAsyncResult result) {
            this.EndAddUpdatePayorDefaults(result);
            return null;
        }
        
        private void OnAddUpdatePayorDefaultsCompleted(object state) {
            if ((this.AddUpdatePayorDefaultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePayorDefaultsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePayorDefaultsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults) {
            this.AddUpdatePayorDefaultsAsync(PyrToolDafults, null);
        }
        
        public void AddUpdatePayorDefaultsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults, object userState) {
            if ((this.onBeginAddUpdatePayorDefaultsDelegate == null)) {
                this.onBeginAddUpdatePayorDefaultsDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePayorDefaults);
            }
            if ((this.onEndAddUpdatePayorDefaultsDelegate == null)) {
                this.onEndAddUpdatePayorDefaultsDelegate = new EndOperationDelegate(this.OnEndAddUpdatePayorDefaults);
            }
            if ((this.onAddUpdatePayorDefaultsCompletedDelegate == null)) {
                this.onAddUpdatePayorDefaultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePayorDefaultsCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePayorDefaultsDelegate, new object[] {
                        PyrToolDafults}, this.onEndAddUpdatePayorDefaultsDelegate, this.onAddUpdatePayorDefaultsCompletedDelegate, userState);
        }
        
        public void DeletePayorDefaults(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults) {
            base.Channel.DeletePayorDefaults(PyrToolDafults);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePayorDefaults(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePayorDefaults(PyrToolDafults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePayorDefaults(System.IAsyncResult result) {
            base.Channel.EndDeletePayorDefaults(result);
        }
        
        private System.IAsyncResult OnBeginDeletePayorDefaults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults)(inValues[0]));
            return this.BeginDeletePayorDefaults(PyrToolDafults, callback, asyncState);
        }
        
        private object[] OnEndDeletePayorDefaults(System.IAsyncResult result) {
            this.EndDeletePayorDefaults(result);
            return null;
        }
        
        private void OnDeletePayorDefaultsCompleted(object state) {
            if ((this.DeletePayorDefaultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePayorDefaultsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePayorDefaultsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults) {
            this.DeletePayorDefaultsAsync(PyrToolDafults, null);
        }
        
        public void DeletePayorDefaultsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults, object userState) {
            if ((this.onBeginDeletePayorDefaultsDelegate == null)) {
                this.onBeginDeletePayorDefaultsDelegate = new BeginOperationDelegate(this.OnBeginDeletePayorDefaults);
            }
            if ((this.onEndDeletePayorDefaultsDelegate == null)) {
                this.onEndDeletePayorDefaultsDelegate = new EndOperationDelegate(this.OnEndDeletePayorDefaults);
            }
            if ((this.onDeletePayorDefaultsCompletedDelegate == null)) {
                this.onDeletePayorDefaultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePayorDefaultsCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePayorDefaultsDelegate, new object[] {
                        PyrToolDafults}, this.onEndDeletePayorDefaultsDelegate, this.onDeletePayorDefaultsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults> GetPayorDefaults() {
            return base.Channel.GetPayorDefaults();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorDefaults(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorDefaults(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults> EndGetPayorDefaults(System.IAsyncResult result) {
            return base.Channel.EndGetPayorDefaults(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorDefaults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPayorDefaults(callback, asyncState);
        }
        
        private object[] OnEndGetPayorDefaults(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults> retVal = this.EndGetPayorDefaults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorDefaultsCompleted(object state) {
            if ((this.GetPayorDefaultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorDefaultsCompleted(this, new GetPayorDefaultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorDefaultsAsync() {
            this.GetPayorDefaultsAsync(null);
        }
        
        public void GetPayorDefaultsAsync(object userState) {
            if ((this.onBeginGetPayorDefaultsDelegate == null)) {
                this.onBeginGetPayorDefaultsDelegate = new BeginOperationDelegate(this.OnBeginGetPayorDefaults);
            }
            if ((this.onEndGetPayorDefaultsDelegate == null)) {
                this.onEndGetPayorDefaultsDelegate = new EndOperationDelegate(this.OnEndGetPayorDefaults);
            }
            if ((this.onGetPayorDefaultsCompletedDelegate == null)) {
                this.onGetPayorDefaultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorDefaultsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorDefaultsDelegate, null, this.onEndGetPayorDefaultsDelegate, this.onGetPayorDefaultsCompletedDelegate, userState);
        }
        
        public bool IsValidPayorDefaults(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults) {
            return base.Channel.IsValidPayorDefaults(PyrToolDafults);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidPayorDefaults(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidPayorDefaults(PyrToolDafults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidPayorDefaults(System.IAsyncResult result) {
            return base.Channel.EndIsValidPayorDefaults(result);
        }
        
        private System.IAsyncResult OnBeginIsValidPayorDefaults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults)(inValues[0]));
            return this.BeginIsValidPayorDefaults(PyrToolDafults, callback, asyncState);
        }
        
        private object[] OnEndIsValidPayorDefaults(System.IAsyncResult result) {
            bool retVal = this.EndIsValidPayorDefaults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidPayorDefaultsCompleted(object state) {
            if ((this.IsValidPayorDefaultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidPayorDefaultsCompleted(this, new IsValidPayorDefaultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidPayorDefaultsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults) {
            this.IsValidPayorDefaultsAsync(PyrToolDafults, null);
        }
        
        public void IsValidPayorDefaultsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults, object userState) {
            if ((this.onBeginIsValidPayorDefaultsDelegate == null)) {
                this.onBeginIsValidPayorDefaultsDelegate = new BeginOperationDelegate(this.OnBeginIsValidPayorDefaults);
            }
            if ((this.onEndIsValidPayorDefaultsDelegate == null)) {
                this.onEndIsValidPayorDefaultsDelegate = new EndOperationDelegate(this.OnEndIsValidPayorDefaults);
            }
            if ((this.onIsValidPayorDefaultsCompletedDelegate == null)) {
                this.onIsValidPayorDefaultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidPayorDefaultsCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidPayorDefaultsDelegate, new object[] {
                        PyrToolDafults}, this.onEndIsValidPayorDefaultsDelegate, this.onIsValidPayorDefaultsCompletedDelegate, userState);
        }
        
        public void UpdateStatementDates(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults) {
            base.Channel.UpdateStatementDates(PyrToolDafults);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateStatementDates(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateStatementDates(PyrToolDafults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateStatementDates(System.IAsyncResult result) {
            base.Channel.EndUpdateStatementDates(result);
        }
        
        private System.IAsyncResult OnBeginUpdateStatementDates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults)(inValues[0]));
            return this.BeginUpdateStatementDates(PyrToolDafults, callback, asyncState);
        }
        
        private object[] OnEndUpdateStatementDates(System.IAsyncResult result) {
            this.EndUpdateStatementDates(result);
            return null;
        }
        
        private void OnUpdateStatementDatesCompleted(object state) {
            if ((this.UpdateStatementDatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateStatementDatesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateStatementDatesAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults) {
            this.UpdateStatementDatesAsync(PyrToolDafults, null);
        }
        
        public void UpdateStatementDatesAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults PyrToolDafults, object userState) {
            if ((this.onBeginUpdateStatementDatesDelegate == null)) {
                this.onBeginUpdateStatementDatesDelegate = new BeginOperationDelegate(this.OnBeginUpdateStatementDates);
            }
            if ((this.onEndUpdateStatementDatesDelegate == null)) {
                this.onEndUpdateStatementDatesDelegate = new EndOperationDelegate(this.OnEndUpdateStatementDates);
            }
            if ((this.onUpdateStatementDatesCompletedDelegate == null)) {
                this.onUpdateStatementDatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateStatementDatesCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateStatementDatesDelegate, new object[] {
                        PyrToolDafults}, this.onEndUpdateStatementDatesDelegate, this.onUpdateStatementDatesCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults GetPayorDefaultBy(System.Guid globalPayerId) {
            return base.Channel.GetPayorDefaultBy(globalPayerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorDefaultBy(System.Guid globalPayerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorDefaultBy(globalPayerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults EndGetPayorDefaultBy(System.IAsyncResult result) {
            return base.Channel.EndGetPayorDefaultBy(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorDefaultBy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid globalPayerId = ((System.Guid)(inValues[0]));
            return this.BeginGetPayorDefaultBy(globalPayerId, callback, asyncState);
        }
        
        private object[] OnEndGetPayorDefaultBy(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorDefaults retVal = this.EndGetPayorDefaultBy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorDefaultByCompleted(object state) {
            if ((this.GetPayorDefaultByCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorDefaultByCompleted(this, new GetPayorDefaultByCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorDefaultByAsync(System.Guid globalPayerId) {
            this.GetPayorDefaultByAsync(globalPayerId, null);
        }
        
        public void GetPayorDefaultByAsync(System.Guid globalPayerId, object userState) {
            if ((this.onBeginGetPayorDefaultByDelegate == null)) {
                this.onBeginGetPayorDefaultByDelegate = new BeginOperationDelegate(this.OnBeginGetPayorDefaultBy);
            }
            if ((this.onEndGetPayorDefaultByDelegate == null)) {
                this.onEndGetPayorDefaultByDelegate = new EndOperationDelegate(this.OnEndGetPayorDefaultBy);
            }
            if ((this.onGetPayorDefaultByCompletedDelegate == null)) {
                this.onGetPayorDefaultByCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorDefaultByCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorDefaultByDelegate, new object[] {
                        globalPayerId}, this.onEndGetPayorDefaultByDelegate, this.onGetPayorDefaultByCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IInvoiceLine")]
    public interface IInvoiceLine {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceLine/getInvoiceLines", ReplyAction="http://tempuri.org/IInvoiceLine/getInvoiceLinesResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLine getInvoiceLines(long invoiceId, bool includePolicyData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInvoiceLine/getInvoiceLines", ReplyAction="http://tempuri.org/IInvoiceLine/getInvoiceLinesResponse")]
        System.IAsyncResult BegingetInvoiceLines(long invoiceId, bool includePolicyData, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLine EndgetInvoiceLines(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceLine/getInvoiceLinesForJournal", ReplyAction="http://tempuri.org/IInvoiceLine/getInvoiceLinesForJournalResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineJournalData> getInvoiceLinesForJournal(System.Guid licenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInvoiceLine/getInvoiceLinesForJournal", ReplyAction="http://tempuri.org/IInvoiceLine/getInvoiceLinesForJournalResponse")]
        System.IAsyncResult BegingetInvoiceLinesForJournal(System.Guid licenseeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineJournalData> EndgetInvoiceLinesForJournal(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInvoiceLineChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IInvoiceLine, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getInvoiceLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getInvoiceLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLine Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLine)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getInvoiceLinesForJournalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getInvoiceLinesForJournalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineJournalData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineJournalData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InvoiceLineClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IInvoiceLine>, MyAgencyVault.VM.MyAgencyVaultSvc.IInvoiceLine {
        
        private BeginOperationDelegate onBegingetInvoiceLinesDelegate;
        
        private EndOperationDelegate onEndgetInvoiceLinesDelegate;
        
        private System.Threading.SendOrPostCallback ongetInvoiceLinesCompletedDelegate;
        
        private BeginOperationDelegate onBegingetInvoiceLinesForJournalDelegate;
        
        private EndOperationDelegate onEndgetInvoiceLinesForJournalDelegate;
        
        private System.Threading.SendOrPostCallback ongetInvoiceLinesForJournalCompletedDelegate;
        
        public InvoiceLineClient() {
        }
        
        public InvoiceLineClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InvoiceLineClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvoiceLineClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvoiceLineClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<getInvoiceLinesCompletedEventArgs> getInvoiceLinesCompleted;
        
        public event System.EventHandler<getInvoiceLinesForJournalCompletedEventArgs> getInvoiceLinesForJournalCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLine getInvoiceLines(long invoiceId, bool includePolicyData) {
            return base.Channel.getInvoiceLines(invoiceId, includePolicyData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetInvoiceLines(long invoiceId, bool includePolicyData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetInvoiceLines(invoiceId, includePolicyData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLine EndgetInvoiceLines(System.IAsyncResult result) {
            return base.Channel.EndgetInvoiceLines(result);
        }
        
        private System.IAsyncResult OnBegingetInvoiceLines(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long invoiceId = ((long)(inValues[0]));
            bool includePolicyData = ((bool)(inValues[1]));
            return this.BegingetInvoiceLines(invoiceId, includePolicyData, callback, asyncState);
        }
        
        private object[] OnEndgetInvoiceLines(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLine retVal = this.EndgetInvoiceLines(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetInvoiceLinesCompleted(object state) {
            if ((this.getInvoiceLinesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getInvoiceLinesCompleted(this, new getInvoiceLinesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getInvoiceLinesAsync(long invoiceId, bool includePolicyData) {
            this.getInvoiceLinesAsync(invoiceId, includePolicyData, null);
        }
        
        public void getInvoiceLinesAsync(long invoiceId, bool includePolicyData, object userState) {
            if ((this.onBegingetInvoiceLinesDelegate == null)) {
                this.onBegingetInvoiceLinesDelegate = new BeginOperationDelegate(this.OnBegingetInvoiceLines);
            }
            if ((this.onEndgetInvoiceLinesDelegate == null)) {
                this.onEndgetInvoiceLinesDelegate = new EndOperationDelegate(this.OnEndgetInvoiceLines);
            }
            if ((this.ongetInvoiceLinesCompletedDelegate == null)) {
                this.ongetInvoiceLinesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetInvoiceLinesCompleted);
            }
            base.InvokeAsync(this.onBegingetInvoiceLinesDelegate, new object[] {
                        invoiceId,
                        includePolicyData}, this.onEndgetInvoiceLinesDelegate, this.ongetInvoiceLinesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineJournalData> getInvoiceLinesForJournal(System.Guid licenseeId) {
            return base.Channel.getInvoiceLinesForJournal(licenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetInvoiceLinesForJournal(System.Guid licenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetInvoiceLinesForJournal(licenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineJournalData> EndgetInvoiceLinesForJournal(System.IAsyncResult result) {
            return base.Channel.EndgetInvoiceLinesForJournal(result);
        }
        
        private System.IAsyncResult OnBegingetInvoiceLinesForJournal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licenseeId = ((System.Guid)(inValues[0]));
            return this.BegingetInvoiceLinesForJournal(licenseeId, callback, asyncState);
        }
        
        private object[] OnEndgetInvoiceLinesForJournal(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InvoiceLineJournalData> retVal = this.EndgetInvoiceLinesForJournal(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetInvoiceLinesForJournalCompleted(object state) {
            if ((this.getInvoiceLinesForJournalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getInvoiceLinesForJournalCompleted(this, new getInvoiceLinesForJournalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getInvoiceLinesForJournalAsync(System.Guid licenseeId) {
            this.getInvoiceLinesForJournalAsync(licenseeId, null);
        }
        
        public void getInvoiceLinesForJournalAsync(System.Guid licenseeId, object userState) {
            if ((this.onBegingetInvoiceLinesForJournalDelegate == null)) {
                this.onBegingetInvoiceLinesForJournalDelegate = new BeginOperationDelegate(this.OnBegingetInvoiceLinesForJournal);
            }
            if ((this.onEndgetInvoiceLinesForJournalDelegate == null)) {
                this.onEndgetInvoiceLinesForJournalDelegate = new EndOperationDelegate(this.OnEndgetInvoiceLinesForJournal);
            }
            if ((this.ongetInvoiceLinesForJournalCompletedDelegate == null)) {
                this.ongetInvoiceLinesForJournalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetInvoiceLinesForJournalCompleted);
            }
            base.InvokeAsync(this.onBegingetInvoiceLinesForJournalDelegate, new object[] {
                        licenseeId}, this.onEndgetInvoiceLinesForJournalDelegate, this.ongetInvoiceLinesForJournalCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IBillingLineDetail")]
    public interface IBillingLineDetail {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/AddUpdateBillingLineDetail", ReplyAction="http://tempuri.org/IBillingLineDetail/AddUpdateBillingLineDetailResponse")]
        void AddUpdateBillingLineDetail(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/AddUpdateBillingLineDetail", ReplyAction="http://tempuri.org/IBillingLineDetail/AddUpdateBillingLineDetailResponse")]
        System.IAsyncResult BeginAddUpdateBillingLineDetail(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateBillingLineDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/DeleteBillingLineDetail", ReplyAction="http://tempuri.org/IBillingLineDetail/DeleteBillingLineDetailResponse")]
        void DeleteBillingLineDetail(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/DeleteBillingLineDetail", ReplyAction="http://tempuri.org/IBillingLineDetail/DeleteBillingLineDetailResponse")]
        System.IAsyncResult BeginDeleteBillingLineDetail(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteBillingLineDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/GetBillingLineDetail", ReplyAction="http://tempuri.org/IBillingLineDetail/GetBillingLineDetailResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> GetBillingLineDetail();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/GetBillingLineDetail", ReplyAction="http://tempuri.org/IBillingLineDetail/GetBillingLineDetailResponse")]
        System.IAsyncResult BeginGetBillingLineDetail(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> EndGetBillingLineDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/IsValidBillingLineDetail", ReplyAction="http://tempuri.org/IBillingLineDetail/IsValidBillingLineDetailResponse")]
        bool IsValidBillingLineDetail(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/IsValidBillingLineDetail", ReplyAction="http://tempuri.org/IBillingLineDetail/IsValidBillingLineDetailResponse")]
        System.IAsyncResult BeginIsValidBillingLineDetail(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidBillingLineDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/GetAllServiceProduct", ReplyAction="http://tempuri.org/IBillingLineDetail/GetAllServiceProductResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct> GetAllServiceProduct();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/GetAllServiceProduct", ReplyAction="http://tempuri.org/IBillingLineDetail/GetAllServiceProductResponse")]
        System.IAsyncResult BeginGetAllServiceProduct(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct> EndGetAllServiceProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/AddServiceProduct", ReplyAction="http://tempuri.org/IBillingLineDetail/AddServiceProductResponse")]
        void AddServiceProduct(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct _serviceproduct);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/AddServiceProduct", ReplyAction="http://tempuri.org/IBillingLineDetail/AddServiceProductResponse")]
        System.IAsyncResult BeginAddServiceProduct(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct _serviceproduct, System.AsyncCallback callback, object asyncState);
        
        void EndAddServiceProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/GetAllServiceChargeType", ReplyAction="http://tempuri.org/IBillingLineDetail/GetAllServiceChargeTypeResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType> GetAllServiceChargeType();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/GetAllServiceChargeType", ReplyAction="http://tempuri.org/IBillingLineDetail/GetAllServiceChargeTypeResponse")]
        System.IAsyncResult BeginGetAllServiceChargeType(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType> EndGetAllServiceChargeType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/AddServiceChargeType", ReplyAction="http://tempuri.org/IBillingLineDetail/AddServiceChargeTypeResponse")]
        void AddServiceChargeType(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType _servicechargetype);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/AddServiceChargeType", ReplyAction="http://tempuri.org/IBillingLineDetail/AddServiceChargeTypeResponse")]
        System.IAsyncResult BeginAddServiceChargeType(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType _servicechargetype, System.AsyncCallback callback, object asyncState);
        
        void EndAddServiceChargeType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/GetAllServices", ReplyAction="http://tempuri.org/IBillingLineDetail/GetAllServicesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct> GetAllServices();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/GetAllServices", ReplyAction="http://tempuri.org/IBillingLineDetail/GetAllServicesResponse")]
        System.IAsyncResult BeginGetAllServices(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct> EndGetAllServices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/GetAllServiceCharge", ReplyAction="http://tempuri.org/IBillingLineDetail/GetAllServiceChargeResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType> GetAllServiceCharge();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/GetAllServiceCharge", ReplyAction="http://tempuri.org/IBillingLineDetail/GetAllServiceChargeResponse")]
        System.IAsyncResult BeginGetAllServiceCharge(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType> EndGetAllServiceCharge(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/Add", ReplyAction="http://tempuri.org/IBillingLineDetail/AddResponse")]
        void Add(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> collection, System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/Add", ReplyAction="http://tempuri.org/IBillingLineDetail/AddResponse")]
        System.IAsyncResult BeginAdd(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> collection, System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        void EndAdd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/IsAgencyVersionLicense", ReplyAction="http://tempuri.org/IBillingLineDetail/IsAgencyVersionLicenseResponse")]
        bool IsAgencyVersionLicense(System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/IsAgencyVersionLicense", ReplyAction="http://tempuri.org/IBillingLineDetail/IsAgencyVersionLicenseResponse")]
        System.IAsyncResult BeginIsAgencyVersionLicense(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        bool EndIsAgencyVersionLicense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingLineDetail/IsFollowUpLicensee", ReplyAction="http://tempuri.org/IBillingLineDetail/IsFollowUpLicenseeResponse")]
        bool IsFollowUpLicensee(System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBillingLineDetail/IsFollowUpLicensee", ReplyAction="http://tempuri.org/IBillingLineDetail/IsFollowUpLicenseeResponse")]
        System.IAsyncResult BeginIsFollowUpLicensee(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        bool EndIsFollowUpLicensee(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBillingLineDetailChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IBillingLineDetail, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBillingLineDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBillingLineDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidBillingLineDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidBillingLineDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllServiceProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllServiceProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllServiceChargeTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllServiceChargeTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllServiceChargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllServiceChargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsAgencyVersionLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsAgencyVersionLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsFollowUpLicenseeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsFollowUpLicenseeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BillingLineDetailClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IBillingLineDetail>, MyAgencyVault.VM.MyAgencyVaultSvc.IBillingLineDetail {
        
        private BeginOperationDelegate onBeginAddUpdateBillingLineDetailDelegate;
        
        private EndOperationDelegate onEndAddUpdateBillingLineDetailDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateBillingLineDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteBillingLineDetailDelegate;
        
        private EndOperationDelegate onEndDeleteBillingLineDetailDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteBillingLineDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBillingLineDetailDelegate;
        
        private EndOperationDelegate onEndGetBillingLineDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetBillingLineDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidBillingLineDetailDelegate;
        
        private EndOperationDelegate onEndIsValidBillingLineDetailDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidBillingLineDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllServiceProductDelegate;
        
        private EndOperationDelegate onEndGetAllServiceProductDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllServiceProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddServiceProductDelegate;
        
        private EndOperationDelegate onEndAddServiceProductDelegate;
        
        private System.Threading.SendOrPostCallback onAddServiceProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllServiceChargeTypeDelegate;
        
        private EndOperationDelegate onEndGetAllServiceChargeTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllServiceChargeTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddServiceChargeTypeDelegate;
        
        private EndOperationDelegate onEndAddServiceChargeTypeDelegate;
        
        private System.Threading.SendOrPostCallback onAddServiceChargeTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllServicesDelegate;
        
        private EndOperationDelegate onEndGetAllServicesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllServicesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllServiceChargeDelegate;
        
        private EndOperationDelegate onEndGetAllServiceChargeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllServiceChargeCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddDelegate;
        
        private EndOperationDelegate onEndAddDelegate;
        
        private System.Threading.SendOrPostCallback onAddCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsAgencyVersionLicenseDelegate;
        
        private EndOperationDelegate onEndIsAgencyVersionLicenseDelegate;
        
        private System.Threading.SendOrPostCallback onIsAgencyVersionLicenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsFollowUpLicenseeDelegate;
        
        private EndOperationDelegate onEndIsFollowUpLicenseeDelegate;
        
        private System.Threading.SendOrPostCallback onIsFollowUpLicenseeCompletedDelegate;
        
        public BillingLineDetailClient() {
        }
        
        public BillingLineDetailClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BillingLineDetailClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BillingLineDetailClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BillingLineDetailClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateBillingLineDetailCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteBillingLineDetailCompleted;
        
        public event System.EventHandler<GetBillingLineDetailCompletedEventArgs> GetBillingLineDetailCompleted;
        
        public event System.EventHandler<IsValidBillingLineDetailCompletedEventArgs> IsValidBillingLineDetailCompleted;
        
        public event System.EventHandler<GetAllServiceProductCompletedEventArgs> GetAllServiceProductCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddServiceProductCompleted;
        
        public event System.EventHandler<GetAllServiceChargeTypeCompletedEventArgs> GetAllServiceChargeTypeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddServiceChargeTypeCompleted;
        
        public event System.EventHandler<GetAllServicesCompletedEventArgs> GetAllServicesCompleted;
        
        public event System.EventHandler<GetAllServiceChargeCompletedEventArgs> GetAllServiceChargeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddCompleted;
        
        public event System.EventHandler<IsAgencyVersionLicenseCompletedEventArgs> IsAgencyVersionLicenseCompleted;
        
        public event System.EventHandler<IsFollowUpLicenseeCompletedEventArgs> IsFollowUpLicenseeCompleted;
        
        public void AddUpdateBillingLineDetail(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl) {
            base.Channel.AddUpdateBillingLineDetail(BillLinDtl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateBillingLineDetail(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateBillingLineDetail(BillLinDtl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateBillingLineDetail(System.IAsyncResult result) {
            base.Channel.EndAddUpdateBillingLineDetail(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateBillingLineDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl = ((MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail)(inValues[0]));
            return this.BeginAddUpdateBillingLineDetail(BillLinDtl, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateBillingLineDetail(System.IAsyncResult result) {
            this.EndAddUpdateBillingLineDetail(result);
            return null;
        }
        
        private void OnAddUpdateBillingLineDetailCompleted(object state) {
            if ((this.AddUpdateBillingLineDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateBillingLineDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateBillingLineDetailAsync(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl) {
            this.AddUpdateBillingLineDetailAsync(BillLinDtl, null);
        }
        
        public void AddUpdateBillingLineDetailAsync(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl, object userState) {
            if ((this.onBeginAddUpdateBillingLineDetailDelegate == null)) {
                this.onBeginAddUpdateBillingLineDetailDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateBillingLineDetail);
            }
            if ((this.onEndAddUpdateBillingLineDetailDelegate == null)) {
                this.onEndAddUpdateBillingLineDetailDelegate = new EndOperationDelegate(this.OnEndAddUpdateBillingLineDetail);
            }
            if ((this.onAddUpdateBillingLineDetailCompletedDelegate == null)) {
                this.onAddUpdateBillingLineDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateBillingLineDetailCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateBillingLineDetailDelegate, new object[] {
                        BillLinDtl}, this.onEndAddUpdateBillingLineDetailDelegate, this.onAddUpdateBillingLineDetailCompletedDelegate, userState);
        }
        
        public void DeleteBillingLineDetail(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl) {
            base.Channel.DeleteBillingLineDetail(BillLinDtl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteBillingLineDetail(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteBillingLineDetail(BillLinDtl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteBillingLineDetail(System.IAsyncResult result) {
            base.Channel.EndDeleteBillingLineDetail(result);
        }
        
        private System.IAsyncResult OnBeginDeleteBillingLineDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl = ((MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail)(inValues[0]));
            return this.BeginDeleteBillingLineDetail(BillLinDtl, callback, asyncState);
        }
        
        private object[] OnEndDeleteBillingLineDetail(System.IAsyncResult result) {
            this.EndDeleteBillingLineDetail(result);
            return null;
        }
        
        private void OnDeleteBillingLineDetailCompleted(object state) {
            if ((this.DeleteBillingLineDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteBillingLineDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteBillingLineDetailAsync(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl) {
            this.DeleteBillingLineDetailAsync(BillLinDtl, null);
        }
        
        public void DeleteBillingLineDetailAsync(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl, object userState) {
            if ((this.onBeginDeleteBillingLineDetailDelegate == null)) {
                this.onBeginDeleteBillingLineDetailDelegate = new BeginOperationDelegate(this.OnBeginDeleteBillingLineDetail);
            }
            if ((this.onEndDeleteBillingLineDetailDelegate == null)) {
                this.onEndDeleteBillingLineDetailDelegate = new EndOperationDelegate(this.OnEndDeleteBillingLineDetail);
            }
            if ((this.onDeleteBillingLineDetailCompletedDelegate == null)) {
                this.onDeleteBillingLineDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteBillingLineDetailCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteBillingLineDetailDelegate, new object[] {
                        BillLinDtl}, this.onEndDeleteBillingLineDetailDelegate, this.onDeleteBillingLineDetailCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> GetBillingLineDetail() {
            return base.Channel.GetBillingLineDetail();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBillingLineDetail(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBillingLineDetail(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> EndGetBillingLineDetail(System.IAsyncResult result) {
            return base.Channel.EndGetBillingLineDetail(result);
        }
        
        private System.IAsyncResult OnBeginGetBillingLineDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetBillingLineDetail(callback, asyncState);
        }
        
        private object[] OnEndGetBillingLineDetail(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> retVal = this.EndGetBillingLineDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBillingLineDetailCompleted(object state) {
            if ((this.GetBillingLineDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBillingLineDetailCompleted(this, new GetBillingLineDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBillingLineDetailAsync() {
            this.GetBillingLineDetailAsync(null);
        }
        
        public void GetBillingLineDetailAsync(object userState) {
            if ((this.onBeginGetBillingLineDetailDelegate == null)) {
                this.onBeginGetBillingLineDetailDelegate = new BeginOperationDelegate(this.OnBeginGetBillingLineDetail);
            }
            if ((this.onEndGetBillingLineDetailDelegate == null)) {
                this.onEndGetBillingLineDetailDelegate = new EndOperationDelegate(this.OnEndGetBillingLineDetail);
            }
            if ((this.onGetBillingLineDetailCompletedDelegate == null)) {
                this.onGetBillingLineDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBillingLineDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetBillingLineDetailDelegate, null, this.onEndGetBillingLineDetailDelegate, this.onGetBillingLineDetailCompletedDelegate, userState);
        }
        
        public bool IsValidBillingLineDetail(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl) {
            return base.Channel.IsValidBillingLineDetail(BillLinDtl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidBillingLineDetail(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidBillingLineDetail(BillLinDtl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidBillingLineDetail(System.IAsyncResult result) {
            return base.Channel.EndIsValidBillingLineDetail(result);
        }
        
        private System.IAsyncResult OnBeginIsValidBillingLineDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl = ((MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail)(inValues[0]));
            return this.BeginIsValidBillingLineDetail(BillLinDtl, callback, asyncState);
        }
        
        private object[] OnEndIsValidBillingLineDetail(System.IAsyncResult result) {
            bool retVal = this.EndIsValidBillingLineDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidBillingLineDetailCompleted(object state) {
            if ((this.IsValidBillingLineDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidBillingLineDetailCompleted(this, new IsValidBillingLineDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidBillingLineDetailAsync(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl) {
            this.IsValidBillingLineDetailAsync(BillLinDtl, null);
        }
        
        public void IsValidBillingLineDetailAsync(MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail BillLinDtl, object userState) {
            if ((this.onBeginIsValidBillingLineDetailDelegate == null)) {
                this.onBeginIsValidBillingLineDetailDelegate = new BeginOperationDelegate(this.OnBeginIsValidBillingLineDetail);
            }
            if ((this.onEndIsValidBillingLineDetailDelegate == null)) {
                this.onEndIsValidBillingLineDetailDelegate = new EndOperationDelegate(this.OnEndIsValidBillingLineDetail);
            }
            if ((this.onIsValidBillingLineDetailCompletedDelegate == null)) {
                this.onIsValidBillingLineDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidBillingLineDetailCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidBillingLineDetailDelegate, new object[] {
                        BillLinDtl}, this.onEndIsValidBillingLineDetailDelegate, this.onIsValidBillingLineDetailCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct> GetAllServiceProduct() {
            return base.Channel.GetAllServiceProduct();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllServiceProduct(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllServiceProduct(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct> EndGetAllServiceProduct(System.IAsyncResult result) {
            return base.Channel.EndGetAllServiceProduct(result);
        }
        
        private System.IAsyncResult OnBeginGetAllServiceProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllServiceProduct(callback, asyncState);
        }
        
        private object[] OnEndGetAllServiceProduct(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct> retVal = this.EndGetAllServiceProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllServiceProductCompleted(object state) {
            if ((this.GetAllServiceProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllServiceProductCompleted(this, new GetAllServiceProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllServiceProductAsync() {
            this.GetAllServiceProductAsync(null);
        }
        
        public void GetAllServiceProductAsync(object userState) {
            if ((this.onBeginGetAllServiceProductDelegate == null)) {
                this.onBeginGetAllServiceProductDelegate = new BeginOperationDelegate(this.OnBeginGetAllServiceProduct);
            }
            if ((this.onEndGetAllServiceProductDelegate == null)) {
                this.onEndGetAllServiceProductDelegate = new EndOperationDelegate(this.OnEndGetAllServiceProduct);
            }
            if ((this.onGetAllServiceProductCompletedDelegate == null)) {
                this.onGetAllServiceProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllServiceProductCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllServiceProductDelegate, null, this.onEndGetAllServiceProductDelegate, this.onGetAllServiceProductCompletedDelegate, userState);
        }
        
        public void AddServiceProduct(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct _serviceproduct) {
            base.Channel.AddServiceProduct(_serviceproduct);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddServiceProduct(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct _serviceproduct, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddServiceProduct(_serviceproduct, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddServiceProduct(System.IAsyncResult result) {
            base.Channel.EndAddServiceProduct(result);
        }
        
        private System.IAsyncResult OnBeginAddServiceProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct _serviceproduct = ((MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct)(inValues[0]));
            return this.BeginAddServiceProduct(_serviceproduct, callback, asyncState);
        }
        
        private object[] OnEndAddServiceProduct(System.IAsyncResult result) {
            this.EndAddServiceProduct(result);
            return null;
        }
        
        private void OnAddServiceProductCompleted(object state) {
            if ((this.AddServiceProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddServiceProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddServiceProductAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct _serviceproduct) {
            this.AddServiceProductAsync(_serviceproduct, null);
        }
        
        public void AddServiceProductAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct _serviceproduct, object userState) {
            if ((this.onBeginAddServiceProductDelegate == null)) {
                this.onBeginAddServiceProductDelegate = new BeginOperationDelegate(this.OnBeginAddServiceProduct);
            }
            if ((this.onEndAddServiceProductDelegate == null)) {
                this.onEndAddServiceProductDelegate = new EndOperationDelegate(this.OnEndAddServiceProduct);
            }
            if ((this.onAddServiceProductCompletedDelegate == null)) {
                this.onAddServiceProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddServiceProductCompleted);
            }
            base.InvokeAsync(this.onBeginAddServiceProductDelegate, new object[] {
                        _serviceproduct}, this.onEndAddServiceProductDelegate, this.onAddServiceProductCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType> GetAllServiceChargeType() {
            return base.Channel.GetAllServiceChargeType();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllServiceChargeType(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllServiceChargeType(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType> EndGetAllServiceChargeType(System.IAsyncResult result) {
            return base.Channel.EndGetAllServiceChargeType(result);
        }
        
        private System.IAsyncResult OnBeginGetAllServiceChargeType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllServiceChargeType(callback, asyncState);
        }
        
        private object[] OnEndGetAllServiceChargeType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType> retVal = this.EndGetAllServiceChargeType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllServiceChargeTypeCompleted(object state) {
            if ((this.GetAllServiceChargeTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllServiceChargeTypeCompleted(this, new GetAllServiceChargeTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllServiceChargeTypeAsync() {
            this.GetAllServiceChargeTypeAsync(null);
        }
        
        public void GetAllServiceChargeTypeAsync(object userState) {
            if ((this.onBeginGetAllServiceChargeTypeDelegate == null)) {
                this.onBeginGetAllServiceChargeTypeDelegate = new BeginOperationDelegate(this.OnBeginGetAllServiceChargeType);
            }
            if ((this.onEndGetAllServiceChargeTypeDelegate == null)) {
                this.onEndGetAllServiceChargeTypeDelegate = new EndOperationDelegate(this.OnEndGetAllServiceChargeType);
            }
            if ((this.onGetAllServiceChargeTypeCompletedDelegate == null)) {
                this.onGetAllServiceChargeTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllServiceChargeTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllServiceChargeTypeDelegate, null, this.onEndGetAllServiceChargeTypeDelegate, this.onGetAllServiceChargeTypeCompletedDelegate, userState);
        }
        
        public void AddServiceChargeType(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType _servicechargetype) {
            base.Channel.AddServiceChargeType(_servicechargetype);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddServiceChargeType(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType _servicechargetype, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddServiceChargeType(_servicechargetype, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddServiceChargeType(System.IAsyncResult result) {
            base.Channel.EndAddServiceChargeType(result);
        }
        
        private System.IAsyncResult OnBeginAddServiceChargeType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType _servicechargetype = ((MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType)(inValues[0]));
            return this.BeginAddServiceChargeType(_servicechargetype, callback, asyncState);
        }
        
        private object[] OnEndAddServiceChargeType(System.IAsyncResult result) {
            this.EndAddServiceChargeType(result);
            return null;
        }
        
        private void OnAddServiceChargeTypeCompleted(object state) {
            if ((this.AddServiceChargeTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddServiceChargeTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddServiceChargeTypeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType _servicechargetype) {
            this.AddServiceChargeTypeAsync(_servicechargetype, null);
        }
        
        public void AddServiceChargeTypeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType _servicechargetype, object userState) {
            if ((this.onBeginAddServiceChargeTypeDelegate == null)) {
                this.onBeginAddServiceChargeTypeDelegate = new BeginOperationDelegate(this.OnBeginAddServiceChargeType);
            }
            if ((this.onEndAddServiceChargeTypeDelegate == null)) {
                this.onEndAddServiceChargeTypeDelegate = new EndOperationDelegate(this.OnEndAddServiceChargeType);
            }
            if ((this.onAddServiceChargeTypeCompletedDelegate == null)) {
                this.onAddServiceChargeTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddServiceChargeTypeCompleted);
            }
            base.InvokeAsync(this.onBeginAddServiceChargeTypeDelegate, new object[] {
                        _servicechargetype}, this.onEndAddServiceChargeTypeDelegate, this.onAddServiceChargeTypeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct> GetAllServices() {
            return base.Channel.GetAllServices();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllServices(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllServices(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct> EndGetAllServices(System.IAsyncResult result) {
            return base.Channel.EndGetAllServices(result);
        }
        
        private System.IAsyncResult OnBeginGetAllServices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllServices(callback, asyncState);
        }
        
        private object[] OnEndGetAllServices(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceProduct> retVal = this.EndGetAllServices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllServicesCompleted(object state) {
            if ((this.GetAllServicesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllServicesCompleted(this, new GetAllServicesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllServicesAsync() {
            this.GetAllServicesAsync(null);
        }
        
        public void GetAllServicesAsync(object userState) {
            if ((this.onBeginGetAllServicesDelegate == null)) {
                this.onBeginGetAllServicesDelegate = new BeginOperationDelegate(this.OnBeginGetAllServices);
            }
            if ((this.onEndGetAllServicesDelegate == null)) {
                this.onEndGetAllServicesDelegate = new EndOperationDelegate(this.OnEndGetAllServices);
            }
            if ((this.onGetAllServicesCompletedDelegate == null)) {
                this.onGetAllServicesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllServicesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllServicesDelegate, null, this.onEndGetAllServicesDelegate, this.onGetAllServicesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType> GetAllServiceCharge() {
            return base.Channel.GetAllServiceCharge();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllServiceCharge(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllServiceCharge(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType> EndGetAllServiceCharge(System.IAsyncResult result) {
            return base.Channel.EndGetAllServiceCharge(result);
        }
        
        private System.IAsyncResult OnBeginGetAllServiceCharge(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllServiceCharge(callback, asyncState);
        }
        
        private object[] OnEndGetAllServiceCharge(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ServiceChargeType> retVal = this.EndGetAllServiceCharge(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllServiceChargeCompleted(object state) {
            if ((this.GetAllServiceChargeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllServiceChargeCompleted(this, new GetAllServiceChargeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllServiceChargeAsync() {
            this.GetAllServiceChargeAsync(null);
        }
        
        public void GetAllServiceChargeAsync(object userState) {
            if ((this.onBeginGetAllServiceChargeDelegate == null)) {
                this.onBeginGetAllServiceChargeDelegate = new BeginOperationDelegate(this.OnBeginGetAllServiceCharge);
            }
            if ((this.onEndGetAllServiceChargeDelegate == null)) {
                this.onEndGetAllServiceChargeDelegate = new EndOperationDelegate(this.OnEndGetAllServiceCharge);
            }
            if ((this.onGetAllServiceChargeCompletedDelegate == null)) {
                this.onGetAllServiceChargeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllServiceChargeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllServiceChargeDelegate, null, this.onEndGetAllServiceChargeDelegate, this.onGetAllServiceChargeCompletedDelegate, userState);
        }
        
        public void Add(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> collection, System.Guid LicenseeId) {
            base.Channel.Add(collection, LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAdd(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> collection, System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAdd(collection, LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAdd(System.IAsyncResult result) {
            base.Channel.EndAdd(result);
        }
        
        private System.IAsyncResult OnBeginAdd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> collection = ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail>)(inValues[0]));
            System.Guid LicenseeId = ((System.Guid)(inValues[1]));
            return this.BeginAdd(collection, LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndAdd(System.IAsyncResult result) {
            this.EndAdd(result);
            return null;
        }
        
        private void OnAddCompleted(object state) {
            if ((this.AddCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> collection, System.Guid LicenseeId) {
            this.AddAsync(collection, LicenseeId, null);
        }
        
        public void AddAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BillingLineDetail> collection, System.Guid LicenseeId, object userState) {
            if ((this.onBeginAddDelegate == null)) {
                this.onBeginAddDelegate = new BeginOperationDelegate(this.OnBeginAdd);
            }
            if ((this.onEndAddDelegate == null)) {
                this.onEndAddDelegate = new EndOperationDelegate(this.OnEndAdd);
            }
            if ((this.onAddCompletedDelegate == null)) {
                this.onAddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCompleted);
            }
            base.InvokeAsync(this.onBeginAddDelegate, new object[] {
                        collection,
                        LicenseeId}, this.onEndAddDelegate, this.onAddCompletedDelegate, userState);
        }
        
        public bool IsAgencyVersionLicense(System.Guid LicenseeId) {
            return base.Channel.IsAgencyVersionLicense(LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsAgencyVersionLicense(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsAgencyVersionLicense(LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsAgencyVersionLicense(System.IAsyncResult result) {
            return base.Channel.EndIsAgencyVersionLicense(result);
        }
        
        private System.IAsyncResult OnBeginIsAgencyVersionLicense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            return this.BeginIsAgencyVersionLicense(LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndIsAgencyVersionLicense(System.IAsyncResult result) {
            bool retVal = this.EndIsAgencyVersionLicense(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsAgencyVersionLicenseCompleted(object state) {
            if ((this.IsAgencyVersionLicenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsAgencyVersionLicenseCompleted(this, new IsAgencyVersionLicenseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsAgencyVersionLicenseAsync(System.Guid LicenseeId) {
            this.IsAgencyVersionLicenseAsync(LicenseeId, null);
        }
        
        public void IsAgencyVersionLicenseAsync(System.Guid LicenseeId, object userState) {
            if ((this.onBeginIsAgencyVersionLicenseDelegate == null)) {
                this.onBeginIsAgencyVersionLicenseDelegate = new BeginOperationDelegate(this.OnBeginIsAgencyVersionLicense);
            }
            if ((this.onEndIsAgencyVersionLicenseDelegate == null)) {
                this.onEndIsAgencyVersionLicenseDelegate = new EndOperationDelegate(this.OnEndIsAgencyVersionLicense);
            }
            if ((this.onIsAgencyVersionLicenseCompletedDelegate == null)) {
                this.onIsAgencyVersionLicenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsAgencyVersionLicenseCompleted);
            }
            base.InvokeAsync(this.onBeginIsAgencyVersionLicenseDelegate, new object[] {
                        LicenseeId}, this.onEndIsAgencyVersionLicenseDelegate, this.onIsAgencyVersionLicenseCompletedDelegate, userState);
        }
        
        public bool IsFollowUpLicensee(System.Guid LicenseeId) {
            return base.Channel.IsFollowUpLicensee(LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsFollowUpLicensee(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsFollowUpLicensee(LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsFollowUpLicensee(System.IAsyncResult result) {
            return base.Channel.EndIsFollowUpLicensee(result);
        }
        
        private System.IAsyncResult OnBeginIsFollowUpLicensee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            return this.BeginIsFollowUpLicensee(LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndIsFollowUpLicensee(System.IAsyncResult result) {
            bool retVal = this.EndIsFollowUpLicensee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsFollowUpLicenseeCompleted(object state) {
            if ((this.IsFollowUpLicenseeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsFollowUpLicenseeCompleted(this, new IsFollowUpLicenseeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsFollowUpLicenseeAsync(System.Guid LicenseeId) {
            this.IsFollowUpLicenseeAsync(LicenseeId, null);
        }
        
        public void IsFollowUpLicenseeAsync(System.Guid LicenseeId, object userState) {
            if ((this.onBeginIsFollowUpLicenseeDelegate == null)) {
                this.onBeginIsFollowUpLicenseeDelegate = new BeginOperationDelegate(this.OnBeginIsFollowUpLicensee);
            }
            if ((this.onEndIsFollowUpLicenseeDelegate == null)) {
                this.onEndIsFollowUpLicenseeDelegate = new EndOperationDelegate(this.OnEndIsFollowUpLicensee);
            }
            if ((this.onIsFollowUpLicenseeCompletedDelegate == null)) {
                this.onIsFollowUpLicenseeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsFollowUpLicenseeCompleted);
            }
            base.InvokeAsync(this.onBeginIsFollowUpLicenseeDelegate, new object[] {
                        LicenseeId}, this.onEndIsFollowUpLicenseeDelegate, this.onIsFollowUpLicenseeCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IBatchFiles")]
    public interface IBatchFiles {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatchFiles/fillBatchFilesData", ReplyAction="http://tempuri.org/IBatchFiles/fillBatchFilesDataResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles> fillBatchFilesData();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatchFiles/fillBatchFilesData", ReplyAction="http://tempuri.org/IBatchFiles/fillBatchFilesDataResponse")]
        System.IAsyncResult BeginfillBatchFilesData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles> EndfillBatchFilesData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatchFiles/DeleteBatchFile", ReplyAction="http://tempuri.org/IBatchFiles/DeleteBatchFileResponse")]
        bool DeleteBatchFile(MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles batchFile);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatchFiles/DeleteBatchFile", ReplyAction="http://tempuri.org/IBatchFiles/DeleteBatchFileResponse")]
        System.IAsyncResult BeginDeleteBatchFile(MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles batchFile, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteBatchFile(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBatchFilesChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IBatchFiles, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class fillBatchFilesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public fillBatchFilesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteBatchFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteBatchFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchFilesClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IBatchFiles>, MyAgencyVault.VM.MyAgencyVaultSvc.IBatchFiles {
        
        private BeginOperationDelegate onBeginfillBatchFilesDataDelegate;
        
        private EndOperationDelegate onEndfillBatchFilesDataDelegate;
        
        private System.Threading.SendOrPostCallback onfillBatchFilesDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteBatchFileDelegate;
        
        private EndOperationDelegate onEndDeleteBatchFileDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteBatchFileCompletedDelegate;
        
        public BatchFilesClient() {
        }
        
        public BatchFilesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BatchFilesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BatchFilesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BatchFilesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<fillBatchFilesDataCompletedEventArgs> fillBatchFilesDataCompleted;
        
        public event System.EventHandler<DeleteBatchFileCompletedEventArgs> DeleteBatchFileCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles> fillBatchFilesData() {
            return base.Channel.fillBatchFilesData();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginfillBatchFilesData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginfillBatchFilesData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles> EndfillBatchFilesData(System.IAsyncResult result) {
            return base.Channel.EndfillBatchFilesData(result);
        }
        
        private System.IAsyncResult OnBeginfillBatchFilesData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginfillBatchFilesData(callback, asyncState);
        }
        
        private object[] OnEndfillBatchFilesData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles> retVal = this.EndfillBatchFilesData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnfillBatchFilesDataCompleted(object state) {
            if ((this.fillBatchFilesDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.fillBatchFilesDataCompleted(this, new fillBatchFilesDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void fillBatchFilesDataAsync() {
            this.fillBatchFilesDataAsync(null);
        }
        
        public void fillBatchFilesDataAsync(object userState) {
            if ((this.onBeginfillBatchFilesDataDelegate == null)) {
                this.onBeginfillBatchFilesDataDelegate = new BeginOperationDelegate(this.OnBeginfillBatchFilesData);
            }
            if ((this.onEndfillBatchFilesDataDelegate == null)) {
                this.onEndfillBatchFilesDataDelegate = new EndOperationDelegate(this.OnEndfillBatchFilesData);
            }
            if ((this.onfillBatchFilesDataCompletedDelegate == null)) {
                this.onfillBatchFilesDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnfillBatchFilesDataCompleted);
            }
            base.InvokeAsync(this.onBeginfillBatchFilesDataDelegate, null, this.onEndfillBatchFilesDataDelegate, this.onfillBatchFilesDataCompletedDelegate, userState);
        }
        
        public bool DeleteBatchFile(MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles batchFile) {
            return base.Channel.DeleteBatchFile(batchFile);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteBatchFile(MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles batchFile, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteBatchFile(batchFile, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteBatchFile(System.IAsyncResult result) {
            return base.Channel.EndDeleteBatchFile(result);
        }
        
        private System.IAsyncResult OnBeginDeleteBatchFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles batchFile = ((MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles)(inValues[0]));
            return this.BeginDeleteBatchFile(batchFile, callback, asyncState);
        }
        
        private object[] OnEndDeleteBatchFile(System.IAsyncResult result) {
            bool retVal = this.EndDeleteBatchFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteBatchFileCompleted(object state) {
            if ((this.DeleteBatchFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteBatchFileCompleted(this, new DeleteBatchFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteBatchFileAsync(MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles batchFile) {
            this.DeleteBatchFileAsync(batchFile, null);
        }
        
        public void DeleteBatchFileAsync(MyAgencyVault.VM.MyAgencyVaultSvc.BatchFiles batchFile, object userState) {
            if ((this.onBeginDeleteBatchFileDelegate == null)) {
                this.onBeginDeleteBatchFileDelegate = new BeginOperationDelegate(this.OnBeginDeleteBatchFile);
            }
            if ((this.onEndDeleteBatchFileDelegate == null)) {
                this.onEndDeleteBatchFileDelegate = new EndOperationDelegate(this.OnEndDeleteBatchFile);
            }
            if ((this.onDeleteBatchFileCompletedDelegate == null)) {
                this.onDeleteBatchFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteBatchFileCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteBatchFileDelegate, new object[] {
                        batchFile}, this.onEndDeleteBatchFileDelegate, this.onDeleteBatchFileCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IBatchInsuredRecored")]
    public interface IBatchInsuredRecored {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatchInsuredRecored/GetBatchInsuredRecored", ReplyAction="http://tempuri.org/IBatchInsuredRecored/GetBatchInsuredRecoredResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchInsuredRecored> GetBatchInsuredRecored(System.Guid stmtId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatchInsuredRecored/GetBatchInsuredRecored", ReplyAction="http://tempuri.org/IBatchInsuredRecored/GetBatchInsuredRecoredResponse")]
        System.IAsyncResult BeginGetBatchInsuredRecored(System.Guid stmtId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchInsuredRecored> EndGetBatchInsuredRecored(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatchInsuredRecored/GetInsuredPayments", ReplyAction="http://tempuri.org/IBatchInsuredRecored/GetInsuredPaymentsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment> GetInsuredPayments(System.Guid stmtId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatchInsuredRecored/GetInsuredPayments", ReplyAction="http://tempuri.org/IBatchInsuredRecored/GetInsuredPaymentsResponse")]
        System.IAsyncResult BeginGetInsuredPayments(System.Guid stmtId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment> EndGetInsuredPayments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBatchInsuredRecored/GetInsuredName", ReplyAction="http://tempuri.org/IBatchInsuredRecored/GetInsuredNameResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment> GetInsuredName(System.Guid stmtId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBatchInsuredRecored/GetInsuredName", ReplyAction="http://tempuri.org/IBatchInsuredRecored/GetInsuredNameResponse")]
        System.IAsyncResult BeginGetInsuredName(System.Guid stmtId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment> EndGetInsuredName(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBatchInsuredRecoredChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IBatchInsuredRecored, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBatchInsuredRecoredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBatchInsuredRecoredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchInsuredRecored> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchInsuredRecored>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInsuredPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInsuredPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInsuredNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInsuredNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchInsuredRecoredClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IBatchInsuredRecored>, MyAgencyVault.VM.MyAgencyVaultSvc.IBatchInsuredRecored {
        
        private BeginOperationDelegate onBeginGetBatchInsuredRecoredDelegate;
        
        private EndOperationDelegate onEndGetBatchInsuredRecoredDelegate;
        
        private System.Threading.SendOrPostCallback onGetBatchInsuredRecoredCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInsuredPaymentsDelegate;
        
        private EndOperationDelegate onEndGetInsuredPaymentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetInsuredPaymentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInsuredNameDelegate;
        
        private EndOperationDelegate onEndGetInsuredNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetInsuredNameCompletedDelegate;
        
        public BatchInsuredRecoredClient() {
        }
        
        public BatchInsuredRecoredClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BatchInsuredRecoredClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BatchInsuredRecoredClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BatchInsuredRecoredClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetBatchInsuredRecoredCompletedEventArgs> GetBatchInsuredRecoredCompleted;
        
        public event System.EventHandler<GetInsuredPaymentsCompletedEventArgs> GetInsuredPaymentsCompleted;
        
        public event System.EventHandler<GetInsuredNameCompletedEventArgs> GetInsuredNameCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchInsuredRecored> GetBatchInsuredRecored(System.Guid stmtId) {
            return base.Channel.GetBatchInsuredRecored(stmtId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBatchInsuredRecored(System.Guid stmtId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBatchInsuredRecored(stmtId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchInsuredRecored> EndGetBatchInsuredRecored(System.IAsyncResult result) {
            return base.Channel.EndGetBatchInsuredRecored(result);
        }
        
        private System.IAsyncResult OnBeginGetBatchInsuredRecored(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid stmtId = ((System.Guid)(inValues[0]));
            return this.BeginGetBatchInsuredRecored(stmtId, callback, asyncState);
        }
        
        private object[] OnEndGetBatchInsuredRecored(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.BatchInsuredRecored> retVal = this.EndGetBatchInsuredRecored(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBatchInsuredRecoredCompleted(object state) {
            if ((this.GetBatchInsuredRecoredCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBatchInsuredRecoredCompleted(this, new GetBatchInsuredRecoredCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBatchInsuredRecoredAsync(System.Guid stmtId) {
            this.GetBatchInsuredRecoredAsync(stmtId, null);
        }
        
        public void GetBatchInsuredRecoredAsync(System.Guid stmtId, object userState) {
            if ((this.onBeginGetBatchInsuredRecoredDelegate == null)) {
                this.onBeginGetBatchInsuredRecoredDelegate = new BeginOperationDelegate(this.OnBeginGetBatchInsuredRecored);
            }
            if ((this.onEndGetBatchInsuredRecoredDelegate == null)) {
                this.onEndGetBatchInsuredRecoredDelegate = new EndOperationDelegate(this.OnEndGetBatchInsuredRecored);
            }
            if ((this.onGetBatchInsuredRecoredCompletedDelegate == null)) {
                this.onGetBatchInsuredRecoredCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBatchInsuredRecoredCompleted);
            }
            base.InvokeAsync(this.onBeginGetBatchInsuredRecoredDelegate, new object[] {
                        stmtId}, this.onEndGetBatchInsuredRecoredDelegate, this.onGetBatchInsuredRecoredCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment> GetInsuredPayments(System.Guid stmtId) {
            return base.Channel.GetInsuredPayments(stmtId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetInsuredPayments(System.Guid stmtId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInsuredPayments(stmtId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment> EndGetInsuredPayments(System.IAsyncResult result) {
            return base.Channel.EndGetInsuredPayments(result);
        }
        
        private System.IAsyncResult OnBeginGetInsuredPayments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid stmtId = ((System.Guid)(inValues[0]));
            return this.BeginGetInsuredPayments(stmtId, callback, asyncState);
        }
        
        private object[] OnEndGetInsuredPayments(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment> retVal = this.EndGetInsuredPayments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInsuredPaymentsCompleted(object state) {
            if ((this.GetInsuredPaymentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInsuredPaymentsCompleted(this, new GetInsuredPaymentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInsuredPaymentsAsync(System.Guid stmtId) {
            this.GetInsuredPaymentsAsync(stmtId, null);
        }
        
        public void GetInsuredPaymentsAsync(System.Guid stmtId, object userState) {
            if ((this.onBeginGetInsuredPaymentsDelegate == null)) {
                this.onBeginGetInsuredPaymentsDelegate = new BeginOperationDelegate(this.OnBeginGetInsuredPayments);
            }
            if ((this.onEndGetInsuredPaymentsDelegate == null)) {
                this.onEndGetInsuredPaymentsDelegate = new EndOperationDelegate(this.OnEndGetInsuredPayments);
            }
            if ((this.onGetInsuredPaymentsCompletedDelegate == null)) {
                this.onGetInsuredPaymentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInsuredPaymentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetInsuredPaymentsDelegate, new object[] {
                        stmtId}, this.onEndGetInsuredPaymentsDelegate, this.onGetInsuredPaymentsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment> GetInsuredName(System.Guid stmtId) {
            return base.Channel.GetInsuredName(stmtId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetInsuredName(System.Guid stmtId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInsuredName(stmtId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment> EndGetInsuredName(System.IAsyncResult result) {
            return base.Channel.EndGetInsuredName(result);
        }
        
        private System.IAsyncResult OnBeginGetInsuredName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid stmtId = ((System.Guid)(inValues[0]));
            return this.BeginGetInsuredName(stmtId, callback, asyncState);
        }
        
        private object[] OnEndGetInsuredName(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.InsuredPayment> retVal = this.EndGetInsuredName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInsuredNameCompleted(object state) {
            if ((this.GetInsuredNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInsuredNameCompleted(this, new GetInsuredNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInsuredNameAsync(System.Guid stmtId) {
            this.GetInsuredNameAsync(stmtId, null);
        }
        
        public void GetInsuredNameAsync(System.Guid stmtId, object userState) {
            if ((this.onBeginGetInsuredNameDelegate == null)) {
                this.onBeginGetInsuredNameDelegate = new BeginOperationDelegate(this.OnBeginGetInsuredName);
            }
            if ((this.onEndGetInsuredNameDelegate == null)) {
                this.onEndGetInsuredNameDelegate = new EndOperationDelegate(this.OnEndGetInsuredName);
            }
            if ((this.onGetInsuredNameCompletedDelegate == null)) {
                this.onGetInsuredNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInsuredNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetInsuredNameDelegate, new object[] {
                        stmtId}, this.onEndGetInsuredNameDelegate, this.onGetInsuredNameCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IUser")]
    public interface IUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddUpdateUser", ReplyAction="http://tempuri.org/IUser/AddUpdateUserResponse")]
        void AddUpdateUser(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/AddUpdateUser", ReplyAction="http://tempuri.org/IUser/AddUpdateUserResponse")]
        System.IAsyncResult BeginAddUpdateUser(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddUpdateUserPermissionAndOtherData", ReplyAction="http://tempuri.org/IUser/AddUpdateUserPermissionAndOtherDataResponse")]
        void AddUpdateUserPermissionAndOtherData(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/AddUpdateUserPermissionAndOtherData", ReplyAction="http://tempuri.org/IUser/AddUpdateUserPermissionAndOtherDataResponse")]
        System.IAsyncResult BeginAddUpdateUserPermissionAndOtherData(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateUserPermissionAndOtherData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/DeleteUserInfo", ReplyAction="http://tempuri.org/IUser/DeleteUserInfoResponse")]
        bool DeleteUserInfo(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/DeleteUserInfo", ReplyAction="http://tempuri.org/IUser/DeleteUserInfoResponse")]
        System.IAsyncResult BeginDeleteUserInfo(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteUserInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/UsersWithRole", ReplyAction="http://tempuri.org/IUser/UsersWithRoleResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> UsersWithRole(MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/UsersWithRole", ReplyAction="http://tempuri.org/IUser/UsersWithRoleResponse")]
        System.IAsyncResult BeginUsersWithRole(MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndUsersWithRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetHouseUsers", ReplyAction="http://tempuri.org/IUser/GetHouseUsersResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetHouseUsers(System.Guid LincessID, int intRoleID, bool IsHouseAccount);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetHouseUsers", ReplyAction="http://tempuri.org/IUser/GetHouseUsersResponse")]
        System.IAsyncResult BeginGetHouseUsers(System.Guid LincessID, int intRoleID, bool IsHouseAccount, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetHouseUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAllUsers", ReplyAction="http://tempuri.org/IUser/GetAllUsersResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetAllUsers", ReplyAction="http://tempuri.org/IUser/GetAllUsersResponse")]
        System.IAsyncResult BeginGetAllUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetAllUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUsersByLicensee", ReplyAction="http://tempuri.org/IUser/GetUsersByLicenseeResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetUsersByLicensee(System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetUsersByLicensee", ReplyAction="http://tempuri.org/IUser/GetUsersByLicenseeResponse")]
        System.IAsyncResult BeginGetUsersByLicensee(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetUsersByLicensee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUsersForReports", ReplyAction="http://tempuri.org/IUser/GetUsersForReportsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetUsersForReports(System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetUsersForReports", ReplyAction="http://tempuri.org/IUser/GetUsersForReportsResponse")]
        System.IAsyncResult BeginGetUsersForReports(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetUsersForReports(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/UsersWithLicenseeId", ReplyAction="http://tempuri.org/IUser/UsersWithLicenseeIdResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> UsersWithLicenseeId(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleIdToView);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/UsersWithLicenseeId", ReplyAction="http://tempuri.org/IUser/UsersWithLicenseeIdResponse")]
        System.IAsyncResult BeginUsersWithLicenseeId(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleIdToView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndUsersWithLicenseeId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetValidIdentity", ReplyAction="http://tempuri.org/IUser/GetValidIdentityResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.User GetValidIdentity(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetValidIdentity", ReplyAction="http://tempuri.org/IUser/GetValidIdentityResponse")]
        System.IAsyncResult BeginGetValidIdentity(string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.User EndGetValidIdentity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetValidIdentityUsingName", ReplyAction="http://tempuri.org/IUser/GetValidIdentityUsingNameResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.User GetValidIdentityUsingName(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetValidIdentityUsingName", ReplyAction="http://tempuri.org/IUser/GetValidIdentityUsingNameResponse")]
        System.IAsyncResult BeginGetValidIdentityUsingName(string UserName, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.User EndGetValidIdentityUsingName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetCurrentPermission", ReplyAction="http://tempuri.org/IUser/GetCurrentPermissionResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UserPermissions> GetCurrentPermission(System.Guid UserCredentialId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetCurrentPermission", ReplyAction="http://tempuri.org/IUser/GetCurrentPermissionResponse")]
        System.IAsyncResult BeginGetCurrentPermission(System.Guid UserCredentialId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UserPermissions> EndGetCurrentPermission(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetLicenseeUserCredentialId", ReplyAction="http://tempuri.org/IUser/GetLicenseeUserCredentialIdResponse")]
        System.Guid GetLicenseeUserCredentialId(System.Guid licId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetLicenseeUserCredentialId", ReplyAction="http://tempuri.org/IUser/GetLicenseeUserCredentialIdResponse")]
        System.IAsyncResult BeginGetLicenseeUserCredentialId(System.Guid licId, System.AsyncCallback callback, object asyncState);
        
        System.Guid EndGetLicenseeUserCredentialId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/HouseAccoutTransferProcess", ReplyAction="http://tempuri.org/IUser/HouseAccoutTransferProcessResponse")]
        void HouseAccoutTransferProcess(MyAgencyVault.VM.MyAgencyVaultSvc.User user);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/HouseAccoutTransferProcess", ReplyAction="http://tempuri.org/IUser/HouseAccoutTransferProcessResponse")]
        System.IAsyncResult BeginHouseAccoutTransferProcess(MyAgencyVault.VM.MyAgencyVaultSvc.User user, System.AsyncCallback callback, object asyncState);
        
        void EndHouseAccoutTransferProcess(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUserIdWise", ReplyAction="http://tempuri.org/IUser/GetUserIdWiseResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.User GetUserIdWise(System.Guid UserCredId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetUserIdWise", ReplyAction="http://tempuri.org/IUser/GetUserIdWiseResponse")]
        System.IAsyncResult BeginGetUserIdWise(System.Guid UserCredId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.User EndGetUserIdWise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/getUserEmail", ReplyAction="http://tempuri.org/IUser/getUserEmailResponse")]
        string getUserEmail(System.Guid UserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/getUserEmail", ReplyAction="http://tempuri.org/IUser/getUserEmailResponse")]
        System.IAsyncResult BegingetUserEmail(System.Guid UserID, System.AsyncCallback callback, object asyncState);
        
        string EndgetUserEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/TurnOnNewsToFlashBit", ReplyAction="http://tempuri.org/IUser/TurnOnNewsToFlashBitResponse")]
        void TurnOnNewsToFlashBit();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/TurnOnNewsToFlashBit", ReplyAction="http://tempuri.org/IUser/TurnOnNewsToFlashBitResponse")]
        System.IAsyncResult BeginTurnOnNewsToFlashBit(System.AsyncCallback callback, object asyncState);
        
        void EndTurnOnNewsToFlashBit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/TurnOffNewsToFlashBit", ReplyAction="http://tempuri.org/IUser/TurnOffNewsToFlashBitResponse")]
        void TurnOffNewsToFlashBit(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/TurnOffNewsToFlashBit", ReplyAction="http://tempuri.org/IUser/TurnOffNewsToFlashBitResponse")]
        System.IAsyncResult BeginTurnOffNewsToFlashBit(System.Guid userId, System.AsyncCallback callback, object asyncState);
        
        void EndTurnOffNewsToFlashBit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/IsUserNameExist", ReplyAction="http://tempuri.org/IUser/IsUserNameExistResponse")]
        bool IsUserNameExist(System.Guid userId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/IsUserNameExist", ReplyAction="http://tempuri.org/IUser/IsUserNameExistResponse")]
        System.IAsyncResult BeginIsUserNameExist(System.Guid userId, string userName, System.AsyncCallback callback, object asyncState);
        
        bool EndIsUserNameExist(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetLinkedUser", ReplyAction="http://tempuri.org/IUser/GetLinkedUserResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> GetLinkedUser(System.Guid UserCredentialId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId, bool isHouseValue);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetLinkedUser", ReplyAction="http://tempuri.org/IUser/GetLinkedUserResponse")]
        System.IAsyncResult BeginGetLinkedUser(System.Guid UserCredentialId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId, bool isHouseValue, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> EndGetLinkedUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAllPayee", ReplyAction="http://tempuri.org/IUser/GetAllPayeeResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetAllPayee();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetAllPayee", ReplyAction="http://tempuri.org/IUser/GetAllPayeeResponse")]
        System.IAsyncResult BeginGetAllPayee(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetAllPayee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAllPayeeByLicencessID", ReplyAction="http://tempuri.org/IUser/GetAllPayeeByLicencessIDResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetAllPayeeByLicencessID(System.Guid licID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetAllPayeeByLicencessID", ReplyAction="http://tempuri.org/IUser/GetAllPayeeByLicencessIDResponse")]
        System.IAsyncResult BeginGetAllPayeeByLicencessID(System.Guid licID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetAllPayeeByLicencessID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/CheckAccoutExec", ReplyAction="http://tempuri.org/IUser/CheckAccoutExecResponse")]
        bool CheckAccoutExec(System.Guid userCredencialID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/CheckAccoutExec", ReplyAction="http://tempuri.org/IUser/CheckAccoutExecResponse")]
        System.IAsyncResult BeginCheckAccoutExec(System.Guid userCredencialID, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckAccoutExec(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/ImportHouseUsers", ReplyAction="http://tempuri.org/IUser/ImportHouseUsersResponse")]
        void ImportHouseUsers(System.Data.DataTable TempTable, System.Guid LincessID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/ImportHouseUsers", ReplyAction="http://tempuri.org/IUser/ImportHouseUsersResponse")]
        System.IAsyncResult BeginImportHouseUsers(System.Data.DataTable TempTable, System.Guid LincessID, System.AsyncCallback callback, object asyncState);
        
        void EndImportHouseUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAccountExecByLicencessID", ReplyAction="http://tempuri.org/IUser/GetAccountExecByLicencessIDResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetAccountExecByLicencessID(System.Guid licensssID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetAccountExecByLicencessID", ReplyAction="http://tempuri.org/IUser/GetAccountExecByLicencessIDResponse")]
        System.IAsyncResult BeginGetAccountExecByLicencessID(System.Guid licensssID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetAccountExecByLicencessID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetPayeeCount", ReplyAction="http://tempuri.org/IUser/GetPayeeCountResponse")]
        int GetPayeeCount(System.Guid licensssID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetPayeeCount", ReplyAction="http://tempuri.org/IUser/GetPayeeCountResponse")]
        System.IAsyncResult BeginGetPayeeCount(System.Guid licensssID, System.AsyncCallback callback, object asyncState);
        
        int EndGetPayeeCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAllPayeeCount", ReplyAction="http://tempuri.org/IUser/GetAllPayeeCountResponse")]
        int GetAllPayeeCount();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetAllPayeeCount", ReplyAction="http://tempuri.org/IUser/GetAllPayeeCountResponse")]
        System.IAsyncResult BeginGetAllPayeeCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetAllPayeeCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAllUsersByLicChunck", ReplyAction="http://tempuri.org/IUser/GetAllUsersByLicChunckResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetAllUsersByLicChunck(System.Guid LicenseeId, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetAllUsersByLicChunck", ReplyAction="http://tempuri.org/IUser/GetAllUsersByLicChunckResponse")]
        System.IAsyncResult BeginGetAllUsersByLicChunck(System.Guid LicenseeId, int skip, int take, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetAllUsersByLicChunck(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAllUsersByChunck", ReplyAction="http://tempuri.org/IUser/GetAllUsersByChunckResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetAllUsersByChunck(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetAllUsersByChunck", ReplyAction="http://tempuri.org/IUser/GetAllUsersByChunckResponse")]
        System.IAsyncResult BeginGetAllUsersByChunck(int skip, int take, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetAllUsersByChunck(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUserWithinLicensee", ReplyAction="http://tempuri.org/IUser/GetUserWithinLicenseeResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.User GetUserWithinLicensee(System.Guid userCredencialID, System.Guid LicenseeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetUserWithinLicensee", ReplyAction="http://tempuri.org/IUser/GetUserWithinLicenseeResponse")]
        System.IAsyncResult BeginGetUserWithinLicensee(System.Guid userCredencialID, System.Guid LicenseeID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.User EndGetUserWithinLicensee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAllLinkedUser", ReplyAction="http://tempuri.org/IUser/GetAllLinkedUserResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> GetAllLinkedUser(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> objUserList, System.Guid GuidLicID, System.Guid UserCredentialId, int intRole, bool boolHouseAccount);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetAllLinkedUser", ReplyAction="http://tempuri.org/IUser/GetAllLinkedUserResponse")]
        System.IAsyncResult BeginGetAllLinkedUser(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> objUserList, System.Guid GuidLicID, System.Guid UserCredentialId, int intRole, bool boolHouseAccount, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> EndGetAllLinkedUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/UpdateAccountExec", ReplyAction="http://tempuri.org/IUser/UpdateAccountExecResponse")]
        void UpdateAccountExec(System.Guid userCredencialID, bool bvalue);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/UpdateAccountExec", ReplyAction="http://tempuri.org/IUser/UpdateAccountExecResponse")]
        System.IAsyncResult BeginUpdateAccountExec(System.Guid userCredencialID, bool bvalue, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateAccountExec(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAccountExecCount", ReplyAction="http://tempuri.org/IUser/GetAccountExecCountResponse")]
        int GetAccountExecCount(System.Guid licensssID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetAccountExecCount", ReplyAction="http://tempuri.org/IUser/GetAccountExecCountResponse")]
        System.IAsyncResult BeginGetAccountExecCount(System.Guid licensssID, System.AsyncCallback callback, object asyncState);
        
        int EndGetAccountExecCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAllAccountExecCount", ReplyAction="http://tempuri.org/IUser/GetAllAccountExecCountResponse")]
        int GetAllAccountExecCount();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetAllAccountExecCount", ReplyAction="http://tempuri.org/IUser/GetAllAccountExecCountResponse")]
        System.IAsyncResult BeginGetAllAccountExecCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetAllAccountExecCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddLoginLogoutTime", ReplyAction="http://tempuri.org/IUser/AddLoginLogoutTimeResponse")]
        void AddLoginLogoutTime(System.Guid UserID, string AppVersion, string Activity);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/AddLoginLogoutTime", ReplyAction="http://tempuri.org/IUser/AddLoginLogoutTimeResponse")]
        System.IAsyncResult BeginAddLoginLogoutTime(System.Guid UserID, string AppVersion, string Activity, System.AsyncCallback callback, object asyncState);
        
        void EndAddLoginLogoutTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/HasAssociatedPolicies", ReplyAction="http://tempuri.org/IUser/HasAssociatedPoliciesResponse")]
        bool HasAssociatedPolicies(System.Nullable<System.Guid> UserCredentialId, string NickName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/HasAssociatedPolicies", ReplyAction="http://tempuri.org/IUser/HasAssociatedPoliciesResponse")]
        System.IAsyncResult BeginHasAssociatedPolicies(System.Nullable<System.Guid> UserCredentialId, string NickName, System.AsyncCallback callback, object asyncState);
        
        bool EndHasAssociatedPolicies(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsersWithRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UsersWithRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHouseUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHouseUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersByLicenseeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersByLicenseeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersForReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersForReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsersWithLicenseeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UsersWithLicenseeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetValidIdentityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetValidIdentityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetValidIdentityUsingNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetValidIdentityUsingNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UserPermissions> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UserPermissions>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLicenseeUserCredentialIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLicenseeUserCredentialIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserIdWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserIdWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getUserEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getUserEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsUserNameExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsUserNameExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLinkedUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLinkedUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPayeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPayeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPayeeByLicencessIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPayeeByLicencessIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckAccoutExecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckAccoutExecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountExecByLicencessIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountExecByLicencessIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayeeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayeeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPayeeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPayeeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllUsersByLicChunckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllUsersByLicChunckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllUsersByChunckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllUsersByChunckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserWithinLicenseeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserWithinLicenseeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLinkedUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLinkedUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountExecCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountExecCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAccountExecCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAccountExecCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HasAssociatedPoliciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HasAssociatedPoliciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IUser>, MyAgencyVault.VM.MyAgencyVaultSvc.IUser {
        
        private BeginOperationDelegate onBeginAddUpdateUserDelegate;
        
        private EndOperationDelegate onEndAddUpdateUserDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateUserPermissionAndOtherDataDelegate;
        
        private EndOperationDelegate onEndAddUpdateUserPermissionAndOtherDataDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateUserPermissionAndOtherDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserInfoDelegate;
        
        private EndOperationDelegate onEndDeleteUserInfoDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginUsersWithRoleDelegate;
        
        private EndOperationDelegate onEndUsersWithRoleDelegate;
        
        private System.Threading.SendOrPostCallback onUsersWithRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHouseUsersDelegate;
        
        private EndOperationDelegate onEndGetHouseUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetHouseUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllUsersDelegate;
        
        private EndOperationDelegate onEndGetAllUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersByLicenseeDelegate;
        
        private EndOperationDelegate onEndGetUsersByLicenseeDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersByLicenseeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersForReportsDelegate;
        
        private EndOperationDelegate onEndGetUsersForReportsDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersForReportsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUsersWithLicenseeIdDelegate;
        
        private EndOperationDelegate onEndUsersWithLicenseeIdDelegate;
        
        private System.Threading.SendOrPostCallback onUsersWithLicenseeIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetValidIdentityDelegate;
        
        private EndOperationDelegate onEndGetValidIdentityDelegate;
        
        private System.Threading.SendOrPostCallback onGetValidIdentityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetValidIdentityUsingNameDelegate;
        
        private EndOperationDelegate onEndGetValidIdentityUsingNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetValidIdentityUsingNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentPermissionDelegate;
        
        private EndOperationDelegate onEndGetCurrentPermissionDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentPermissionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLicenseeUserCredentialIdDelegate;
        
        private EndOperationDelegate onEndGetLicenseeUserCredentialIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetLicenseeUserCredentialIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginHouseAccoutTransferProcessDelegate;
        
        private EndOperationDelegate onEndHouseAccoutTransferProcessDelegate;
        
        private System.Threading.SendOrPostCallback onHouseAccoutTransferProcessCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserIdWiseDelegate;
        
        private EndOperationDelegate onEndGetUserIdWiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserIdWiseCompletedDelegate;
        
        private BeginOperationDelegate onBegingetUserEmailDelegate;
        
        private EndOperationDelegate onEndgetUserEmailDelegate;
        
        private System.Threading.SendOrPostCallback ongetUserEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginTurnOnNewsToFlashBitDelegate;
        
        private EndOperationDelegate onEndTurnOnNewsToFlashBitDelegate;
        
        private System.Threading.SendOrPostCallback onTurnOnNewsToFlashBitCompletedDelegate;
        
        private BeginOperationDelegate onBeginTurnOffNewsToFlashBitDelegate;
        
        private EndOperationDelegate onEndTurnOffNewsToFlashBitDelegate;
        
        private System.Threading.SendOrPostCallback onTurnOffNewsToFlashBitCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsUserNameExistDelegate;
        
        private EndOperationDelegate onEndIsUserNameExistDelegate;
        
        private System.Threading.SendOrPostCallback onIsUserNameExistCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLinkedUserDelegate;
        
        private EndOperationDelegate onEndGetLinkedUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetLinkedUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPayeeDelegate;
        
        private EndOperationDelegate onEndGetAllPayeeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPayeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPayeeByLicencessIDDelegate;
        
        private EndOperationDelegate onEndGetAllPayeeByLicencessIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPayeeByLicencessIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckAccoutExecDelegate;
        
        private EndOperationDelegate onEndCheckAccoutExecDelegate;
        
        private System.Threading.SendOrPostCallback onCheckAccoutExecCompletedDelegate;
        
        private BeginOperationDelegate onBeginImportHouseUsersDelegate;
        
        private EndOperationDelegate onEndImportHouseUsersDelegate;
        
        private System.Threading.SendOrPostCallback onImportHouseUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountExecByLicencessIDDelegate;
        
        private EndOperationDelegate onEndGetAccountExecByLicencessIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountExecByLicencessIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayeeCountDelegate;
        
        private EndOperationDelegate onEndGetPayeeCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayeeCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPayeeCountDelegate;
        
        private EndOperationDelegate onEndGetAllPayeeCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPayeeCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllUsersByLicChunckDelegate;
        
        private EndOperationDelegate onEndGetAllUsersByLicChunckDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllUsersByLicChunckCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllUsersByChunckDelegate;
        
        private EndOperationDelegate onEndGetAllUsersByChunckDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllUsersByChunckCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserWithinLicenseeDelegate;
        
        private EndOperationDelegate onEndGetUserWithinLicenseeDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserWithinLicenseeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLinkedUserDelegate;
        
        private EndOperationDelegate onEndGetAllLinkedUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLinkedUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAccountExecDelegate;
        
        private EndOperationDelegate onEndUpdateAccountExecDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAccountExecCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountExecCountDelegate;
        
        private EndOperationDelegate onEndGetAccountExecCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountExecCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAccountExecCountDelegate;
        
        private EndOperationDelegate onEndGetAllAccountExecCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAccountExecCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddLoginLogoutTimeDelegate;
        
        private EndOperationDelegate onEndAddLoginLogoutTimeDelegate;
        
        private System.Threading.SendOrPostCallback onAddLoginLogoutTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginHasAssociatedPoliciesDelegate;
        
        private EndOperationDelegate onEndHasAssociatedPoliciesDelegate;
        
        private System.Threading.SendOrPostCallback onHasAssociatedPoliciesCompletedDelegate;
        
        public UserClient() {
        }
        
        public UserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateUserPermissionAndOtherDataCompleted;
        
        public event System.EventHandler<DeleteUserInfoCompletedEventArgs> DeleteUserInfoCompleted;
        
        public event System.EventHandler<UsersWithRoleCompletedEventArgs> UsersWithRoleCompleted;
        
        public event System.EventHandler<GetHouseUsersCompletedEventArgs> GetHouseUsersCompleted;
        
        public event System.EventHandler<GetAllUsersCompletedEventArgs> GetAllUsersCompleted;
        
        public event System.EventHandler<GetUsersByLicenseeCompletedEventArgs> GetUsersByLicenseeCompleted;
        
        public event System.EventHandler<GetUsersForReportsCompletedEventArgs> GetUsersForReportsCompleted;
        
        public event System.EventHandler<UsersWithLicenseeIdCompletedEventArgs> UsersWithLicenseeIdCompleted;
        
        public event System.EventHandler<GetValidIdentityCompletedEventArgs> GetValidIdentityCompleted;
        
        public event System.EventHandler<GetValidIdentityUsingNameCompletedEventArgs> GetValidIdentityUsingNameCompleted;
        
        public event System.EventHandler<GetCurrentPermissionCompletedEventArgs> GetCurrentPermissionCompleted;
        
        public event System.EventHandler<GetLicenseeUserCredentialIdCompletedEventArgs> GetLicenseeUserCredentialIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> HouseAccoutTransferProcessCompleted;
        
        public event System.EventHandler<GetUserIdWiseCompletedEventArgs> GetUserIdWiseCompleted;
        
        public event System.EventHandler<getUserEmailCompletedEventArgs> getUserEmailCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TurnOnNewsToFlashBitCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TurnOffNewsToFlashBitCompleted;
        
        public event System.EventHandler<IsUserNameExistCompletedEventArgs> IsUserNameExistCompleted;
        
        public event System.EventHandler<GetLinkedUserCompletedEventArgs> GetLinkedUserCompleted;
        
        public event System.EventHandler<GetAllPayeeCompletedEventArgs> GetAllPayeeCompleted;
        
        public event System.EventHandler<GetAllPayeeByLicencessIDCompletedEventArgs> GetAllPayeeByLicencessIDCompleted;
        
        public event System.EventHandler<CheckAccoutExecCompletedEventArgs> CheckAccoutExecCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ImportHouseUsersCompleted;
        
        public event System.EventHandler<GetAccountExecByLicencessIDCompletedEventArgs> GetAccountExecByLicencessIDCompleted;
        
        public event System.EventHandler<GetPayeeCountCompletedEventArgs> GetPayeeCountCompleted;
        
        public event System.EventHandler<GetAllPayeeCountCompletedEventArgs> GetAllPayeeCountCompleted;
        
        public event System.EventHandler<GetAllUsersByLicChunckCompletedEventArgs> GetAllUsersByLicChunckCompleted;
        
        public event System.EventHandler<GetAllUsersByChunckCompletedEventArgs> GetAllUsersByChunckCompleted;
        
        public event System.EventHandler<GetUserWithinLicenseeCompletedEventArgs> GetUserWithinLicenseeCompleted;
        
        public event System.EventHandler<GetAllLinkedUserCompletedEventArgs> GetAllLinkedUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateAccountExecCompleted;
        
        public event System.EventHandler<GetAccountExecCountCompletedEventArgs> GetAccountExecCountCompleted;
        
        public event System.EventHandler<GetAllAccountExecCountCompletedEventArgs> GetAllAccountExecCountCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddLoginLogoutTimeCompleted;
        
        public event System.EventHandler<HasAssociatedPoliciesCompletedEventArgs> HasAssociatedPoliciesCompleted;
        
        public void AddUpdateUser(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr) {
            base.Channel.AddUpdateUser(Usr);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateUser(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateUser(Usr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateUser(System.IAsyncResult result) {
            base.Channel.EndAddUpdateUser(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.User Usr = ((MyAgencyVault.VM.MyAgencyVaultSvc.User)(inValues[0]));
            return this.BeginAddUpdateUser(Usr, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateUser(System.IAsyncResult result) {
            this.EndAddUpdateUser(result);
            return null;
        }
        
        private void OnAddUpdateUserCompleted(object state) {
            if ((this.AddUpdateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateUserAsync(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr) {
            this.AddUpdateUserAsync(Usr, null);
        }
        
        public void AddUpdateUserAsync(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr, object userState) {
            if ((this.onBeginAddUpdateUserDelegate == null)) {
                this.onBeginAddUpdateUserDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateUser);
            }
            if ((this.onEndAddUpdateUserDelegate == null)) {
                this.onEndAddUpdateUserDelegate = new EndOperationDelegate(this.OnEndAddUpdateUser);
            }
            if ((this.onAddUpdateUserCompletedDelegate == null)) {
                this.onAddUpdateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateUserCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateUserDelegate, new object[] {
                        Usr}, this.onEndAddUpdateUserDelegate, this.onAddUpdateUserCompletedDelegate, userState);
        }
        
        public void AddUpdateUserPermissionAndOtherData(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr) {
            base.Channel.AddUpdateUserPermissionAndOtherData(Usr);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateUserPermissionAndOtherData(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateUserPermissionAndOtherData(Usr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateUserPermissionAndOtherData(System.IAsyncResult result) {
            base.Channel.EndAddUpdateUserPermissionAndOtherData(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateUserPermissionAndOtherData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.User Usr = ((MyAgencyVault.VM.MyAgencyVaultSvc.User)(inValues[0]));
            return this.BeginAddUpdateUserPermissionAndOtherData(Usr, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateUserPermissionAndOtherData(System.IAsyncResult result) {
            this.EndAddUpdateUserPermissionAndOtherData(result);
            return null;
        }
        
        private void OnAddUpdateUserPermissionAndOtherDataCompleted(object state) {
            if ((this.AddUpdateUserPermissionAndOtherDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateUserPermissionAndOtherDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateUserPermissionAndOtherDataAsync(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr) {
            this.AddUpdateUserPermissionAndOtherDataAsync(Usr, null);
        }
        
        public void AddUpdateUserPermissionAndOtherDataAsync(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr, object userState) {
            if ((this.onBeginAddUpdateUserPermissionAndOtherDataDelegate == null)) {
                this.onBeginAddUpdateUserPermissionAndOtherDataDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateUserPermissionAndOtherData);
            }
            if ((this.onEndAddUpdateUserPermissionAndOtherDataDelegate == null)) {
                this.onEndAddUpdateUserPermissionAndOtherDataDelegate = new EndOperationDelegate(this.OnEndAddUpdateUserPermissionAndOtherData);
            }
            if ((this.onAddUpdateUserPermissionAndOtherDataCompletedDelegate == null)) {
                this.onAddUpdateUserPermissionAndOtherDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateUserPermissionAndOtherDataCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateUserPermissionAndOtherDataDelegate, new object[] {
                        Usr}, this.onEndAddUpdateUserPermissionAndOtherDataDelegate, this.onAddUpdateUserPermissionAndOtherDataCompletedDelegate, userState);
        }
        
        public bool DeleteUserInfo(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr) {
            return base.Channel.DeleteUserInfo(Usr);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteUserInfo(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUserInfo(Usr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteUserInfo(System.IAsyncResult result) {
            return base.Channel.EndDeleteUserInfo(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUserInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.User Usr = ((MyAgencyVault.VM.MyAgencyVaultSvc.User)(inValues[0]));
            return this.BeginDeleteUserInfo(Usr, callback, asyncState);
        }
        
        private object[] OnEndDeleteUserInfo(System.IAsyncResult result) {
            bool retVal = this.EndDeleteUserInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteUserInfoCompleted(object state) {
            if ((this.DeleteUserInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserInfoCompleted(this, new DeleteUserInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserInfoAsync(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr) {
            this.DeleteUserInfoAsync(Usr, null);
        }
        
        public void DeleteUserInfoAsync(MyAgencyVault.VM.MyAgencyVaultSvc.User Usr, object userState) {
            if ((this.onBeginDeleteUserInfoDelegate == null)) {
                this.onBeginDeleteUserInfoDelegate = new BeginOperationDelegate(this.OnBeginDeleteUserInfo);
            }
            if ((this.onEndDeleteUserInfoDelegate == null)) {
                this.onEndDeleteUserInfoDelegate = new EndOperationDelegate(this.OnEndDeleteUserInfo);
            }
            if ((this.onDeleteUserInfoCompletedDelegate == null)) {
                this.onDeleteUserInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserInfoCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserInfoDelegate, new object[] {
                        Usr}, this.onEndDeleteUserInfoDelegate, this.onDeleteUserInfoCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> UsersWithRole(MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId) {
            return base.Channel.UsersWithRole(RoleId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUsersWithRole(MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUsersWithRole(RoleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndUsersWithRole(System.IAsyncResult result) {
            return base.Channel.EndUsersWithRole(result);
        }
        
        private System.IAsyncResult OnBeginUsersWithRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[0]));
            return this.BeginUsersWithRole(RoleId, callback, asyncState);
        }
        
        private object[] OnEndUsersWithRole(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> retVal = this.EndUsersWithRole(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUsersWithRoleCompleted(object state) {
            if ((this.UsersWithRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UsersWithRoleCompleted(this, new UsersWithRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UsersWithRoleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId) {
            this.UsersWithRoleAsync(RoleId, null);
        }
        
        public void UsersWithRoleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId, object userState) {
            if ((this.onBeginUsersWithRoleDelegate == null)) {
                this.onBeginUsersWithRoleDelegate = new BeginOperationDelegate(this.OnBeginUsersWithRole);
            }
            if ((this.onEndUsersWithRoleDelegate == null)) {
                this.onEndUsersWithRoleDelegate = new EndOperationDelegate(this.OnEndUsersWithRole);
            }
            if ((this.onUsersWithRoleCompletedDelegate == null)) {
                this.onUsersWithRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUsersWithRoleCompleted);
            }
            base.InvokeAsync(this.onBeginUsersWithRoleDelegate, new object[] {
                        RoleId}, this.onEndUsersWithRoleDelegate, this.onUsersWithRoleCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetHouseUsers(System.Guid LincessID, int intRoleID, bool IsHouseAccount) {
            return base.Channel.GetHouseUsers(LincessID, intRoleID, IsHouseAccount);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHouseUsers(System.Guid LincessID, int intRoleID, bool IsHouseAccount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHouseUsers(LincessID, intRoleID, IsHouseAccount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetHouseUsers(System.IAsyncResult result) {
            return base.Channel.EndGetHouseUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetHouseUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LincessID = ((System.Guid)(inValues[0]));
            int intRoleID = ((int)(inValues[1]));
            bool IsHouseAccount = ((bool)(inValues[2]));
            return this.BeginGetHouseUsers(LincessID, intRoleID, IsHouseAccount, callback, asyncState);
        }
        
        private object[] OnEndGetHouseUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> retVal = this.EndGetHouseUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHouseUsersCompleted(object state) {
            if ((this.GetHouseUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHouseUsersCompleted(this, new GetHouseUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHouseUsersAsync(System.Guid LincessID, int intRoleID, bool IsHouseAccount) {
            this.GetHouseUsersAsync(LincessID, intRoleID, IsHouseAccount, null);
        }
        
        public void GetHouseUsersAsync(System.Guid LincessID, int intRoleID, bool IsHouseAccount, object userState) {
            if ((this.onBeginGetHouseUsersDelegate == null)) {
                this.onBeginGetHouseUsersDelegate = new BeginOperationDelegate(this.OnBeginGetHouseUsers);
            }
            if ((this.onEndGetHouseUsersDelegate == null)) {
                this.onEndGetHouseUsersDelegate = new EndOperationDelegate(this.OnEndGetHouseUsers);
            }
            if ((this.onGetHouseUsersCompletedDelegate == null)) {
                this.onGetHouseUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHouseUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetHouseUsersDelegate, new object[] {
                        LincessID,
                        intRoleID,
                        IsHouseAccount}, this.onEndGetHouseUsersDelegate, this.onGetHouseUsersCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetAllUsers(System.IAsyncResult result) {
            return base.Channel.EndGetAllUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllUsers(callback, asyncState);
        }
        
        private object[] OnEndGetAllUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> retVal = this.EndGetAllUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllUsersCompleted(object state) {
            if ((this.GetAllUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllUsersAsync() {
            this.GetAllUsersAsync(null);
        }
        
        public void GetAllUsersAsync(object userState) {
            if ((this.onBeginGetAllUsersDelegate == null)) {
                this.onBeginGetAllUsersDelegate = new BeginOperationDelegate(this.OnBeginGetAllUsers);
            }
            if ((this.onEndGetAllUsersDelegate == null)) {
                this.onEndGetAllUsersDelegate = new EndOperationDelegate(this.OnEndGetAllUsers);
            }
            if ((this.onGetAllUsersCompletedDelegate == null)) {
                this.onGetAllUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllUsersDelegate, null, this.onEndGetAllUsersDelegate, this.onGetAllUsersCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetUsersByLicensee(System.Guid LicenseeId) {
            return base.Channel.GetUsersByLicensee(LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUsersByLicensee(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersByLicensee(LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetUsersByLicensee(System.IAsyncResult result) {
            return base.Channel.EndGetUsersByLicensee(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersByLicensee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            return this.BeginGetUsersByLicensee(LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndGetUsersByLicensee(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> retVal = this.EndGetUsersByLicensee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersByLicenseeCompleted(object state) {
            if ((this.GetUsersByLicenseeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersByLicenseeCompleted(this, new GetUsersByLicenseeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersByLicenseeAsync(System.Guid LicenseeId) {
            this.GetUsersByLicenseeAsync(LicenseeId, null);
        }
        
        public void GetUsersByLicenseeAsync(System.Guid LicenseeId, object userState) {
            if ((this.onBeginGetUsersByLicenseeDelegate == null)) {
                this.onBeginGetUsersByLicenseeDelegate = new BeginOperationDelegate(this.OnBeginGetUsersByLicensee);
            }
            if ((this.onEndGetUsersByLicenseeDelegate == null)) {
                this.onEndGetUsersByLicenseeDelegate = new EndOperationDelegate(this.OnEndGetUsersByLicensee);
            }
            if ((this.onGetUsersByLicenseeCompletedDelegate == null)) {
                this.onGetUsersByLicenseeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersByLicenseeCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersByLicenseeDelegate, new object[] {
                        LicenseeId}, this.onEndGetUsersByLicenseeDelegate, this.onGetUsersByLicenseeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetUsersForReports(System.Guid LicenseeId) {
            return base.Channel.GetUsersForReports(LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUsersForReports(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersForReports(LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetUsersForReports(System.IAsyncResult result) {
            return base.Channel.EndGetUsersForReports(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersForReports(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            return this.BeginGetUsersForReports(LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndGetUsersForReports(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> retVal = this.EndGetUsersForReports(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersForReportsCompleted(object state) {
            if ((this.GetUsersForReportsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersForReportsCompleted(this, new GetUsersForReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersForReportsAsync(System.Guid LicenseeId) {
            this.GetUsersForReportsAsync(LicenseeId, null);
        }
        
        public void GetUsersForReportsAsync(System.Guid LicenseeId, object userState) {
            if ((this.onBeginGetUsersForReportsDelegate == null)) {
                this.onBeginGetUsersForReportsDelegate = new BeginOperationDelegate(this.OnBeginGetUsersForReports);
            }
            if ((this.onEndGetUsersForReportsDelegate == null)) {
                this.onEndGetUsersForReportsDelegate = new EndOperationDelegate(this.OnEndGetUsersForReports);
            }
            if ((this.onGetUsersForReportsCompletedDelegate == null)) {
                this.onGetUsersForReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersForReportsCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersForReportsDelegate, new object[] {
                        LicenseeId}, this.onEndGetUsersForReportsDelegate, this.onGetUsersForReportsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> UsersWithLicenseeId(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleIdToView) {
            return base.Channel.UsersWithLicenseeId(LicenseeId, RoleIdToView);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUsersWithLicenseeId(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleIdToView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUsersWithLicenseeId(LicenseeId, RoleIdToView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndUsersWithLicenseeId(System.IAsyncResult result) {
            return base.Channel.EndUsersWithLicenseeId(result);
        }
        
        private System.IAsyncResult OnBeginUsersWithLicenseeId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleIdToView = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[1]));
            return this.BeginUsersWithLicenseeId(LicenseeId, RoleIdToView, callback, asyncState);
        }
        
        private object[] OnEndUsersWithLicenseeId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> retVal = this.EndUsersWithLicenseeId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUsersWithLicenseeIdCompleted(object state) {
            if ((this.UsersWithLicenseeIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UsersWithLicenseeIdCompleted(this, new UsersWithLicenseeIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UsersWithLicenseeIdAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleIdToView) {
            this.UsersWithLicenseeIdAsync(LicenseeId, RoleIdToView, null);
        }
        
        public void UsersWithLicenseeIdAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleIdToView, object userState) {
            if ((this.onBeginUsersWithLicenseeIdDelegate == null)) {
                this.onBeginUsersWithLicenseeIdDelegate = new BeginOperationDelegate(this.OnBeginUsersWithLicenseeId);
            }
            if ((this.onEndUsersWithLicenseeIdDelegate == null)) {
                this.onEndUsersWithLicenseeIdDelegate = new EndOperationDelegate(this.OnEndUsersWithLicenseeId);
            }
            if ((this.onUsersWithLicenseeIdCompletedDelegate == null)) {
                this.onUsersWithLicenseeIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUsersWithLicenseeIdCompleted);
            }
            base.InvokeAsync(this.onBeginUsersWithLicenseeIdDelegate, new object[] {
                        LicenseeId,
                        RoleIdToView}, this.onEndUsersWithLicenseeIdDelegate, this.onUsersWithLicenseeIdCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.User GetValidIdentity(string UserName, string Password) {
            return base.Channel.GetValidIdentity(UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetValidIdentity(string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetValidIdentity(UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.User EndGetValidIdentity(System.IAsyncResult result) {
            return base.Channel.EndGetValidIdentity(result);
        }
        
        private System.IAsyncResult OnBeginGetValidIdentity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string Password = ((string)(inValues[1]));
            return this.BeginGetValidIdentity(UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndGetValidIdentity(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.User retVal = this.EndGetValidIdentity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetValidIdentityCompleted(object state) {
            if ((this.GetValidIdentityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetValidIdentityCompleted(this, new GetValidIdentityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetValidIdentityAsync(string UserName, string Password) {
            this.GetValidIdentityAsync(UserName, Password, null);
        }
        
        public void GetValidIdentityAsync(string UserName, string Password, object userState) {
            if ((this.onBeginGetValidIdentityDelegate == null)) {
                this.onBeginGetValidIdentityDelegate = new BeginOperationDelegate(this.OnBeginGetValidIdentity);
            }
            if ((this.onEndGetValidIdentityDelegate == null)) {
                this.onEndGetValidIdentityDelegate = new EndOperationDelegate(this.OnEndGetValidIdentity);
            }
            if ((this.onGetValidIdentityCompletedDelegate == null)) {
                this.onGetValidIdentityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetValidIdentityCompleted);
            }
            base.InvokeAsync(this.onBeginGetValidIdentityDelegate, new object[] {
                        UserName,
                        Password}, this.onEndGetValidIdentityDelegate, this.onGetValidIdentityCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.User GetValidIdentityUsingName(string UserName) {
            return base.Channel.GetValidIdentityUsingName(UserName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetValidIdentityUsingName(string UserName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetValidIdentityUsingName(UserName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.User EndGetValidIdentityUsingName(System.IAsyncResult result) {
            return base.Channel.EndGetValidIdentityUsingName(result);
        }
        
        private System.IAsyncResult OnBeginGetValidIdentityUsingName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            return this.BeginGetValidIdentityUsingName(UserName, callback, asyncState);
        }
        
        private object[] OnEndGetValidIdentityUsingName(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.User retVal = this.EndGetValidIdentityUsingName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetValidIdentityUsingNameCompleted(object state) {
            if ((this.GetValidIdentityUsingNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetValidIdentityUsingNameCompleted(this, new GetValidIdentityUsingNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetValidIdentityUsingNameAsync(string UserName) {
            this.GetValidIdentityUsingNameAsync(UserName, null);
        }
        
        public void GetValidIdentityUsingNameAsync(string UserName, object userState) {
            if ((this.onBeginGetValidIdentityUsingNameDelegate == null)) {
                this.onBeginGetValidIdentityUsingNameDelegate = new BeginOperationDelegate(this.OnBeginGetValidIdentityUsingName);
            }
            if ((this.onEndGetValidIdentityUsingNameDelegate == null)) {
                this.onEndGetValidIdentityUsingNameDelegate = new EndOperationDelegate(this.OnEndGetValidIdentityUsingName);
            }
            if ((this.onGetValidIdentityUsingNameCompletedDelegate == null)) {
                this.onGetValidIdentityUsingNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetValidIdentityUsingNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetValidIdentityUsingNameDelegate, new object[] {
                        UserName}, this.onEndGetValidIdentityUsingNameDelegate, this.onGetValidIdentityUsingNameCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UserPermissions> GetCurrentPermission(System.Guid UserCredentialId) {
            return base.Channel.GetCurrentPermission(UserCredentialId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCurrentPermission(System.Guid UserCredentialId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentPermission(UserCredentialId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UserPermissions> EndGetCurrentPermission(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentPermission(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentPermission(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid UserCredentialId = ((System.Guid)(inValues[0]));
            return this.BeginGetCurrentPermission(UserCredentialId, callback, asyncState);
        }
        
        private object[] OnEndGetCurrentPermission(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.UserPermissions> retVal = this.EndGetCurrentPermission(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentPermissionCompleted(object state) {
            if ((this.GetCurrentPermissionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentPermissionCompleted(this, new GetCurrentPermissionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentPermissionAsync(System.Guid UserCredentialId) {
            this.GetCurrentPermissionAsync(UserCredentialId, null);
        }
        
        public void GetCurrentPermissionAsync(System.Guid UserCredentialId, object userState) {
            if ((this.onBeginGetCurrentPermissionDelegate == null)) {
                this.onBeginGetCurrentPermissionDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentPermission);
            }
            if ((this.onEndGetCurrentPermissionDelegate == null)) {
                this.onEndGetCurrentPermissionDelegate = new EndOperationDelegate(this.OnEndGetCurrentPermission);
            }
            if ((this.onGetCurrentPermissionCompletedDelegate == null)) {
                this.onGetCurrentPermissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentPermissionCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentPermissionDelegate, new object[] {
                        UserCredentialId}, this.onEndGetCurrentPermissionDelegate, this.onGetCurrentPermissionCompletedDelegate, userState);
        }
        
        public System.Guid GetLicenseeUserCredentialId(System.Guid licId) {
            return base.Channel.GetLicenseeUserCredentialId(licId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLicenseeUserCredentialId(System.Guid licId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLicenseeUserCredentialId(licId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Guid EndGetLicenseeUserCredentialId(System.IAsyncResult result) {
            return base.Channel.EndGetLicenseeUserCredentialId(result);
        }
        
        private System.IAsyncResult OnBeginGetLicenseeUserCredentialId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licId = ((System.Guid)(inValues[0]));
            return this.BeginGetLicenseeUserCredentialId(licId, callback, asyncState);
        }
        
        private object[] OnEndGetLicenseeUserCredentialId(System.IAsyncResult result) {
            System.Guid retVal = this.EndGetLicenseeUserCredentialId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLicenseeUserCredentialIdCompleted(object state) {
            if ((this.GetLicenseeUserCredentialIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLicenseeUserCredentialIdCompleted(this, new GetLicenseeUserCredentialIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLicenseeUserCredentialIdAsync(System.Guid licId) {
            this.GetLicenseeUserCredentialIdAsync(licId, null);
        }
        
        public void GetLicenseeUserCredentialIdAsync(System.Guid licId, object userState) {
            if ((this.onBeginGetLicenseeUserCredentialIdDelegate == null)) {
                this.onBeginGetLicenseeUserCredentialIdDelegate = new BeginOperationDelegate(this.OnBeginGetLicenseeUserCredentialId);
            }
            if ((this.onEndGetLicenseeUserCredentialIdDelegate == null)) {
                this.onEndGetLicenseeUserCredentialIdDelegate = new EndOperationDelegate(this.OnEndGetLicenseeUserCredentialId);
            }
            if ((this.onGetLicenseeUserCredentialIdCompletedDelegate == null)) {
                this.onGetLicenseeUserCredentialIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLicenseeUserCredentialIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetLicenseeUserCredentialIdDelegate, new object[] {
                        licId}, this.onEndGetLicenseeUserCredentialIdDelegate, this.onGetLicenseeUserCredentialIdCompletedDelegate, userState);
        }
        
        public void HouseAccoutTransferProcess(MyAgencyVault.VM.MyAgencyVaultSvc.User user) {
            base.Channel.HouseAccoutTransferProcess(user);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHouseAccoutTransferProcess(MyAgencyVault.VM.MyAgencyVaultSvc.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHouseAccoutTransferProcess(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndHouseAccoutTransferProcess(System.IAsyncResult result) {
            base.Channel.EndHouseAccoutTransferProcess(result);
        }
        
        private System.IAsyncResult OnBeginHouseAccoutTransferProcess(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.User user = ((MyAgencyVault.VM.MyAgencyVaultSvc.User)(inValues[0]));
            return this.BeginHouseAccoutTransferProcess(user, callback, asyncState);
        }
        
        private object[] OnEndHouseAccoutTransferProcess(System.IAsyncResult result) {
            this.EndHouseAccoutTransferProcess(result);
            return null;
        }
        
        private void OnHouseAccoutTransferProcessCompleted(object state) {
            if ((this.HouseAccoutTransferProcessCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HouseAccoutTransferProcessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HouseAccoutTransferProcessAsync(MyAgencyVault.VM.MyAgencyVaultSvc.User user) {
            this.HouseAccoutTransferProcessAsync(user, null);
        }
        
        public void HouseAccoutTransferProcessAsync(MyAgencyVault.VM.MyAgencyVaultSvc.User user, object userState) {
            if ((this.onBeginHouseAccoutTransferProcessDelegate == null)) {
                this.onBeginHouseAccoutTransferProcessDelegate = new BeginOperationDelegate(this.OnBeginHouseAccoutTransferProcess);
            }
            if ((this.onEndHouseAccoutTransferProcessDelegate == null)) {
                this.onEndHouseAccoutTransferProcessDelegate = new EndOperationDelegate(this.OnEndHouseAccoutTransferProcess);
            }
            if ((this.onHouseAccoutTransferProcessCompletedDelegate == null)) {
                this.onHouseAccoutTransferProcessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHouseAccoutTransferProcessCompleted);
            }
            base.InvokeAsync(this.onBeginHouseAccoutTransferProcessDelegate, new object[] {
                        user}, this.onEndHouseAccoutTransferProcessDelegate, this.onHouseAccoutTransferProcessCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.User GetUserIdWise(System.Guid UserCredId) {
            return base.Channel.GetUserIdWise(UserCredId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserIdWise(System.Guid UserCredId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserIdWise(UserCredId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.User EndGetUserIdWise(System.IAsyncResult result) {
            return base.Channel.EndGetUserIdWise(result);
        }
        
        private System.IAsyncResult OnBeginGetUserIdWise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid UserCredId = ((System.Guid)(inValues[0]));
            return this.BeginGetUserIdWise(UserCredId, callback, asyncState);
        }
        
        private object[] OnEndGetUserIdWise(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.User retVal = this.EndGetUserIdWise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserIdWiseCompleted(object state) {
            if ((this.GetUserIdWiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserIdWiseCompleted(this, new GetUserIdWiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserIdWiseAsync(System.Guid UserCredId) {
            this.GetUserIdWiseAsync(UserCredId, null);
        }
        
        public void GetUserIdWiseAsync(System.Guid UserCredId, object userState) {
            if ((this.onBeginGetUserIdWiseDelegate == null)) {
                this.onBeginGetUserIdWiseDelegate = new BeginOperationDelegate(this.OnBeginGetUserIdWise);
            }
            if ((this.onEndGetUserIdWiseDelegate == null)) {
                this.onEndGetUserIdWiseDelegate = new EndOperationDelegate(this.OnEndGetUserIdWise);
            }
            if ((this.onGetUserIdWiseCompletedDelegate == null)) {
                this.onGetUserIdWiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserIdWiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserIdWiseDelegate, new object[] {
                        UserCredId}, this.onEndGetUserIdWiseDelegate, this.onGetUserIdWiseCompletedDelegate, userState);
        }
        
        public string getUserEmail(System.Guid UserID) {
            return base.Channel.getUserEmail(UserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetUserEmail(System.Guid UserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetUserEmail(UserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndgetUserEmail(System.IAsyncResult result) {
            return base.Channel.EndgetUserEmail(result);
        }
        
        private System.IAsyncResult OnBegingetUserEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid UserID = ((System.Guid)(inValues[0]));
            return this.BegingetUserEmail(UserID, callback, asyncState);
        }
        
        private object[] OnEndgetUserEmail(System.IAsyncResult result) {
            string retVal = this.EndgetUserEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetUserEmailCompleted(object state) {
            if ((this.getUserEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getUserEmailCompleted(this, new getUserEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getUserEmailAsync(System.Guid UserID) {
            this.getUserEmailAsync(UserID, null);
        }
        
        public void getUserEmailAsync(System.Guid UserID, object userState) {
            if ((this.onBegingetUserEmailDelegate == null)) {
                this.onBegingetUserEmailDelegate = new BeginOperationDelegate(this.OnBegingetUserEmail);
            }
            if ((this.onEndgetUserEmailDelegate == null)) {
                this.onEndgetUserEmailDelegate = new EndOperationDelegate(this.OnEndgetUserEmail);
            }
            if ((this.ongetUserEmailCompletedDelegate == null)) {
                this.ongetUserEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetUserEmailCompleted);
            }
            base.InvokeAsync(this.onBegingetUserEmailDelegate, new object[] {
                        UserID}, this.onEndgetUserEmailDelegate, this.ongetUserEmailCompletedDelegate, userState);
        }
        
        public void TurnOnNewsToFlashBit() {
            base.Channel.TurnOnNewsToFlashBit();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTurnOnNewsToFlashBit(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTurnOnNewsToFlashBit(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndTurnOnNewsToFlashBit(System.IAsyncResult result) {
            base.Channel.EndTurnOnNewsToFlashBit(result);
        }
        
        private System.IAsyncResult OnBeginTurnOnNewsToFlashBit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginTurnOnNewsToFlashBit(callback, asyncState);
        }
        
        private object[] OnEndTurnOnNewsToFlashBit(System.IAsyncResult result) {
            this.EndTurnOnNewsToFlashBit(result);
            return null;
        }
        
        private void OnTurnOnNewsToFlashBitCompleted(object state) {
            if ((this.TurnOnNewsToFlashBitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TurnOnNewsToFlashBitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TurnOnNewsToFlashBitAsync() {
            this.TurnOnNewsToFlashBitAsync(null);
        }
        
        public void TurnOnNewsToFlashBitAsync(object userState) {
            if ((this.onBeginTurnOnNewsToFlashBitDelegate == null)) {
                this.onBeginTurnOnNewsToFlashBitDelegate = new BeginOperationDelegate(this.OnBeginTurnOnNewsToFlashBit);
            }
            if ((this.onEndTurnOnNewsToFlashBitDelegate == null)) {
                this.onEndTurnOnNewsToFlashBitDelegate = new EndOperationDelegate(this.OnEndTurnOnNewsToFlashBit);
            }
            if ((this.onTurnOnNewsToFlashBitCompletedDelegate == null)) {
                this.onTurnOnNewsToFlashBitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTurnOnNewsToFlashBitCompleted);
            }
            base.InvokeAsync(this.onBeginTurnOnNewsToFlashBitDelegate, null, this.onEndTurnOnNewsToFlashBitDelegate, this.onTurnOnNewsToFlashBitCompletedDelegate, userState);
        }
        
        public void TurnOffNewsToFlashBit(System.Guid userId) {
            base.Channel.TurnOffNewsToFlashBit(userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTurnOffNewsToFlashBit(System.Guid userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTurnOffNewsToFlashBit(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndTurnOffNewsToFlashBit(System.IAsyncResult result) {
            base.Channel.EndTurnOffNewsToFlashBit(result);
        }
        
        private System.IAsyncResult OnBeginTurnOffNewsToFlashBit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            return this.BeginTurnOffNewsToFlashBit(userId, callback, asyncState);
        }
        
        private object[] OnEndTurnOffNewsToFlashBit(System.IAsyncResult result) {
            this.EndTurnOffNewsToFlashBit(result);
            return null;
        }
        
        private void OnTurnOffNewsToFlashBitCompleted(object state) {
            if ((this.TurnOffNewsToFlashBitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TurnOffNewsToFlashBitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TurnOffNewsToFlashBitAsync(System.Guid userId) {
            this.TurnOffNewsToFlashBitAsync(userId, null);
        }
        
        public void TurnOffNewsToFlashBitAsync(System.Guid userId, object userState) {
            if ((this.onBeginTurnOffNewsToFlashBitDelegate == null)) {
                this.onBeginTurnOffNewsToFlashBitDelegate = new BeginOperationDelegate(this.OnBeginTurnOffNewsToFlashBit);
            }
            if ((this.onEndTurnOffNewsToFlashBitDelegate == null)) {
                this.onEndTurnOffNewsToFlashBitDelegate = new EndOperationDelegate(this.OnEndTurnOffNewsToFlashBit);
            }
            if ((this.onTurnOffNewsToFlashBitCompletedDelegate == null)) {
                this.onTurnOffNewsToFlashBitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTurnOffNewsToFlashBitCompleted);
            }
            base.InvokeAsync(this.onBeginTurnOffNewsToFlashBitDelegate, new object[] {
                        userId}, this.onEndTurnOffNewsToFlashBitDelegate, this.onTurnOffNewsToFlashBitCompletedDelegate, userState);
        }
        
        public bool IsUserNameExist(System.Guid userId, string userName) {
            return base.Channel.IsUserNameExist(userId, userName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsUserNameExist(System.Guid userId, string userName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsUserNameExist(userId, userName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsUserNameExist(System.IAsyncResult result) {
            return base.Channel.EndIsUserNameExist(result);
        }
        
        private System.IAsyncResult OnBeginIsUserNameExist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            string userName = ((string)(inValues[1]));
            return this.BeginIsUserNameExist(userId, userName, callback, asyncState);
        }
        
        private object[] OnEndIsUserNameExist(System.IAsyncResult result) {
            bool retVal = this.EndIsUserNameExist(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsUserNameExistCompleted(object state) {
            if ((this.IsUserNameExistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsUserNameExistCompleted(this, new IsUserNameExistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsUserNameExistAsync(System.Guid userId, string userName) {
            this.IsUserNameExistAsync(userId, userName, null);
        }
        
        public void IsUserNameExistAsync(System.Guid userId, string userName, object userState) {
            if ((this.onBeginIsUserNameExistDelegate == null)) {
                this.onBeginIsUserNameExistDelegate = new BeginOperationDelegate(this.OnBeginIsUserNameExist);
            }
            if ((this.onEndIsUserNameExistDelegate == null)) {
                this.onEndIsUserNameExistDelegate = new EndOperationDelegate(this.OnEndIsUserNameExist);
            }
            if ((this.onIsUserNameExistCompletedDelegate == null)) {
                this.onIsUserNameExistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsUserNameExistCompleted);
            }
            base.InvokeAsync(this.onBeginIsUserNameExistDelegate, new object[] {
                        userId,
                        userName}, this.onEndIsUserNameExistDelegate, this.onIsUserNameExistCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> GetLinkedUser(System.Guid UserCredentialId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId, bool isHouseValue) {
            return base.Channel.GetLinkedUser(UserCredentialId, RoleId, isHouseValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLinkedUser(System.Guid UserCredentialId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId, bool isHouseValue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLinkedUser(UserCredentialId, RoleId, isHouseValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> EndGetLinkedUser(System.IAsyncResult result) {
            return base.Channel.EndGetLinkedUser(result);
        }
        
        private System.IAsyncResult OnBeginGetLinkedUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid UserCredentialId = ((System.Guid)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[1]));
            bool isHouseValue = ((bool)(inValues[2]));
            return this.BeginGetLinkedUser(UserCredentialId, RoleId, isHouseValue, callback, asyncState);
        }
        
        private object[] OnEndGetLinkedUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> retVal = this.EndGetLinkedUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLinkedUserCompleted(object state) {
            if ((this.GetLinkedUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLinkedUserCompleted(this, new GetLinkedUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLinkedUserAsync(System.Guid UserCredentialId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId, bool isHouseValue) {
            this.GetLinkedUserAsync(UserCredentialId, RoleId, isHouseValue, null);
        }
        
        public void GetLinkedUserAsync(System.Guid UserCredentialId, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole RoleId, bool isHouseValue, object userState) {
            if ((this.onBeginGetLinkedUserDelegate == null)) {
                this.onBeginGetLinkedUserDelegate = new BeginOperationDelegate(this.OnBeginGetLinkedUser);
            }
            if ((this.onEndGetLinkedUserDelegate == null)) {
                this.onEndGetLinkedUserDelegate = new EndOperationDelegate(this.OnEndGetLinkedUser);
            }
            if ((this.onGetLinkedUserCompletedDelegate == null)) {
                this.onGetLinkedUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLinkedUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetLinkedUserDelegate, new object[] {
                        UserCredentialId,
                        RoleId,
                        isHouseValue}, this.onEndGetLinkedUserDelegate, this.onGetLinkedUserCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetAllPayee() {
            return base.Channel.GetAllPayee();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPayee(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPayee(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetAllPayee(System.IAsyncResult result) {
            return base.Channel.EndGetAllPayee(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPayee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllPayee(callback, asyncState);
        }
        
        private object[] OnEndGetAllPayee(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> retVal = this.EndGetAllPayee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPayeeCompleted(object state) {
            if ((this.GetAllPayeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPayeeCompleted(this, new GetAllPayeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPayeeAsync() {
            this.GetAllPayeeAsync(null);
        }
        
        public void GetAllPayeeAsync(object userState) {
            if ((this.onBeginGetAllPayeeDelegate == null)) {
                this.onBeginGetAllPayeeDelegate = new BeginOperationDelegate(this.OnBeginGetAllPayee);
            }
            if ((this.onEndGetAllPayeeDelegate == null)) {
                this.onEndGetAllPayeeDelegate = new EndOperationDelegate(this.OnEndGetAllPayee);
            }
            if ((this.onGetAllPayeeCompletedDelegate == null)) {
                this.onGetAllPayeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPayeeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPayeeDelegate, null, this.onEndGetAllPayeeDelegate, this.onGetAllPayeeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetAllPayeeByLicencessID(System.Guid licID) {
            return base.Channel.GetAllPayeeByLicencessID(licID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPayeeByLicencessID(System.Guid licID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPayeeByLicencessID(licID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetAllPayeeByLicencessID(System.IAsyncResult result) {
            return base.Channel.EndGetAllPayeeByLicencessID(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPayeeByLicencessID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licID = ((System.Guid)(inValues[0]));
            return this.BeginGetAllPayeeByLicencessID(licID, callback, asyncState);
        }
        
        private object[] OnEndGetAllPayeeByLicencessID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> retVal = this.EndGetAllPayeeByLicencessID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPayeeByLicencessIDCompleted(object state) {
            if ((this.GetAllPayeeByLicencessIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPayeeByLicencessIDCompleted(this, new GetAllPayeeByLicencessIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPayeeByLicencessIDAsync(System.Guid licID) {
            this.GetAllPayeeByLicencessIDAsync(licID, null);
        }
        
        public void GetAllPayeeByLicencessIDAsync(System.Guid licID, object userState) {
            if ((this.onBeginGetAllPayeeByLicencessIDDelegate == null)) {
                this.onBeginGetAllPayeeByLicencessIDDelegate = new BeginOperationDelegate(this.OnBeginGetAllPayeeByLicencessID);
            }
            if ((this.onEndGetAllPayeeByLicencessIDDelegate == null)) {
                this.onEndGetAllPayeeByLicencessIDDelegate = new EndOperationDelegate(this.OnEndGetAllPayeeByLicencessID);
            }
            if ((this.onGetAllPayeeByLicencessIDCompletedDelegate == null)) {
                this.onGetAllPayeeByLicencessIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPayeeByLicencessIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPayeeByLicencessIDDelegate, new object[] {
                        licID}, this.onEndGetAllPayeeByLicencessIDDelegate, this.onGetAllPayeeByLicencessIDCompletedDelegate, userState);
        }
        
        public bool CheckAccoutExec(System.Guid userCredencialID) {
            return base.Channel.CheckAccoutExec(userCredencialID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckAccoutExec(System.Guid userCredencialID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckAccoutExec(userCredencialID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckAccoutExec(System.IAsyncResult result) {
            return base.Channel.EndCheckAccoutExec(result);
        }
        
        private System.IAsyncResult OnBeginCheckAccoutExec(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userCredencialID = ((System.Guid)(inValues[0]));
            return this.BeginCheckAccoutExec(userCredencialID, callback, asyncState);
        }
        
        private object[] OnEndCheckAccoutExec(System.IAsyncResult result) {
            bool retVal = this.EndCheckAccoutExec(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckAccoutExecCompleted(object state) {
            if ((this.CheckAccoutExecCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckAccoutExecCompleted(this, new CheckAccoutExecCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckAccoutExecAsync(System.Guid userCredencialID) {
            this.CheckAccoutExecAsync(userCredencialID, null);
        }
        
        public void CheckAccoutExecAsync(System.Guid userCredencialID, object userState) {
            if ((this.onBeginCheckAccoutExecDelegate == null)) {
                this.onBeginCheckAccoutExecDelegate = new BeginOperationDelegate(this.OnBeginCheckAccoutExec);
            }
            if ((this.onEndCheckAccoutExecDelegate == null)) {
                this.onEndCheckAccoutExecDelegate = new EndOperationDelegate(this.OnEndCheckAccoutExec);
            }
            if ((this.onCheckAccoutExecCompletedDelegate == null)) {
                this.onCheckAccoutExecCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckAccoutExecCompleted);
            }
            base.InvokeAsync(this.onBeginCheckAccoutExecDelegate, new object[] {
                        userCredencialID}, this.onEndCheckAccoutExecDelegate, this.onCheckAccoutExecCompletedDelegate, userState);
        }
        
        public void ImportHouseUsers(System.Data.DataTable TempTable, System.Guid LincessID) {
            base.Channel.ImportHouseUsers(TempTable, LincessID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginImportHouseUsers(System.Data.DataTable TempTable, System.Guid LincessID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImportHouseUsers(TempTable, LincessID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndImportHouseUsers(System.IAsyncResult result) {
            base.Channel.EndImportHouseUsers(result);
        }
        
        private System.IAsyncResult OnBeginImportHouseUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Data.DataTable TempTable = ((System.Data.DataTable)(inValues[0]));
            System.Guid LincessID = ((System.Guid)(inValues[1]));
            return this.BeginImportHouseUsers(TempTable, LincessID, callback, asyncState);
        }
        
        private object[] OnEndImportHouseUsers(System.IAsyncResult result) {
            this.EndImportHouseUsers(result);
            return null;
        }
        
        private void OnImportHouseUsersCompleted(object state) {
            if ((this.ImportHouseUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImportHouseUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImportHouseUsersAsync(System.Data.DataTable TempTable, System.Guid LincessID) {
            this.ImportHouseUsersAsync(TempTable, LincessID, null);
        }
        
        public void ImportHouseUsersAsync(System.Data.DataTable TempTable, System.Guid LincessID, object userState) {
            if ((this.onBeginImportHouseUsersDelegate == null)) {
                this.onBeginImportHouseUsersDelegate = new BeginOperationDelegate(this.OnBeginImportHouseUsers);
            }
            if ((this.onEndImportHouseUsersDelegate == null)) {
                this.onEndImportHouseUsersDelegate = new EndOperationDelegate(this.OnEndImportHouseUsers);
            }
            if ((this.onImportHouseUsersCompletedDelegate == null)) {
                this.onImportHouseUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImportHouseUsersCompleted);
            }
            base.InvokeAsync(this.onBeginImportHouseUsersDelegate, new object[] {
                        TempTable,
                        LincessID}, this.onEndImportHouseUsersDelegate, this.onImportHouseUsersCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetAccountExecByLicencessID(System.Guid licensssID) {
            return base.Channel.GetAccountExecByLicencessID(licensssID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAccountExecByLicencessID(System.Guid licensssID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountExecByLicencessID(licensssID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetAccountExecByLicencessID(System.IAsyncResult result) {
            return base.Channel.EndGetAccountExecByLicencessID(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountExecByLicencessID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licensssID = ((System.Guid)(inValues[0]));
            return this.BeginGetAccountExecByLicencessID(licensssID, callback, asyncState);
        }
        
        private object[] OnEndGetAccountExecByLicencessID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> retVal = this.EndGetAccountExecByLicencessID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountExecByLicencessIDCompleted(object state) {
            if ((this.GetAccountExecByLicencessIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountExecByLicencessIDCompleted(this, new GetAccountExecByLicencessIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountExecByLicencessIDAsync(System.Guid licensssID) {
            this.GetAccountExecByLicencessIDAsync(licensssID, null);
        }
        
        public void GetAccountExecByLicencessIDAsync(System.Guid licensssID, object userState) {
            if ((this.onBeginGetAccountExecByLicencessIDDelegate == null)) {
                this.onBeginGetAccountExecByLicencessIDDelegate = new BeginOperationDelegate(this.OnBeginGetAccountExecByLicencessID);
            }
            if ((this.onEndGetAccountExecByLicencessIDDelegate == null)) {
                this.onEndGetAccountExecByLicencessIDDelegate = new EndOperationDelegate(this.OnEndGetAccountExecByLicencessID);
            }
            if ((this.onGetAccountExecByLicencessIDCompletedDelegate == null)) {
                this.onGetAccountExecByLicencessIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountExecByLicencessIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountExecByLicencessIDDelegate, new object[] {
                        licensssID}, this.onEndGetAccountExecByLicencessIDDelegate, this.onGetAccountExecByLicencessIDCompletedDelegate, userState);
        }
        
        public int GetPayeeCount(System.Guid licensssID) {
            return base.Channel.GetPayeeCount(licensssID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayeeCount(System.Guid licensssID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayeeCount(licensssID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetPayeeCount(System.IAsyncResult result) {
            return base.Channel.EndGetPayeeCount(result);
        }
        
        private System.IAsyncResult OnBeginGetPayeeCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licensssID = ((System.Guid)(inValues[0]));
            return this.BeginGetPayeeCount(licensssID, callback, asyncState);
        }
        
        private object[] OnEndGetPayeeCount(System.IAsyncResult result) {
            int retVal = this.EndGetPayeeCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayeeCountCompleted(object state) {
            if ((this.GetPayeeCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayeeCountCompleted(this, new GetPayeeCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayeeCountAsync(System.Guid licensssID) {
            this.GetPayeeCountAsync(licensssID, null);
        }
        
        public void GetPayeeCountAsync(System.Guid licensssID, object userState) {
            if ((this.onBeginGetPayeeCountDelegate == null)) {
                this.onBeginGetPayeeCountDelegate = new BeginOperationDelegate(this.OnBeginGetPayeeCount);
            }
            if ((this.onEndGetPayeeCountDelegate == null)) {
                this.onEndGetPayeeCountDelegate = new EndOperationDelegate(this.OnEndGetPayeeCount);
            }
            if ((this.onGetPayeeCountCompletedDelegate == null)) {
                this.onGetPayeeCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayeeCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayeeCountDelegate, new object[] {
                        licensssID}, this.onEndGetPayeeCountDelegate, this.onGetPayeeCountCompletedDelegate, userState);
        }
        
        public int GetAllPayeeCount() {
            return base.Channel.GetAllPayeeCount();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPayeeCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPayeeCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetAllPayeeCount(System.IAsyncResult result) {
            return base.Channel.EndGetAllPayeeCount(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPayeeCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllPayeeCount(callback, asyncState);
        }
        
        private object[] OnEndGetAllPayeeCount(System.IAsyncResult result) {
            int retVal = this.EndGetAllPayeeCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPayeeCountCompleted(object state) {
            if ((this.GetAllPayeeCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPayeeCountCompleted(this, new GetAllPayeeCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPayeeCountAsync() {
            this.GetAllPayeeCountAsync(null);
        }
        
        public void GetAllPayeeCountAsync(object userState) {
            if ((this.onBeginGetAllPayeeCountDelegate == null)) {
                this.onBeginGetAllPayeeCountDelegate = new BeginOperationDelegate(this.OnBeginGetAllPayeeCount);
            }
            if ((this.onEndGetAllPayeeCountDelegate == null)) {
                this.onEndGetAllPayeeCountDelegate = new EndOperationDelegate(this.OnEndGetAllPayeeCount);
            }
            if ((this.onGetAllPayeeCountCompletedDelegate == null)) {
                this.onGetAllPayeeCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPayeeCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPayeeCountDelegate, null, this.onEndGetAllPayeeCountDelegate, this.onGetAllPayeeCountCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetAllUsersByLicChunck(System.Guid LicenseeId, int skip, int take) {
            return base.Channel.GetAllUsersByLicChunck(LicenseeId, skip, take);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllUsersByLicChunck(System.Guid LicenseeId, int skip, int take, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllUsersByLicChunck(LicenseeId, skip, take, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetAllUsersByLicChunck(System.IAsyncResult result) {
            return base.Channel.EndGetAllUsersByLicChunck(result);
        }
        
        private System.IAsyncResult OnBeginGetAllUsersByLicChunck(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            int skip = ((int)(inValues[1]));
            int take = ((int)(inValues[2]));
            return this.BeginGetAllUsersByLicChunck(LicenseeId, skip, take, callback, asyncState);
        }
        
        private object[] OnEndGetAllUsersByLicChunck(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> retVal = this.EndGetAllUsersByLicChunck(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllUsersByLicChunckCompleted(object state) {
            if ((this.GetAllUsersByLicChunckCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllUsersByLicChunckCompleted(this, new GetAllUsersByLicChunckCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllUsersByLicChunckAsync(System.Guid LicenseeId, int skip, int take) {
            this.GetAllUsersByLicChunckAsync(LicenseeId, skip, take, null);
        }
        
        public void GetAllUsersByLicChunckAsync(System.Guid LicenseeId, int skip, int take, object userState) {
            if ((this.onBeginGetAllUsersByLicChunckDelegate == null)) {
                this.onBeginGetAllUsersByLicChunckDelegate = new BeginOperationDelegate(this.OnBeginGetAllUsersByLicChunck);
            }
            if ((this.onEndGetAllUsersByLicChunckDelegate == null)) {
                this.onEndGetAllUsersByLicChunckDelegate = new EndOperationDelegate(this.OnEndGetAllUsersByLicChunck);
            }
            if ((this.onGetAllUsersByLicChunckCompletedDelegate == null)) {
                this.onGetAllUsersByLicChunckCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllUsersByLicChunckCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllUsersByLicChunckDelegate, new object[] {
                        LicenseeId,
                        skip,
                        take}, this.onEndGetAllUsersByLicChunckDelegate, this.onGetAllUsersByLicChunckCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> GetAllUsersByChunck(int skip, int take) {
            return base.Channel.GetAllUsersByChunck(skip, take);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllUsersByChunck(int skip, int take, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllUsersByChunck(skip, take, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> EndGetAllUsersByChunck(System.IAsyncResult result) {
            return base.Channel.EndGetAllUsersByChunck(result);
        }
        
        private System.IAsyncResult OnBeginGetAllUsersByChunck(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int skip = ((int)(inValues[0]));
            int take = ((int)(inValues[1]));
            return this.BeginGetAllUsersByChunck(skip, take, callback, asyncState);
        }
        
        private object[] OnEndGetAllUsersByChunck(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> retVal = this.EndGetAllUsersByChunck(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllUsersByChunckCompleted(object state) {
            if ((this.GetAllUsersByChunckCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllUsersByChunckCompleted(this, new GetAllUsersByChunckCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllUsersByChunckAsync(int skip, int take) {
            this.GetAllUsersByChunckAsync(skip, take, null);
        }
        
        public void GetAllUsersByChunckAsync(int skip, int take, object userState) {
            if ((this.onBeginGetAllUsersByChunckDelegate == null)) {
                this.onBeginGetAllUsersByChunckDelegate = new BeginOperationDelegate(this.OnBeginGetAllUsersByChunck);
            }
            if ((this.onEndGetAllUsersByChunckDelegate == null)) {
                this.onEndGetAllUsersByChunckDelegate = new EndOperationDelegate(this.OnEndGetAllUsersByChunck);
            }
            if ((this.onGetAllUsersByChunckCompletedDelegate == null)) {
                this.onGetAllUsersByChunckCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllUsersByChunckCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllUsersByChunckDelegate, new object[] {
                        skip,
                        take}, this.onEndGetAllUsersByChunckDelegate, this.onGetAllUsersByChunckCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.User GetUserWithinLicensee(System.Guid userCredencialID, System.Guid LicenseeID) {
            return base.Channel.GetUserWithinLicensee(userCredencialID, LicenseeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserWithinLicensee(System.Guid userCredencialID, System.Guid LicenseeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserWithinLicensee(userCredencialID, LicenseeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.User EndGetUserWithinLicensee(System.IAsyncResult result) {
            return base.Channel.EndGetUserWithinLicensee(result);
        }
        
        private System.IAsyncResult OnBeginGetUserWithinLicensee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userCredencialID = ((System.Guid)(inValues[0]));
            System.Guid LicenseeID = ((System.Guid)(inValues[1]));
            return this.BeginGetUserWithinLicensee(userCredencialID, LicenseeID, callback, asyncState);
        }
        
        private object[] OnEndGetUserWithinLicensee(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.User retVal = this.EndGetUserWithinLicensee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserWithinLicenseeCompleted(object state) {
            if ((this.GetUserWithinLicenseeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserWithinLicenseeCompleted(this, new GetUserWithinLicenseeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserWithinLicenseeAsync(System.Guid userCredencialID, System.Guid LicenseeID) {
            this.GetUserWithinLicenseeAsync(userCredencialID, LicenseeID, null);
        }
        
        public void GetUserWithinLicenseeAsync(System.Guid userCredencialID, System.Guid LicenseeID, object userState) {
            if ((this.onBeginGetUserWithinLicenseeDelegate == null)) {
                this.onBeginGetUserWithinLicenseeDelegate = new BeginOperationDelegate(this.OnBeginGetUserWithinLicensee);
            }
            if ((this.onEndGetUserWithinLicenseeDelegate == null)) {
                this.onEndGetUserWithinLicenseeDelegate = new EndOperationDelegate(this.OnEndGetUserWithinLicensee);
            }
            if ((this.onGetUserWithinLicenseeCompletedDelegate == null)) {
                this.onGetUserWithinLicenseeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserWithinLicenseeCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserWithinLicenseeDelegate, new object[] {
                        userCredencialID,
                        LicenseeID}, this.onEndGetUserWithinLicenseeDelegate, this.onGetUserWithinLicenseeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> GetAllLinkedUser(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> objUserList, System.Guid GuidLicID, System.Guid UserCredentialId, int intRole, bool boolHouseAccount) {
            return base.Channel.GetAllLinkedUser(objUserList, GuidLicID, UserCredentialId, intRole, boolHouseAccount);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllLinkedUser(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> objUserList, System.Guid GuidLicID, System.Guid UserCredentialId, int intRole, bool boolHouseAccount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLinkedUser(objUserList, GuidLicID, UserCredentialId, intRole, boolHouseAccount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> EndGetAllLinkedUser(System.IAsyncResult result) {
            return base.Channel.EndGetAllLinkedUser(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLinkedUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> objUserList = ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User>)(inValues[0]));
            System.Guid GuidLicID = ((System.Guid)(inValues[1]));
            System.Guid UserCredentialId = ((System.Guid)(inValues[2]));
            int intRole = ((int)(inValues[3]));
            bool boolHouseAccount = ((bool)(inValues[4]));
            return this.BeginGetAllLinkedUser(objUserList, GuidLicID, UserCredentialId, intRole, boolHouseAccount, callback, asyncState);
        }
        
        private object[] OnEndGetAllLinkedUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LinkedUser> retVal = this.EndGetAllLinkedUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLinkedUserCompleted(object state) {
            if ((this.GetAllLinkedUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLinkedUserCompleted(this, new GetAllLinkedUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLinkedUserAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> objUserList, System.Guid GuidLicID, System.Guid UserCredentialId, int intRole, bool boolHouseAccount) {
            this.GetAllLinkedUserAsync(objUserList, GuidLicID, UserCredentialId, intRole, boolHouseAccount, null);
        }
        
        public void GetAllLinkedUserAsync(System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.User> objUserList, System.Guid GuidLicID, System.Guid UserCredentialId, int intRole, bool boolHouseAccount, object userState) {
            if ((this.onBeginGetAllLinkedUserDelegate == null)) {
                this.onBeginGetAllLinkedUserDelegate = new BeginOperationDelegate(this.OnBeginGetAllLinkedUser);
            }
            if ((this.onEndGetAllLinkedUserDelegate == null)) {
                this.onEndGetAllLinkedUserDelegate = new EndOperationDelegate(this.OnEndGetAllLinkedUser);
            }
            if ((this.onGetAllLinkedUserCompletedDelegate == null)) {
                this.onGetAllLinkedUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLinkedUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLinkedUserDelegate, new object[] {
                        objUserList,
                        GuidLicID,
                        UserCredentialId,
                        intRole,
                        boolHouseAccount}, this.onEndGetAllLinkedUserDelegate, this.onGetAllLinkedUserCompletedDelegate, userState);
        }
        
        public void UpdateAccountExec(System.Guid userCredencialID, bool bvalue) {
            base.Channel.UpdateAccountExec(userCredencialID, bvalue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAccountExec(System.Guid userCredencialID, bool bvalue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAccountExec(userCredencialID, bvalue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateAccountExec(System.IAsyncResult result) {
            base.Channel.EndUpdateAccountExec(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAccountExec(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userCredencialID = ((System.Guid)(inValues[0]));
            bool bvalue = ((bool)(inValues[1]));
            return this.BeginUpdateAccountExec(userCredencialID, bvalue, callback, asyncState);
        }
        
        private object[] OnEndUpdateAccountExec(System.IAsyncResult result) {
            this.EndUpdateAccountExec(result);
            return null;
        }
        
        private void OnUpdateAccountExecCompleted(object state) {
            if ((this.UpdateAccountExecCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAccountExecCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAccountExecAsync(System.Guid userCredencialID, bool bvalue) {
            this.UpdateAccountExecAsync(userCredencialID, bvalue, null);
        }
        
        public void UpdateAccountExecAsync(System.Guid userCredencialID, bool bvalue, object userState) {
            if ((this.onBeginUpdateAccountExecDelegate == null)) {
                this.onBeginUpdateAccountExecDelegate = new BeginOperationDelegate(this.OnBeginUpdateAccountExec);
            }
            if ((this.onEndUpdateAccountExecDelegate == null)) {
                this.onEndUpdateAccountExecDelegate = new EndOperationDelegate(this.OnEndUpdateAccountExec);
            }
            if ((this.onUpdateAccountExecCompletedDelegate == null)) {
                this.onUpdateAccountExecCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAccountExecCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAccountExecDelegate, new object[] {
                        userCredencialID,
                        bvalue}, this.onEndUpdateAccountExecDelegate, this.onUpdateAccountExecCompletedDelegate, userState);
        }
        
        public int GetAccountExecCount(System.Guid licensssID) {
            return base.Channel.GetAccountExecCount(licensssID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAccountExecCount(System.Guid licensssID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountExecCount(licensssID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetAccountExecCount(System.IAsyncResult result) {
            return base.Channel.EndGetAccountExecCount(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountExecCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licensssID = ((System.Guid)(inValues[0]));
            return this.BeginGetAccountExecCount(licensssID, callback, asyncState);
        }
        
        private object[] OnEndGetAccountExecCount(System.IAsyncResult result) {
            int retVal = this.EndGetAccountExecCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountExecCountCompleted(object state) {
            if ((this.GetAccountExecCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountExecCountCompleted(this, new GetAccountExecCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountExecCountAsync(System.Guid licensssID) {
            this.GetAccountExecCountAsync(licensssID, null);
        }
        
        public void GetAccountExecCountAsync(System.Guid licensssID, object userState) {
            if ((this.onBeginGetAccountExecCountDelegate == null)) {
                this.onBeginGetAccountExecCountDelegate = new BeginOperationDelegate(this.OnBeginGetAccountExecCount);
            }
            if ((this.onEndGetAccountExecCountDelegate == null)) {
                this.onEndGetAccountExecCountDelegate = new EndOperationDelegate(this.OnEndGetAccountExecCount);
            }
            if ((this.onGetAccountExecCountCompletedDelegate == null)) {
                this.onGetAccountExecCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountExecCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountExecCountDelegate, new object[] {
                        licensssID}, this.onEndGetAccountExecCountDelegate, this.onGetAccountExecCountCompletedDelegate, userState);
        }
        
        public int GetAllAccountExecCount() {
            return base.Channel.GetAllAccountExecCount();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllAccountExecCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAccountExecCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetAllAccountExecCount(System.IAsyncResult result) {
            return base.Channel.EndGetAllAccountExecCount(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAccountExecCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllAccountExecCount(callback, asyncState);
        }
        
        private object[] OnEndGetAllAccountExecCount(System.IAsyncResult result) {
            int retVal = this.EndGetAllAccountExecCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAccountExecCountCompleted(object state) {
            if ((this.GetAllAccountExecCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAccountExecCountCompleted(this, new GetAllAccountExecCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAccountExecCountAsync() {
            this.GetAllAccountExecCountAsync(null);
        }
        
        public void GetAllAccountExecCountAsync(object userState) {
            if ((this.onBeginGetAllAccountExecCountDelegate == null)) {
                this.onBeginGetAllAccountExecCountDelegate = new BeginOperationDelegate(this.OnBeginGetAllAccountExecCount);
            }
            if ((this.onEndGetAllAccountExecCountDelegate == null)) {
                this.onEndGetAllAccountExecCountDelegate = new EndOperationDelegate(this.OnEndGetAllAccountExecCount);
            }
            if ((this.onGetAllAccountExecCountCompletedDelegate == null)) {
                this.onGetAllAccountExecCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAccountExecCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAccountExecCountDelegate, null, this.onEndGetAllAccountExecCountDelegate, this.onGetAllAccountExecCountCompletedDelegate, userState);
        }
        
        public void AddLoginLogoutTime(System.Guid UserID, string AppVersion, string Activity) {
            base.Channel.AddLoginLogoutTime(UserID, AppVersion, Activity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddLoginLogoutTime(System.Guid UserID, string AppVersion, string Activity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddLoginLogoutTime(UserID, AppVersion, Activity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddLoginLogoutTime(System.IAsyncResult result) {
            base.Channel.EndAddLoginLogoutTime(result);
        }
        
        private System.IAsyncResult OnBeginAddLoginLogoutTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid UserID = ((System.Guid)(inValues[0]));
            string AppVersion = ((string)(inValues[1]));
            string Activity = ((string)(inValues[2]));
            return this.BeginAddLoginLogoutTime(UserID, AppVersion, Activity, callback, asyncState);
        }
        
        private object[] OnEndAddLoginLogoutTime(System.IAsyncResult result) {
            this.EndAddLoginLogoutTime(result);
            return null;
        }
        
        private void OnAddLoginLogoutTimeCompleted(object state) {
            if ((this.AddLoginLogoutTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddLoginLogoutTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddLoginLogoutTimeAsync(System.Guid UserID, string AppVersion, string Activity) {
            this.AddLoginLogoutTimeAsync(UserID, AppVersion, Activity, null);
        }
        
        public void AddLoginLogoutTimeAsync(System.Guid UserID, string AppVersion, string Activity, object userState) {
            if ((this.onBeginAddLoginLogoutTimeDelegate == null)) {
                this.onBeginAddLoginLogoutTimeDelegate = new BeginOperationDelegate(this.OnBeginAddLoginLogoutTime);
            }
            if ((this.onEndAddLoginLogoutTimeDelegate == null)) {
                this.onEndAddLoginLogoutTimeDelegate = new EndOperationDelegate(this.OnEndAddLoginLogoutTime);
            }
            if ((this.onAddLoginLogoutTimeCompletedDelegate == null)) {
                this.onAddLoginLogoutTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddLoginLogoutTimeCompleted);
            }
            base.InvokeAsync(this.onBeginAddLoginLogoutTimeDelegate, new object[] {
                        UserID,
                        AppVersion,
                        Activity}, this.onEndAddLoginLogoutTimeDelegate, this.onAddLoginLogoutTimeCompletedDelegate, userState);
        }
        
        public bool HasAssociatedPolicies(System.Nullable<System.Guid> UserCredentialId, string NickName) {
            return base.Channel.HasAssociatedPolicies(UserCredentialId, NickName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHasAssociatedPolicies(System.Nullable<System.Guid> UserCredentialId, string NickName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHasAssociatedPolicies(UserCredentialId, NickName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndHasAssociatedPolicies(System.IAsyncResult result) {
            return base.Channel.EndHasAssociatedPolicies(result);
        }
        
        private System.IAsyncResult OnBeginHasAssociatedPolicies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> UserCredentialId = ((System.Nullable<System.Guid>)(inValues[0]));
            string NickName = ((string)(inValues[1]));
            return this.BeginHasAssociatedPolicies(UserCredentialId, NickName, callback, asyncState);
        }
        
        private object[] OnEndHasAssociatedPolicies(System.IAsyncResult result) {
            bool retVal = this.EndHasAssociatedPolicies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHasAssociatedPoliciesCompleted(object state) {
            if ((this.HasAssociatedPoliciesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HasAssociatedPoliciesCompleted(this, new HasAssociatedPoliciesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HasAssociatedPoliciesAsync(System.Nullable<System.Guid> UserCredentialId, string NickName) {
            this.HasAssociatedPoliciesAsync(UserCredentialId, NickName, null);
        }
        
        public void HasAssociatedPoliciesAsync(System.Nullable<System.Guid> UserCredentialId, string NickName, object userState) {
            if ((this.onBeginHasAssociatedPoliciesDelegate == null)) {
                this.onBeginHasAssociatedPoliciesDelegate = new BeginOperationDelegate(this.OnBeginHasAssociatedPolicies);
            }
            if ((this.onEndHasAssociatedPoliciesDelegate == null)) {
                this.onEndHasAssociatedPoliciesDelegate = new EndOperationDelegate(this.OnEndHasAssociatedPolicies);
            }
            if ((this.onHasAssociatedPoliciesCompletedDelegate == null)) {
                this.onHasAssociatedPoliciesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHasAssociatedPoliciesCompleted);
            }
            base.InvokeAsync(this.onBeginHasAssociatedPoliciesDelegate, new object[] {
                        UserCredentialId,
                        NickName}, this.onEndHasAssociatedPoliciesDelegate, this.onHasAssociatedPoliciesCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPolicySettings")]
    public interface IPolicySettings {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicySettings/AddUpdatePolicySettings", ReplyAction="http://tempuri.org/IPolicySettings/AddUpdatePolicySettingsResponse")]
        void AddUpdatePolicySettings(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicySettings/AddUpdatePolicySettings", ReplyAction="http://tempuri.org/IPolicySettings/AddUpdatePolicySettingsResponse")]
        System.IAsyncResult BeginAddUpdatePolicySettings(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePolicySettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicySettings/DeletePolicySettings", ReplyAction="http://tempuri.org/IPolicySettings/DeletePolicySettingsResponse")]
        void DeletePolicySettings(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicySettings/DeletePolicySettings", ReplyAction="http://tempuri.org/IPolicySettings/DeletePolicySettingsResponse")]
        System.IAsyncResult BeginDeletePolicySettings(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePolicySettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicySettings/GetPolicySettings", ReplyAction="http://tempuri.org/IPolicySettings/GetPolicySettingsResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings GetPolicySettings();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicySettings/GetPolicySettings", ReplyAction="http://tempuri.org/IPolicySettings/GetPolicySettingsResponse")]
        System.IAsyncResult BeginGetPolicySettings(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings EndGetPolicySettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicySettings/IsValidPolicySettings", ReplyAction="http://tempuri.org/IPolicySettings/IsValidPolicySettingsResponse")]
        bool IsValidPolicySettings(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicySettings/IsValidPolicySettings", ReplyAction="http://tempuri.org/IPolicySettings/IsValidPolicySettingsResponse")]
        System.IAsyncResult BeginIsValidPolicySettings(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidPolicySettings(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPolicySettingsChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPolicySettings, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicySettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicySettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidPolicySettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidPolicySettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PolicySettingsClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPolicySettings>, MyAgencyVault.VM.MyAgencyVaultSvc.IPolicySettings {
        
        private BeginOperationDelegate onBeginAddUpdatePolicySettingsDelegate;
        
        private EndOperationDelegate onEndAddUpdatePolicySettingsDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePolicySettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePolicySettingsDelegate;
        
        private EndOperationDelegate onEndDeletePolicySettingsDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePolicySettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicySettingsDelegate;
        
        private EndOperationDelegate onEndGetPolicySettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicySettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidPolicySettingsDelegate;
        
        private EndOperationDelegate onEndIsValidPolicySettingsDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidPolicySettingsCompletedDelegate;
        
        public PolicySettingsClient() {
        }
        
        public PolicySettingsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PolicySettingsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicySettingsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicySettingsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePolicySettingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePolicySettingsCompleted;
        
        public event System.EventHandler<GetPolicySettingsCompletedEventArgs> GetPolicySettingsCompleted;
        
        public event System.EventHandler<IsValidPolicySettingsCompletedEventArgs> IsValidPolicySettingsCompleted;
        
        public void AddUpdatePolicySettings(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett) {
            base.Channel.AddUpdatePolicySettings(PolcySett);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePolicySettings(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePolicySettings(PolcySett, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePolicySettings(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePolicySettings(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePolicySettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings)(inValues[0]));
            return this.BeginAddUpdatePolicySettings(PolcySett, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePolicySettings(System.IAsyncResult result) {
            this.EndAddUpdatePolicySettings(result);
            return null;
        }
        
        private void OnAddUpdatePolicySettingsCompleted(object state) {
            if ((this.AddUpdatePolicySettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePolicySettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePolicySettingsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett) {
            this.AddUpdatePolicySettingsAsync(PolcySett, null);
        }
        
        public void AddUpdatePolicySettingsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett, object userState) {
            if ((this.onBeginAddUpdatePolicySettingsDelegate == null)) {
                this.onBeginAddUpdatePolicySettingsDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePolicySettings);
            }
            if ((this.onEndAddUpdatePolicySettingsDelegate == null)) {
                this.onEndAddUpdatePolicySettingsDelegate = new EndOperationDelegate(this.OnEndAddUpdatePolicySettings);
            }
            if ((this.onAddUpdatePolicySettingsCompletedDelegate == null)) {
                this.onAddUpdatePolicySettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePolicySettingsCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePolicySettingsDelegate, new object[] {
                        PolcySett}, this.onEndAddUpdatePolicySettingsDelegate, this.onAddUpdatePolicySettingsCompletedDelegate, userState);
        }
        
        public void DeletePolicySettings(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett) {
            base.Channel.DeletePolicySettings(PolcySett);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePolicySettings(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePolicySettings(PolcySett, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePolicySettings(System.IAsyncResult result) {
            base.Channel.EndDeletePolicySettings(result);
        }
        
        private System.IAsyncResult OnBeginDeletePolicySettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings)(inValues[0]));
            return this.BeginDeletePolicySettings(PolcySett, callback, asyncState);
        }
        
        private object[] OnEndDeletePolicySettings(System.IAsyncResult result) {
            this.EndDeletePolicySettings(result);
            return null;
        }
        
        private void OnDeletePolicySettingsCompleted(object state) {
            if ((this.DeletePolicySettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePolicySettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePolicySettingsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett) {
            this.DeletePolicySettingsAsync(PolcySett, null);
        }
        
        public void DeletePolicySettingsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett, object userState) {
            if ((this.onBeginDeletePolicySettingsDelegate == null)) {
                this.onBeginDeletePolicySettingsDelegate = new BeginOperationDelegate(this.OnBeginDeletePolicySettings);
            }
            if ((this.onEndDeletePolicySettingsDelegate == null)) {
                this.onEndDeletePolicySettingsDelegate = new EndOperationDelegate(this.OnEndDeletePolicySettings);
            }
            if ((this.onDeletePolicySettingsCompletedDelegate == null)) {
                this.onDeletePolicySettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePolicySettingsCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePolicySettingsDelegate, new object[] {
                        PolcySett}, this.onEndDeletePolicySettingsDelegate, this.onDeletePolicySettingsCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings GetPolicySettings() {
            return base.Channel.GetPolicySettings();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicySettings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicySettings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings EndGetPolicySettings(System.IAsyncResult result) {
            return base.Channel.EndGetPolicySettings(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicySettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPolicySettings(callback, asyncState);
        }
        
        private object[] OnEndGetPolicySettings(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings retVal = this.EndGetPolicySettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicySettingsCompleted(object state) {
            if ((this.GetPolicySettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicySettingsCompleted(this, new GetPolicySettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicySettingsAsync() {
            this.GetPolicySettingsAsync(null);
        }
        
        public void GetPolicySettingsAsync(object userState) {
            if ((this.onBeginGetPolicySettingsDelegate == null)) {
                this.onBeginGetPolicySettingsDelegate = new BeginOperationDelegate(this.OnBeginGetPolicySettings);
            }
            if ((this.onEndGetPolicySettingsDelegate == null)) {
                this.onEndGetPolicySettingsDelegate = new EndOperationDelegate(this.OnEndGetPolicySettings);
            }
            if ((this.onGetPolicySettingsCompletedDelegate == null)) {
                this.onGetPolicySettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicySettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicySettingsDelegate, null, this.onEndGetPolicySettingsDelegate, this.onGetPolicySettingsCompletedDelegate, userState);
        }
        
        public bool IsValidPolicySettings(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett) {
            return base.Channel.IsValidPolicySettings(PolcySett);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidPolicySettings(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidPolicySettings(PolcySett, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidPolicySettings(System.IAsyncResult result) {
            return base.Channel.EndIsValidPolicySettings(result);
        }
        
        private System.IAsyncResult OnBeginIsValidPolicySettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings)(inValues[0]));
            return this.BeginIsValidPolicySettings(PolcySett, callback, asyncState);
        }
        
        private object[] OnEndIsValidPolicySettings(System.IAsyncResult result) {
            bool retVal = this.EndIsValidPolicySettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidPolicySettingsCompleted(object state) {
            if ((this.IsValidPolicySettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidPolicySettingsCompleted(this, new IsValidPolicySettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidPolicySettingsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett) {
            this.IsValidPolicySettingsAsync(PolcySett, null);
        }
        
        public void IsValidPolicySettingsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicySettings PolcySett, object userState) {
            if ((this.onBeginIsValidPolicySettingsDelegate == null)) {
                this.onBeginIsValidPolicySettingsDelegate = new BeginOperationDelegate(this.OnBeginIsValidPolicySettings);
            }
            if ((this.onEndIsValidPolicySettingsDelegate == null)) {
                this.onEndIsValidPolicySettingsDelegate = new EndOperationDelegate(this.OnEndIsValidPolicySettings);
            }
            if ((this.onIsValidPolicySettingsCompletedDelegate == null)) {
                this.onIsValidPolicySettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidPolicySettingsCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidPolicySettingsDelegate, new object[] {
                        PolcySett}, this.onEndIsValidPolicySettingsDelegate, this.onIsValidPolicySettingsCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPolicyLearnedField")]
    public interface IPolicyLearnedField {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyLearnedField/AddUpdatePolicyLearnedField", ReplyAction="http://tempuri.org/IPolicyLearnedField/AddUpdatePolicyLearnedFieldResponse")]
        void AddUpdatePolicyLearnedField(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField, string strProductType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyLearnedField/AddUpdatePolicyLearnedField", ReplyAction="http://tempuri.org/IPolicyLearnedField/AddUpdatePolicyLearnedFieldResponse")]
        System.IAsyncResult BeginAddUpdatePolicyLearnedField(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField, string strProductType, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePolicyLearnedField(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyLearnedField/DeletePolicyLearnedField", ReplyAction="http://tempuri.org/IPolicyLearnedField/DeletePolicyLearnedFieldResponse")]
        void DeletePolicyLearnedField(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyLearnedField/DeletePolicyLearnedField", ReplyAction="http://tempuri.org/IPolicyLearnedField/DeletePolicyLearnedFieldResponse")]
        System.IAsyncResult BeginDeletePolicyLearnedField(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePolicyLearnedField(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedField", ReplyAction="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData GetPolicyLearnedField();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedField", ReplyAction="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldResponse")]
        System.IAsyncResult BeginGetPolicyLearnedField(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData EndGetPolicyLearnedField(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyLearnedField/IsValidPolicyLearnedField", ReplyAction="http://tempuri.org/IPolicyLearnedField/IsValidPolicyLearnedFieldResponse")]
        bool IsValidPolicyLearnedField(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyLearnedField/IsValidPolicyLearnedField", ReplyAction="http://tempuri.org/IPolicyLearnedField/IsValidPolicyLearnedFieldResponse")]
        System.IAsyncResult BeginIsValidPolicyLearnedField(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidPolicyLearnedField(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldsPolicyWise", ReplyAction="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldsPolicyWiseResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData GetPolicyLearnedFieldsPolicyWise(System.Guid _PolicyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldsPolicyWise", ReplyAction="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldsPolicyWiseResponse")]
        System.IAsyncResult BeginGetPolicyLearnedFieldsPolicyWise(System.Guid _PolicyID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData EndGetPolicyLearnedFieldsPolicyWise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyLearnedField/AddUpdateHistoryLearned", ReplyAction="http://tempuri.org/IPolicyLearnedField/AddUpdateHistoryLearnedResponse")]
        void AddUpdateHistoryLearned(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyLearnedField/AddUpdateHistoryLearned", ReplyAction="http://tempuri.org/IPolicyLearnedField/AddUpdateHistoryLearnedResponse")]
        System.IAsyncResult BeginAddUpdateHistoryLearned(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateHistoryLearned(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldsHistoryPolicyWise", ReplyAction="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldsHistoryPolicyWiseRes" +
            "ponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData GetPolicyLearnedFieldsHistoryPolicyWise(System.Guid _PolicyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldsHistoryPolicyWise", ReplyAction="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldsHistoryPolicyWiseRes" +
            "ponse")]
        System.IAsyncResult BeginGetPolicyLearnedFieldsHistoryPolicyWise(System.Guid _PolicyID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData EndGetPolicyLearnedFieldsHistoryPolicyWise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyLearnedField/DeleteLearnedHistory", ReplyAction="http://tempuri.org/IPolicyLearnedField/DeleteLearnedHistoryResponse")]
        void DeleteLearnedHistory(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyLearnedField/DeleteLearnedHistory", ReplyAction="http://tempuri.org/IPolicyLearnedField/DeleteLearnedHistoryResponse")]
        System.IAsyncResult BeginDeleteLearnedHistory(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteLearnedHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldAutoTerminationDate", ReplyAction="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldAutoTerminationDateRe" +
            "sponse")]
        System.Nullable<System.DateTime> GetPolicyLearnedFieldAutoTerminationDate(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldAutoTerminationDate", ReplyAction="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedFieldAutoTerminationDateRe" +
            "sponse")]
        System.IAsyncResult BeginGetPolicyLearnedFieldAutoTerminationDate(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.DateTime> EndGetPolicyLearnedFieldAutoTerminationDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedCoverageNickName", ReplyAction="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedCoverageNickNameResponse")]
        string GetPolicyLearnedCoverageNickName(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedCoverageNickName", ReplyAction="http://tempuri.org/IPolicyLearnedField/GetPolicyLearnedCoverageNickNameResponse")]
        System.IAsyncResult BeginGetPolicyLearnedCoverageNickName(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, System.AsyncCallback callback, object asyncState);
        
        string EndGetPolicyLearnedCoverageNickName(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPolicyLearnedFieldChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyLearnedField, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyLearnedFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyLearnedFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidPolicyLearnedFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidPolicyLearnedFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyLearnedFieldsPolicyWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyLearnedFieldsPolicyWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyLearnedFieldsHistoryPolicyWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyLearnedFieldsHistoryPolicyWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyLearnedFieldAutoTerminationDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyLearnedFieldAutoTerminationDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.DateTime> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.DateTime>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPolicyLearnedCoverageNickNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPolicyLearnedCoverageNickNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PolicyLearnedFieldClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyLearnedField>, MyAgencyVault.VM.MyAgencyVaultSvc.IPolicyLearnedField {
        
        private BeginOperationDelegate onBeginAddUpdatePolicyLearnedFieldDelegate;
        
        private EndOperationDelegate onEndAddUpdatePolicyLearnedFieldDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePolicyLearnedFieldCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePolicyLearnedFieldDelegate;
        
        private EndOperationDelegate onEndDeletePolicyLearnedFieldDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePolicyLearnedFieldCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyLearnedFieldDelegate;
        
        private EndOperationDelegate onEndGetPolicyLearnedFieldDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyLearnedFieldCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidPolicyLearnedFieldDelegate;
        
        private EndOperationDelegate onEndIsValidPolicyLearnedFieldDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidPolicyLearnedFieldCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyLearnedFieldsPolicyWiseDelegate;
        
        private EndOperationDelegate onEndGetPolicyLearnedFieldsPolicyWiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyLearnedFieldsPolicyWiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateHistoryLearnedDelegate;
        
        private EndOperationDelegate onEndAddUpdateHistoryLearnedDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateHistoryLearnedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyLearnedFieldsHistoryPolicyWiseDelegate;
        
        private EndOperationDelegate onEndGetPolicyLearnedFieldsHistoryPolicyWiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyLearnedFieldsHistoryPolicyWiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteLearnedHistoryDelegate;
        
        private EndOperationDelegate onEndDeleteLearnedHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteLearnedHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyLearnedFieldAutoTerminationDateDelegate;
        
        private EndOperationDelegate onEndGetPolicyLearnedFieldAutoTerminationDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyLearnedFieldAutoTerminationDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPolicyLearnedCoverageNickNameDelegate;
        
        private EndOperationDelegate onEndGetPolicyLearnedCoverageNickNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetPolicyLearnedCoverageNickNameCompletedDelegate;
        
        public PolicyLearnedFieldClient() {
        }
        
        public PolicyLearnedFieldClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PolicyLearnedFieldClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyLearnedFieldClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyLearnedFieldClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePolicyLearnedFieldCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePolicyLearnedFieldCompleted;
        
        public event System.EventHandler<GetPolicyLearnedFieldCompletedEventArgs> GetPolicyLearnedFieldCompleted;
        
        public event System.EventHandler<IsValidPolicyLearnedFieldCompletedEventArgs> IsValidPolicyLearnedFieldCompleted;
        
        public event System.EventHandler<GetPolicyLearnedFieldsPolicyWiseCompletedEventArgs> GetPolicyLearnedFieldsPolicyWiseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateHistoryLearnedCompleted;
        
        public event System.EventHandler<GetPolicyLearnedFieldsHistoryPolicyWiseCompletedEventArgs> GetPolicyLearnedFieldsHistoryPolicyWiseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteLearnedHistoryCompleted;
        
        public event System.EventHandler<GetPolicyLearnedFieldAutoTerminationDateCompletedEventArgs> GetPolicyLearnedFieldAutoTerminationDateCompleted;
        
        public event System.EventHandler<GetPolicyLearnedCoverageNickNameCompletedEventArgs> GetPolicyLearnedCoverageNickNameCompleted;
        
        public void AddUpdatePolicyLearnedField(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField, string strProductType) {
            base.Channel.AddUpdatePolicyLearnedField(PolicyLernField, strProductType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePolicyLearnedField(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField, string strProductType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePolicyLearnedField(PolicyLernField, strProductType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePolicyLearnedField(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePolicyLearnedField(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePolicyLearnedField(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData)(inValues[0]));
            string strProductType = ((string)(inValues[1]));
            return this.BeginAddUpdatePolicyLearnedField(PolicyLernField, strProductType, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePolicyLearnedField(System.IAsyncResult result) {
            this.EndAddUpdatePolicyLearnedField(result);
            return null;
        }
        
        private void OnAddUpdatePolicyLearnedFieldCompleted(object state) {
            if ((this.AddUpdatePolicyLearnedFieldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePolicyLearnedFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePolicyLearnedFieldAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField, string strProductType) {
            this.AddUpdatePolicyLearnedFieldAsync(PolicyLernField, strProductType, null);
        }
        
        public void AddUpdatePolicyLearnedFieldAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField, string strProductType, object userState) {
            if ((this.onBeginAddUpdatePolicyLearnedFieldDelegate == null)) {
                this.onBeginAddUpdatePolicyLearnedFieldDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePolicyLearnedField);
            }
            if ((this.onEndAddUpdatePolicyLearnedFieldDelegate == null)) {
                this.onEndAddUpdatePolicyLearnedFieldDelegate = new EndOperationDelegate(this.OnEndAddUpdatePolicyLearnedField);
            }
            if ((this.onAddUpdatePolicyLearnedFieldCompletedDelegate == null)) {
                this.onAddUpdatePolicyLearnedFieldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePolicyLearnedFieldCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePolicyLearnedFieldDelegate, new object[] {
                        PolicyLernField,
                        strProductType}, this.onEndAddUpdatePolicyLearnedFieldDelegate, this.onAddUpdatePolicyLearnedFieldCompletedDelegate, userState);
        }
        
        public void DeletePolicyLearnedField(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField) {
            base.Channel.DeletePolicyLearnedField(PolicyLernField);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePolicyLearnedField(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePolicyLearnedField(PolicyLernField, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePolicyLearnedField(System.IAsyncResult result) {
            base.Channel.EndDeletePolicyLearnedField(result);
        }
        
        private System.IAsyncResult OnBeginDeletePolicyLearnedField(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData)(inValues[0]));
            return this.BeginDeletePolicyLearnedField(PolicyLernField, callback, asyncState);
        }
        
        private object[] OnEndDeletePolicyLearnedField(System.IAsyncResult result) {
            this.EndDeletePolicyLearnedField(result);
            return null;
        }
        
        private void OnDeletePolicyLearnedFieldCompleted(object state) {
            if ((this.DeletePolicyLearnedFieldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePolicyLearnedFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePolicyLearnedFieldAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField) {
            this.DeletePolicyLearnedFieldAsync(PolicyLernField, null);
        }
        
        public void DeletePolicyLearnedFieldAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField, object userState) {
            if ((this.onBeginDeletePolicyLearnedFieldDelegate == null)) {
                this.onBeginDeletePolicyLearnedFieldDelegate = new BeginOperationDelegate(this.OnBeginDeletePolicyLearnedField);
            }
            if ((this.onEndDeletePolicyLearnedFieldDelegate == null)) {
                this.onEndDeletePolicyLearnedFieldDelegate = new EndOperationDelegate(this.OnEndDeletePolicyLearnedField);
            }
            if ((this.onDeletePolicyLearnedFieldCompletedDelegate == null)) {
                this.onDeletePolicyLearnedFieldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePolicyLearnedFieldCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePolicyLearnedFieldDelegate, new object[] {
                        PolicyLernField}, this.onEndDeletePolicyLearnedFieldDelegate, this.onDeletePolicyLearnedFieldCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData GetPolicyLearnedField() {
            return base.Channel.GetPolicyLearnedField();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyLearnedField(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyLearnedField(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData EndGetPolicyLearnedField(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyLearnedField(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyLearnedField(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPolicyLearnedField(callback, asyncState);
        }
        
        private object[] OnEndGetPolicyLearnedField(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData retVal = this.EndGetPolicyLearnedField(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyLearnedFieldCompleted(object state) {
            if ((this.GetPolicyLearnedFieldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyLearnedFieldCompleted(this, new GetPolicyLearnedFieldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyLearnedFieldAsync() {
            this.GetPolicyLearnedFieldAsync(null);
        }
        
        public void GetPolicyLearnedFieldAsync(object userState) {
            if ((this.onBeginGetPolicyLearnedFieldDelegate == null)) {
                this.onBeginGetPolicyLearnedFieldDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyLearnedField);
            }
            if ((this.onEndGetPolicyLearnedFieldDelegate == null)) {
                this.onEndGetPolicyLearnedFieldDelegate = new EndOperationDelegate(this.OnEndGetPolicyLearnedField);
            }
            if ((this.onGetPolicyLearnedFieldCompletedDelegate == null)) {
                this.onGetPolicyLearnedFieldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyLearnedFieldCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyLearnedFieldDelegate, null, this.onEndGetPolicyLearnedFieldDelegate, this.onGetPolicyLearnedFieldCompletedDelegate, userState);
        }
        
        public bool IsValidPolicyLearnedField(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField) {
            return base.Channel.IsValidPolicyLearnedField(PolicyLernField);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidPolicyLearnedField(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidPolicyLearnedField(PolicyLernField, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidPolicyLearnedField(System.IAsyncResult result) {
            return base.Channel.EndIsValidPolicyLearnedField(result);
        }
        
        private System.IAsyncResult OnBeginIsValidPolicyLearnedField(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField = ((MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData)(inValues[0]));
            return this.BeginIsValidPolicyLearnedField(PolicyLernField, callback, asyncState);
        }
        
        private object[] OnEndIsValidPolicyLearnedField(System.IAsyncResult result) {
            bool retVal = this.EndIsValidPolicyLearnedField(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidPolicyLearnedFieldCompleted(object state) {
            if ((this.IsValidPolicyLearnedFieldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidPolicyLearnedFieldCompleted(this, new IsValidPolicyLearnedFieldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidPolicyLearnedFieldAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField) {
            this.IsValidPolicyLearnedFieldAsync(PolicyLernField, null);
        }
        
        public void IsValidPolicyLearnedFieldAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData PolicyLernField, object userState) {
            if ((this.onBeginIsValidPolicyLearnedFieldDelegate == null)) {
                this.onBeginIsValidPolicyLearnedFieldDelegate = new BeginOperationDelegate(this.OnBeginIsValidPolicyLearnedField);
            }
            if ((this.onEndIsValidPolicyLearnedFieldDelegate == null)) {
                this.onEndIsValidPolicyLearnedFieldDelegate = new EndOperationDelegate(this.OnEndIsValidPolicyLearnedField);
            }
            if ((this.onIsValidPolicyLearnedFieldCompletedDelegate == null)) {
                this.onIsValidPolicyLearnedFieldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidPolicyLearnedFieldCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidPolicyLearnedFieldDelegate, new object[] {
                        PolicyLernField}, this.onEndIsValidPolicyLearnedFieldDelegate, this.onIsValidPolicyLearnedFieldCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData GetPolicyLearnedFieldsPolicyWise(System.Guid _PolicyID) {
            return base.Channel.GetPolicyLearnedFieldsPolicyWise(_PolicyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyLearnedFieldsPolicyWise(System.Guid _PolicyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyLearnedFieldsPolicyWise(_PolicyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData EndGetPolicyLearnedFieldsPolicyWise(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyLearnedFieldsPolicyWise(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyLearnedFieldsPolicyWise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid _PolicyID = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyLearnedFieldsPolicyWise(_PolicyID, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyLearnedFieldsPolicyWise(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData retVal = this.EndGetPolicyLearnedFieldsPolicyWise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyLearnedFieldsPolicyWiseCompleted(object state) {
            if ((this.GetPolicyLearnedFieldsPolicyWiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyLearnedFieldsPolicyWiseCompleted(this, new GetPolicyLearnedFieldsPolicyWiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyLearnedFieldsPolicyWiseAsync(System.Guid _PolicyID) {
            this.GetPolicyLearnedFieldsPolicyWiseAsync(_PolicyID, null);
        }
        
        public void GetPolicyLearnedFieldsPolicyWiseAsync(System.Guid _PolicyID, object userState) {
            if ((this.onBeginGetPolicyLearnedFieldsPolicyWiseDelegate == null)) {
                this.onBeginGetPolicyLearnedFieldsPolicyWiseDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyLearnedFieldsPolicyWise);
            }
            if ((this.onEndGetPolicyLearnedFieldsPolicyWiseDelegate == null)) {
                this.onEndGetPolicyLearnedFieldsPolicyWiseDelegate = new EndOperationDelegate(this.OnEndGetPolicyLearnedFieldsPolicyWise);
            }
            if ((this.onGetPolicyLearnedFieldsPolicyWiseCompletedDelegate == null)) {
                this.onGetPolicyLearnedFieldsPolicyWiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyLearnedFieldsPolicyWiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyLearnedFieldsPolicyWiseDelegate, new object[] {
                        _PolicyID}, this.onEndGetPolicyLearnedFieldsPolicyWiseDelegate, this.onGetPolicyLearnedFieldsPolicyWiseCompletedDelegate, userState);
        }
        
        public void AddUpdateHistoryLearned(System.Guid PolicyId) {
            base.Channel.AddUpdateHistoryLearned(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateHistoryLearned(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateHistoryLearned(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateHistoryLearned(System.IAsyncResult result) {
            base.Channel.EndAddUpdateHistoryLearned(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateHistoryLearned(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginAddUpdateHistoryLearned(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateHistoryLearned(System.IAsyncResult result) {
            this.EndAddUpdateHistoryLearned(result);
            return null;
        }
        
        private void OnAddUpdateHistoryLearnedCompleted(object state) {
            if ((this.AddUpdateHistoryLearnedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateHistoryLearnedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateHistoryLearnedAsync(System.Guid PolicyId) {
            this.AddUpdateHistoryLearnedAsync(PolicyId, null);
        }
        
        public void AddUpdateHistoryLearnedAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginAddUpdateHistoryLearnedDelegate == null)) {
                this.onBeginAddUpdateHistoryLearnedDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateHistoryLearned);
            }
            if ((this.onEndAddUpdateHistoryLearnedDelegate == null)) {
                this.onEndAddUpdateHistoryLearnedDelegate = new EndOperationDelegate(this.OnEndAddUpdateHistoryLearned);
            }
            if ((this.onAddUpdateHistoryLearnedCompletedDelegate == null)) {
                this.onAddUpdateHistoryLearnedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateHistoryLearnedCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateHistoryLearnedDelegate, new object[] {
                        PolicyId}, this.onEndAddUpdateHistoryLearnedDelegate, this.onAddUpdateHistoryLearnedCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData GetPolicyLearnedFieldsHistoryPolicyWise(System.Guid _PolicyID) {
            return base.Channel.GetPolicyLearnedFieldsHistoryPolicyWise(_PolicyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyLearnedFieldsHistoryPolicyWise(System.Guid _PolicyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyLearnedFieldsHistoryPolicyWise(_PolicyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData EndGetPolicyLearnedFieldsHistoryPolicyWise(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyLearnedFieldsHistoryPolicyWise(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyLearnedFieldsHistoryPolicyWise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid _PolicyID = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyLearnedFieldsHistoryPolicyWise(_PolicyID, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyLearnedFieldsHistoryPolicyWise(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PolicyLearnedFieldData retVal = this.EndGetPolicyLearnedFieldsHistoryPolicyWise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyLearnedFieldsHistoryPolicyWiseCompleted(object state) {
            if ((this.GetPolicyLearnedFieldsHistoryPolicyWiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyLearnedFieldsHistoryPolicyWiseCompleted(this, new GetPolicyLearnedFieldsHistoryPolicyWiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyLearnedFieldsHistoryPolicyWiseAsync(System.Guid _PolicyID) {
            this.GetPolicyLearnedFieldsHistoryPolicyWiseAsync(_PolicyID, null);
        }
        
        public void GetPolicyLearnedFieldsHistoryPolicyWiseAsync(System.Guid _PolicyID, object userState) {
            if ((this.onBeginGetPolicyLearnedFieldsHistoryPolicyWiseDelegate == null)) {
                this.onBeginGetPolicyLearnedFieldsHistoryPolicyWiseDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyLearnedFieldsHistoryPolicyWise);
            }
            if ((this.onEndGetPolicyLearnedFieldsHistoryPolicyWiseDelegate == null)) {
                this.onEndGetPolicyLearnedFieldsHistoryPolicyWiseDelegate = new EndOperationDelegate(this.OnEndGetPolicyLearnedFieldsHistoryPolicyWise);
            }
            if ((this.onGetPolicyLearnedFieldsHistoryPolicyWiseCompletedDelegate == null)) {
                this.onGetPolicyLearnedFieldsHistoryPolicyWiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyLearnedFieldsHistoryPolicyWiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyLearnedFieldsHistoryPolicyWiseDelegate, new object[] {
                        _PolicyID}, this.onEndGetPolicyLearnedFieldsHistoryPolicyWiseDelegate, this.onGetPolicyLearnedFieldsHistoryPolicyWiseCompletedDelegate, userState);
        }
        
        public void DeleteLearnedHistory(System.Guid PolicyId) {
            base.Channel.DeleteLearnedHistory(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteLearnedHistory(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteLearnedHistory(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteLearnedHistory(System.IAsyncResult result) {
            base.Channel.EndDeleteLearnedHistory(result);
        }
        
        private System.IAsyncResult OnBeginDeleteLearnedHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginDeleteLearnedHistory(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndDeleteLearnedHistory(System.IAsyncResult result) {
            this.EndDeleteLearnedHistory(result);
            return null;
        }
        
        private void OnDeleteLearnedHistoryCompleted(object state) {
            if ((this.DeleteLearnedHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteLearnedHistoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteLearnedHistoryAsync(System.Guid PolicyId) {
            this.DeleteLearnedHistoryAsync(PolicyId, null);
        }
        
        public void DeleteLearnedHistoryAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginDeleteLearnedHistoryDelegate == null)) {
                this.onBeginDeleteLearnedHistoryDelegate = new BeginOperationDelegate(this.OnBeginDeleteLearnedHistory);
            }
            if ((this.onEndDeleteLearnedHistoryDelegate == null)) {
                this.onEndDeleteLearnedHistoryDelegate = new EndOperationDelegate(this.OnEndDeleteLearnedHistory);
            }
            if ((this.onDeleteLearnedHistoryCompletedDelegate == null)) {
                this.onDeleteLearnedHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteLearnedHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteLearnedHistoryDelegate, new object[] {
                        PolicyId}, this.onEndDeleteLearnedHistoryDelegate, this.onDeleteLearnedHistoryCompletedDelegate, userState);
        }
        
        public System.Nullable<System.DateTime> GetPolicyLearnedFieldAutoTerminationDate(System.Guid PolicyId) {
            return base.Channel.GetPolicyLearnedFieldAutoTerminationDate(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyLearnedFieldAutoTerminationDate(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyLearnedFieldAutoTerminationDate(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Nullable<System.DateTime> EndGetPolicyLearnedFieldAutoTerminationDate(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyLearnedFieldAutoTerminationDate(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyLearnedFieldAutoTerminationDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginGetPolicyLearnedFieldAutoTerminationDate(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyLearnedFieldAutoTerminationDate(System.IAsyncResult result) {
            System.Nullable<System.DateTime> retVal = this.EndGetPolicyLearnedFieldAutoTerminationDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyLearnedFieldAutoTerminationDateCompleted(object state) {
            if ((this.GetPolicyLearnedFieldAutoTerminationDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyLearnedFieldAutoTerminationDateCompleted(this, new GetPolicyLearnedFieldAutoTerminationDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyLearnedFieldAutoTerminationDateAsync(System.Guid PolicyId) {
            this.GetPolicyLearnedFieldAutoTerminationDateAsync(PolicyId, null);
        }
        
        public void GetPolicyLearnedFieldAutoTerminationDateAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginGetPolicyLearnedFieldAutoTerminationDateDelegate == null)) {
                this.onBeginGetPolicyLearnedFieldAutoTerminationDateDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyLearnedFieldAutoTerminationDate);
            }
            if ((this.onEndGetPolicyLearnedFieldAutoTerminationDateDelegate == null)) {
                this.onEndGetPolicyLearnedFieldAutoTerminationDateDelegate = new EndOperationDelegate(this.OnEndGetPolicyLearnedFieldAutoTerminationDate);
            }
            if ((this.onGetPolicyLearnedFieldAutoTerminationDateCompletedDelegate == null)) {
                this.onGetPolicyLearnedFieldAutoTerminationDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyLearnedFieldAutoTerminationDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyLearnedFieldAutoTerminationDateDelegate, new object[] {
                        PolicyId}, this.onEndGetPolicyLearnedFieldAutoTerminationDateDelegate, this.onGetPolicyLearnedFieldAutoTerminationDateCompletedDelegate, userState);
        }
        
        public string GetPolicyLearnedCoverageNickName(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID) {
            return base.Channel.GetPolicyLearnedCoverageNickName(policyID, PayorID, CarrierID, CoverageID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPolicyLearnedCoverageNickName(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPolicyLearnedCoverageNickName(policyID, PayorID, CarrierID, CoverageID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPolicyLearnedCoverageNickName(System.IAsyncResult result) {
            return base.Channel.EndGetPolicyLearnedCoverageNickName(result);
        }
        
        private System.IAsyncResult OnBeginGetPolicyLearnedCoverageNickName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid policyID = ((System.Guid)(inValues[0]));
            System.Guid PayorID = ((System.Guid)(inValues[1]));
            System.Guid CarrierID = ((System.Guid)(inValues[2]));
            System.Guid CoverageID = ((System.Guid)(inValues[3]));
            return this.BeginGetPolicyLearnedCoverageNickName(policyID, PayorID, CarrierID, CoverageID, callback, asyncState);
        }
        
        private object[] OnEndGetPolicyLearnedCoverageNickName(System.IAsyncResult result) {
            string retVal = this.EndGetPolicyLearnedCoverageNickName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPolicyLearnedCoverageNickNameCompleted(object state) {
            if ((this.GetPolicyLearnedCoverageNickNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPolicyLearnedCoverageNickNameCompleted(this, new GetPolicyLearnedCoverageNickNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPolicyLearnedCoverageNickNameAsync(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID) {
            this.GetPolicyLearnedCoverageNickNameAsync(policyID, PayorID, CarrierID, CoverageID, null);
        }
        
        public void GetPolicyLearnedCoverageNickNameAsync(System.Guid policyID, System.Guid PayorID, System.Guid CarrierID, System.Guid CoverageID, object userState) {
            if ((this.onBeginGetPolicyLearnedCoverageNickNameDelegate == null)) {
                this.onBeginGetPolicyLearnedCoverageNickNameDelegate = new BeginOperationDelegate(this.OnBeginGetPolicyLearnedCoverageNickName);
            }
            if ((this.onEndGetPolicyLearnedCoverageNickNameDelegate == null)) {
                this.onEndGetPolicyLearnedCoverageNickNameDelegate = new EndOperationDelegate(this.OnEndGetPolicyLearnedCoverageNickName);
            }
            if ((this.onGetPolicyLearnedCoverageNickNameCompletedDelegate == null)) {
                this.onGetPolicyLearnedCoverageNickNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPolicyLearnedCoverageNickNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetPolicyLearnedCoverageNickNameDelegate, new object[] {
                        policyID,
                        PayorID,
                        CarrierID,
                        CoverageID}, this.onEndGetPolicyLearnedCoverageNickNameDelegate, this.onGetPolicyLearnedCoverageNickNameCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPolicySearched")]
    public interface IPolicySearched {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicySearched/GetAllSearchedPolicies", ReplyAction="http://tempuri.org/IPolicySearched/GetAllSearchedPoliciesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicySearched> GetAllSearchedPolicies(string strClient, string strInsured, string policynumber, string carrier, string payor, System.Guid UserCridenID, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole Role, System.Guid LicenseID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPolicySearched/GetAllSearchedPolicies", ReplyAction="http://tempuri.org/IPolicySearched/GetAllSearchedPoliciesResponse")]
        System.IAsyncResult BeginGetAllSearchedPolicies(string strClient, string strInsured, string policynumber, string carrier, string payor, System.Guid UserCridenID, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole Role, System.Guid LicenseID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicySearched> EndGetAllSearchedPolicies(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPolicySearchedChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPolicySearched, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllSearchedPoliciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllSearchedPoliciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicySearched> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicySearched>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PolicySearchedClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPolicySearched>, MyAgencyVault.VM.MyAgencyVaultSvc.IPolicySearched {
        
        private BeginOperationDelegate onBeginGetAllSearchedPoliciesDelegate;
        
        private EndOperationDelegate onEndGetAllSearchedPoliciesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllSearchedPoliciesCompletedDelegate;
        
        public PolicySearchedClient() {
        }
        
        public PolicySearchedClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PolicySearchedClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicySearchedClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicySearchedClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetAllSearchedPoliciesCompletedEventArgs> GetAllSearchedPoliciesCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicySearched> GetAllSearchedPolicies(string strClient, string strInsured, string policynumber, string carrier, string payor, System.Guid UserCridenID, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole Role, System.Guid LicenseID) {
            return base.Channel.GetAllSearchedPolicies(strClient, strInsured, policynumber, carrier, payor, UserCridenID, Role, LicenseID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllSearchedPolicies(string strClient, string strInsured, string policynumber, string carrier, string payor, System.Guid UserCridenID, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole Role, System.Guid LicenseID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllSearchedPolicies(strClient, strInsured, policynumber, carrier, payor, UserCridenID, Role, LicenseID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicySearched> EndGetAllSearchedPolicies(System.IAsyncResult result) {
            return base.Channel.EndGetAllSearchedPolicies(result);
        }
        
        private System.IAsyncResult OnBeginGetAllSearchedPolicies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strClient = ((string)(inValues[0]));
            string strInsured = ((string)(inValues[1]));
            string policynumber = ((string)(inValues[2]));
            string carrier = ((string)(inValues[3]));
            string payor = ((string)(inValues[4]));
            System.Guid UserCridenID = ((System.Guid)(inValues[5]));
            MyAgencyVault.VM.MyAgencyVaultSvc.UserRole Role = ((MyAgencyVault.VM.MyAgencyVaultSvc.UserRole)(inValues[6]));
            System.Guid LicenseID = ((System.Guid)(inValues[7]));
            return this.BeginGetAllSearchedPolicies(strClient, strInsured, policynumber, carrier, payor, UserCridenID, Role, LicenseID, callback, asyncState);
        }
        
        private object[] OnEndGetAllSearchedPolicies(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PolicySearched> retVal = this.EndGetAllSearchedPolicies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllSearchedPoliciesCompleted(object state) {
            if ((this.GetAllSearchedPoliciesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllSearchedPoliciesCompleted(this, new GetAllSearchedPoliciesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllSearchedPoliciesAsync(string strClient, string strInsured, string policynumber, string carrier, string payor, System.Guid UserCridenID, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole Role, System.Guid LicenseID) {
            this.GetAllSearchedPoliciesAsync(strClient, strInsured, policynumber, carrier, payor, UserCridenID, Role, LicenseID, null);
        }
        
        public void GetAllSearchedPoliciesAsync(string strClient, string strInsured, string policynumber, string carrier, string payor, System.Guid UserCridenID, MyAgencyVault.VM.MyAgencyVaultSvc.UserRole Role, System.Guid LicenseID, object userState) {
            if ((this.onBeginGetAllSearchedPoliciesDelegate == null)) {
                this.onBeginGetAllSearchedPoliciesDelegate = new BeginOperationDelegate(this.OnBeginGetAllSearchedPolicies);
            }
            if ((this.onEndGetAllSearchedPoliciesDelegate == null)) {
                this.onEndGetAllSearchedPoliciesDelegate = new EndOperationDelegate(this.OnEndGetAllSearchedPolicies);
            }
            if ((this.onGetAllSearchedPoliciesCompletedDelegate == null)) {
                this.onGetAllSearchedPoliciesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllSearchedPoliciesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllSearchedPoliciesDelegate, new object[] {
                        strClient,
                        strInsured,
                        policynumber,
                        carrier,
                        payor,
                        UserCridenID,
                        Role,
                        LicenseID}, this.onEndGetAllSearchedPoliciesDelegate, this.onGetAllSearchedPoliciesCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ILicenseeInvoice")]
    public interface ILicenseeInvoice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseeInvoice/getAllInvoice", ReplyAction="http://tempuri.org/ILicenseeInvoice/getAllInvoiceResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice> getAllInvoice();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicenseeInvoice/getAllInvoice", ReplyAction="http://tempuri.org/ILicenseeInvoice/getAllInvoiceResponse")]
        System.IAsyncResult BegingetAllInvoice(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice> EndgetAllInvoice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseeInvoice/getInvoiceByID", ReplyAction="http://tempuri.org/ILicenseeInvoice/getInvoiceByIDResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice getInvoiceByID(long Id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicenseeInvoice/getInvoiceByID", ReplyAction="http://tempuri.org/ILicenseeInvoice/getInvoiceByIDResponse")]
        System.IAsyncResult BegingetInvoiceByID(long Id, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice EndgetInvoiceByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseeInvoice/getExportBatchName", ReplyAction="http://tempuri.org/ILicenseeInvoice/getExportBatchNameResponse")]
        string getExportBatchName(System.Nullable<System.Guid> ExportedBatchId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicenseeInvoice/getExportBatchName", ReplyAction="http://tempuri.org/ILicenseeInvoice/getExportBatchNameResponse")]
        System.IAsyncResult BegingetExportBatchName(System.Nullable<System.Guid> ExportedBatchId, System.AsyncCallback callback, object asyncState);
        
        string EndgetExportBatchName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseeInvoice/getLatestBillingDate", ReplyAction="http://tempuri.org/ILicenseeInvoice/getLatestBillingDateResponse")]
        System.Nullable<System.DateTime> getLatestBillingDate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILicenseeInvoice/getLatestBillingDate", ReplyAction="http://tempuri.org/ILicenseeInvoice/getLatestBillingDateResponse")]
        System.IAsyncResult BegingetLatestBillingDate(System.AsyncCallback callback, object asyncState);
        
        System.Nullable<System.DateTime> EndgetLatestBillingDate(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILicenseeInvoiceChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ILicenseeInvoice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAllInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAllInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getInvoiceByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getInvoiceByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getExportBatchNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getExportBatchNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getLatestBillingDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getLatestBillingDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<System.DateTime> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.DateTime>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LicenseeInvoiceClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ILicenseeInvoice>, MyAgencyVault.VM.MyAgencyVaultSvc.ILicenseeInvoice {
        
        private BeginOperationDelegate onBegingetAllInvoiceDelegate;
        
        private EndOperationDelegate onEndgetAllInvoiceDelegate;
        
        private System.Threading.SendOrPostCallback ongetAllInvoiceCompletedDelegate;
        
        private BeginOperationDelegate onBegingetInvoiceByIDDelegate;
        
        private EndOperationDelegate onEndgetInvoiceByIDDelegate;
        
        private System.Threading.SendOrPostCallback ongetInvoiceByIDCompletedDelegate;
        
        private BeginOperationDelegate onBegingetExportBatchNameDelegate;
        
        private EndOperationDelegate onEndgetExportBatchNameDelegate;
        
        private System.Threading.SendOrPostCallback ongetExportBatchNameCompletedDelegate;
        
        private BeginOperationDelegate onBegingetLatestBillingDateDelegate;
        
        private EndOperationDelegate onEndgetLatestBillingDateDelegate;
        
        private System.Threading.SendOrPostCallback ongetLatestBillingDateCompletedDelegate;
        
        public LicenseeInvoiceClient() {
        }
        
        public LicenseeInvoiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LicenseeInvoiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseeInvoiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseeInvoiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<getAllInvoiceCompletedEventArgs> getAllInvoiceCompleted;
        
        public event System.EventHandler<getInvoiceByIDCompletedEventArgs> getInvoiceByIDCompleted;
        
        public event System.EventHandler<getExportBatchNameCompletedEventArgs> getExportBatchNameCompleted;
        
        public event System.EventHandler<getLatestBillingDateCompletedEventArgs> getLatestBillingDateCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice> getAllInvoice() {
            return base.Channel.getAllInvoice();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetAllInvoice(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAllInvoice(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice> EndgetAllInvoice(System.IAsyncResult result) {
            return base.Channel.EndgetAllInvoice(result);
        }
        
        private System.IAsyncResult OnBegingetAllInvoice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetAllInvoice(callback, asyncState);
        }
        
        private object[] OnEndgetAllInvoice(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice> retVal = this.EndgetAllInvoice(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAllInvoiceCompleted(object state) {
            if ((this.getAllInvoiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAllInvoiceCompleted(this, new getAllInvoiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAllInvoiceAsync() {
            this.getAllInvoiceAsync(null);
        }
        
        public void getAllInvoiceAsync(object userState) {
            if ((this.onBegingetAllInvoiceDelegate == null)) {
                this.onBegingetAllInvoiceDelegate = new BeginOperationDelegate(this.OnBegingetAllInvoice);
            }
            if ((this.onEndgetAllInvoiceDelegate == null)) {
                this.onEndgetAllInvoiceDelegate = new EndOperationDelegate(this.OnEndgetAllInvoice);
            }
            if ((this.ongetAllInvoiceCompletedDelegate == null)) {
                this.ongetAllInvoiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllInvoiceCompleted);
            }
            base.InvokeAsync(this.onBegingetAllInvoiceDelegate, null, this.onEndgetAllInvoiceDelegate, this.ongetAllInvoiceCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice getInvoiceByID(long Id) {
            return base.Channel.getInvoiceByID(Id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetInvoiceByID(long Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetInvoiceByID(Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice EndgetInvoiceByID(System.IAsyncResult result) {
            return base.Channel.EndgetInvoiceByID(result);
        }
        
        private System.IAsyncResult OnBegingetInvoiceByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long Id = ((long)(inValues[0]));
            return this.BegingetInvoiceByID(Id, callback, asyncState);
        }
        
        private object[] OnEndgetInvoiceByID(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeInvoice retVal = this.EndgetInvoiceByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetInvoiceByIDCompleted(object state) {
            if ((this.getInvoiceByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getInvoiceByIDCompleted(this, new getInvoiceByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getInvoiceByIDAsync(long Id) {
            this.getInvoiceByIDAsync(Id, null);
        }
        
        public void getInvoiceByIDAsync(long Id, object userState) {
            if ((this.onBegingetInvoiceByIDDelegate == null)) {
                this.onBegingetInvoiceByIDDelegate = new BeginOperationDelegate(this.OnBegingetInvoiceByID);
            }
            if ((this.onEndgetInvoiceByIDDelegate == null)) {
                this.onEndgetInvoiceByIDDelegate = new EndOperationDelegate(this.OnEndgetInvoiceByID);
            }
            if ((this.ongetInvoiceByIDCompletedDelegate == null)) {
                this.ongetInvoiceByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetInvoiceByIDCompleted);
            }
            base.InvokeAsync(this.onBegingetInvoiceByIDDelegate, new object[] {
                        Id}, this.onEndgetInvoiceByIDDelegate, this.ongetInvoiceByIDCompletedDelegate, userState);
        }
        
        public string getExportBatchName(System.Nullable<System.Guid> ExportedBatchId) {
            return base.Channel.getExportBatchName(ExportedBatchId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetExportBatchName(System.Nullable<System.Guid> ExportedBatchId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetExportBatchName(ExportedBatchId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndgetExportBatchName(System.IAsyncResult result) {
            return base.Channel.EndgetExportBatchName(result);
        }
        
        private System.IAsyncResult OnBegingetExportBatchName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> ExportedBatchId = ((System.Nullable<System.Guid>)(inValues[0]));
            return this.BegingetExportBatchName(ExportedBatchId, callback, asyncState);
        }
        
        private object[] OnEndgetExportBatchName(System.IAsyncResult result) {
            string retVal = this.EndgetExportBatchName(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetExportBatchNameCompleted(object state) {
            if ((this.getExportBatchNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getExportBatchNameCompleted(this, new getExportBatchNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getExportBatchNameAsync(System.Nullable<System.Guid> ExportedBatchId) {
            this.getExportBatchNameAsync(ExportedBatchId, null);
        }
        
        public void getExportBatchNameAsync(System.Nullable<System.Guid> ExportedBatchId, object userState) {
            if ((this.onBegingetExportBatchNameDelegate == null)) {
                this.onBegingetExportBatchNameDelegate = new BeginOperationDelegate(this.OnBegingetExportBatchName);
            }
            if ((this.onEndgetExportBatchNameDelegate == null)) {
                this.onEndgetExportBatchNameDelegate = new EndOperationDelegate(this.OnEndgetExportBatchName);
            }
            if ((this.ongetExportBatchNameCompletedDelegate == null)) {
                this.ongetExportBatchNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetExportBatchNameCompleted);
            }
            base.InvokeAsync(this.onBegingetExportBatchNameDelegate, new object[] {
                        ExportedBatchId}, this.onEndgetExportBatchNameDelegate, this.ongetExportBatchNameCompletedDelegate, userState);
        }
        
        public System.Nullable<System.DateTime> getLatestBillingDate() {
            return base.Channel.getLatestBillingDate();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetLatestBillingDate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetLatestBillingDate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Nullable<System.DateTime> EndgetLatestBillingDate(System.IAsyncResult result) {
            return base.Channel.EndgetLatestBillingDate(result);
        }
        
        private System.IAsyncResult OnBegingetLatestBillingDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetLatestBillingDate(callback, asyncState);
        }
        
        private object[] OnEndgetLatestBillingDate(System.IAsyncResult result) {
            System.Nullable<System.DateTime> retVal = this.EndgetLatestBillingDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetLatestBillingDateCompleted(object state) {
            if ((this.getLatestBillingDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getLatestBillingDateCompleted(this, new getLatestBillingDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getLatestBillingDateAsync() {
            this.getLatestBillingDateAsync(null);
        }
        
        public void getLatestBillingDateAsync(object userState) {
            if ((this.onBegingetLatestBillingDateDelegate == null)) {
                this.onBegingetLatestBillingDateDelegate = new BeginOperationDelegate(this.OnBegingetLatestBillingDate);
            }
            if ((this.onEndgetLatestBillingDateDelegate == null)) {
                this.onEndgetLatestBillingDateDelegate = new EndOperationDelegate(this.OnEndgetLatestBillingDate);
            }
            if ((this.ongetLatestBillingDateCompletedDelegate == null)) {
                this.ongetLatestBillingDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetLatestBillingDateCompleted);
            }
            base.InvokeAsync(this.onBegingetLatestBillingDateDelegate, null, this.onEndgetLatestBillingDateDelegate, this.ongetLatestBillingDateCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IIncomingPament")]
    public interface IIncomingPament {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIncomingPament/AddUpdateIncomingPament", ReplyAction="http://tempuri.org/IIncomingPament/AddUpdateIncomingPamentResponse")]
        void AddUpdateIncomingPament(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIncomingPament/AddUpdateIncomingPament", ReplyAction="http://tempuri.org/IIncomingPament/AddUpdateIncomingPamentResponse")]
        System.IAsyncResult BeginAddUpdateIncomingPament(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateIncomingPament(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIncomingPament/DeleteIncomingPament", ReplyAction="http://tempuri.org/IIncomingPament/DeleteIncomingPamentResponse")]
        void DeleteIncomingPament(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIncomingPament/DeleteIncomingPament", ReplyAction="http://tempuri.org/IIncomingPament/DeleteIncomingPamentResponse")]
        System.IAsyncResult BeginDeleteIncomingPament(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteIncomingPament(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIncomingPament/GetIncomingPament", ReplyAction="http://tempuri.org/IIncomingPament/GetIncomingPamentResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament GetIncomingPament();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIncomingPament/GetIncomingPament", ReplyAction="http://tempuri.org/IIncomingPament/GetIncomingPamentResponse")]
        System.IAsyncResult BeginGetIncomingPament(System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament EndGetIncomingPament(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIncomingPament/IsValidIncomingPament", ReplyAction="http://tempuri.org/IIncomingPament/IsValidIncomingPamentResponse")]
        bool IsValidIncomingPament(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIncomingPament/IsValidIncomingPament", ReplyAction="http://tempuri.org/IIncomingPament/IsValidIncomingPamentResponse")]
        System.IAsyncResult BeginIsValidIncomingPament(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidIncomingPament(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIncomingPament/UnlinkIncomingPayments", ReplyAction="http://tempuri.org/IIncomingPament/UnlinkIncomingPaymentsResponse")]
        bool UnlinkIncomingPayments(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIncomingPament/UnlinkIncomingPayments", ReplyAction="http://tempuri.org/IIncomingPament/UnlinkIncomingPaymentsResponse")]
        System.IAsyncResult BeginUnlinkIncomingPayments(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, System.AsyncCallback callback, object asyncState);
        
        bool EndUnlinkIncomingPayments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIncomingPament/LinkIncomingPaymentsToAnExistingPolicy", ReplyAction="http://tempuri.org/IIncomingPament/LinkIncomingPaymentsToAnExistingPolicyResponse" +
            "")]
        bool LinkIncomingPaymentsToAnExistingPolicy(System.Guid PolicyId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIncomingPament/LinkIncomingPaymentsToAnExistingPolicy", ReplyAction="http://tempuri.org/IIncomingPament/LinkIncomingPaymentsToAnExistingPolicyResponse" +
            "")]
        System.IAsyncResult BeginLinkIncomingPaymentsToAnExistingPolicy(System.Guid PolicyId, System.AsyncCallback callback, object asyncState);
        
        bool EndLinkIncomingPaymentsToAnExistingPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIncomingPament/ActivateNewPolicy", ReplyAction="http://tempuri.org/IIncomingPament/ActivateNewPolicyResponse")]
        bool ActivateNewPolicy(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIncomingPament/ActivateNewPolicy", ReplyAction="http://tempuri.org/IIncomingPament/ActivateNewPolicyResponse")]
        System.IAsyncResult BeginActivateNewPolicy(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, System.AsyncCallback callback, object asyncState);
        
        bool EndActivateNewPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIncomingPament/GetIncomingPayments", ReplyAction="http://tempuri.org/IIncomingPament/GetIncomingPaymentsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament> GetIncomingPayments(System.Guid PolicyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIncomingPament/GetIncomingPayments", ReplyAction="http://tempuri.org/IIncomingPament/GetIncomingPaymentsResponse")]
        System.IAsyncResult BeginGetIncomingPayments(System.Guid PolicyID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament> EndGetIncomingPayments(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIncomingPamentChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IIncomingPament, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIncomingPamentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIncomingPamentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidIncomingPamentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidIncomingPamentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnlinkIncomingPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UnlinkIncomingPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LinkIncomingPaymentsToAnExistingPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LinkIncomingPaymentsToAnExistingPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActivateNewPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActivateNewPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIncomingPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIncomingPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IncomingPamentClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IIncomingPament>, MyAgencyVault.VM.MyAgencyVaultSvc.IIncomingPament {
        
        private BeginOperationDelegate onBeginAddUpdateIncomingPamentDelegate;
        
        private EndOperationDelegate onEndAddUpdateIncomingPamentDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateIncomingPamentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteIncomingPamentDelegate;
        
        private EndOperationDelegate onEndDeleteIncomingPamentDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteIncomingPamentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIncomingPamentDelegate;
        
        private EndOperationDelegate onEndGetIncomingPamentDelegate;
        
        private System.Threading.SendOrPostCallback onGetIncomingPamentCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidIncomingPamentDelegate;
        
        private EndOperationDelegate onEndIsValidIncomingPamentDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidIncomingPamentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnlinkIncomingPaymentsDelegate;
        
        private EndOperationDelegate onEndUnlinkIncomingPaymentsDelegate;
        
        private System.Threading.SendOrPostCallback onUnlinkIncomingPaymentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginLinkIncomingPaymentsToAnExistingPolicyDelegate;
        
        private EndOperationDelegate onEndLinkIncomingPaymentsToAnExistingPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onLinkIncomingPaymentsToAnExistingPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginActivateNewPolicyDelegate;
        
        private EndOperationDelegate onEndActivateNewPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onActivateNewPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIncomingPaymentsDelegate;
        
        private EndOperationDelegate onEndGetIncomingPaymentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetIncomingPaymentsCompletedDelegate;
        
        public IncomingPamentClient() {
        }
        
        public IncomingPamentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IncomingPamentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IncomingPamentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IncomingPamentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateIncomingPamentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteIncomingPamentCompleted;
        
        public event System.EventHandler<GetIncomingPamentCompletedEventArgs> GetIncomingPamentCompleted;
        
        public event System.EventHandler<IsValidIncomingPamentCompletedEventArgs> IsValidIncomingPamentCompleted;
        
        public event System.EventHandler<UnlinkIncomingPaymentsCompletedEventArgs> UnlinkIncomingPaymentsCompleted;
        
        public event System.EventHandler<LinkIncomingPaymentsToAnExistingPolicyCompletedEventArgs> LinkIncomingPaymentsToAnExistingPolicyCompleted;
        
        public event System.EventHandler<ActivateNewPolicyCompletedEventArgs> ActivateNewPolicyCompleted;
        
        public event System.EventHandler<GetIncomingPaymentsCompletedEventArgs> GetIncomingPaymentsCompleted;
        
        public void AddUpdateIncomingPament(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt) {
            base.Channel.AddUpdateIncomingPament(IncPymnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateIncomingPament(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateIncomingPament(IncPymnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateIncomingPament(System.IAsyncResult result) {
            base.Channel.EndAddUpdateIncomingPament(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateIncomingPament(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament)(inValues[0]));
            return this.BeginAddUpdateIncomingPament(IncPymnt, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateIncomingPament(System.IAsyncResult result) {
            this.EndAddUpdateIncomingPament(result);
            return null;
        }
        
        private void OnAddUpdateIncomingPamentCompleted(object state) {
            if ((this.AddUpdateIncomingPamentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateIncomingPamentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateIncomingPamentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt) {
            this.AddUpdateIncomingPamentAsync(IncPymnt, null);
        }
        
        public void AddUpdateIncomingPamentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, object userState) {
            if ((this.onBeginAddUpdateIncomingPamentDelegate == null)) {
                this.onBeginAddUpdateIncomingPamentDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateIncomingPament);
            }
            if ((this.onEndAddUpdateIncomingPamentDelegate == null)) {
                this.onEndAddUpdateIncomingPamentDelegate = new EndOperationDelegate(this.OnEndAddUpdateIncomingPament);
            }
            if ((this.onAddUpdateIncomingPamentCompletedDelegate == null)) {
                this.onAddUpdateIncomingPamentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateIncomingPamentCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateIncomingPamentDelegate, new object[] {
                        IncPymnt}, this.onEndAddUpdateIncomingPamentDelegate, this.onAddUpdateIncomingPamentCompletedDelegate, userState);
        }
        
        public void DeleteIncomingPament(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt) {
            base.Channel.DeleteIncomingPament(IncPymnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteIncomingPament(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteIncomingPament(IncPymnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteIncomingPament(System.IAsyncResult result) {
            base.Channel.EndDeleteIncomingPament(result);
        }
        
        private System.IAsyncResult OnBeginDeleteIncomingPament(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament)(inValues[0]));
            return this.BeginDeleteIncomingPament(IncPymnt, callback, asyncState);
        }
        
        private object[] OnEndDeleteIncomingPament(System.IAsyncResult result) {
            this.EndDeleteIncomingPament(result);
            return null;
        }
        
        private void OnDeleteIncomingPamentCompleted(object state) {
            if ((this.DeleteIncomingPamentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteIncomingPamentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteIncomingPamentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt) {
            this.DeleteIncomingPamentAsync(IncPymnt, null);
        }
        
        public void DeleteIncomingPamentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, object userState) {
            if ((this.onBeginDeleteIncomingPamentDelegate == null)) {
                this.onBeginDeleteIncomingPamentDelegate = new BeginOperationDelegate(this.OnBeginDeleteIncomingPament);
            }
            if ((this.onEndDeleteIncomingPamentDelegate == null)) {
                this.onEndDeleteIncomingPamentDelegate = new EndOperationDelegate(this.OnEndDeleteIncomingPament);
            }
            if ((this.onDeleteIncomingPamentCompletedDelegate == null)) {
                this.onDeleteIncomingPamentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteIncomingPamentCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteIncomingPamentDelegate, new object[] {
                        IncPymnt}, this.onEndDeleteIncomingPamentDelegate, this.onDeleteIncomingPamentCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament GetIncomingPament() {
            return base.Channel.GetIncomingPament();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIncomingPament(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIncomingPament(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament EndGetIncomingPament(System.IAsyncResult result) {
            return base.Channel.EndGetIncomingPament(result);
        }
        
        private System.IAsyncResult OnBeginGetIncomingPament(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetIncomingPament(callback, asyncState);
        }
        
        private object[] OnEndGetIncomingPament(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament retVal = this.EndGetIncomingPament(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIncomingPamentCompleted(object state) {
            if ((this.GetIncomingPamentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIncomingPamentCompleted(this, new GetIncomingPamentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIncomingPamentAsync() {
            this.GetIncomingPamentAsync(null);
        }
        
        public void GetIncomingPamentAsync(object userState) {
            if ((this.onBeginGetIncomingPamentDelegate == null)) {
                this.onBeginGetIncomingPamentDelegate = new BeginOperationDelegate(this.OnBeginGetIncomingPament);
            }
            if ((this.onEndGetIncomingPamentDelegate == null)) {
                this.onEndGetIncomingPamentDelegate = new EndOperationDelegate(this.OnEndGetIncomingPament);
            }
            if ((this.onGetIncomingPamentCompletedDelegate == null)) {
                this.onGetIncomingPamentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIncomingPamentCompleted);
            }
            base.InvokeAsync(this.onBeginGetIncomingPamentDelegate, null, this.onEndGetIncomingPamentDelegate, this.onGetIncomingPamentCompletedDelegate, userState);
        }
        
        public bool IsValidIncomingPament(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt) {
            return base.Channel.IsValidIncomingPament(IncPymnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidIncomingPament(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidIncomingPament(IncPymnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidIncomingPament(System.IAsyncResult result) {
            return base.Channel.EndIsValidIncomingPament(result);
        }
        
        private System.IAsyncResult OnBeginIsValidIncomingPament(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament)(inValues[0]));
            return this.BeginIsValidIncomingPament(IncPymnt, callback, asyncState);
        }
        
        private object[] OnEndIsValidIncomingPament(System.IAsyncResult result) {
            bool retVal = this.EndIsValidIncomingPament(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidIncomingPamentCompleted(object state) {
            if ((this.IsValidIncomingPamentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidIncomingPamentCompleted(this, new IsValidIncomingPamentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidIncomingPamentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt) {
            this.IsValidIncomingPamentAsync(IncPymnt, null);
        }
        
        public void IsValidIncomingPamentAsync(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, object userState) {
            if ((this.onBeginIsValidIncomingPamentDelegate == null)) {
                this.onBeginIsValidIncomingPamentDelegate = new BeginOperationDelegate(this.OnBeginIsValidIncomingPament);
            }
            if ((this.onEndIsValidIncomingPamentDelegate == null)) {
                this.onEndIsValidIncomingPamentDelegate = new EndOperationDelegate(this.OnEndIsValidIncomingPament);
            }
            if ((this.onIsValidIncomingPamentCompletedDelegate == null)) {
                this.onIsValidIncomingPamentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidIncomingPamentCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidIncomingPamentDelegate, new object[] {
                        IncPymnt}, this.onEndIsValidIncomingPamentDelegate, this.onIsValidIncomingPamentCompletedDelegate, userState);
        }
        
        public bool UnlinkIncomingPayments(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt) {
            return base.Channel.UnlinkIncomingPayments(IncPymnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUnlinkIncomingPayments(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnlinkIncomingPayments(IncPymnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUnlinkIncomingPayments(System.IAsyncResult result) {
            return base.Channel.EndUnlinkIncomingPayments(result);
        }
        
        private System.IAsyncResult OnBeginUnlinkIncomingPayments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament)(inValues[0]));
            return this.BeginUnlinkIncomingPayments(IncPymnt, callback, asyncState);
        }
        
        private object[] OnEndUnlinkIncomingPayments(System.IAsyncResult result) {
            bool retVal = this.EndUnlinkIncomingPayments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUnlinkIncomingPaymentsCompleted(object state) {
            if ((this.UnlinkIncomingPaymentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnlinkIncomingPaymentsCompleted(this, new UnlinkIncomingPaymentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnlinkIncomingPaymentsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt) {
            this.UnlinkIncomingPaymentsAsync(IncPymnt, null);
        }
        
        public void UnlinkIncomingPaymentsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, object userState) {
            if ((this.onBeginUnlinkIncomingPaymentsDelegate == null)) {
                this.onBeginUnlinkIncomingPaymentsDelegate = new BeginOperationDelegate(this.OnBeginUnlinkIncomingPayments);
            }
            if ((this.onEndUnlinkIncomingPaymentsDelegate == null)) {
                this.onEndUnlinkIncomingPaymentsDelegate = new EndOperationDelegate(this.OnEndUnlinkIncomingPayments);
            }
            if ((this.onUnlinkIncomingPaymentsCompletedDelegate == null)) {
                this.onUnlinkIncomingPaymentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnlinkIncomingPaymentsCompleted);
            }
            base.InvokeAsync(this.onBeginUnlinkIncomingPaymentsDelegate, new object[] {
                        IncPymnt}, this.onEndUnlinkIncomingPaymentsDelegate, this.onUnlinkIncomingPaymentsCompletedDelegate, userState);
        }
        
        public bool LinkIncomingPaymentsToAnExistingPolicy(System.Guid PolicyId) {
            return base.Channel.LinkIncomingPaymentsToAnExistingPolicy(PolicyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLinkIncomingPaymentsToAnExistingPolicy(System.Guid PolicyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLinkIncomingPaymentsToAnExistingPolicy(PolicyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndLinkIncomingPaymentsToAnExistingPolicy(System.IAsyncResult result) {
            return base.Channel.EndLinkIncomingPaymentsToAnExistingPolicy(result);
        }
        
        private System.IAsyncResult OnBeginLinkIncomingPaymentsToAnExistingPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyId = ((System.Guid)(inValues[0]));
            return this.BeginLinkIncomingPaymentsToAnExistingPolicy(PolicyId, callback, asyncState);
        }
        
        private object[] OnEndLinkIncomingPaymentsToAnExistingPolicy(System.IAsyncResult result) {
            bool retVal = this.EndLinkIncomingPaymentsToAnExistingPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLinkIncomingPaymentsToAnExistingPolicyCompleted(object state) {
            if ((this.LinkIncomingPaymentsToAnExistingPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LinkIncomingPaymentsToAnExistingPolicyCompleted(this, new LinkIncomingPaymentsToAnExistingPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LinkIncomingPaymentsToAnExistingPolicyAsync(System.Guid PolicyId) {
            this.LinkIncomingPaymentsToAnExistingPolicyAsync(PolicyId, null);
        }
        
        public void LinkIncomingPaymentsToAnExistingPolicyAsync(System.Guid PolicyId, object userState) {
            if ((this.onBeginLinkIncomingPaymentsToAnExistingPolicyDelegate == null)) {
                this.onBeginLinkIncomingPaymentsToAnExistingPolicyDelegate = new BeginOperationDelegate(this.OnBeginLinkIncomingPaymentsToAnExistingPolicy);
            }
            if ((this.onEndLinkIncomingPaymentsToAnExistingPolicyDelegate == null)) {
                this.onEndLinkIncomingPaymentsToAnExistingPolicyDelegate = new EndOperationDelegate(this.OnEndLinkIncomingPaymentsToAnExistingPolicy);
            }
            if ((this.onLinkIncomingPaymentsToAnExistingPolicyCompletedDelegate == null)) {
                this.onLinkIncomingPaymentsToAnExistingPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLinkIncomingPaymentsToAnExistingPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginLinkIncomingPaymentsToAnExistingPolicyDelegate, new object[] {
                        PolicyId}, this.onEndLinkIncomingPaymentsToAnExistingPolicyDelegate, this.onLinkIncomingPaymentsToAnExistingPolicyCompletedDelegate, userState);
        }
        
        public bool ActivateNewPolicy(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt) {
            return base.Channel.ActivateNewPolicy(IncPymnt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginActivateNewPolicy(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActivateNewPolicy(IncPymnt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndActivateNewPolicy(System.IAsyncResult result) {
            return base.Channel.EndActivateNewPolicy(result);
        }
        
        private System.IAsyncResult OnBeginActivateNewPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt = ((MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament)(inValues[0]));
            return this.BeginActivateNewPolicy(IncPymnt, callback, asyncState);
        }
        
        private object[] OnEndActivateNewPolicy(System.IAsyncResult result) {
            bool retVal = this.EndActivateNewPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActivateNewPolicyCompleted(object state) {
            if ((this.ActivateNewPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActivateNewPolicyCompleted(this, new ActivateNewPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActivateNewPolicyAsync(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt) {
            this.ActivateNewPolicyAsync(IncPymnt, null);
        }
        
        public void ActivateNewPolicyAsync(MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament IncPymnt, object userState) {
            if ((this.onBeginActivateNewPolicyDelegate == null)) {
                this.onBeginActivateNewPolicyDelegate = new BeginOperationDelegate(this.OnBeginActivateNewPolicy);
            }
            if ((this.onEndActivateNewPolicyDelegate == null)) {
                this.onEndActivateNewPolicyDelegate = new EndOperationDelegate(this.OnEndActivateNewPolicy);
            }
            if ((this.onActivateNewPolicyCompletedDelegate == null)) {
                this.onActivateNewPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActivateNewPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginActivateNewPolicyDelegate, new object[] {
                        IncPymnt}, this.onEndActivateNewPolicyDelegate, this.onActivateNewPolicyCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament> GetIncomingPayments(System.Guid PolicyID) {
            return base.Channel.GetIncomingPayments(PolicyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIncomingPayments(System.Guid PolicyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIncomingPayments(PolicyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament> EndGetIncomingPayments(System.IAsyncResult result) {
            return base.Channel.EndGetIncomingPayments(result);
        }
        
        private System.IAsyncResult OnBeginGetIncomingPayments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PolicyID = ((System.Guid)(inValues[0]));
            return this.BeginGetIncomingPayments(PolicyID, callback, asyncState);
        }
        
        private object[] OnEndGetIncomingPayments(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IncomingPament> retVal = this.EndGetIncomingPayments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIncomingPaymentsCompleted(object state) {
            if ((this.GetIncomingPaymentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIncomingPaymentsCompleted(this, new GetIncomingPaymentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIncomingPaymentsAsync(System.Guid PolicyID) {
            this.GetIncomingPaymentsAsync(PolicyID, null);
        }
        
        public void GetIncomingPaymentsAsync(System.Guid PolicyID, object userState) {
            if ((this.onBeginGetIncomingPaymentsDelegate == null)) {
                this.onBeginGetIncomingPaymentsDelegate = new BeginOperationDelegate(this.OnBeginGetIncomingPayments);
            }
            if ((this.onEndGetIncomingPaymentsDelegate == null)) {
                this.onEndGetIncomingPaymentsDelegate = new EndOperationDelegate(this.OnEndGetIncomingPayments);
            }
            if ((this.onGetIncomingPaymentsCompletedDelegate == null)) {
                this.onGetIncomingPaymentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIncomingPaymentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetIncomingPaymentsDelegate, new object[] {
                        PolicyID}, this.onEndGetIncomingPaymentsDelegate, this.onGetIncomingPaymentsCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ICoverage")]
    public interface ICoverage {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/AddUpdateDeleteCoverage", ReplyAction="http://tempuri.org/ICoverage/AddUpdateDeleteCoverageResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus AddUpdateDeleteCoverage(MyAgencyVault.VM.MyAgencyVaultSvc.Coverage Covrage, MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/AddUpdateDeleteCoverage", ReplyAction="http://tempuri.org/ICoverage/AddUpdateDeleteCoverageResponse")]
        System.IAsyncResult BeginAddUpdateDeleteCoverage(MyAgencyVault.VM.MyAgencyVaultSvc.Coverage Covrage, MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndAddUpdateDeleteCoverage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/GetCarrierCoverage", ReplyAction="http://tempuri.org/ICoverage/GetCarrierCoverageResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.Coverage GetCarrierCoverage(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/GetCarrierCoverage", ReplyAction="http://tempuri.org/ICoverage/GetCarrierCoverageResponse")]
        System.IAsyncResult BeginGetCarrierCoverage(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.Coverage EndGetCarrierCoverage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/GetCoverages", ReplyAction="http://tempuri.org/ICoverage/GetCoveragesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> GetCoverages(System.Guid LicenseeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/GetCoverages", ReplyAction="http://tempuri.org/ICoverage/GetCoveragesResponse")]
        System.IAsyncResult BeginGetCoverages(System.Guid LicenseeID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> EndGetCoverages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/GetCarrierCoverages", ReplyAction="http://tempuri.org/ICoverage/GetCarrierCoveragesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> GetCarrierCoverages(System.Guid CarrierId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/GetCarrierCoverages", ReplyAction="http://tempuri.org/ICoverage/GetCarrierCoveragesResponse")]
        System.IAsyncResult BeginGetCarrierCoverages(System.Guid CarrierId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> EndGetCarrierCoverages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/GetDisplayedCarrierCoverages", ReplyAction="http://tempuri.org/ICoverage/GetDisplayedCarrierCoveragesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage> GetDisplayedCarrierCoverages(System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/GetDisplayedCarrierCoverages", ReplyAction="http://tempuri.org/ICoverage/GetDisplayedCarrierCoveragesResponse")]
        System.IAsyncResult BeginGetDisplayedCarrierCoverages(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage> EndGetDisplayedCarrierCoverages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/GetPayorCarrierCoverages", ReplyAction="http://tempuri.org/ICoverage/GetPayorCarrierCoveragesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> GetPayorCarrierCoverages(System.Guid PayorId, System.Guid CarrierId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/GetPayorCarrierCoverages", ReplyAction="http://tempuri.org/ICoverage/GetPayorCarrierCoveragesResponse")]
        System.IAsyncResult BeginGetPayorCarrierCoverages(System.Guid PayorId, System.Guid CarrierId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> EndGetPayorCarrierCoverages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/GetAllNickNames", ReplyAction="http://tempuri.org/ICoverage/GetAllNickNamesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CoverageNickName> GetAllNickNames(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/GetAllNickNames", ReplyAction="http://tempuri.org/ICoverage/GetAllNickNamesResponse")]
        System.IAsyncResult BeginGetAllNickNames(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CoverageNickName> EndGetAllNickNames(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/IsValidCoverage", ReplyAction="http://tempuri.org/ICoverage/IsValidCoverageResponse")]
        bool IsValidCoverage(string carrierNickName, string coverageNickName, System.Guid payorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/IsValidCoverage", ReplyAction="http://tempuri.org/ICoverage/IsValidCoverageResponse")]
        System.IAsyncResult BeginIsValidCoverage(string carrierNickName, string coverageNickName, System.Guid payorId, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidCoverage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/GetCoverageNickName", ReplyAction="http://tempuri.org/ICoverage/GetCoverageNickNameResponse")]
        string GetCoverageNickName(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/GetCoverageNickName", ReplyAction="http://tempuri.org/ICoverage/GetCoverageNickNameResponse")]
        System.IAsyncResult BeginGetCoverageNickName(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId, System.AsyncCallback callback, object asyncState);
        
        string EndGetCoverageNickName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/GetCoverageForPolicy", ReplyAction="http://tempuri.org/ICoverage/GetCoverageForPolicyResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage GetCoverageForPolicy(System.Guid DisplayedCoverageID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/GetCoverageForPolicy", ReplyAction="http://tempuri.org/ICoverage/GetCoverageForPolicyResponse")]
        System.IAsyncResult BeginGetCoverageForPolicy(System.Guid DisplayedCoverageID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage EndGetCoverageForPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/DeleteNickName", ReplyAction="http://tempuri.org/ICoverage/DeleteNickNameResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus DeleteNickName(System.Guid guidPayorID, System.Guid guidCarrierID, System.Guid guidPreviousCoverageId, string strPrviousNickName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/DeleteNickName", ReplyAction="http://tempuri.org/ICoverage/DeleteNickNameResponse")]
        System.IAsyncResult BeginDeleteNickName(System.Guid guidPayorID, System.Guid guidCarrierID, System.Guid guidPreviousCoverageId, string strPrviousNickName, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndDeleteNickName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/DeleteProductType", ReplyAction="http://tempuri.org/ICoverage/DeleteProductTypeResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus DeleteProductType(System.Guid guidPayorID, System.Guid guidCarrierID, System.Guid guidCoverageId, string strNickNames);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/DeleteProductType", ReplyAction="http://tempuri.org/ICoverage/DeleteProductTypeResponse")]
        System.IAsyncResult BeginDeleteProductType(System.Guid guidPayorID, System.Guid guidCarrierID, System.Guid guidCoverageId, string strNickNames, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndDeleteProductType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoverage/GetPayorCoverages", ReplyAction="http://tempuri.org/ICoverage/GetPayorCoveragesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage> GetPayorCoverages(System.Guid PayorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoverage/GetPayorCoverages", ReplyAction="http://tempuri.org/ICoverage/GetPayorCoveragesResponse")]
        System.IAsyncResult BeginGetPayorCoverages(System.Guid PayorId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage> EndGetPayorCoverages(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICoverageChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ICoverage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdateDeleteCoverageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdateDeleteCoverageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCarrierCoverageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCarrierCoverageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Coverage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.Coverage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCoveragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCoveragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCarrierCoveragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCarrierCoveragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDisplayedCarrierCoveragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDisplayedCarrierCoveragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorCarrierCoveragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorCarrierCoveragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllNickNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllNickNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CoverageNickName> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CoverageNickName>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidCoverageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidCoverageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCoverageNickNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCoverageNickNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCoverageForPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCoverageForPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteNickNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteNickNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteProductTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteProductTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPayorCoveragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPayorCoveragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoverageClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ICoverage>, MyAgencyVault.VM.MyAgencyVaultSvc.ICoverage {
        
        private BeginOperationDelegate onBeginAddUpdateDeleteCoverageDelegate;
        
        private EndOperationDelegate onEndAddUpdateDeleteCoverageDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateDeleteCoverageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCarrierCoverageDelegate;
        
        private EndOperationDelegate onEndGetCarrierCoverageDelegate;
        
        private System.Threading.SendOrPostCallback onGetCarrierCoverageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCoveragesDelegate;
        
        private EndOperationDelegate onEndGetCoveragesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCoveragesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCarrierCoveragesDelegate;
        
        private EndOperationDelegate onEndGetCarrierCoveragesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCarrierCoveragesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDisplayedCarrierCoveragesDelegate;
        
        private EndOperationDelegate onEndGetDisplayedCarrierCoveragesDelegate;
        
        private System.Threading.SendOrPostCallback onGetDisplayedCarrierCoveragesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorCarrierCoveragesDelegate;
        
        private EndOperationDelegate onEndGetPayorCarrierCoveragesDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorCarrierCoveragesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllNickNamesDelegate;
        
        private EndOperationDelegate onEndGetAllNickNamesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllNickNamesCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidCoverageDelegate;
        
        private EndOperationDelegate onEndIsValidCoverageDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidCoverageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCoverageNickNameDelegate;
        
        private EndOperationDelegate onEndGetCoverageNickNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetCoverageNickNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCoverageForPolicyDelegate;
        
        private EndOperationDelegate onEndGetCoverageForPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onGetCoverageForPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteNickNameDelegate;
        
        private EndOperationDelegate onEndDeleteNickNameDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteNickNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteProductTypeDelegate;
        
        private EndOperationDelegate onEndDeleteProductTypeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteProductTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPayorCoveragesDelegate;
        
        private EndOperationDelegate onEndGetPayorCoveragesDelegate;
        
        private System.Threading.SendOrPostCallback onGetPayorCoveragesCompletedDelegate;
        
        public CoverageClient() {
        }
        
        public CoverageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CoverageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoverageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoverageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<AddUpdateDeleteCoverageCompletedEventArgs> AddUpdateDeleteCoverageCompleted;
        
        public event System.EventHandler<GetCarrierCoverageCompletedEventArgs> GetCarrierCoverageCompleted;
        
        public event System.EventHandler<GetCoveragesCompletedEventArgs> GetCoveragesCompleted;
        
        public event System.EventHandler<GetCarrierCoveragesCompletedEventArgs> GetCarrierCoveragesCompleted;
        
        public event System.EventHandler<GetDisplayedCarrierCoveragesCompletedEventArgs> GetDisplayedCarrierCoveragesCompleted;
        
        public event System.EventHandler<GetPayorCarrierCoveragesCompletedEventArgs> GetPayorCarrierCoveragesCompleted;
        
        public event System.EventHandler<GetAllNickNamesCompletedEventArgs> GetAllNickNamesCompleted;
        
        public event System.EventHandler<IsValidCoverageCompletedEventArgs> IsValidCoverageCompleted;
        
        public event System.EventHandler<GetCoverageNickNameCompletedEventArgs> GetCoverageNickNameCompleted;
        
        public event System.EventHandler<GetCoverageForPolicyCompletedEventArgs> GetCoverageForPolicyCompleted;
        
        public event System.EventHandler<DeleteNickNameCompletedEventArgs> DeleteNickNameCompleted;
        
        public event System.EventHandler<DeleteProductTypeCompletedEventArgs> DeleteProductTypeCompleted;
        
        public event System.EventHandler<GetPayorCoveragesCompletedEventArgs> GetPayorCoveragesCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus AddUpdateDeleteCoverage(MyAgencyVault.VM.MyAgencyVaultSvc.Coverage Covrage, MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType) {
            return base.Channel.AddUpdateDeleteCoverage(Covrage, operationType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateDeleteCoverage(MyAgencyVault.VM.MyAgencyVaultSvc.Coverage Covrage, MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateDeleteCoverage(Covrage, operationType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndAddUpdateDeleteCoverage(System.IAsyncResult result) {
            return base.Channel.EndAddUpdateDeleteCoverage(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateDeleteCoverage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Coverage Covrage = ((MyAgencyVault.VM.MyAgencyVaultSvc.Coverage)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType = ((MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet)(inValues[1]));
            return this.BeginAddUpdateDeleteCoverage(Covrage, operationType, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateDeleteCoverage(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus retVal = this.EndAddUpdateDeleteCoverage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdateDeleteCoverageCompleted(object state) {
            if ((this.AddUpdateDeleteCoverageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateDeleteCoverageCompleted(this, new AddUpdateDeleteCoverageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateDeleteCoverageAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Coverage Covrage, MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType) {
            this.AddUpdateDeleteCoverageAsync(Covrage, operationType, null);
        }
        
        public void AddUpdateDeleteCoverageAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Coverage Covrage, MyAgencyVault.VM.MyAgencyVaultSvc.OperationSet operationType, object userState) {
            if ((this.onBeginAddUpdateDeleteCoverageDelegate == null)) {
                this.onBeginAddUpdateDeleteCoverageDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateDeleteCoverage);
            }
            if ((this.onEndAddUpdateDeleteCoverageDelegate == null)) {
                this.onEndAddUpdateDeleteCoverageDelegate = new EndOperationDelegate(this.OnEndAddUpdateDeleteCoverage);
            }
            if ((this.onAddUpdateDeleteCoverageCompletedDelegate == null)) {
                this.onAddUpdateDeleteCoverageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateDeleteCoverageCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateDeleteCoverageDelegate, new object[] {
                        Covrage,
                        operationType}, this.onEndAddUpdateDeleteCoverageDelegate, this.onAddUpdateDeleteCoverageCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.Coverage GetCarrierCoverage(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId) {
            return base.Channel.GetCarrierCoverage(PayorId, CarrierId, CoverageId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCarrierCoverage(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCarrierCoverage(PayorId, CarrierId, CoverageId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.Coverage EndGetCarrierCoverage(System.IAsyncResult result) {
            return base.Channel.EndGetCarrierCoverage(result);
        }
        
        private System.IAsyncResult OnBeginGetCarrierCoverage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            System.Guid CarrierId = ((System.Guid)(inValues[1]));
            System.Guid CoverageId = ((System.Guid)(inValues[2]));
            return this.BeginGetCarrierCoverage(PayorId, CarrierId, CoverageId, callback, asyncState);
        }
        
        private object[] OnEndGetCarrierCoverage(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Coverage retVal = this.EndGetCarrierCoverage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCarrierCoverageCompleted(object state) {
            if ((this.GetCarrierCoverageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCarrierCoverageCompleted(this, new GetCarrierCoverageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCarrierCoverageAsync(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId) {
            this.GetCarrierCoverageAsync(PayorId, CarrierId, CoverageId, null);
        }
        
        public void GetCarrierCoverageAsync(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId, object userState) {
            if ((this.onBeginGetCarrierCoverageDelegate == null)) {
                this.onBeginGetCarrierCoverageDelegate = new BeginOperationDelegate(this.OnBeginGetCarrierCoverage);
            }
            if ((this.onEndGetCarrierCoverageDelegate == null)) {
                this.onEndGetCarrierCoverageDelegate = new EndOperationDelegate(this.OnEndGetCarrierCoverage);
            }
            if ((this.onGetCarrierCoverageCompletedDelegate == null)) {
                this.onGetCarrierCoverageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCarrierCoverageCompleted);
            }
            base.InvokeAsync(this.onBeginGetCarrierCoverageDelegate, new object[] {
                        PayorId,
                        CarrierId,
                        CoverageId}, this.onEndGetCarrierCoverageDelegate, this.onGetCarrierCoverageCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> GetCoverages(System.Guid LicenseeID) {
            return base.Channel.GetCoverages(LicenseeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCoverages(System.Guid LicenseeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCoverages(LicenseeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> EndGetCoverages(System.IAsyncResult result) {
            return base.Channel.EndGetCoverages(result);
        }
        
        private System.IAsyncResult OnBeginGetCoverages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeID = ((System.Guid)(inValues[0]));
            return this.BeginGetCoverages(LicenseeID, callback, asyncState);
        }
        
        private object[] OnEndGetCoverages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> retVal = this.EndGetCoverages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCoveragesCompleted(object state) {
            if ((this.GetCoveragesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCoveragesCompleted(this, new GetCoveragesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCoveragesAsync(System.Guid LicenseeID) {
            this.GetCoveragesAsync(LicenseeID, null);
        }
        
        public void GetCoveragesAsync(System.Guid LicenseeID, object userState) {
            if ((this.onBeginGetCoveragesDelegate == null)) {
                this.onBeginGetCoveragesDelegate = new BeginOperationDelegate(this.OnBeginGetCoverages);
            }
            if ((this.onEndGetCoveragesDelegate == null)) {
                this.onEndGetCoveragesDelegate = new EndOperationDelegate(this.OnEndGetCoverages);
            }
            if ((this.onGetCoveragesCompletedDelegate == null)) {
                this.onGetCoveragesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCoveragesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCoveragesDelegate, new object[] {
                        LicenseeID}, this.onEndGetCoveragesDelegate, this.onGetCoveragesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> GetCarrierCoverages(System.Guid CarrierId) {
            return base.Channel.GetCarrierCoverages(CarrierId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCarrierCoverages(System.Guid CarrierId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCarrierCoverages(CarrierId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> EndGetCarrierCoverages(System.IAsyncResult result) {
            return base.Channel.EndGetCarrierCoverages(result);
        }
        
        private System.IAsyncResult OnBeginGetCarrierCoverages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid CarrierId = ((System.Guid)(inValues[0]));
            return this.BeginGetCarrierCoverages(CarrierId, callback, asyncState);
        }
        
        private object[] OnEndGetCarrierCoverages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> retVal = this.EndGetCarrierCoverages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCarrierCoveragesCompleted(object state) {
            if ((this.GetCarrierCoveragesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCarrierCoveragesCompleted(this, new GetCarrierCoveragesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCarrierCoveragesAsync(System.Guid CarrierId) {
            this.GetCarrierCoveragesAsync(CarrierId, null);
        }
        
        public void GetCarrierCoveragesAsync(System.Guid CarrierId, object userState) {
            if ((this.onBeginGetCarrierCoveragesDelegate == null)) {
                this.onBeginGetCarrierCoveragesDelegate = new BeginOperationDelegate(this.OnBeginGetCarrierCoverages);
            }
            if ((this.onEndGetCarrierCoveragesDelegate == null)) {
                this.onEndGetCarrierCoveragesDelegate = new EndOperationDelegate(this.OnEndGetCarrierCoverages);
            }
            if ((this.onGetCarrierCoveragesCompletedDelegate == null)) {
                this.onGetCarrierCoveragesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCarrierCoveragesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCarrierCoveragesDelegate, new object[] {
                        CarrierId}, this.onEndGetCarrierCoveragesDelegate, this.onGetCarrierCoveragesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage> GetDisplayedCarrierCoverages(System.Guid LicenseeId) {
            return base.Channel.GetDisplayedCarrierCoverages(LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDisplayedCarrierCoverages(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDisplayedCarrierCoverages(LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage> EndGetDisplayedCarrierCoverages(System.IAsyncResult result) {
            return base.Channel.EndGetDisplayedCarrierCoverages(result);
        }
        
        private System.IAsyncResult OnBeginGetDisplayedCarrierCoverages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            return this.BeginGetDisplayedCarrierCoverages(LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndGetDisplayedCarrierCoverages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage> retVal = this.EndGetDisplayedCarrierCoverages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDisplayedCarrierCoveragesCompleted(object state) {
            if ((this.GetDisplayedCarrierCoveragesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDisplayedCarrierCoveragesCompleted(this, new GetDisplayedCarrierCoveragesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDisplayedCarrierCoveragesAsync(System.Guid LicenseeId) {
            this.GetDisplayedCarrierCoveragesAsync(LicenseeId, null);
        }
        
        public void GetDisplayedCarrierCoveragesAsync(System.Guid LicenseeId, object userState) {
            if ((this.onBeginGetDisplayedCarrierCoveragesDelegate == null)) {
                this.onBeginGetDisplayedCarrierCoveragesDelegate = new BeginOperationDelegate(this.OnBeginGetDisplayedCarrierCoverages);
            }
            if ((this.onEndGetDisplayedCarrierCoveragesDelegate == null)) {
                this.onEndGetDisplayedCarrierCoveragesDelegate = new EndOperationDelegate(this.OnEndGetDisplayedCarrierCoverages);
            }
            if ((this.onGetDisplayedCarrierCoveragesCompletedDelegate == null)) {
                this.onGetDisplayedCarrierCoveragesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDisplayedCarrierCoveragesCompleted);
            }
            base.InvokeAsync(this.onBeginGetDisplayedCarrierCoveragesDelegate, new object[] {
                        LicenseeId}, this.onEndGetDisplayedCarrierCoveragesDelegate, this.onGetDisplayedCarrierCoveragesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> GetPayorCarrierCoverages(System.Guid PayorId, System.Guid CarrierId) {
            return base.Channel.GetPayorCarrierCoverages(PayorId, CarrierId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorCarrierCoverages(System.Guid PayorId, System.Guid CarrierId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorCarrierCoverages(PayorId, CarrierId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> EndGetPayorCarrierCoverages(System.IAsyncResult result) {
            return base.Channel.EndGetPayorCarrierCoverages(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorCarrierCoverages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            System.Guid CarrierId = ((System.Guid)(inValues[1]));
            return this.BeginGetPayorCarrierCoverages(PayorId, CarrierId, callback, asyncState);
        }
        
        private object[] OnEndGetPayorCarrierCoverages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Coverage> retVal = this.EndGetPayorCarrierCoverages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorCarrierCoveragesCompleted(object state) {
            if ((this.GetPayorCarrierCoveragesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorCarrierCoveragesCompleted(this, new GetPayorCarrierCoveragesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorCarrierCoveragesAsync(System.Guid PayorId, System.Guid CarrierId) {
            this.GetPayorCarrierCoveragesAsync(PayorId, CarrierId, null);
        }
        
        public void GetPayorCarrierCoveragesAsync(System.Guid PayorId, System.Guid CarrierId, object userState) {
            if ((this.onBeginGetPayorCarrierCoveragesDelegate == null)) {
                this.onBeginGetPayorCarrierCoveragesDelegate = new BeginOperationDelegate(this.OnBeginGetPayorCarrierCoverages);
            }
            if ((this.onEndGetPayorCarrierCoveragesDelegate == null)) {
                this.onEndGetPayorCarrierCoveragesDelegate = new EndOperationDelegate(this.OnEndGetPayorCarrierCoverages);
            }
            if ((this.onGetPayorCarrierCoveragesCompletedDelegate == null)) {
                this.onGetPayorCarrierCoveragesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorCarrierCoveragesCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorCarrierCoveragesDelegate, new object[] {
                        PayorId,
                        CarrierId}, this.onEndGetPayorCarrierCoveragesDelegate, this.onGetPayorCarrierCoveragesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CoverageNickName> GetAllNickNames(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId) {
            return base.Channel.GetAllNickNames(PayorId, CarrierId, CoverageId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllNickNames(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllNickNames(PayorId, CarrierId, CoverageId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CoverageNickName> EndGetAllNickNames(System.IAsyncResult result) {
            return base.Channel.EndGetAllNickNames(result);
        }
        
        private System.IAsyncResult OnBeginGetAllNickNames(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            System.Guid CarrierId = ((System.Guid)(inValues[1]));
            System.Guid CoverageId = ((System.Guid)(inValues[2]));
            return this.BeginGetAllNickNames(PayorId, CarrierId, CoverageId, callback, asyncState);
        }
        
        private object[] OnEndGetAllNickNames(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CoverageNickName> retVal = this.EndGetAllNickNames(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllNickNamesCompleted(object state) {
            if ((this.GetAllNickNamesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllNickNamesCompleted(this, new GetAllNickNamesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllNickNamesAsync(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId) {
            this.GetAllNickNamesAsync(PayorId, CarrierId, CoverageId, null);
        }
        
        public void GetAllNickNamesAsync(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId, object userState) {
            if ((this.onBeginGetAllNickNamesDelegate == null)) {
                this.onBeginGetAllNickNamesDelegate = new BeginOperationDelegate(this.OnBeginGetAllNickNames);
            }
            if ((this.onEndGetAllNickNamesDelegate == null)) {
                this.onEndGetAllNickNamesDelegate = new EndOperationDelegate(this.OnEndGetAllNickNames);
            }
            if ((this.onGetAllNickNamesCompletedDelegate == null)) {
                this.onGetAllNickNamesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllNickNamesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllNickNamesDelegate, new object[] {
                        PayorId,
                        CarrierId,
                        CoverageId}, this.onEndGetAllNickNamesDelegate, this.onGetAllNickNamesCompletedDelegate, userState);
        }
        
        public bool IsValidCoverage(string carrierNickName, string coverageNickName, System.Guid payorId) {
            return base.Channel.IsValidCoverage(carrierNickName, coverageNickName, payorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidCoverage(string carrierNickName, string coverageNickName, System.Guid payorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidCoverage(carrierNickName, coverageNickName, payorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidCoverage(System.IAsyncResult result) {
            return base.Channel.EndIsValidCoverage(result);
        }
        
        private System.IAsyncResult OnBeginIsValidCoverage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string carrierNickName = ((string)(inValues[0]));
            string coverageNickName = ((string)(inValues[1]));
            System.Guid payorId = ((System.Guid)(inValues[2]));
            return this.BeginIsValidCoverage(carrierNickName, coverageNickName, payorId, callback, asyncState);
        }
        
        private object[] OnEndIsValidCoverage(System.IAsyncResult result) {
            bool retVal = this.EndIsValidCoverage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidCoverageCompleted(object state) {
            if ((this.IsValidCoverageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidCoverageCompleted(this, new IsValidCoverageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidCoverageAsync(string carrierNickName, string coverageNickName, System.Guid payorId) {
            this.IsValidCoverageAsync(carrierNickName, coverageNickName, payorId, null);
        }
        
        public void IsValidCoverageAsync(string carrierNickName, string coverageNickName, System.Guid payorId, object userState) {
            if ((this.onBeginIsValidCoverageDelegate == null)) {
                this.onBeginIsValidCoverageDelegate = new BeginOperationDelegate(this.OnBeginIsValidCoverage);
            }
            if ((this.onEndIsValidCoverageDelegate == null)) {
                this.onEndIsValidCoverageDelegate = new EndOperationDelegate(this.OnEndIsValidCoverage);
            }
            if ((this.onIsValidCoverageCompletedDelegate == null)) {
                this.onIsValidCoverageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidCoverageCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidCoverageDelegate, new object[] {
                        carrierNickName,
                        coverageNickName,
                        payorId}, this.onEndIsValidCoverageDelegate, this.onIsValidCoverageCompletedDelegate, userState);
        }
        
        public string GetCoverageNickName(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId) {
            return base.Channel.GetCoverageNickName(PayorId, CarrierId, CoverageId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCoverageNickName(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCoverageNickName(PayorId, CarrierId, CoverageId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCoverageNickName(System.IAsyncResult result) {
            return base.Channel.EndGetCoverageNickName(result);
        }
        
        private System.IAsyncResult OnBeginGetCoverageNickName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            System.Guid CarrierId = ((System.Guid)(inValues[1]));
            System.Guid CoverageId = ((System.Guid)(inValues[2]));
            return this.BeginGetCoverageNickName(PayorId, CarrierId, CoverageId, callback, asyncState);
        }
        
        private object[] OnEndGetCoverageNickName(System.IAsyncResult result) {
            string retVal = this.EndGetCoverageNickName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCoverageNickNameCompleted(object state) {
            if ((this.GetCoverageNickNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCoverageNickNameCompleted(this, new GetCoverageNickNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCoverageNickNameAsync(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId) {
            this.GetCoverageNickNameAsync(PayorId, CarrierId, CoverageId, null);
        }
        
        public void GetCoverageNickNameAsync(System.Guid PayorId, System.Guid CarrierId, System.Guid CoverageId, object userState) {
            if ((this.onBeginGetCoverageNickNameDelegate == null)) {
                this.onBeginGetCoverageNickNameDelegate = new BeginOperationDelegate(this.OnBeginGetCoverageNickName);
            }
            if ((this.onEndGetCoverageNickNameDelegate == null)) {
                this.onEndGetCoverageNickNameDelegate = new EndOperationDelegate(this.OnEndGetCoverageNickName);
            }
            if ((this.onGetCoverageNickNameCompletedDelegate == null)) {
                this.onGetCoverageNickNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCoverageNickNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetCoverageNickNameDelegate, new object[] {
                        PayorId,
                        CarrierId,
                        CoverageId}, this.onEndGetCoverageNickNameDelegate, this.onGetCoverageNickNameCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage GetCoverageForPolicy(System.Guid DisplayedCoverageID) {
            return base.Channel.GetCoverageForPolicy(DisplayedCoverageID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCoverageForPolicy(System.Guid DisplayedCoverageID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCoverageForPolicy(DisplayedCoverageID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage EndGetCoverageForPolicy(System.IAsyncResult result) {
            return base.Channel.EndGetCoverageForPolicy(result);
        }
        
        private System.IAsyncResult OnBeginGetCoverageForPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid DisplayedCoverageID = ((System.Guid)(inValues[0]));
            return this.BeginGetCoverageForPolicy(DisplayedCoverageID, callback, asyncState);
        }
        
        private object[] OnEndGetCoverageForPolicy(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage retVal = this.EndGetCoverageForPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCoverageForPolicyCompleted(object state) {
            if ((this.GetCoverageForPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCoverageForPolicyCompleted(this, new GetCoverageForPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCoverageForPolicyAsync(System.Guid DisplayedCoverageID) {
            this.GetCoverageForPolicyAsync(DisplayedCoverageID, null);
        }
        
        public void GetCoverageForPolicyAsync(System.Guid DisplayedCoverageID, object userState) {
            if ((this.onBeginGetCoverageForPolicyDelegate == null)) {
                this.onBeginGetCoverageForPolicyDelegate = new BeginOperationDelegate(this.OnBeginGetCoverageForPolicy);
            }
            if ((this.onEndGetCoverageForPolicyDelegate == null)) {
                this.onEndGetCoverageForPolicyDelegate = new EndOperationDelegate(this.OnEndGetCoverageForPolicy);
            }
            if ((this.onGetCoverageForPolicyCompletedDelegate == null)) {
                this.onGetCoverageForPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCoverageForPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginGetCoverageForPolicyDelegate, new object[] {
                        DisplayedCoverageID}, this.onEndGetCoverageForPolicyDelegate, this.onGetCoverageForPolicyCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus DeleteNickName(System.Guid guidPayorID, System.Guid guidCarrierID, System.Guid guidPreviousCoverageId, string strPrviousNickName) {
            return base.Channel.DeleteNickName(guidPayorID, guidCarrierID, guidPreviousCoverageId, strPrviousNickName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteNickName(System.Guid guidPayorID, System.Guid guidCarrierID, System.Guid guidPreviousCoverageId, string strPrviousNickName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteNickName(guidPayorID, guidCarrierID, guidPreviousCoverageId, strPrviousNickName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndDeleteNickName(System.IAsyncResult result) {
            return base.Channel.EndDeleteNickName(result);
        }
        
        private System.IAsyncResult OnBeginDeleteNickName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid guidPayorID = ((System.Guid)(inValues[0]));
            System.Guid guidCarrierID = ((System.Guid)(inValues[1]));
            System.Guid guidPreviousCoverageId = ((System.Guid)(inValues[2]));
            string strPrviousNickName = ((string)(inValues[3]));
            return this.BeginDeleteNickName(guidPayorID, guidCarrierID, guidPreviousCoverageId, strPrviousNickName, callback, asyncState);
        }
        
        private object[] OnEndDeleteNickName(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus retVal = this.EndDeleteNickName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteNickNameCompleted(object state) {
            if ((this.DeleteNickNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteNickNameCompleted(this, new DeleteNickNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteNickNameAsync(System.Guid guidPayorID, System.Guid guidCarrierID, System.Guid guidPreviousCoverageId, string strPrviousNickName) {
            this.DeleteNickNameAsync(guidPayorID, guidCarrierID, guidPreviousCoverageId, strPrviousNickName, null);
        }
        
        public void DeleteNickNameAsync(System.Guid guidPayorID, System.Guid guidCarrierID, System.Guid guidPreviousCoverageId, string strPrviousNickName, object userState) {
            if ((this.onBeginDeleteNickNameDelegate == null)) {
                this.onBeginDeleteNickNameDelegate = new BeginOperationDelegate(this.OnBeginDeleteNickName);
            }
            if ((this.onEndDeleteNickNameDelegate == null)) {
                this.onEndDeleteNickNameDelegate = new EndOperationDelegate(this.OnEndDeleteNickName);
            }
            if ((this.onDeleteNickNameCompletedDelegate == null)) {
                this.onDeleteNickNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteNickNameCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteNickNameDelegate, new object[] {
                        guidPayorID,
                        guidCarrierID,
                        guidPreviousCoverageId,
                        strPrviousNickName}, this.onEndDeleteNickNameDelegate, this.onDeleteNickNameCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus DeleteProductType(System.Guid guidPayorID, System.Guid guidCarrierID, System.Guid guidCoverageId, string strNickNames) {
            return base.Channel.DeleteProductType(guidPayorID, guidCarrierID, guidCoverageId, strNickNames);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteProductType(System.Guid guidPayorID, System.Guid guidCarrierID, System.Guid guidCoverageId, string strNickNames, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteProductType(guidPayorID, guidCarrierID, guidCoverageId, strNickNames, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus EndDeleteProductType(System.IAsyncResult result) {
            return base.Channel.EndDeleteProductType(result);
        }
        
        private System.IAsyncResult OnBeginDeleteProductType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid guidPayorID = ((System.Guid)(inValues[0]));
            System.Guid guidCarrierID = ((System.Guid)(inValues[1]));
            System.Guid guidCoverageId = ((System.Guid)(inValues[2]));
            string strNickNames = ((string)(inValues[3]));
            return this.BeginDeleteProductType(guidPayorID, guidCarrierID, guidCoverageId, strNickNames, callback, asyncState);
        }
        
        private object[] OnEndDeleteProductType(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ReturnStatus retVal = this.EndDeleteProductType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteProductTypeCompleted(object state) {
            if ((this.DeleteProductTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteProductTypeCompleted(this, new DeleteProductTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteProductTypeAsync(System.Guid guidPayorID, System.Guid guidCarrierID, System.Guid guidCoverageId, string strNickNames) {
            this.DeleteProductTypeAsync(guidPayorID, guidCarrierID, guidCoverageId, strNickNames, null);
        }
        
        public void DeleteProductTypeAsync(System.Guid guidPayorID, System.Guid guidCarrierID, System.Guid guidCoverageId, string strNickNames, object userState) {
            if ((this.onBeginDeleteProductTypeDelegate == null)) {
                this.onBeginDeleteProductTypeDelegate = new BeginOperationDelegate(this.OnBeginDeleteProductType);
            }
            if ((this.onEndDeleteProductTypeDelegate == null)) {
                this.onEndDeleteProductTypeDelegate = new EndOperationDelegate(this.OnEndDeleteProductType);
            }
            if ((this.onDeleteProductTypeCompletedDelegate == null)) {
                this.onDeleteProductTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteProductTypeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteProductTypeDelegate, new object[] {
                        guidPayorID,
                        guidCarrierID,
                        guidCoverageId,
                        strNickNames}, this.onEndDeleteProductTypeDelegate, this.onDeleteProductTypeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage> GetPayorCoverages(System.Guid PayorId) {
            return base.Channel.GetPayorCoverages(PayorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPayorCoverages(System.Guid PayorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPayorCoverages(PayorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage> EndGetPayorCoverages(System.IAsyncResult result) {
            return base.Channel.EndGetPayorCoverages(result);
        }
        
        private System.IAsyncResult OnBeginGetPayorCoverages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            return this.BeginGetPayorCoverages(PayorId, callback, asyncState);
        }
        
        private object[] OnEndGetPayorCoverages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedCoverage> retVal = this.EndGetPayorCoverages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPayorCoveragesCompleted(object state) {
            if ((this.GetPayorCoveragesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPayorCoveragesCompleted(this, new GetPayorCoveragesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPayorCoveragesAsync(System.Guid PayorId) {
            this.GetPayorCoveragesAsync(PayorId, null);
        }
        
        public void GetPayorCoveragesAsync(System.Guid PayorId, object userState) {
            if ((this.onBeginGetPayorCoveragesDelegate == null)) {
                this.onBeginGetPayorCoveragesDelegate = new BeginOperationDelegate(this.OnBeginGetPayorCoverages);
            }
            if ((this.onEndGetPayorCoveragesDelegate == null)) {
                this.onEndGetPayorCoveragesDelegate = new EndOperationDelegate(this.OnEndGetPayorCoverages);
            }
            if ((this.onGetPayorCoveragesCompletedDelegate == null)) {
                this.onGetPayorCoveragesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPayorCoveragesCompleted);
            }
            base.InvokeAsync(this.onBeginGetPayorCoveragesDelegate, new object[] {
                        PayorId}, this.onEndGetPayorCoveragesDelegate, this.onGetPayorCoveragesCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ICalculateVariableService")]
    public interface ICalculateVariableService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculateVariableService/StartCalculation", ReplyAction="http://tempuri.org/ICalculateVariableService/StartCalculationResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableOutputDetail StartCalculation(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableInputDetail inputData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICalculateVariableService/StartCalculation", ReplyAction="http://tempuri.org/ICalculateVariableService/StartCalculationResponse")]
        System.IAsyncResult BeginStartCalculation(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableInputDetail inputData, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableOutputDetail EndStartCalculation(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculateVariableServiceChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ICalculateVariableService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartCalculationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StartCalculationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableOutputDetail Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableOutputDetail)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculateVariableServiceClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ICalculateVariableService>, MyAgencyVault.VM.MyAgencyVaultSvc.ICalculateVariableService {
        
        private BeginOperationDelegate onBeginStartCalculationDelegate;
        
        private EndOperationDelegate onEndStartCalculationDelegate;
        
        private System.Threading.SendOrPostCallback onStartCalculationCompletedDelegate;
        
        public CalculateVariableServiceClient() {
        }
        
        public CalculateVariableServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculateVariableServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculateVariableServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculateVariableServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<StartCalculationCompletedEventArgs> StartCalculationCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableOutputDetail StartCalculation(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableInputDetail inputData) {
            return base.Channel.StartCalculation(inputData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStartCalculation(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableInputDetail inputData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartCalculation(inputData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableOutputDetail EndStartCalculation(System.IAsyncResult result) {
            return base.Channel.EndStartCalculation(result);
        }
        
        private System.IAsyncResult OnBeginStartCalculation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableInputDetail inputData = ((MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableInputDetail)(inValues[0]));
            return this.BeginStartCalculation(inputData, callback, asyncState);
        }
        
        private object[] OnEndStartCalculation(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableOutputDetail retVal = this.EndStartCalculation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStartCalculationCompleted(object state) {
            if ((this.StartCalculationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartCalculationCompleted(this, new StartCalculationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartCalculationAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableInputDetail inputData) {
            this.StartCalculationAsync(inputData, null);
        }
        
        public void StartCalculationAsync(MyAgencyVault.VM.MyAgencyVaultSvc.LicenseeVariableInputDetail inputData, object userState) {
            if ((this.onBeginStartCalculationDelegate == null)) {
                this.onBeginStartCalculationDelegate = new BeginOperationDelegate(this.OnBeginStartCalculation);
            }
            if ((this.onEndStartCalculationDelegate == null)) {
                this.onEndStartCalculationDelegate = new EndOperationDelegate(this.OnEndStartCalculation);
            }
            if ((this.onStartCalculationCompletedDelegate == null)) {
                this.onStartCalculationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartCalculationCompleted);
            }
            base.InvokeAsync(this.onBeginStartCalculationDelegate, new object[] {
                        inputData}, this.onEndStartCalculationDelegate, this.onStartCalculationCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IIssueReasons")]
    public interface IIssueReasons {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIssueReasons/GetReasons", ReplyAction="http://tempuri.org/IIssueReasons/GetReasonsResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons GetReasons(int ReasonsID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIssueReasons/GetReasons", ReplyAction="http://tempuri.org/IIssueReasons/GetReasonsResponse")]
        System.IAsyncResult BeginGetReasons(int ReasonsID, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons EndGetReasons(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIssueReasons/GetAllReason", ReplyAction="http://tempuri.org/IIssueReasons/GetAllReasonResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons> GetAllReason();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIssueReasons/GetAllReason", ReplyAction="http://tempuri.org/IIssueReasons/GetAllReasonResponse")]
        System.IAsyncResult BeginGetAllReason(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons> EndGetAllReason(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIssueReasonsChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IIssueReasons, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReasonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReasonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IssueReasonsClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IIssueReasons>, MyAgencyVault.VM.MyAgencyVaultSvc.IIssueReasons {
        
        private BeginOperationDelegate onBeginGetReasonsDelegate;
        
        private EndOperationDelegate onEndGetReasonsDelegate;
        
        private System.Threading.SendOrPostCallback onGetReasonsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllReasonDelegate;
        
        private EndOperationDelegate onEndGetAllReasonDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllReasonCompletedDelegate;
        
        public IssueReasonsClient() {
        }
        
        public IssueReasonsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IssueReasonsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IssueReasonsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IssueReasonsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetReasonsCompletedEventArgs> GetReasonsCompleted;
        
        public event System.EventHandler<GetAllReasonCompletedEventArgs> GetAllReasonCompleted;
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons GetReasons(int ReasonsID) {
            return base.Channel.GetReasons(ReasonsID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReasons(int ReasonsID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReasons(ReasonsID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons EndGetReasons(System.IAsyncResult result) {
            return base.Channel.EndGetReasons(result);
        }
        
        private System.IAsyncResult OnBeginGetReasons(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ReasonsID = ((int)(inValues[0]));
            return this.BeginGetReasons(ReasonsID, callback, asyncState);
        }
        
        private object[] OnEndGetReasons(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons retVal = this.EndGetReasons(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReasonsCompleted(object state) {
            if ((this.GetReasonsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReasonsCompleted(this, new GetReasonsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReasonsAsync(int ReasonsID) {
            this.GetReasonsAsync(ReasonsID, null);
        }
        
        public void GetReasonsAsync(int ReasonsID, object userState) {
            if ((this.onBeginGetReasonsDelegate == null)) {
                this.onBeginGetReasonsDelegate = new BeginOperationDelegate(this.OnBeginGetReasons);
            }
            if ((this.onEndGetReasonsDelegate == null)) {
                this.onEndGetReasonsDelegate = new EndOperationDelegate(this.OnEndGetReasons);
            }
            if ((this.onGetReasonsCompletedDelegate == null)) {
                this.onGetReasonsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReasonsCompleted);
            }
            base.InvokeAsync(this.onBeginGetReasonsDelegate, new object[] {
                        ReasonsID}, this.onEndGetReasonsDelegate, this.onGetReasonsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons> GetAllReason() {
            return base.Channel.GetAllReason();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllReason(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllReason(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons> EndGetAllReason(System.IAsyncResult result) {
            return base.Channel.EndGetAllReason(result);
        }
        
        private System.IAsyncResult OnBeginGetAllReason(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllReason(callback, asyncState);
        }
        
        private object[] OnEndGetAllReason(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.IssueReasons> retVal = this.EndGetAllReason(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllReasonCompleted(object state) {
            if ((this.GetAllReasonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllReasonCompleted(this, new GetAllReasonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllReasonAsync() {
            this.GetAllReasonAsync(null);
        }
        
        public void GetAllReasonAsync(object userState) {
            if ((this.onBeginGetAllReasonDelegate == null)) {
                this.onBeginGetAllReasonDelegate = new BeginOperationDelegate(this.OnBeginGetAllReason);
            }
            if ((this.onEndGetAllReasonDelegate == null)) {
                this.onEndGetAllReasonDelegate = new EndOperationDelegate(this.OnEndGetAllReason);
            }
            if ((this.onGetAllReasonCompletedDelegate == null)) {
                this.onGetAllReasonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllReasonCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllReasonDelegate, null, this.onEndGetAllReasonDelegate, this.onGetAllReasonCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IExportCardPayeeInfo")]
    public interface IExportCardPayeeInfo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportCardPayeeInfo/fillExportCardPayeeInfo", ReplyAction="http://tempuri.org/IExportCardPayeeInfo/fillExportCardPayeeInfoResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExportCardPayeeInfo> fillExportCardPayeeInfo();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IExportCardPayeeInfo/fillExportCardPayeeInfo", ReplyAction="http://tempuri.org/IExportCardPayeeInfo/fillExportCardPayeeInfoResponse")]
        System.IAsyncResult BeginfillExportCardPayeeInfo(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExportCardPayeeInfo> EndfillExportCardPayeeInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExportCardPayeeInfoChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IExportCardPayeeInfo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class fillExportCardPayeeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public fillExportCardPayeeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExportCardPayeeInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExportCardPayeeInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExportCardPayeeInfoClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IExportCardPayeeInfo>, MyAgencyVault.VM.MyAgencyVaultSvc.IExportCardPayeeInfo {
        
        private BeginOperationDelegate onBeginfillExportCardPayeeInfoDelegate;
        
        private EndOperationDelegate onEndfillExportCardPayeeInfoDelegate;
        
        private System.Threading.SendOrPostCallback onfillExportCardPayeeInfoCompletedDelegate;
        
        public ExportCardPayeeInfoClient() {
        }
        
        public ExportCardPayeeInfoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExportCardPayeeInfoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExportCardPayeeInfoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExportCardPayeeInfoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<fillExportCardPayeeInfoCompletedEventArgs> fillExportCardPayeeInfoCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExportCardPayeeInfo> fillExportCardPayeeInfo() {
            return base.Channel.fillExportCardPayeeInfo();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginfillExportCardPayeeInfo(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginfillExportCardPayeeInfo(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExportCardPayeeInfo> EndfillExportCardPayeeInfo(System.IAsyncResult result) {
            return base.Channel.EndfillExportCardPayeeInfo(result);
        }
        
        private System.IAsyncResult OnBeginfillExportCardPayeeInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginfillExportCardPayeeInfo(callback, asyncState);
        }
        
        private object[] OnEndfillExportCardPayeeInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ExportCardPayeeInfo> retVal = this.EndfillExportCardPayeeInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnfillExportCardPayeeInfoCompleted(object state) {
            if ((this.fillExportCardPayeeInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.fillExportCardPayeeInfoCompleted(this, new fillExportCardPayeeInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void fillExportCardPayeeInfoAsync() {
            this.fillExportCardPayeeInfoAsync(null);
        }
        
        public void fillExportCardPayeeInfoAsync(object userState) {
            if ((this.onBeginfillExportCardPayeeInfoDelegate == null)) {
                this.onBeginfillExportCardPayeeInfoDelegate = new BeginOperationDelegate(this.OnBeginfillExportCardPayeeInfo);
            }
            if ((this.onEndfillExportCardPayeeInfoDelegate == null)) {
                this.onEndfillExportCardPayeeInfoDelegate = new EndOperationDelegate(this.OnEndfillExportCardPayeeInfo);
            }
            if ((this.onfillExportCardPayeeInfoCompletedDelegate == null)) {
                this.onfillExportCardPayeeInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnfillExportCardPayeeInfoCompleted);
            }
            base.InvokeAsync(this.onBeginfillExportCardPayeeInfoDelegate, null, this.onEndfillExportCardPayeeInfoDelegate, this.onfillExportCardPayeeInfoCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IReport")]
    public interface IReport {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReport/GetReports", ReplyAction="http://tempuri.org/IReport/GetReportsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Report> GetReports();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReport/GetReports", ReplyAction="http://tempuri.org/IReport/GetReportsResponse")]
        System.IAsyncResult BeginGetReports(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Report> EndGetReports(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReport/SavePayeeStatementReport", ReplyAction="http://tempuri.org/IReport/SavePayeeStatementReportResponse")]
        void SavePayeeStatementReport(MyAgencyVault.VM.MyAgencyVaultSvc.PayeeStatementReport report);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReport/SavePayeeStatementReport", ReplyAction="http://tempuri.org/IReport/SavePayeeStatementReportResponse")]
        System.IAsyncResult BeginSavePayeeStatementReport(MyAgencyVault.VM.MyAgencyVaultSvc.PayeeStatementReport report, System.AsyncCallback callback, object asyncState);
        
        void EndSavePayeeStatementReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReport/PrintReport", ReplyAction="http://tempuri.org/IReport/PrintReportResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PrintReportOutput PrintReport(System.Guid Id, string reportType, string Format);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReport/PrintReport", ReplyAction="http://tempuri.org/IReport/PrintReportResponse")]
        System.IAsyncResult BeginPrintReport(System.Guid Id, string reportType, string Format, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PrintReportOutput EndPrintReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReport/SaveAuditReport", ReplyAction="http://tempuri.org/IReport/SaveAuditReportResponse")]
        void SaveAuditReport(MyAgencyVault.VM.MyAgencyVaultSvc.AuditReport report);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReport/SaveAuditReport", ReplyAction="http://tempuri.org/IReport/SaveAuditReportResponse")]
        System.IAsyncResult BeginSaveAuditReport(MyAgencyVault.VM.MyAgencyVaultSvc.AuditReport report, System.AsyncCallback callback, object asyncState);
        
        void EndSaveAuditReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReport/SaveManagementReport", ReplyAction="http://tempuri.org/IReport/SaveManagementReportResponse")]
        void SaveManagementReport(MyAgencyVault.VM.MyAgencyVaultSvc.ManagementReport report);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReport/SaveManagementReport", ReplyAction="http://tempuri.org/IReport/SaveManagementReportResponse")]
        System.IAsyncResult BeginSaveManagementReport(MyAgencyVault.VM.MyAgencyVaultSvc.ManagementReport report, System.AsyncCallback callback, object asyncState);
        
        void EndSaveManagementReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReport/PrintReportAndSendMail", ReplyAction="http://tempuri.org/IReport/PrintReportAndSendMailResponse")]
        bool PrintReportAndSendMail(System.Guid Id, string reportType, System.Guid userId, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReport/PrintReportAndSendMail", ReplyAction="http://tempuri.org/IReport/PrintReportAndSendMailResponse")]
        System.IAsyncResult BeginPrintReportAndSendMail(System.Guid Id, string reportType, System.Guid userId, string emailAddress, System.AsyncCallback callback, object asyncState);
        
        bool EndPrintReportAndSendMail(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IReport, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Report> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Report>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrintReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrintReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PrintReportOutput Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PrintReportOutput)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrintReportAndSendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrintReportAndSendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IReport>, MyAgencyVault.VM.MyAgencyVaultSvc.IReport {
        
        private BeginOperationDelegate onBeginGetReportsDelegate;
        
        private EndOperationDelegate onEndGetReportsDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePayeeStatementReportDelegate;
        
        private EndOperationDelegate onEndSavePayeeStatementReportDelegate;
        
        private System.Threading.SendOrPostCallback onSavePayeeStatementReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintReportDelegate;
        
        private EndOperationDelegate onEndPrintReportDelegate;
        
        private System.Threading.SendOrPostCallback onPrintReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveAuditReportDelegate;
        
        private EndOperationDelegate onEndSaveAuditReportDelegate;
        
        private System.Threading.SendOrPostCallback onSaveAuditReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveManagementReportDelegate;
        
        private EndOperationDelegate onEndSaveManagementReportDelegate;
        
        private System.Threading.SendOrPostCallback onSaveManagementReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintReportAndSendMailDelegate;
        
        private EndOperationDelegate onEndPrintReportAndSendMailDelegate;
        
        private System.Threading.SendOrPostCallback onPrintReportAndSendMailCompletedDelegate;
        
        public ReportClient() {
        }
        
        public ReportClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetReportsCompletedEventArgs> GetReportsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SavePayeeStatementReportCompleted;
        
        public event System.EventHandler<PrintReportCompletedEventArgs> PrintReportCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveAuditReportCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveManagementReportCompleted;
        
        public event System.EventHandler<PrintReportAndSendMailCompletedEventArgs> PrintReportAndSendMailCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Report> GetReports() {
            return base.Channel.GetReports();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReports(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReports(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Report> EndGetReports(System.IAsyncResult result) {
            return base.Channel.EndGetReports(result);
        }
        
        private System.IAsyncResult OnBeginGetReports(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetReports(callback, asyncState);
        }
        
        private object[] OnEndGetReports(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Report> retVal = this.EndGetReports(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReportsCompleted(object state) {
            if ((this.GetReportsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportsCompleted(this, new GetReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportsAsync() {
            this.GetReportsAsync(null);
        }
        
        public void GetReportsAsync(object userState) {
            if ((this.onBeginGetReportsDelegate == null)) {
                this.onBeginGetReportsDelegate = new BeginOperationDelegate(this.OnBeginGetReports);
            }
            if ((this.onEndGetReportsDelegate == null)) {
                this.onEndGetReportsDelegate = new EndOperationDelegate(this.OnEndGetReports);
            }
            if ((this.onGetReportsCompletedDelegate == null)) {
                this.onGetReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportsCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportsDelegate, null, this.onEndGetReportsDelegate, this.onGetReportsCompletedDelegate, userState);
        }
        
        public void SavePayeeStatementReport(MyAgencyVault.VM.MyAgencyVaultSvc.PayeeStatementReport report) {
            base.Channel.SavePayeeStatementReport(report);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSavePayeeStatementReport(MyAgencyVault.VM.MyAgencyVaultSvc.PayeeStatementReport report, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePayeeStatementReport(report, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSavePayeeStatementReport(System.IAsyncResult result) {
            base.Channel.EndSavePayeeStatementReport(result);
        }
        
        private System.IAsyncResult OnBeginSavePayeeStatementReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayeeStatementReport report = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayeeStatementReport)(inValues[0]));
            return this.BeginSavePayeeStatementReport(report, callback, asyncState);
        }
        
        private object[] OnEndSavePayeeStatementReport(System.IAsyncResult result) {
            this.EndSavePayeeStatementReport(result);
            return null;
        }
        
        private void OnSavePayeeStatementReportCompleted(object state) {
            if ((this.SavePayeeStatementReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePayeeStatementReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePayeeStatementReportAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayeeStatementReport report) {
            this.SavePayeeStatementReportAsync(report, null);
        }
        
        public void SavePayeeStatementReportAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayeeStatementReport report, object userState) {
            if ((this.onBeginSavePayeeStatementReportDelegate == null)) {
                this.onBeginSavePayeeStatementReportDelegate = new BeginOperationDelegate(this.OnBeginSavePayeeStatementReport);
            }
            if ((this.onEndSavePayeeStatementReportDelegate == null)) {
                this.onEndSavePayeeStatementReportDelegate = new EndOperationDelegate(this.OnEndSavePayeeStatementReport);
            }
            if ((this.onSavePayeeStatementReportCompletedDelegate == null)) {
                this.onSavePayeeStatementReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePayeeStatementReportCompleted);
            }
            base.InvokeAsync(this.onBeginSavePayeeStatementReportDelegate, new object[] {
                        report}, this.onEndSavePayeeStatementReportDelegate, this.onSavePayeeStatementReportCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PrintReportOutput PrintReport(System.Guid Id, string reportType, string Format) {
            return base.Channel.PrintReport(Id, reportType, Format);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPrintReport(System.Guid Id, string reportType, string Format, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintReport(Id, reportType, Format, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PrintReportOutput EndPrintReport(System.IAsyncResult result) {
            return base.Channel.EndPrintReport(result);
        }
        
        private System.IAsyncResult OnBeginPrintReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid Id = ((System.Guid)(inValues[0]));
            string reportType = ((string)(inValues[1]));
            string Format = ((string)(inValues[2]));
            return this.BeginPrintReport(Id, reportType, Format, callback, asyncState);
        }
        
        private object[] OnEndPrintReport(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PrintReportOutput retVal = this.EndPrintReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrintReportCompleted(object state) {
            if ((this.PrintReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintReportCompleted(this, new PrintReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintReportAsync(System.Guid Id, string reportType, string Format) {
            this.PrintReportAsync(Id, reportType, Format, null);
        }
        
        public void PrintReportAsync(System.Guid Id, string reportType, string Format, object userState) {
            if ((this.onBeginPrintReportDelegate == null)) {
                this.onBeginPrintReportDelegate = new BeginOperationDelegate(this.OnBeginPrintReport);
            }
            if ((this.onEndPrintReportDelegate == null)) {
                this.onEndPrintReportDelegate = new EndOperationDelegate(this.OnEndPrintReport);
            }
            if ((this.onPrintReportCompletedDelegate == null)) {
                this.onPrintReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintReportCompleted);
            }
            base.InvokeAsync(this.onBeginPrintReportDelegate, new object[] {
                        Id,
                        reportType,
                        Format}, this.onEndPrintReportDelegate, this.onPrintReportCompletedDelegate, userState);
        }
        
        public void SaveAuditReport(MyAgencyVault.VM.MyAgencyVaultSvc.AuditReport report) {
            base.Channel.SaveAuditReport(report);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveAuditReport(MyAgencyVault.VM.MyAgencyVaultSvc.AuditReport report, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveAuditReport(report, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveAuditReport(System.IAsyncResult result) {
            base.Channel.EndSaveAuditReport(result);
        }
        
        private System.IAsyncResult OnBeginSaveAuditReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.AuditReport report = ((MyAgencyVault.VM.MyAgencyVaultSvc.AuditReport)(inValues[0]));
            return this.BeginSaveAuditReport(report, callback, asyncState);
        }
        
        private object[] OnEndSaveAuditReport(System.IAsyncResult result) {
            this.EndSaveAuditReport(result);
            return null;
        }
        
        private void OnSaveAuditReportCompleted(object state) {
            if ((this.SaveAuditReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveAuditReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveAuditReportAsync(MyAgencyVault.VM.MyAgencyVaultSvc.AuditReport report) {
            this.SaveAuditReportAsync(report, null);
        }
        
        public void SaveAuditReportAsync(MyAgencyVault.VM.MyAgencyVaultSvc.AuditReport report, object userState) {
            if ((this.onBeginSaveAuditReportDelegate == null)) {
                this.onBeginSaveAuditReportDelegate = new BeginOperationDelegate(this.OnBeginSaveAuditReport);
            }
            if ((this.onEndSaveAuditReportDelegate == null)) {
                this.onEndSaveAuditReportDelegate = new EndOperationDelegate(this.OnEndSaveAuditReport);
            }
            if ((this.onSaveAuditReportCompletedDelegate == null)) {
                this.onSaveAuditReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveAuditReportCompleted);
            }
            base.InvokeAsync(this.onBeginSaveAuditReportDelegate, new object[] {
                        report}, this.onEndSaveAuditReportDelegate, this.onSaveAuditReportCompletedDelegate, userState);
        }
        
        public void SaveManagementReport(MyAgencyVault.VM.MyAgencyVaultSvc.ManagementReport report) {
            base.Channel.SaveManagementReport(report);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveManagementReport(MyAgencyVault.VM.MyAgencyVaultSvc.ManagementReport report, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveManagementReport(report, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveManagementReport(System.IAsyncResult result) {
            base.Channel.EndSaveManagementReport(result);
        }
        
        private System.IAsyncResult OnBeginSaveManagementReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ManagementReport report = ((MyAgencyVault.VM.MyAgencyVaultSvc.ManagementReport)(inValues[0]));
            return this.BeginSaveManagementReport(report, callback, asyncState);
        }
        
        private object[] OnEndSaveManagementReport(System.IAsyncResult result) {
            this.EndSaveManagementReport(result);
            return null;
        }
        
        private void OnSaveManagementReportCompleted(object state) {
            if ((this.SaveManagementReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveManagementReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveManagementReportAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ManagementReport report) {
            this.SaveManagementReportAsync(report, null);
        }
        
        public void SaveManagementReportAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ManagementReport report, object userState) {
            if ((this.onBeginSaveManagementReportDelegate == null)) {
                this.onBeginSaveManagementReportDelegate = new BeginOperationDelegate(this.OnBeginSaveManagementReport);
            }
            if ((this.onEndSaveManagementReportDelegate == null)) {
                this.onEndSaveManagementReportDelegate = new EndOperationDelegate(this.OnEndSaveManagementReport);
            }
            if ((this.onSaveManagementReportCompletedDelegate == null)) {
                this.onSaveManagementReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveManagementReportCompleted);
            }
            base.InvokeAsync(this.onBeginSaveManagementReportDelegate, new object[] {
                        report}, this.onEndSaveManagementReportDelegate, this.onSaveManagementReportCompletedDelegate, userState);
        }
        
        public bool PrintReportAndSendMail(System.Guid Id, string reportType, System.Guid userId, string emailAddress) {
            return base.Channel.PrintReportAndSendMail(Id, reportType, userId, emailAddress);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPrintReportAndSendMail(System.Guid Id, string reportType, System.Guid userId, string emailAddress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintReportAndSendMail(Id, reportType, userId, emailAddress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndPrintReportAndSendMail(System.IAsyncResult result) {
            return base.Channel.EndPrintReportAndSendMail(result);
        }
        
        private System.IAsyncResult OnBeginPrintReportAndSendMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid Id = ((System.Guid)(inValues[0]));
            string reportType = ((string)(inValues[1]));
            System.Guid userId = ((System.Guid)(inValues[2]));
            string emailAddress = ((string)(inValues[3]));
            return this.BeginPrintReportAndSendMail(Id, reportType, userId, emailAddress, callback, asyncState);
        }
        
        private object[] OnEndPrintReportAndSendMail(System.IAsyncResult result) {
            bool retVal = this.EndPrintReportAndSendMail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrintReportAndSendMailCompleted(object state) {
            if ((this.PrintReportAndSendMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintReportAndSendMailCompleted(this, new PrintReportAndSendMailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintReportAndSendMailAsync(System.Guid Id, string reportType, System.Guid userId, string emailAddress) {
            this.PrintReportAndSendMailAsync(Id, reportType, userId, emailAddress, null);
        }
        
        public void PrintReportAndSendMailAsync(System.Guid Id, string reportType, System.Guid userId, string emailAddress, object userState) {
            if ((this.onBeginPrintReportAndSendMailDelegate == null)) {
                this.onBeginPrintReportAndSendMailDelegate = new BeginOperationDelegate(this.OnBeginPrintReportAndSendMail);
            }
            if ((this.onEndPrintReportAndSendMailDelegate == null)) {
                this.onEndPrintReportAndSendMailDelegate = new EndOperationDelegate(this.OnEndPrintReportAndSendMail);
            }
            if ((this.onPrintReportAndSendMailCompletedDelegate == null)) {
                this.onPrintReportAndSendMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintReportAndSendMailCompleted);
            }
            base.InvokeAsync(this.onBeginPrintReportAndSendMailDelegate, new object[] {
                        Id,
                        reportType,
                        userId,
                        emailAddress}, this.onEndPrintReportAndSendMailDelegate, this.onPrintReportAndSendMailCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IPayorTemplate")]
    public interface IPayorTemplate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/AddUpdateTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/AddUpdateTemplateResponse")]
        void AddUpdateTemplate(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate template);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/AddUpdateTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/AddUpdateTemplateResponse")]
        System.IAsyncResult BeginAddUpdateTemplate(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate template, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/DeleteTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/DeleteTemplateResponse")]
        void DeleteTemplate(System.Guid PayorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/DeleteTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/DeleteTemplateResponse")]
        System.IAsyncResult BeginDeleteTemplate(System.Guid PayorId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/getPayorTemplates", ReplyAction="http://tempuri.org/IPayorTemplate/getPayorTemplatesResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate> getPayorTemplates();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/getPayorTemplates", ReplyAction="http://tempuri.org/IPayorTemplate/getPayorTemplatesResponse")]
        System.IAsyncResult BegingetPayorTemplates(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate> EndgetPayorTemplates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/getPayorTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/getPayorTemplateResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate getPayorTemplate(System.Guid PayorId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/getPayorTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/getPayorTemplateResponse")]
        System.IAsyncResult BegingetPayorTemplate(System.Guid PayorId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate EndgetPayorTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/AddUpdateImportToolPayorTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/AddUpdateImportToolPayorTemplateResponse")]
        bool AddUpdateImportToolPayorTemplate(System.Guid SelectedPayorID, System.Guid SelectedtempID, string strTemName, bool isDeleted, bool isForceImport, string strCommandType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/AddUpdateImportToolPayorTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/AddUpdateImportToolPayorTemplateResponse")]
        System.IAsyncResult BeginAddUpdateImportToolPayorTemplate(System.Guid SelectedPayorID, System.Guid SelectedtempID, string strTemName, bool isDeleted, bool isForceImport, string strCommandType, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUpdateImportToolPayorTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/ValidateTemplateName", ReplyAction="http://tempuri.org/IPayorTemplate/ValidateTemplateNameResponse")]
        bool ValidateTemplateName(System.Guid SelectedPayorID, System.Guid SelectedTempID, string strTempName, bool isDeleted, bool isForceImport);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/ValidateTemplateName", ReplyAction="http://tempuri.org/IPayorTemplate/ValidateTemplateNameResponse")]
        System.IAsyncResult BeginValidateTemplateName(System.Guid SelectedPayorID, System.Guid SelectedTempID, string strTempName, bool isDeleted, bool isForceImport, System.AsyncCallback callback, object asyncState);
        
        bool EndValidateTemplateName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/GetImportToolPayorTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/GetImportToolPayorTemplateResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> GetImportToolPayorTemplate(System.Guid SelectedPayorID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/GetImportToolPayorTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/GetImportToolPayorTemplateResponse")]
        System.IAsyncResult BeginGetImportToolPayorTemplate(System.Guid SelectedPayorID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> EndGetImportToolPayorTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/deleteImportToolPayorTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/deleteImportToolPayorTemplateResponse")]
        bool deleteImportToolPayorTemplate(MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate SelectedPayortempalate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/deleteImportToolPayorTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/deleteImportToolPayorTemplateResponse")]
        System.IAsyncResult BegindeleteImportToolPayorTemplate(MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate SelectedPayortempalate, System.AsyncCallback callback, object asyncState);
        
        bool EnddeleteImportToolPayorTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/AddUpdateImportToolPayorPhrase", ReplyAction="http://tempuri.org/IPayorTemplate/AddUpdateImportToolPayorPhraseResponse")]
        bool AddUpdateImportToolPayorPhrase(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase objImportToolPayorPhrase);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/AddUpdateImportToolPayorPhrase", ReplyAction="http://tempuri.org/IPayorTemplate/AddUpdateImportToolPayorPhraseResponse")]
        System.IAsyncResult BeginAddUpdateImportToolPayorPhrase(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase objImportToolPayorPhrase, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUpdateImportToolPayorPhrase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/CheckAvailability", ReplyAction="http://tempuri.org/IPayorTemplate/CheckAvailabilityResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase> CheckAvailability(string strPhrase);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/CheckAvailability", ReplyAction="http://tempuri.org/IPayorTemplate/CheckAvailabilityResponse")]
        System.IAsyncResult BeginCheckAvailability(string strPhrase, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase> EndCheckAvailability(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/AddUpdateImportToolStatementDataSettings", ReplyAction="http://tempuri.org/IPayorTemplate/AddUpdateImportToolStatementDataSettingsRespons" +
            "e")]
        bool AddUpdateImportToolStatementDataSettings(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings objImportToolStatementDataSettings);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/AddUpdateImportToolStatementDataSettings", ReplyAction="http://tempuri.org/IPayorTemplate/AddUpdateImportToolStatementDataSettingsRespons" +
            "e")]
        System.IAsyncResult BeginAddUpdateImportToolStatementDataSettings(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings objImportToolStatementDataSettings, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUpdateImportToolStatementDataSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/GetAllImportToolStatementDataSettings", ReplyAction="http://tempuri.org/IPayorTemplate/GetAllImportToolStatementDataSettingsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings> GetAllImportToolStatementDataSettings(System.Guid PayorID, System.Guid templateID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/GetAllImportToolStatementDataSettings", ReplyAction="http://tempuri.org/IPayorTemplate/GetAllImportToolStatementDataSettingsResponse")]
        System.IAsyncResult BeginGetAllImportToolStatementDataSettings(System.Guid PayorID, System.Guid templateID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings> EndGetAllImportToolStatementDataSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/ValidatePhraseAvailbility", ReplyAction="http://tempuri.org/IPayorTemplate/ValidatePhraseAvailbilityResponse")]
        string ValidatePhraseAvailbility(string strPhrase);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/ValidatePhraseAvailbility", ReplyAction="http://tempuri.org/IPayorTemplate/ValidatePhraseAvailbilityResponse")]
        System.IAsyncResult BeginValidatePhraseAvailbility(string strPhrase, System.AsyncCallback callback, object asyncState);
        
        string EndValidatePhraseAvailbility(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/AllMaskType", ReplyAction="http://tempuri.org/IPayorTemplate/AllMaskTypeResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.MaskFieldTypes> AllMaskType();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/AllMaskType", ReplyAction="http://tempuri.org/IPayorTemplate/AllMaskTypeResponse")]
        System.IAsyncResult BeginAllMaskType(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.MaskFieldTypes> EndAllMaskType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/AllTranslatorType", ReplyAction="http://tempuri.org/IPayorTemplate/AllTranslatorTypeResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.TranslatorTypes> AllTranslatorType();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/AllTranslatorType", ReplyAction="http://tempuri.org/IPayorTemplate/AllTranslatorTypeResponse")]
        System.IAsyncResult BeginAllTranslatorType(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.TranslatorTypes> EndAllTranslatorType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/AddUpdatePaymentDataFieldsSetting", ReplyAction="http://tempuri.org/IPayorTemplate/AddUpdatePaymentDataFieldsSettingResponse")]
        void AddUpdatePaymentDataFieldsSetting(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings objImportToolPaymentDataFieldsSettings);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/AddUpdatePaymentDataFieldsSetting", ReplyAction="http://tempuri.org/IPayorTemplate/AddUpdatePaymentDataFieldsSettingResponse")]
        System.IAsyncResult BeginAddUpdatePaymentDataFieldsSetting(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings objImportToolPaymentDataFieldsSettings, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePaymentDataFieldsSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/LoadImportToolStatementDataSetting", ReplyAction="http://tempuri.org/IPayorTemplate/LoadImportToolStatementDataSettingResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings> LoadImportToolStatementDataSetting();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/LoadImportToolStatementDataSetting", ReplyAction="http://tempuri.org/IPayorTemplate/LoadImportToolStatementDataSettingResponse")]
        System.IAsyncResult BeginLoadImportToolStatementDataSetting(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings> EndLoadImportToolStatementDataSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/AddUpdatePaymentData", ReplyAction="http://tempuri.org/IPayorTemplate/AddUpdatePaymentDataResponse")]
        void AddUpdatePaymentData(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/AddUpdatePaymentData", ReplyAction="http://tempuri.org/IPayorTemplate/AddUpdatePaymentDataResponse")]
        System.IAsyncResult BeginAddUpdatePaymentData(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdatePaymentData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/DeletePaymentData", ReplyAction="http://tempuri.org/IPayorTemplate/DeletePaymentDataResponse")]
        void DeletePaymentData(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/DeletePaymentData", ReplyAction="http://tempuri.org/IPayorTemplate/DeletePaymentDataResponse")]
        System.IAsyncResult BeginDeletePaymentData(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePaymentData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/LoadImportToolSeletedPaymentData", ReplyAction="http://tempuri.org/IPayorTemplate/LoadImportToolSeletedPaymentDataResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData> LoadImportToolSeletedPaymentData(System.Guid PayorID, System.Guid TemplateID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/LoadImportToolSeletedPaymentData", ReplyAction="http://tempuri.org/IPayorTemplate/LoadImportToolSeletedPaymentDataResponse")]
        System.IAsyncResult BeginLoadImportToolSeletedPaymentData(System.Guid PayorID, System.Guid TemplateID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData> EndLoadImportToolSeletedPaymentData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/LoadPaymentDataFieldsSetting", ReplyAction="http://tempuri.org/IPayorTemplate/LoadPaymentDataFieldsSettingResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings> LoadPaymentDataFieldsSetting(System.Guid PayorID, System.Guid TemplateID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/LoadPaymentDataFieldsSetting", ReplyAction="http://tempuri.org/IPayorTemplate/LoadPaymentDataFieldsSettingResponse")]
        System.IAsyncResult BeginLoadPaymentDataFieldsSetting(System.Guid PayorID, System.Guid TemplateID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings> EndLoadPaymentDataFieldsSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/DuplicateSelectedPaymentData", ReplyAction="http://tempuri.org/IPayorTemplate/DuplicateSelectedPaymentDataResponse")]
        void DuplicateSelectedPaymentData(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/DuplicateSelectedPaymentData", ReplyAction="http://tempuri.org/IPayorTemplate/DuplicateSelectedPaymentDataResponse")]
        System.IAsyncResult BeginDuplicateSelectedPaymentData(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData, System.AsyncCallback callback, object asyncState);
        
        void EndDuplicateSelectedPaymentData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/GetAllTemplatePhraseOnTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/GetAllTemplatePhraseOnTemplateResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase> GetAllTemplatePhraseOnTemplate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/GetAllTemplatePhraseOnTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/GetAllTemplatePhraseOnTemplateResponse")]
        System.IAsyncResult BeginGetAllTemplatePhraseOnTemplate(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase> EndGetAllTemplatePhraseOnTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/GetAllPayorTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/GetAllPayorTemplateResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> GetAllPayorTemplate(System.Nullable<System.Guid> SelectedPayorID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/GetAllPayorTemplate", ReplyAction="http://tempuri.org/IPayorTemplate/GetAllPayorTemplateResponse")]
        System.IAsyncResult BeginGetAllPayorTemplate(System.Nullable<System.Guid> SelectedPayorID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> EndGetAllPayorTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/DeletePhrase", ReplyAction="http://tempuri.org/IPayorTemplate/DeletePhraseResponse")]
        void DeletePhrase(int intID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/DeletePhrase", ReplyAction="http://tempuri.org/IPayorTemplate/DeletePhraseResponse")]
        System.IAsyncResult BeginDeletePhrase(int intID, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePhrase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayorTemplate/UpdatePhrase", ReplyAction="http://tempuri.org/IPayorTemplate/UpdatePhraseResponse")]
        void UpdatePhrase(int intID, string Phrase);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPayorTemplate/UpdatePhrase", ReplyAction="http://tempuri.org/IPayorTemplate/UpdatePhraseResponse")]
        System.IAsyncResult BeginUpdatePhrase(int intID, string Phrase, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePhrase(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPayorTemplateChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IPayorTemplate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getPayorTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getPayorTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getPayorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getPayorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdateImportToolPayorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdateImportToolPayorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateTemplateNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateTemplateNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetImportToolPayorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetImportToolPayorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class deleteImportToolPayorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public deleteImportToolPayorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdateImportToolPayorPhraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdateImportToolPayorPhraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUpdateImportToolStatementDataSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUpdateImportToolStatementDataSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllImportToolStatementDataSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllImportToolStatementDataSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidatePhraseAvailbilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidatePhraseAvailbilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AllMaskTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AllMaskTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.MaskFieldTypes> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.MaskFieldTypes>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AllTranslatorTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AllTranslatorTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.TranslatorTypes> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.TranslatorTypes>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadImportToolStatementDataSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadImportToolStatementDataSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadImportToolSeletedPaymentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadImportToolSeletedPaymentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadPaymentDataFieldsSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadPaymentDataFieldsSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTemplatePhraseOnTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTemplatePhraseOnTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPayorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPayorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayorTemplateClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IPayorTemplate>, MyAgencyVault.VM.MyAgencyVaultSvc.IPayorTemplate {
        
        private BeginOperationDelegate onBeginAddUpdateTemplateDelegate;
        
        private EndOperationDelegate onEndAddUpdateTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTemplateDelegate;
        
        private EndOperationDelegate onEndDeleteTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBegingetPayorTemplatesDelegate;
        
        private EndOperationDelegate onEndgetPayorTemplatesDelegate;
        
        private System.Threading.SendOrPostCallback ongetPayorTemplatesCompletedDelegate;
        
        private BeginOperationDelegate onBegingetPayorTemplateDelegate;
        
        private EndOperationDelegate onEndgetPayorTemplateDelegate;
        
        private System.Threading.SendOrPostCallback ongetPayorTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateImportToolPayorTemplateDelegate;
        
        private EndOperationDelegate onEndAddUpdateImportToolPayorTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateImportToolPayorTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateTemplateNameDelegate;
        
        private EndOperationDelegate onEndValidateTemplateNameDelegate;
        
        private System.Threading.SendOrPostCallback onValidateTemplateNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetImportToolPayorTemplateDelegate;
        
        private EndOperationDelegate onEndGetImportToolPayorTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onGetImportToolPayorTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBegindeleteImportToolPayorTemplateDelegate;
        
        private EndOperationDelegate onEnddeleteImportToolPayorTemplateDelegate;
        
        private System.Threading.SendOrPostCallback ondeleteImportToolPayorTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateImportToolPayorPhraseDelegate;
        
        private EndOperationDelegate onEndAddUpdateImportToolPayorPhraseDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateImportToolPayorPhraseCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckAvailabilityDelegate;
        
        private EndOperationDelegate onEndCheckAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onCheckAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateImportToolStatementDataSettingsDelegate;
        
        private EndOperationDelegate onEndAddUpdateImportToolStatementDataSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateImportToolStatementDataSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllImportToolStatementDataSettingsDelegate;
        
        private EndOperationDelegate onEndGetAllImportToolStatementDataSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllImportToolStatementDataSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidatePhraseAvailbilityDelegate;
        
        private EndOperationDelegate onEndValidatePhraseAvailbilityDelegate;
        
        private System.Threading.SendOrPostCallback onValidatePhraseAvailbilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginAllMaskTypeDelegate;
        
        private EndOperationDelegate onEndAllMaskTypeDelegate;
        
        private System.Threading.SendOrPostCallback onAllMaskTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginAllTranslatorTypeDelegate;
        
        private EndOperationDelegate onEndAllTranslatorTypeDelegate;
        
        private System.Threading.SendOrPostCallback onAllTranslatorTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdatePaymentDataFieldsSettingDelegate;
        
        private EndOperationDelegate onEndAddUpdatePaymentDataFieldsSettingDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePaymentDataFieldsSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadImportToolStatementDataSettingDelegate;
        
        private EndOperationDelegate onEndLoadImportToolStatementDataSettingDelegate;
        
        private System.Threading.SendOrPostCallback onLoadImportToolStatementDataSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdatePaymentDataDelegate;
        
        private EndOperationDelegate onEndAddUpdatePaymentDataDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdatePaymentDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePaymentDataDelegate;
        
        private EndOperationDelegate onEndDeletePaymentDataDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePaymentDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadImportToolSeletedPaymentDataDelegate;
        
        private EndOperationDelegate onEndLoadImportToolSeletedPaymentDataDelegate;
        
        private System.Threading.SendOrPostCallback onLoadImportToolSeletedPaymentDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadPaymentDataFieldsSettingDelegate;
        
        private EndOperationDelegate onEndLoadPaymentDataFieldsSettingDelegate;
        
        private System.Threading.SendOrPostCallback onLoadPaymentDataFieldsSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginDuplicateSelectedPaymentDataDelegate;
        
        private EndOperationDelegate onEndDuplicateSelectedPaymentDataDelegate;
        
        private System.Threading.SendOrPostCallback onDuplicateSelectedPaymentDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTemplatePhraseOnTemplateDelegate;
        
        private EndOperationDelegate onEndGetAllTemplatePhraseOnTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTemplatePhraseOnTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPayorTemplateDelegate;
        
        private EndOperationDelegate onEndGetAllPayorTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPayorTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePhraseDelegate;
        
        private EndOperationDelegate onEndDeletePhraseDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePhraseCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePhraseDelegate;
        
        private EndOperationDelegate onEndUpdatePhraseDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePhraseCompletedDelegate;
        
        public PayorTemplateClient() {
        }
        
        public PayorTemplateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PayorTemplateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorTemplateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayorTemplateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateTemplateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteTemplateCompleted;
        
        public event System.EventHandler<getPayorTemplatesCompletedEventArgs> getPayorTemplatesCompleted;
        
        public event System.EventHandler<getPayorTemplateCompletedEventArgs> getPayorTemplateCompleted;
        
        public event System.EventHandler<AddUpdateImportToolPayorTemplateCompletedEventArgs> AddUpdateImportToolPayorTemplateCompleted;
        
        public event System.EventHandler<ValidateTemplateNameCompletedEventArgs> ValidateTemplateNameCompleted;
        
        public event System.EventHandler<GetImportToolPayorTemplateCompletedEventArgs> GetImportToolPayorTemplateCompleted;
        
        public event System.EventHandler<deleteImportToolPayorTemplateCompletedEventArgs> deleteImportToolPayorTemplateCompleted;
        
        public event System.EventHandler<AddUpdateImportToolPayorPhraseCompletedEventArgs> AddUpdateImportToolPayorPhraseCompleted;
        
        public event System.EventHandler<CheckAvailabilityCompletedEventArgs> CheckAvailabilityCompleted;
        
        public event System.EventHandler<AddUpdateImportToolStatementDataSettingsCompletedEventArgs> AddUpdateImportToolStatementDataSettingsCompleted;
        
        public event System.EventHandler<GetAllImportToolStatementDataSettingsCompletedEventArgs> GetAllImportToolStatementDataSettingsCompleted;
        
        public event System.EventHandler<ValidatePhraseAvailbilityCompletedEventArgs> ValidatePhraseAvailbilityCompleted;
        
        public event System.EventHandler<AllMaskTypeCompletedEventArgs> AllMaskTypeCompleted;
        
        public event System.EventHandler<AllTranslatorTypeCompletedEventArgs> AllTranslatorTypeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePaymentDataFieldsSettingCompleted;
        
        public event System.EventHandler<LoadImportToolStatementDataSettingCompletedEventArgs> LoadImportToolStatementDataSettingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdatePaymentDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePaymentDataCompleted;
        
        public event System.EventHandler<LoadImportToolSeletedPaymentDataCompletedEventArgs> LoadImportToolSeletedPaymentDataCompleted;
        
        public event System.EventHandler<LoadPaymentDataFieldsSettingCompletedEventArgs> LoadPaymentDataFieldsSettingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DuplicateSelectedPaymentDataCompleted;
        
        public event System.EventHandler<GetAllTemplatePhraseOnTemplateCompletedEventArgs> GetAllTemplatePhraseOnTemplateCompleted;
        
        public event System.EventHandler<GetAllPayorTemplateCompletedEventArgs> GetAllPayorTemplateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePhraseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePhraseCompleted;
        
        public void AddUpdateTemplate(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate template) {
            base.Channel.AddUpdateTemplate(template);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateTemplate(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate template, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateTemplate(template, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateTemplate(System.IAsyncResult result) {
            base.Channel.EndAddUpdateTemplate(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate template = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate)(inValues[0]));
            return this.BeginAddUpdateTemplate(template, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateTemplate(System.IAsyncResult result) {
            this.EndAddUpdateTemplate(result);
            return null;
        }
        
        private void OnAddUpdateTemplateCompleted(object state) {
            if ((this.AddUpdateTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateTemplateAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate template) {
            this.AddUpdateTemplateAsync(template, null);
        }
        
        public void AddUpdateTemplateAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate template, object userState) {
            if ((this.onBeginAddUpdateTemplateDelegate == null)) {
                this.onBeginAddUpdateTemplateDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateTemplate);
            }
            if ((this.onEndAddUpdateTemplateDelegate == null)) {
                this.onEndAddUpdateTemplateDelegate = new EndOperationDelegate(this.OnEndAddUpdateTemplate);
            }
            if ((this.onAddUpdateTemplateCompletedDelegate == null)) {
                this.onAddUpdateTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateTemplateDelegate, new object[] {
                        template}, this.onEndAddUpdateTemplateDelegate, this.onAddUpdateTemplateCompletedDelegate, userState);
        }
        
        public void DeleteTemplate(System.Guid PayorId) {
            base.Channel.DeleteTemplate(PayorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteTemplate(System.Guid PayorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTemplate(PayorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteTemplate(System.IAsyncResult result) {
            base.Channel.EndDeleteTemplate(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            return this.BeginDeleteTemplate(PayorId, callback, asyncState);
        }
        
        private object[] OnEndDeleteTemplate(System.IAsyncResult result) {
            this.EndDeleteTemplate(result);
            return null;
        }
        
        private void OnDeleteTemplateCompleted(object state) {
            if ((this.DeleteTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTemplateAsync(System.Guid PayorId) {
            this.DeleteTemplateAsync(PayorId, null);
        }
        
        public void DeleteTemplateAsync(System.Guid PayorId, object userState) {
            if ((this.onBeginDeleteTemplateDelegate == null)) {
                this.onBeginDeleteTemplateDelegate = new BeginOperationDelegate(this.OnBeginDeleteTemplate);
            }
            if ((this.onEndDeleteTemplateDelegate == null)) {
                this.onEndDeleteTemplateDelegate = new EndOperationDelegate(this.OnEndDeleteTemplate);
            }
            if ((this.onDeleteTemplateCompletedDelegate == null)) {
                this.onDeleteTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTemplateDelegate, new object[] {
                        PayorId}, this.onEndDeleteTemplateDelegate, this.onDeleteTemplateCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate> getPayorTemplates() {
            return base.Channel.getPayorTemplates();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetPayorTemplates(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetPayorTemplates(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate> EndgetPayorTemplates(System.IAsyncResult result) {
            return base.Channel.EndgetPayorTemplates(result);
        }
        
        private System.IAsyncResult OnBegingetPayorTemplates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetPayorTemplates(callback, asyncState);
        }
        
        private object[] OnEndgetPayorTemplates(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate> retVal = this.EndgetPayorTemplates(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetPayorTemplatesCompleted(object state) {
            if ((this.getPayorTemplatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getPayorTemplatesCompleted(this, new getPayorTemplatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getPayorTemplatesAsync() {
            this.getPayorTemplatesAsync(null);
        }
        
        public void getPayorTemplatesAsync(object userState) {
            if ((this.onBegingetPayorTemplatesDelegate == null)) {
                this.onBegingetPayorTemplatesDelegate = new BeginOperationDelegate(this.OnBegingetPayorTemplates);
            }
            if ((this.onEndgetPayorTemplatesDelegate == null)) {
                this.onEndgetPayorTemplatesDelegate = new EndOperationDelegate(this.OnEndgetPayorTemplates);
            }
            if ((this.ongetPayorTemplatesCompletedDelegate == null)) {
                this.ongetPayorTemplatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetPayorTemplatesCompleted);
            }
            base.InvokeAsync(this.onBegingetPayorTemplatesDelegate, null, this.onEndgetPayorTemplatesDelegate, this.ongetPayorTemplatesCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate getPayorTemplate(System.Guid PayorId) {
            return base.Channel.getPayorTemplate(PayorId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetPayorTemplate(System.Guid PayorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetPayorTemplate(PayorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate EndgetPayorTemplate(System.IAsyncResult result) {
            return base.Channel.EndgetPayorTemplate(result);
        }
        
        private System.IAsyncResult OnBegingetPayorTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorId = ((System.Guid)(inValues[0]));
            return this.BegingetPayorTemplate(PayorId, callback, asyncState);
        }
        
        private object[] OnEndgetPayorTemplate(System.IAsyncResult result) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorTemplate retVal = this.EndgetPayorTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetPayorTemplateCompleted(object state) {
            if ((this.getPayorTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getPayorTemplateCompleted(this, new getPayorTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getPayorTemplateAsync(System.Guid PayorId) {
            this.getPayorTemplateAsync(PayorId, null);
        }
        
        public void getPayorTemplateAsync(System.Guid PayorId, object userState) {
            if ((this.onBegingetPayorTemplateDelegate == null)) {
                this.onBegingetPayorTemplateDelegate = new BeginOperationDelegate(this.OnBegingetPayorTemplate);
            }
            if ((this.onEndgetPayorTemplateDelegate == null)) {
                this.onEndgetPayorTemplateDelegate = new EndOperationDelegate(this.OnEndgetPayorTemplate);
            }
            if ((this.ongetPayorTemplateCompletedDelegate == null)) {
                this.ongetPayorTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetPayorTemplateCompleted);
            }
            base.InvokeAsync(this.onBegingetPayorTemplateDelegate, new object[] {
                        PayorId}, this.onEndgetPayorTemplateDelegate, this.ongetPayorTemplateCompletedDelegate, userState);
        }
        
        public bool AddUpdateImportToolPayorTemplate(System.Guid SelectedPayorID, System.Guid SelectedtempID, string strTemName, bool isDeleted, bool isForceImport, string strCommandType) {
            return base.Channel.AddUpdateImportToolPayorTemplate(SelectedPayorID, SelectedtempID, strTemName, isDeleted, isForceImport, strCommandType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateImportToolPayorTemplate(System.Guid SelectedPayorID, System.Guid SelectedtempID, string strTemName, bool isDeleted, bool isForceImport, string strCommandType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateImportToolPayorTemplate(SelectedPayorID, SelectedtempID, strTemName, isDeleted, isForceImport, strCommandType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddUpdateImportToolPayorTemplate(System.IAsyncResult result) {
            return base.Channel.EndAddUpdateImportToolPayorTemplate(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateImportToolPayorTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid SelectedPayorID = ((System.Guid)(inValues[0]));
            System.Guid SelectedtempID = ((System.Guid)(inValues[1]));
            string strTemName = ((string)(inValues[2]));
            bool isDeleted = ((bool)(inValues[3]));
            bool isForceImport = ((bool)(inValues[4]));
            string strCommandType = ((string)(inValues[5]));
            return this.BeginAddUpdateImportToolPayorTemplate(SelectedPayorID, SelectedtempID, strTemName, isDeleted, isForceImport, strCommandType, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateImportToolPayorTemplate(System.IAsyncResult result) {
            bool retVal = this.EndAddUpdateImportToolPayorTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdateImportToolPayorTemplateCompleted(object state) {
            if ((this.AddUpdateImportToolPayorTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateImportToolPayorTemplateCompleted(this, new AddUpdateImportToolPayorTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateImportToolPayorTemplateAsync(System.Guid SelectedPayorID, System.Guid SelectedtempID, string strTemName, bool isDeleted, bool isForceImport, string strCommandType) {
            this.AddUpdateImportToolPayorTemplateAsync(SelectedPayorID, SelectedtempID, strTemName, isDeleted, isForceImport, strCommandType, null);
        }
        
        public void AddUpdateImportToolPayorTemplateAsync(System.Guid SelectedPayorID, System.Guid SelectedtempID, string strTemName, bool isDeleted, bool isForceImport, string strCommandType, object userState) {
            if ((this.onBeginAddUpdateImportToolPayorTemplateDelegate == null)) {
                this.onBeginAddUpdateImportToolPayorTemplateDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateImportToolPayorTemplate);
            }
            if ((this.onEndAddUpdateImportToolPayorTemplateDelegate == null)) {
                this.onEndAddUpdateImportToolPayorTemplateDelegate = new EndOperationDelegate(this.OnEndAddUpdateImportToolPayorTemplate);
            }
            if ((this.onAddUpdateImportToolPayorTemplateCompletedDelegate == null)) {
                this.onAddUpdateImportToolPayorTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateImportToolPayorTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateImportToolPayorTemplateDelegate, new object[] {
                        SelectedPayorID,
                        SelectedtempID,
                        strTemName,
                        isDeleted,
                        isForceImport,
                        strCommandType}, this.onEndAddUpdateImportToolPayorTemplateDelegate, this.onAddUpdateImportToolPayorTemplateCompletedDelegate, userState);
        }
        
        public bool ValidateTemplateName(System.Guid SelectedPayorID, System.Guid SelectedTempID, string strTempName, bool isDeleted, bool isForceImport) {
            return base.Channel.ValidateTemplateName(SelectedPayorID, SelectedTempID, strTempName, isDeleted, isForceImport);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateTemplateName(System.Guid SelectedPayorID, System.Guid SelectedTempID, string strTempName, bool isDeleted, bool isForceImport, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateTemplateName(SelectedPayorID, SelectedTempID, strTempName, isDeleted, isForceImport, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndValidateTemplateName(System.IAsyncResult result) {
            return base.Channel.EndValidateTemplateName(result);
        }
        
        private System.IAsyncResult OnBeginValidateTemplateName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid SelectedPayorID = ((System.Guid)(inValues[0]));
            System.Guid SelectedTempID = ((System.Guid)(inValues[1]));
            string strTempName = ((string)(inValues[2]));
            bool isDeleted = ((bool)(inValues[3]));
            bool isForceImport = ((bool)(inValues[4]));
            return this.BeginValidateTemplateName(SelectedPayorID, SelectedTempID, strTempName, isDeleted, isForceImport, callback, asyncState);
        }
        
        private object[] OnEndValidateTemplateName(System.IAsyncResult result) {
            bool retVal = this.EndValidateTemplateName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateTemplateNameCompleted(object state) {
            if ((this.ValidateTemplateNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateTemplateNameCompleted(this, new ValidateTemplateNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateTemplateNameAsync(System.Guid SelectedPayorID, System.Guid SelectedTempID, string strTempName, bool isDeleted, bool isForceImport) {
            this.ValidateTemplateNameAsync(SelectedPayorID, SelectedTempID, strTempName, isDeleted, isForceImport, null);
        }
        
        public void ValidateTemplateNameAsync(System.Guid SelectedPayorID, System.Guid SelectedTempID, string strTempName, bool isDeleted, bool isForceImport, object userState) {
            if ((this.onBeginValidateTemplateNameDelegate == null)) {
                this.onBeginValidateTemplateNameDelegate = new BeginOperationDelegate(this.OnBeginValidateTemplateName);
            }
            if ((this.onEndValidateTemplateNameDelegate == null)) {
                this.onEndValidateTemplateNameDelegate = new EndOperationDelegate(this.OnEndValidateTemplateName);
            }
            if ((this.onValidateTemplateNameCompletedDelegate == null)) {
                this.onValidateTemplateNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateTemplateNameCompleted);
            }
            base.InvokeAsync(this.onBeginValidateTemplateNameDelegate, new object[] {
                        SelectedPayorID,
                        SelectedTempID,
                        strTempName,
                        isDeleted,
                        isForceImport}, this.onEndValidateTemplateNameDelegate, this.onValidateTemplateNameCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> GetImportToolPayorTemplate(System.Guid SelectedPayorID) {
            return base.Channel.GetImportToolPayorTemplate(SelectedPayorID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetImportToolPayorTemplate(System.Guid SelectedPayorID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetImportToolPayorTemplate(SelectedPayorID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> EndGetImportToolPayorTemplate(System.IAsyncResult result) {
            return base.Channel.EndGetImportToolPayorTemplate(result);
        }
        
        private System.IAsyncResult OnBeginGetImportToolPayorTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid SelectedPayorID = ((System.Guid)(inValues[0]));
            return this.BeginGetImportToolPayorTemplate(SelectedPayorID, callback, asyncState);
        }
        
        private object[] OnEndGetImportToolPayorTemplate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> retVal = this.EndGetImportToolPayorTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetImportToolPayorTemplateCompleted(object state) {
            if ((this.GetImportToolPayorTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetImportToolPayorTemplateCompleted(this, new GetImportToolPayorTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetImportToolPayorTemplateAsync(System.Guid SelectedPayorID) {
            this.GetImportToolPayorTemplateAsync(SelectedPayorID, null);
        }
        
        public void GetImportToolPayorTemplateAsync(System.Guid SelectedPayorID, object userState) {
            if ((this.onBeginGetImportToolPayorTemplateDelegate == null)) {
                this.onBeginGetImportToolPayorTemplateDelegate = new BeginOperationDelegate(this.OnBeginGetImportToolPayorTemplate);
            }
            if ((this.onEndGetImportToolPayorTemplateDelegate == null)) {
                this.onEndGetImportToolPayorTemplateDelegate = new EndOperationDelegate(this.OnEndGetImportToolPayorTemplate);
            }
            if ((this.onGetImportToolPayorTemplateCompletedDelegate == null)) {
                this.onGetImportToolPayorTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetImportToolPayorTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginGetImportToolPayorTemplateDelegate, new object[] {
                        SelectedPayorID}, this.onEndGetImportToolPayorTemplateDelegate, this.onGetImportToolPayorTemplateCompletedDelegate, userState);
        }
        
        public bool deleteImportToolPayorTemplate(MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate SelectedPayortempalate) {
            return base.Channel.deleteImportToolPayorTemplate(SelectedPayortempalate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegindeleteImportToolPayorTemplate(MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate SelectedPayortempalate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindeleteImportToolPayorTemplate(SelectedPayortempalate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EnddeleteImportToolPayorTemplate(System.IAsyncResult result) {
            return base.Channel.EnddeleteImportToolPayorTemplate(result);
        }
        
        private System.IAsyncResult OnBegindeleteImportToolPayorTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate SelectedPayortempalate = ((MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate)(inValues[0]));
            return this.BegindeleteImportToolPayorTemplate(SelectedPayortempalate, callback, asyncState);
        }
        
        private object[] OnEnddeleteImportToolPayorTemplate(System.IAsyncResult result) {
            bool retVal = this.EnddeleteImportToolPayorTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OndeleteImportToolPayorTemplateCompleted(object state) {
            if ((this.deleteImportToolPayorTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.deleteImportToolPayorTemplateCompleted(this, new deleteImportToolPayorTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void deleteImportToolPayorTemplateAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate SelectedPayortempalate) {
            this.deleteImportToolPayorTemplateAsync(SelectedPayortempalate, null);
        }
        
        public void deleteImportToolPayorTemplateAsync(MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate SelectedPayortempalate, object userState) {
            if ((this.onBegindeleteImportToolPayorTemplateDelegate == null)) {
                this.onBegindeleteImportToolPayorTemplateDelegate = new BeginOperationDelegate(this.OnBegindeleteImportToolPayorTemplate);
            }
            if ((this.onEnddeleteImportToolPayorTemplateDelegate == null)) {
                this.onEnddeleteImportToolPayorTemplateDelegate = new EndOperationDelegate(this.OnEnddeleteImportToolPayorTemplate);
            }
            if ((this.ondeleteImportToolPayorTemplateCompletedDelegate == null)) {
                this.ondeleteImportToolPayorTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndeleteImportToolPayorTemplateCompleted);
            }
            base.InvokeAsync(this.onBegindeleteImportToolPayorTemplateDelegate, new object[] {
                        SelectedPayortempalate}, this.onEnddeleteImportToolPayorTemplateDelegate, this.ondeleteImportToolPayorTemplateCompletedDelegate, userState);
        }
        
        public bool AddUpdateImportToolPayorPhrase(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase objImportToolPayorPhrase) {
            return base.Channel.AddUpdateImportToolPayorPhrase(objImportToolPayorPhrase);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateImportToolPayorPhrase(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase objImportToolPayorPhrase, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateImportToolPayorPhrase(objImportToolPayorPhrase, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddUpdateImportToolPayorPhrase(System.IAsyncResult result) {
            return base.Channel.EndAddUpdateImportToolPayorPhrase(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateImportToolPayorPhrase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase objImportToolPayorPhrase = ((MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase)(inValues[0]));
            return this.BeginAddUpdateImportToolPayorPhrase(objImportToolPayorPhrase, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateImportToolPayorPhrase(System.IAsyncResult result) {
            bool retVal = this.EndAddUpdateImportToolPayorPhrase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdateImportToolPayorPhraseCompleted(object state) {
            if ((this.AddUpdateImportToolPayorPhraseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateImportToolPayorPhraseCompleted(this, new AddUpdateImportToolPayorPhraseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateImportToolPayorPhraseAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase objImportToolPayorPhrase) {
            this.AddUpdateImportToolPayorPhraseAsync(objImportToolPayorPhrase, null);
        }
        
        public void AddUpdateImportToolPayorPhraseAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase objImportToolPayorPhrase, object userState) {
            if ((this.onBeginAddUpdateImportToolPayorPhraseDelegate == null)) {
                this.onBeginAddUpdateImportToolPayorPhraseDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateImportToolPayorPhrase);
            }
            if ((this.onEndAddUpdateImportToolPayorPhraseDelegate == null)) {
                this.onEndAddUpdateImportToolPayorPhraseDelegate = new EndOperationDelegate(this.OnEndAddUpdateImportToolPayorPhrase);
            }
            if ((this.onAddUpdateImportToolPayorPhraseCompletedDelegate == null)) {
                this.onAddUpdateImportToolPayorPhraseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateImportToolPayorPhraseCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateImportToolPayorPhraseDelegate, new object[] {
                        objImportToolPayorPhrase}, this.onEndAddUpdateImportToolPayorPhraseDelegate, this.onAddUpdateImportToolPayorPhraseCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase> CheckAvailability(string strPhrase) {
            return base.Channel.CheckAvailability(strPhrase);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckAvailability(string strPhrase, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckAvailability(strPhrase, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase> EndCheckAvailability(System.IAsyncResult result) {
            return base.Channel.EndCheckAvailability(result);
        }
        
        private System.IAsyncResult OnBeginCheckAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strPhrase = ((string)(inValues[0]));
            return this.BeginCheckAvailability(strPhrase, callback, asyncState);
        }
        
        private object[] OnEndCheckAvailability(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase> retVal = this.EndCheckAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckAvailabilityCompleted(object state) {
            if ((this.CheckAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckAvailabilityCompleted(this, new CheckAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckAvailabilityAsync(string strPhrase) {
            this.CheckAvailabilityAsync(strPhrase, null);
        }
        
        public void CheckAvailabilityAsync(string strPhrase, object userState) {
            if ((this.onBeginCheckAvailabilityDelegate == null)) {
                this.onBeginCheckAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginCheckAvailability);
            }
            if ((this.onEndCheckAvailabilityDelegate == null)) {
                this.onEndCheckAvailabilityDelegate = new EndOperationDelegate(this.OnEndCheckAvailability);
            }
            if ((this.onCheckAvailabilityCompletedDelegate == null)) {
                this.onCheckAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginCheckAvailabilityDelegate, new object[] {
                        strPhrase}, this.onEndCheckAvailabilityDelegate, this.onCheckAvailabilityCompletedDelegate, userState);
        }
        
        public bool AddUpdateImportToolStatementDataSettings(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings objImportToolStatementDataSettings) {
            return base.Channel.AddUpdateImportToolStatementDataSettings(objImportToolStatementDataSettings);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateImportToolStatementDataSettings(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings objImportToolStatementDataSettings, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateImportToolStatementDataSettings(objImportToolStatementDataSettings, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddUpdateImportToolStatementDataSettings(System.IAsyncResult result) {
            return base.Channel.EndAddUpdateImportToolStatementDataSettings(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateImportToolStatementDataSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings objImportToolStatementDataSettings = ((MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings)(inValues[0]));
            return this.BeginAddUpdateImportToolStatementDataSettings(objImportToolStatementDataSettings, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateImportToolStatementDataSettings(System.IAsyncResult result) {
            bool retVal = this.EndAddUpdateImportToolStatementDataSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUpdateImportToolStatementDataSettingsCompleted(object state) {
            if ((this.AddUpdateImportToolStatementDataSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateImportToolStatementDataSettingsCompleted(this, new AddUpdateImportToolStatementDataSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateImportToolStatementDataSettingsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings objImportToolStatementDataSettings) {
            this.AddUpdateImportToolStatementDataSettingsAsync(objImportToolStatementDataSettings, null);
        }
        
        public void AddUpdateImportToolStatementDataSettingsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings objImportToolStatementDataSettings, object userState) {
            if ((this.onBeginAddUpdateImportToolStatementDataSettingsDelegate == null)) {
                this.onBeginAddUpdateImportToolStatementDataSettingsDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateImportToolStatementDataSettings);
            }
            if ((this.onEndAddUpdateImportToolStatementDataSettingsDelegate == null)) {
                this.onEndAddUpdateImportToolStatementDataSettingsDelegate = new EndOperationDelegate(this.OnEndAddUpdateImportToolStatementDataSettings);
            }
            if ((this.onAddUpdateImportToolStatementDataSettingsCompletedDelegate == null)) {
                this.onAddUpdateImportToolStatementDataSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateImportToolStatementDataSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateImportToolStatementDataSettingsDelegate, new object[] {
                        objImportToolStatementDataSettings}, this.onEndAddUpdateImportToolStatementDataSettingsDelegate, this.onAddUpdateImportToolStatementDataSettingsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings> GetAllImportToolStatementDataSettings(System.Guid PayorID, System.Guid templateID) {
            return base.Channel.GetAllImportToolStatementDataSettings(PayorID, templateID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllImportToolStatementDataSettings(System.Guid PayorID, System.Guid templateID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllImportToolStatementDataSettings(PayorID, templateID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings> EndGetAllImportToolStatementDataSettings(System.IAsyncResult result) {
            return base.Channel.EndGetAllImportToolStatementDataSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetAllImportToolStatementDataSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorID = ((System.Guid)(inValues[0]));
            System.Guid templateID = ((System.Guid)(inValues[1]));
            return this.BeginGetAllImportToolStatementDataSettings(PayorID, templateID, callback, asyncState);
        }
        
        private object[] OnEndGetAllImportToolStatementDataSettings(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings> retVal = this.EndGetAllImportToolStatementDataSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllImportToolStatementDataSettingsCompleted(object state) {
            if ((this.GetAllImportToolStatementDataSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllImportToolStatementDataSettingsCompleted(this, new GetAllImportToolStatementDataSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllImportToolStatementDataSettingsAsync(System.Guid PayorID, System.Guid templateID) {
            this.GetAllImportToolStatementDataSettingsAsync(PayorID, templateID, null);
        }
        
        public void GetAllImportToolStatementDataSettingsAsync(System.Guid PayorID, System.Guid templateID, object userState) {
            if ((this.onBeginGetAllImportToolStatementDataSettingsDelegate == null)) {
                this.onBeginGetAllImportToolStatementDataSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetAllImportToolStatementDataSettings);
            }
            if ((this.onEndGetAllImportToolStatementDataSettingsDelegate == null)) {
                this.onEndGetAllImportToolStatementDataSettingsDelegate = new EndOperationDelegate(this.OnEndGetAllImportToolStatementDataSettings);
            }
            if ((this.onGetAllImportToolStatementDataSettingsCompletedDelegate == null)) {
                this.onGetAllImportToolStatementDataSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllImportToolStatementDataSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllImportToolStatementDataSettingsDelegate, new object[] {
                        PayorID,
                        templateID}, this.onEndGetAllImportToolStatementDataSettingsDelegate, this.onGetAllImportToolStatementDataSettingsCompletedDelegate, userState);
        }
        
        public string ValidatePhraseAvailbility(string strPhrase) {
            return base.Channel.ValidatePhraseAvailbility(strPhrase);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidatePhraseAvailbility(string strPhrase, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidatePhraseAvailbility(strPhrase, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndValidatePhraseAvailbility(System.IAsyncResult result) {
            return base.Channel.EndValidatePhraseAvailbility(result);
        }
        
        private System.IAsyncResult OnBeginValidatePhraseAvailbility(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strPhrase = ((string)(inValues[0]));
            return this.BeginValidatePhraseAvailbility(strPhrase, callback, asyncState);
        }
        
        private object[] OnEndValidatePhraseAvailbility(System.IAsyncResult result) {
            string retVal = this.EndValidatePhraseAvailbility(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidatePhraseAvailbilityCompleted(object state) {
            if ((this.ValidatePhraseAvailbilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidatePhraseAvailbilityCompleted(this, new ValidatePhraseAvailbilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidatePhraseAvailbilityAsync(string strPhrase) {
            this.ValidatePhraseAvailbilityAsync(strPhrase, null);
        }
        
        public void ValidatePhraseAvailbilityAsync(string strPhrase, object userState) {
            if ((this.onBeginValidatePhraseAvailbilityDelegate == null)) {
                this.onBeginValidatePhraseAvailbilityDelegate = new BeginOperationDelegate(this.OnBeginValidatePhraseAvailbility);
            }
            if ((this.onEndValidatePhraseAvailbilityDelegate == null)) {
                this.onEndValidatePhraseAvailbilityDelegate = new EndOperationDelegate(this.OnEndValidatePhraseAvailbility);
            }
            if ((this.onValidatePhraseAvailbilityCompletedDelegate == null)) {
                this.onValidatePhraseAvailbilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidatePhraseAvailbilityCompleted);
            }
            base.InvokeAsync(this.onBeginValidatePhraseAvailbilityDelegate, new object[] {
                        strPhrase}, this.onEndValidatePhraseAvailbilityDelegate, this.onValidatePhraseAvailbilityCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.MaskFieldTypes> AllMaskType() {
            return base.Channel.AllMaskType();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAllMaskType(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAllMaskType(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.MaskFieldTypes> EndAllMaskType(System.IAsyncResult result) {
            return base.Channel.EndAllMaskType(result);
        }
        
        private System.IAsyncResult OnBeginAllMaskType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAllMaskType(callback, asyncState);
        }
        
        private object[] OnEndAllMaskType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.MaskFieldTypes> retVal = this.EndAllMaskType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAllMaskTypeCompleted(object state) {
            if ((this.AllMaskTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AllMaskTypeCompleted(this, new AllMaskTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AllMaskTypeAsync() {
            this.AllMaskTypeAsync(null);
        }
        
        public void AllMaskTypeAsync(object userState) {
            if ((this.onBeginAllMaskTypeDelegate == null)) {
                this.onBeginAllMaskTypeDelegate = new BeginOperationDelegate(this.OnBeginAllMaskType);
            }
            if ((this.onEndAllMaskTypeDelegate == null)) {
                this.onEndAllMaskTypeDelegate = new EndOperationDelegate(this.OnEndAllMaskType);
            }
            if ((this.onAllMaskTypeCompletedDelegate == null)) {
                this.onAllMaskTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAllMaskTypeCompleted);
            }
            base.InvokeAsync(this.onBeginAllMaskTypeDelegate, null, this.onEndAllMaskTypeDelegate, this.onAllMaskTypeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.TranslatorTypes> AllTranslatorType() {
            return base.Channel.AllTranslatorType();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAllTranslatorType(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAllTranslatorType(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.TranslatorTypes> EndAllTranslatorType(System.IAsyncResult result) {
            return base.Channel.EndAllTranslatorType(result);
        }
        
        private System.IAsyncResult OnBeginAllTranslatorType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAllTranslatorType(callback, asyncState);
        }
        
        private object[] OnEndAllTranslatorType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.TranslatorTypes> retVal = this.EndAllTranslatorType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAllTranslatorTypeCompleted(object state) {
            if ((this.AllTranslatorTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AllTranslatorTypeCompleted(this, new AllTranslatorTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AllTranslatorTypeAsync() {
            this.AllTranslatorTypeAsync(null);
        }
        
        public void AllTranslatorTypeAsync(object userState) {
            if ((this.onBeginAllTranslatorTypeDelegate == null)) {
                this.onBeginAllTranslatorTypeDelegate = new BeginOperationDelegate(this.OnBeginAllTranslatorType);
            }
            if ((this.onEndAllTranslatorTypeDelegate == null)) {
                this.onEndAllTranslatorTypeDelegate = new EndOperationDelegate(this.OnEndAllTranslatorType);
            }
            if ((this.onAllTranslatorTypeCompletedDelegate == null)) {
                this.onAllTranslatorTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAllTranslatorTypeCompleted);
            }
            base.InvokeAsync(this.onBeginAllTranslatorTypeDelegate, null, this.onEndAllTranslatorTypeDelegate, this.onAllTranslatorTypeCompletedDelegate, userState);
        }
        
        public void AddUpdatePaymentDataFieldsSetting(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings objImportToolPaymentDataFieldsSettings) {
            base.Channel.AddUpdatePaymentDataFieldsSetting(objImportToolPaymentDataFieldsSettings);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePaymentDataFieldsSetting(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings objImportToolPaymentDataFieldsSettings, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePaymentDataFieldsSetting(objImportToolPaymentDataFieldsSettings, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePaymentDataFieldsSetting(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePaymentDataFieldsSetting(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePaymentDataFieldsSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings objImportToolPaymentDataFieldsSettings = ((MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings)(inValues[0]));
            return this.BeginAddUpdatePaymentDataFieldsSetting(objImportToolPaymentDataFieldsSettings, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePaymentDataFieldsSetting(System.IAsyncResult result) {
            this.EndAddUpdatePaymentDataFieldsSetting(result);
            return null;
        }
        
        private void OnAddUpdatePaymentDataFieldsSettingCompleted(object state) {
            if ((this.AddUpdatePaymentDataFieldsSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePaymentDataFieldsSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePaymentDataFieldsSettingAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings objImportToolPaymentDataFieldsSettings) {
            this.AddUpdatePaymentDataFieldsSettingAsync(objImportToolPaymentDataFieldsSettings, null);
        }
        
        public void AddUpdatePaymentDataFieldsSettingAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings objImportToolPaymentDataFieldsSettings, object userState) {
            if ((this.onBeginAddUpdatePaymentDataFieldsSettingDelegate == null)) {
                this.onBeginAddUpdatePaymentDataFieldsSettingDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePaymentDataFieldsSetting);
            }
            if ((this.onEndAddUpdatePaymentDataFieldsSettingDelegate == null)) {
                this.onEndAddUpdatePaymentDataFieldsSettingDelegate = new EndOperationDelegate(this.OnEndAddUpdatePaymentDataFieldsSetting);
            }
            if ((this.onAddUpdatePaymentDataFieldsSettingCompletedDelegate == null)) {
                this.onAddUpdatePaymentDataFieldsSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePaymentDataFieldsSettingCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePaymentDataFieldsSettingDelegate, new object[] {
                        objImportToolPaymentDataFieldsSettings}, this.onEndAddUpdatePaymentDataFieldsSettingDelegate, this.onAddUpdatePaymentDataFieldsSettingCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings> LoadImportToolStatementDataSetting() {
            return base.Channel.LoadImportToolStatementDataSetting();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadImportToolStatementDataSetting(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadImportToolStatementDataSetting(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings> EndLoadImportToolStatementDataSetting(System.IAsyncResult result) {
            return base.Channel.EndLoadImportToolStatementDataSetting(result);
        }
        
        private System.IAsyncResult OnBeginLoadImportToolStatementDataSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadImportToolStatementDataSetting(callback, asyncState);
        }
        
        private object[] OnEndLoadImportToolStatementDataSetting(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolStatementDataSettings> retVal = this.EndLoadImportToolStatementDataSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadImportToolStatementDataSettingCompleted(object state) {
            if ((this.LoadImportToolStatementDataSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadImportToolStatementDataSettingCompleted(this, new LoadImportToolStatementDataSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadImportToolStatementDataSettingAsync() {
            this.LoadImportToolStatementDataSettingAsync(null);
        }
        
        public void LoadImportToolStatementDataSettingAsync(object userState) {
            if ((this.onBeginLoadImportToolStatementDataSettingDelegate == null)) {
                this.onBeginLoadImportToolStatementDataSettingDelegate = new BeginOperationDelegate(this.OnBeginLoadImportToolStatementDataSetting);
            }
            if ((this.onEndLoadImportToolStatementDataSettingDelegate == null)) {
                this.onEndLoadImportToolStatementDataSettingDelegate = new EndOperationDelegate(this.OnEndLoadImportToolStatementDataSetting);
            }
            if ((this.onLoadImportToolStatementDataSettingCompletedDelegate == null)) {
                this.onLoadImportToolStatementDataSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadImportToolStatementDataSettingCompleted);
            }
            base.InvokeAsync(this.onBeginLoadImportToolStatementDataSettingDelegate, null, this.onEndLoadImportToolStatementDataSettingDelegate, this.onLoadImportToolStatementDataSettingCompletedDelegate, userState);
        }
        
        public void AddUpdatePaymentData(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData) {
            base.Channel.AddUpdatePaymentData(objImportToolSeletedPaymentData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdatePaymentData(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdatePaymentData(objImportToolSeletedPaymentData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdatePaymentData(System.IAsyncResult result) {
            base.Channel.EndAddUpdatePaymentData(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdatePaymentData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData = ((MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData)(inValues[0]));
            return this.BeginAddUpdatePaymentData(objImportToolSeletedPaymentData, callback, asyncState);
        }
        
        private object[] OnEndAddUpdatePaymentData(System.IAsyncResult result) {
            this.EndAddUpdatePaymentData(result);
            return null;
        }
        
        private void OnAddUpdatePaymentDataCompleted(object state) {
            if ((this.AddUpdatePaymentDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdatePaymentDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdatePaymentDataAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData) {
            this.AddUpdatePaymentDataAsync(objImportToolSeletedPaymentData, null);
        }
        
        public void AddUpdatePaymentDataAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData, object userState) {
            if ((this.onBeginAddUpdatePaymentDataDelegate == null)) {
                this.onBeginAddUpdatePaymentDataDelegate = new BeginOperationDelegate(this.OnBeginAddUpdatePaymentData);
            }
            if ((this.onEndAddUpdatePaymentDataDelegate == null)) {
                this.onEndAddUpdatePaymentDataDelegate = new EndOperationDelegate(this.OnEndAddUpdatePaymentData);
            }
            if ((this.onAddUpdatePaymentDataCompletedDelegate == null)) {
                this.onAddUpdatePaymentDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdatePaymentDataCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdatePaymentDataDelegate, new object[] {
                        objImportToolSeletedPaymentData}, this.onEndAddUpdatePaymentDataDelegate, this.onAddUpdatePaymentDataCompletedDelegate, userState);
        }
        
        public void DeletePaymentData(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData) {
            base.Channel.DeletePaymentData(objImportToolSeletedPaymentData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePaymentData(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePaymentData(objImportToolSeletedPaymentData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePaymentData(System.IAsyncResult result) {
            base.Channel.EndDeletePaymentData(result);
        }
        
        private System.IAsyncResult OnBeginDeletePaymentData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData = ((MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData)(inValues[0]));
            return this.BeginDeletePaymentData(objImportToolSeletedPaymentData, callback, asyncState);
        }
        
        private object[] OnEndDeletePaymentData(System.IAsyncResult result) {
            this.EndDeletePaymentData(result);
            return null;
        }
        
        private void OnDeletePaymentDataCompleted(object state) {
            if ((this.DeletePaymentDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePaymentDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePaymentDataAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData) {
            this.DeletePaymentDataAsync(objImportToolSeletedPaymentData, null);
        }
        
        public void DeletePaymentDataAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData, object userState) {
            if ((this.onBeginDeletePaymentDataDelegate == null)) {
                this.onBeginDeletePaymentDataDelegate = new BeginOperationDelegate(this.OnBeginDeletePaymentData);
            }
            if ((this.onEndDeletePaymentDataDelegate == null)) {
                this.onEndDeletePaymentDataDelegate = new EndOperationDelegate(this.OnEndDeletePaymentData);
            }
            if ((this.onDeletePaymentDataCompletedDelegate == null)) {
                this.onDeletePaymentDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePaymentDataCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePaymentDataDelegate, new object[] {
                        objImportToolSeletedPaymentData}, this.onEndDeletePaymentDataDelegate, this.onDeletePaymentDataCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData> LoadImportToolSeletedPaymentData(System.Guid PayorID, System.Guid TemplateID) {
            return base.Channel.LoadImportToolSeletedPaymentData(PayorID, TemplateID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadImportToolSeletedPaymentData(System.Guid PayorID, System.Guid TemplateID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadImportToolSeletedPaymentData(PayorID, TemplateID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData> EndLoadImportToolSeletedPaymentData(System.IAsyncResult result) {
            return base.Channel.EndLoadImportToolSeletedPaymentData(result);
        }
        
        private System.IAsyncResult OnBeginLoadImportToolSeletedPaymentData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorID = ((System.Guid)(inValues[0]));
            System.Guid TemplateID = ((System.Guid)(inValues[1]));
            return this.BeginLoadImportToolSeletedPaymentData(PayorID, TemplateID, callback, asyncState);
        }
        
        private object[] OnEndLoadImportToolSeletedPaymentData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData> retVal = this.EndLoadImportToolSeletedPaymentData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadImportToolSeletedPaymentDataCompleted(object state) {
            if ((this.LoadImportToolSeletedPaymentDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadImportToolSeletedPaymentDataCompleted(this, new LoadImportToolSeletedPaymentDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadImportToolSeletedPaymentDataAsync(System.Guid PayorID, System.Guid TemplateID) {
            this.LoadImportToolSeletedPaymentDataAsync(PayorID, TemplateID, null);
        }
        
        public void LoadImportToolSeletedPaymentDataAsync(System.Guid PayorID, System.Guid TemplateID, object userState) {
            if ((this.onBeginLoadImportToolSeletedPaymentDataDelegate == null)) {
                this.onBeginLoadImportToolSeletedPaymentDataDelegate = new BeginOperationDelegate(this.OnBeginLoadImportToolSeletedPaymentData);
            }
            if ((this.onEndLoadImportToolSeletedPaymentDataDelegate == null)) {
                this.onEndLoadImportToolSeletedPaymentDataDelegate = new EndOperationDelegate(this.OnEndLoadImportToolSeletedPaymentData);
            }
            if ((this.onLoadImportToolSeletedPaymentDataCompletedDelegate == null)) {
                this.onLoadImportToolSeletedPaymentDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadImportToolSeletedPaymentDataCompleted);
            }
            base.InvokeAsync(this.onBeginLoadImportToolSeletedPaymentDataDelegate, new object[] {
                        PayorID,
                        TemplateID}, this.onEndLoadImportToolSeletedPaymentDataDelegate, this.onLoadImportToolSeletedPaymentDataCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings> LoadPaymentDataFieldsSetting(System.Guid PayorID, System.Guid TemplateID) {
            return base.Channel.LoadPaymentDataFieldsSetting(PayorID, TemplateID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadPaymentDataFieldsSetting(System.Guid PayorID, System.Guid TemplateID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadPaymentDataFieldsSetting(PayorID, TemplateID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings> EndLoadPaymentDataFieldsSetting(System.IAsyncResult result) {
            return base.Channel.EndLoadPaymentDataFieldsSetting(result);
        }
        
        private System.IAsyncResult OnBeginLoadPaymentDataFieldsSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid PayorID = ((System.Guid)(inValues[0]));
            System.Guid TemplateID = ((System.Guid)(inValues[1]));
            return this.BeginLoadPaymentDataFieldsSetting(PayorID, TemplateID, callback, asyncState);
        }
        
        private object[] OnEndLoadPaymentDataFieldsSetting(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPaymentDataFieldsSettings> retVal = this.EndLoadPaymentDataFieldsSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadPaymentDataFieldsSettingCompleted(object state) {
            if ((this.LoadPaymentDataFieldsSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadPaymentDataFieldsSettingCompleted(this, new LoadPaymentDataFieldsSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadPaymentDataFieldsSettingAsync(System.Guid PayorID, System.Guid TemplateID) {
            this.LoadPaymentDataFieldsSettingAsync(PayorID, TemplateID, null);
        }
        
        public void LoadPaymentDataFieldsSettingAsync(System.Guid PayorID, System.Guid TemplateID, object userState) {
            if ((this.onBeginLoadPaymentDataFieldsSettingDelegate == null)) {
                this.onBeginLoadPaymentDataFieldsSettingDelegate = new BeginOperationDelegate(this.OnBeginLoadPaymentDataFieldsSetting);
            }
            if ((this.onEndLoadPaymentDataFieldsSettingDelegate == null)) {
                this.onEndLoadPaymentDataFieldsSettingDelegate = new EndOperationDelegate(this.OnEndLoadPaymentDataFieldsSetting);
            }
            if ((this.onLoadPaymentDataFieldsSettingCompletedDelegate == null)) {
                this.onLoadPaymentDataFieldsSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadPaymentDataFieldsSettingCompleted);
            }
            base.InvokeAsync(this.onBeginLoadPaymentDataFieldsSettingDelegate, new object[] {
                        PayorID,
                        TemplateID}, this.onEndLoadPaymentDataFieldsSettingDelegate, this.onLoadPaymentDataFieldsSettingCompletedDelegate, userState);
        }
        
        public void DuplicateSelectedPaymentData(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData) {
            base.Channel.DuplicateSelectedPaymentData(objImportToolSeletedPaymentData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDuplicateSelectedPaymentData(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDuplicateSelectedPaymentData(objImportToolSeletedPaymentData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDuplicateSelectedPaymentData(System.IAsyncResult result) {
            base.Channel.EndDuplicateSelectedPaymentData(result);
        }
        
        private System.IAsyncResult OnBeginDuplicateSelectedPaymentData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData = ((MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData)(inValues[0]));
            return this.BeginDuplicateSelectedPaymentData(objImportToolSeletedPaymentData, callback, asyncState);
        }
        
        private object[] OnEndDuplicateSelectedPaymentData(System.IAsyncResult result) {
            this.EndDuplicateSelectedPaymentData(result);
            return null;
        }
        
        private void OnDuplicateSelectedPaymentDataCompleted(object state) {
            if ((this.DuplicateSelectedPaymentDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DuplicateSelectedPaymentDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DuplicateSelectedPaymentDataAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData) {
            this.DuplicateSelectedPaymentDataAsync(objImportToolSeletedPaymentData, null);
        }
        
        public void DuplicateSelectedPaymentDataAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolSeletedPaymentData objImportToolSeletedPaymentData, object userState) {
            if ((this.onBeginDuplicateSelectedPaymentDataDelegate == null)) {
                this.onBeginDuplicateSelectedPaymentDataDelegate = new BeginOperationDelegate(this.OnBeginDuplicateSelectedPaymentData);
            }
            if ((this.onEndDuplicateSelectedPaymentDataDelegate == null)) {
                this.onEndDuplicateSelectedPaymentDataDelegate = new EndOperationDelegate(this.OnEndDuplicateSelectedPaymentData);
            }
            if ((this.onDuplicateSelectedPaymentDataCompletedDelegate == null)) {
                this.onDuplicateSelectedPaymentDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDuplicateSelectedPaymentDataCompleted);
            }
            base.InvokeAsync(this.onBeginDuplicateSelectedPaymentDataDelegate, new object[] {
                        objImportToolSeletedPaymentData}, this.onEndDuplicateSelectedPaymentDataDelegate, this.onDuplicateSelectedPaymentDataCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase> GetAllTemplatePhraseOnTemplate() {
            return base.Channel.GetAllTemplatePhraseOnTemplate();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllTemplatePhraseOnTemplate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTemplatePhraseOnTemplate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase> EndGetAllTemplatePhraseOnTemplate(System.IAsyncResult result) {
            return base.Channel.EndGetAllTemplatePhraseOnTemplate(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTemplatePhraseOnTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllTemplatePhraseOnTemplate(callback, asyncState);
        }
        
        private object[] OnEndGetAllTemplatePhraseOnTemplate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolPayorPhrase> retVal = this.EndGetAllTemplatePhraseOnTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTemplatePhraseOnTemplateCompleted(object state) {
            if ((this.GetAllTemplatePhraseOnTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTemplatePhraseOnTemplateCompleted(this, new GetAllTemplatePhraseOnTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTemplatePhraseOnTemplateAsync() {
            this.GetAllTemplatePhraseOnTemplateAsync(null);
        }
        
        public void GetAllTemplatePhraseOnTemplateAsync(object userState) {
            if ((this.onBeginGetAllTemplatePhraseOnTemplateDelegate == null)) {
                this.onBeginGetAllTemplatePhraseOnTemplateDelegate = new BeginOperationDelegate(this.OnBeginGetAllTemplatePhraseOnTemplate);
            }
            if ((this.onEndGetAllTemplatePhraseOnTemplateDelegate == null)) {
                this.onEndGetAllTemplatePhraseOnTemplateDelegate = new EndOperationDelegate(this.OnEndGetAllTemplatePhraseOnTemplate);
            }
            if ((this.onGetAllTemplatePhraseOnTemplateCompletedDelegate == null)) {
                this.onGetAllTemplatePhraseOnTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTemplatePhraseOnTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTemplatePhraseOnTemplateDelegate, null, this.onEndGetAllTemplatePhraseOnTemplateDelegate, this.onGetAllTemplatePhraseOnTemplateCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> GetAllPayorTemplate(System.Nullable<System.Guid> SelectedPayorID) {
            return base.Channel.GetAllPayorTemplate(SelectedPayorID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPayorTemplate(System.Nullable<System.Guid> SelectedPayorID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPayorTemplate(SelectedPayorID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> EndGetAllPayorTemplate(System.IAsyncResult result) {
            return base.Channel.EndGetAllPayorTemplate(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPayorTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> SelectedPayorID = ((System.Nullable<System.Guid>)(inValues[0]));
            return this.BeginGetAllPayorTemplate(SelectedPayorID, callback, asyncState);
        }
        
        private object[] OnEndGetAllPayorTemplate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.Tempalate> retVal = this.EndGetAllPayorTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPayorTemplateCompleted(object state) {
            if ((this.GetAllPayorTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPayorTemplateCompleted(this, new GetAllPayorTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPayorTemplateAsync(System.Nullable<System.Guid> SelectedPayorID) {
            this.GetAllPayorTemplateAsync(SelectedPayorID, null);
        }
        
        public void GetAllPayorTemplateAsync(System.Nullable<System.Guid> SelectedPayorID, object userState) {
            if ((this.onBeginGetAllPayorTemplateDelegate == null)) {
                this.onBeginGetAllPayorTemplateDelegate = new BeginOperationDelegate(this.OnBeginGetAllPayorTemplate);
            }
            if ((this.onEndGetAllPayorTemplateDelegate == null)) {
                this.onEndGetAllPayorTemplateDelegate = new EndOperationDelegate(this.OnEndGetAllPayorTemplate);
            }
            if ((this.onGetAllPayorTemplateCompletedDelegate == null)) {
                this.onGetAllPayorTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPayorTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPayorTemplateDelegate, new object[] {
                        SelectedPayorID}, this.onEndGetAllPayorTemplateDelegate, this.onGetAllPayorTemplateCompletedDelegate, userState);
        }
        
        public void DeletePhrase(int intID) {
            base.Channel.DeletePhrase(intID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePhrase(int intID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePhrase(intID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePhrase(System.IAsyncResult result) {
            base.Channel.EndDeletePhrase(result);
        }
        
        private System.IAsyncResult OnBeginDeletePhrase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int intID = ((int)(inValues[0]));
            return this.BeginDeletePhrase(intID, callback, asyncState);
        }
        
        private object[] OnEndDeletePhrase(System.IAsyncResult result) {
            this.EndDeletePhrase(result);
            return null;
        }
        
        private void OnDeletePhraseCompleted(object state) {
            if ((this.DeletePhraseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePhraseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePhraseAsync(int intID) {
            this.DeletePhraseAsync(intID, null);
        }
        
        public void DeletePhraseAsync(int intID, object userState) {
            if ((this.onBeginDeletePhraseDelegate == null)) {
                this.onBeginDeletePhraseDelegate = new BeginOperationDelegate(this.OnBeginDeletePhrase);
            }
            if ((this.onEndDeletePhraseDelegate == null)) {
                this.onEndDeletePhraseDelegate = new EndOperationDelegate(this.OnEndDeletePhrase);
            }
            if ((this.onDeletePhraseCompletedDelegate == null)) {
                this.onDeletePhraseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePhraseCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePhraseDelegate, new object[] {
                        intID}, this.onEndDeletePhraseDelegate, this.onDeletePhraseCompletedDelegate, userState);
        }
        
        public void UpdatePhrase(int intID, string Phrase) {
            base.Channel.UpdatePhrase(intID, Phrase);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePhrase(int intID, string Phrase, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePhrase(intID, Phrase, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdatePhrase(System.IAsyncResult result) {
            base.Channel.EndUpdatePhrase(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePhrase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int intID = ((int)(inValues[0]));
            string Phrase = ((string)(inValues[1]));
            return this.BeginUpdatePhrase(intID, Phrase, callback, asyncState);
        }
        
        private object[] OnEndUpdatePhrase(System.IAsyncResult result) {
            this.EndUpdatePhrase(result);
            return null;
        }
        
        private void OnUpdatePhraseCompleted(object state) {
            if ((this.UpdatePhraseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePhraseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePhraseAsync(int intID, string Phrase) {
            this.UpdatePhraseAsync(intID, Phrase, null);
        }
        
        public void UpdatePhraseAsync(int intID, string Phrase, object userState) {
            if ((this.onBeginUpdatePhraseDelegate == null)) {
                this.onBeginUpdatePhraseDelegate = new BeginOperationDelegate(this.OnBeginUpdatePhrase);
            }
            if ((this.onEndUpdatePhraseDelegate == null)) {
                this.onEndUpdatePhraseDelegate = new EndOperationDelegate(this.OnEndUpdatePhrase);
            }
            if ((this.onUpdatePhraseCompletedDelegate == null)) {
                this.onUpdatePhraseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePhraseCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePhraseDelegate, new object[] {
                        intID,
                        Phrase}, this.onEndUpdatePhraseDelegate, this.onUpdatePhraseCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IDisplayPayor")]
    public interface IDisplayPayor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDisplayPayor/GetDisplayPayors", ReplyAction="http://tempuri.org/IDisplayPayor/GetDisplayPayorsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor> GetDisplayPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDisplayPayor/GetDisplayPayors", ReplyAction="http://tempuri.org/IDisplayPayor/GetDisplayPayorsResponse")]
        System.IAsyncResult BeginGetDisplayPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor> EndGetDisplayPayors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDisplayPayor/GetDisplayPayorCount", ReplyAction="http://tempuri.org/IDisplayPayor/GetDisplayPayorCountResponse")]
        int GetDisplayPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDisplayPayor/GetDisplayPayorCount", ReplyAction="http://tempuri.org/IDisplayPayor/GetDisplayPayorCountResponse")]
        System.IAsyncResult BeginGetDisplayPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState);
        
        int EndGetDisplayPayorCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDisplayPayor/GetDisplayPayorsInChunk", ReplyAction="http://tempuri.org/IDisplayPayor/GetDisplayPayorsInChunkResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor> GetDisplayPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDisplayPayor/GetDisplayPayorsInChunk", ReplyAction="http://tempuri.org/IDisplayPayor/GetDisplayPayorsInChunkResponse")]
        System.IAsyncResult BeginGetDisplayPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor> EndGetDisplayPayorsInChunk(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDisplayPayorChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IDisplayPayor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDisplayPayorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDisplayPayorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDisplayPayorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDisplayPayorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDisplayPayorsInChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDisplayPayorsInChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisplayPayorClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IDisplayPayor>, MyAgencyVault.VM.MyAgencyVaultSvc.IDisplayPayor {
        
        private BeginOperationDelegate onBeginGetDisplayPayorsDelegate;
        
        private EndOperationDelegate onEndGetDisplayPayorsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDisplayPayorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDisplayPayorCountDelegate;
        
        private EndOperationDelegate onEndGetDisplayPayorCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetDisplayPayorCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDisplayPayorsInChunkDelegate;
        
        private EndOperationDelegate onEndGetDisplayPayorsInChunkDelegate;
        
        private System.Threading.SendOrPostCallback onGetDisplayPayorsInChunkCompletedDelegate;
        
        public DisplayPayorClient() {
        }
        
        public DisplayPayorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DisplayPayorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DisplayPayorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DisplayPayorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetDisplayPayorsCompletedEventArgs> GetDisplayPayorsCompleted;
        
        public event System.EventHandler<GetDisplayPayorCountCompletedEventArgs> GetDisplayPayorCountCompleted;
        
        public event System.EventHandler<GetDisplayPayorsInChunkCompletedEventArgs> GetDisplayPayorsInChunkCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor> GetDisplayPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            return base.Channel.GetDisplayPayors(LicenseeId, PayerfillInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDisplayPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDisplayPayors(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor> EndGetDisplayPayors(System.IAsyncResult result) {
            return base.Channel.EndGetDisplayPayors(result);
        }
        
        private System.IAsyncResult OnBeginGetDisplayPayors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo)(inValues[1]));
            return this.BeginGetDisplayPayors(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        private object[] OnEndGetDisplayPayors(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor> retVal = this.EndGetDisplayPayors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDisplayPayorsCompleted(object state) {
            if ((this.GetDisplayPayorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDisplayPayorsCompleted(this, new GetDisplayPayorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDisplayPayorsAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            this.GetDisplayPayorsAsync(LicenseeId, PayerfillInfo, null);
        }
        
        public void GetDisplayPayorsAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, object userState) {
            if ((this.onBeginGetDisplayPayorsDelegate == null)) {
                this.onBeginGetDisplayPayorsDelegate = new BeginOperationDelegate(this.OnBeginGetDisplayPayors);
            }
            if ((this.onEndGetDisplayPayorsDelegate == null)) {
                this.onEndGetDisplayPayorsDelegate = new EndOperationDelegate(this.OnEndGetDisplayPayors);
            }
            if ((this.onGetDisplayPayorsCompletedDelegate == null)) {
                this.onGetDisplayPayorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDisplayPayorsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDisplayPayorsDelegate, new object[] {
                        LicenseeId,
                        PayerfillInfo}, this.onEndGetDisplayPayorsDelegate, this.onGetDisplayPayorsCompletedDelegate, userState);
        }
        
        public int GetDisplayPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            return base.Channel.GetDisplayPayorCount(LicenseeId, PayerfillInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDisplayPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDisplayPayorCount(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetDisplayPayorCount(System.IAsyncResult result) {
            return base.Channel.EndGetDisplayPayorCount(result);
        }
        
        private System.IAsyncResult OnBeginGetDisplayPayorCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo)(inValues[1]));
            return this.BeginGetDisplayPayorCount(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        private object[] OnEndGetDisplayPayorCount(System.IAsyncResult result) {
            int retVal = this.EndGetDisplayPayorCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDisplayPayorCountCompleted(object state) {
            if ((this.GetDisplayPayorCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDisplayPayorCountCompleted(this, new GetDisplayPayorCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDisplayPayorCountAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            this.GetDisplayPayorCountAsync(LicenseeId, PayerfillInfo, null);
        }
        
        public void GetDisplayPayorCountAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, object userState) {
            if ((this.onBeginGetDisplayPayorCountDelegate == null)) {
                this.onBeginGetDisplayPayorCountDelegate = new BeginOperationDelegate(this.OnBeginGetDisplayPayorCount);
            }
            if ((this.onEndGetDisplayPayorCountDelegate == null)) {
                this.onEndGetDisplayPayorCountDelegate = new EndOperationDelegate(this.OnEndGetDisplayPayorCount);
            }
            if ((this.onGetDisplayPayorCountCompletedDelegate == null)) {
                this.onGetDisplayPayorCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDisplayPayorCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetDisplayPayorCountDelegate, new object[] {
                        LicenseeId,
                        PayerfillInfo}, this.onEndGetDisplayPayorCountDelegate, this.onGetDisplayPayorCountCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor> GetDisplayPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take) {
            return base.Channel.GetDisplayPayorsInChunk(LicenseeId, PayerfillInfo, skip, take);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDisplayPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDisplayPayorsInChunk(LicenseeId, PayerfillInfo, skip, take, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor> EndGetDisplayPayorsInChunk(System.IAsyncResult result) {
            return base.Channel.EndGetDisplayPayorsInChunk(result);
        }
        
        private System.IAsyncResult OnBeginGetDisplayPayorsInChunk(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo)(inValues[1]));
            int skip = ((int)(inValues[2]));
            int take = ((int)(inValues[3]));
            return this.BeginGetDisplayPayorsInChunk(LicenseeId, PayerfillInfo, skip, take, callback, asyncState);
        }
        
        private object[] OnEndGetDisplayPayorsInChunk(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayedPayor> retVal = this.EndGetDisplayPayorsInChunk(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDisplayPayorsInChunkCompleted(object state) {
            if ((this.GetDisplayPayorsInChunkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDisplayPayorsInChunkCompleted(this, new GetDisplayPayorsInChunkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDisplayPayorsInChunkAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take) {
            this.GetDisplayPayorsInChunkAsync(LicenseeId, PayerfillInfo, skip, take, null);
        }
        
        public void GetDisplayPayorsInChunkAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take, object userState) {
            if ((this.onBeginGetDisplayPayorsInChunkDelegate == null)) {
                this.onBeginGetDisplayPayorsInChunkDelegate = new BeginOperationDelegate(this.OnBeginGetDisplayPayorsInChunk);
            }
            if ((this.onEndGetDisplayPayorsInChunkDelegate == null)) {
                this.onEndGetDisplayPayorsInChunkDelegate = new EndOperationDelegate(this.OnEndGetDisplayPayorsInChunk);
            }
            if ((this.onGetDisplayPayorsInChunkCompletedDelegate == null)) {
                this.onGetDisplayPayorsInChunkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDisplayPayorsInChunkCompleted);
            }
            base.InvokeAsync(this.onBeginGetDisplayPayorsInChunkDelegate, new object[] {
                        LicenseeId,
                        PayerfillInfo,
                        skip,
                        take}, this.onEndGetDisplayPayorsInChunkDelegate, this.onGetDisplayPayorsInChunkCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IConfigDisplayPayor")]
    public interface IConfigDisplayPayor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigDisplayPayor/GetConfigDisplayPayors", ReplyAction="http://tempuri.org/IConfigDisplayPayor/GetConfigDisplayPayorsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor> GetConfigDisplayPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConfigDisplayPayor/GetConfigDisplayPayors", ReplyAction="http://tempuri.org/IConfigDisplayPayor/GetConfigDisplayPayorsResponse")]
        System.IAsyncResult BeginGetConfigDisplayPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor> EndGetConfigDisplayPayors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigDisplayPayor/GetConfigDisplayPayorCount", ReplyAction="http://tempuri.org/IConfigDisplayPayor/GetConfigDisplayPayorCountResponse")]
        int GetConfigDisplayPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConfigDisplayPayor/GetConfigDisplayPayorCount", ReplyAction="http://tempuri.org/IConfigDisplayPayor/GetConfigDisplayPayorCountResponse")]
        System.IAsyncResult BeginGetConfigDisplayPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState);
        
        int EndGetConfigDisplayPayorCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigDisplayPayor/GetConfigDisplayPayorsInChunk", ReplyAction="http://tempuri.org/IConfigDisplayPayor/GetConfigDisplayPayorsInChunkResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor> GetConfigDisplayPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConfigDisplayPayor/GetConfigDisplayPayorsInChunk", ReplyAction="http://tempuri.org/IConfigDisplayPayor/GetConfigDisplayPayorsInChunkResponse")]
        System.IAsyncResult BeginGetConfigDisplayPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor> EndGetConfigDisplayPayorsInChunk(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConfigDisplayPayorChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IConfigDisplayPayor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConfigDisplayPayorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConfigDisplayPayorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConfigDisplayPayorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConfigDisplayPayorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConfigDisplayPayorsInChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConfigDisplayPayorsInChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfigDisplayPayorClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IConfigDisplayPayor>, MyAgencyVault.VM.MyAgencyVaultSvc.IConfigDisplayPayor {
        
        private BeginOperationDelegate onBeginGetConfigDisplayPayorsDelegate;
        
        private EndOperationDelegate onEndGetConfigDisplayPayorsDelegate;
        
        private System.Threading.SendOrPostCallback onGetConfigDisplayPayorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConfigDisplayPayorCountDelegate;
        
        private EndOperationDelegate onEndGetConfigDisplayPayorCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetConfigDisplayPayorCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConfigDisplayPayorsInChunkDelegate;
        
        private EndOperationDelegate onEndGetConfigDisplayPayorsInChunkDelegate;
        
        private System.Threading.SendOrPostCallback onGetConfigDisplayPayorsInChunkCompletedDelegate;
        
        public ConfigDisplayPayorClient() {
        }
        
        public ConfigDisplayPayorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConfigDisplayPayorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigDisplayPayorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigDisplayPayorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetConfigDisplayPayorsCompletedEventArgs> GetConfigDisplayPayorsCompleted;
        
        public event System.EventHandler<GetConfigDisplayPayorCountCompletedEventArgs> GetConfigDisplayPayorCountCompleted;
        
        public event System.EventHandler<GetConfigDisplayPayorsInChunkCompletedEventArgs> GetConfigDisplayPayorsInChunkCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor> GetConfigDisplayPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            return base.Channel.GetConfigDisplayPayors(LicenseeId, PayerfillInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetConfigDisplayPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConfigDisplayPayors(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor> EndGetConfigDisplayPayors(System.IAsyncResult result) {
            return base.Channel.EndGetConfigDisplayPayors(result);
        }
        
        private System.IAsyncResult OnBeginGetConfigDisplayPayors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo)(inValues[1]));
            return this.BeginGetConfigDisplayPayors(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        private object[] OnEndGetConfigDisplayPayors(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor> retVal = this.EndGetConfigDisplayPayors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConfigDisplayPayorsCompleted(object state) {
            if ((this.GetConfigDisplayPayorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConfigDisplayPayorsCompleted(this, new GetConfigDisplayPayorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConfigDisplayPayorsAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            this.GetConfigDisplayPayorsAsync(LicenseeId, PayerfillInfo, null);
        }
        
        public void GetConfigDisplayPayorsAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, object userState) {
            if ((this.onBeginGetConfigDisplayPayorsDelegate == null)) {
                this.onBeginGetConfigDisplayPayorsDelegate = new BeginOperationDelegate(this.OnBeginGetConfigDisplayPayors);
            }
            if ((this.onEndGetConfigDisplayPayorsDelegate == null)) {
                this.onEndGetConfigDisplayPayorsDelegate = new EndOperationDelegate(this.OnEndGetConfigDisplayPayors);
            }
            if ((this.onGetConfigDisplayPayorsCompletedDelegate == null)) {
                this.onGetConfigDisplayPayorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConfigDisplayPayorsCompleted);
            }
            base.InvokeAsync(this.onBeginGetConfigDisplayPayorsDelegate, new object[] {
                        LicenseeId,
                        PayerfillInfo}, this.onEndGetConfigDisplayPayorsDelegate, this.onGetConfigDisplayPayorsCompletedDelegate, userState);
        }
        
        public int GetConfigDisplayPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            return base.Channel.GetConfigDisplayPayorCount(LicenseeId, PayerfillInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetConfigDisplayPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConfigDisplayPayorCount(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetConfigDisplayPayorCount(System.IAsyncResult result) {
            return base.Channel.EndGetConfigDisplayPayorCount(result);
        }
        
        private System.IAsyncResult OnBeginGetConfigDisplayPayorCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo)(inValues[1]));
            return this.BeginGetConfigDisplayPayorCount(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        private object[] OnEndGetConfigDisplayPayorCount(System.IAsyncResult result) {
            int retVal = this.EndGetConfigDisplayPayorCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConfigDisplayPayorCountCompleted(object state) {
            if ((this.GetConfigDisplayPayorCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConfigDisplayPayorCountCompleted(this, new GetConfigDisplayPayorCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConfigDisplayPayorCountAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            this.GetConfigDisplayPayorCountAsync(LicenseeId, PayerfillInfo, null);
        }
        
        public void GetConfigDisplayPayorCountAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, object userState) {
            if ((this.onBeginGetConfigDisplayPayorCountDelegate == null)) {
                this.onBeginGetConfigDisplayPayorCountDelegate = new BeginOperationDelegate(this.OnBeginGetConfigDisplayPayorCount);
            }
            if ((this.onEndGetConfigDisplayPayorCountDelegate == null)) {
                this.onEndGetConfigDisplayPayorCountDelegate = new EndOperationDelegate(this.OnEndGetConfigDisplayPayorCount);
            }
            if ((this.onGetConfigDisplayPayorCountCompletedDelegate == null)) {
                this.onGetConfigDisplayPayorCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConfigDisplayPayorCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetConfigDisplayPayorCountDelegate, new object[] {
                        LicenseeId,
                        PayerfillInfo}, this.onEndGetConfigDisplayPayorCountDelegate, this.onGetConfigDisplayPayorCountCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor> GetConfigDisplayPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take) {
            return base.Channel.GetConfigDisplayPayorsInChunk(LicenseeId, PayerfillInfo, skip, take);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetConfigDisplayPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConfigDisplayPayorsInChunk(LicenseeId, PayerfillInfo, skip, take, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor> EndGetConfigDisplayPayorsInChunk(System.IAsyncResult result) {
            return base.Channel.EndGetConfigDisplayPayorsInChunk(result);
        }
        
        private System.IAsyncResult OnBeginGetConfigDisplayPayorsInChunk(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo)(inValues[1]));
            int skip = ((int)(inValues[2]));
            int take = ((int)(inValues[3]));
            return this.BeginGetConfigDisplayPayorsInChunk(LicenseeId, PayerfillInfo, skip, take, callback, asyncState);
        }
        
        private object[] OnEndGetConfigDisplayPayorsInChunk(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ConfigDisplayedPayor> retVal = this.EndGetConfigDisplayPayorsInChunk(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConfigDisplayPayorsInChunkCompleted(object state) {
            if ((this.GetConfigDisplayPayorsInChunkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConfigDisplayPayorsInChunkCompleted(this, new GetConfigDisplayPayorsInChunkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConfigDisplayPayorsInChunkAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take) {
            this.GetConfigDisplayPayorsInChunkAsync(LicenseeId, PayerfillInfo, skip, take, null);
        }
        
        public void GetConfigDisplayPayorsInChunkAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take, object userState) {
            if ((this.onBeginGetConfigDisplayPayorsInChunkDelegate == null)) {
                this.onBeginGetConfigDisplayPayorsInChunkDelegate = new BeginOperationDelegate(this.OnBeginGetConfigDisplayPayorsInChunk);
            }
            if ((this.onEndGetConfigDisplayPayorsInChunkDelegate == null)) {
                this.onEndGetConfigDisplayPayorsInChunkDelegate = new EndOperationDelegate(this.OnEndGetConfigDisplayPayorsInChunk);
            }
            if ((this.onGetConfigDisplayPayorsInChunkCompletedDelegate == null)) {
                this.onGetConfigDisplayPayorsInChunkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConfigDisplayPayorsInChunkCompleted);
            }
            base.InvokeAsync(this.onBeginGetConfigDisplayPayorsInChunkDelegate, new object[] {
                        LicenseeId,
                        PayerfillInfo,
                        skip,
                        take}, this.onEndGetConfigDisplayPayorsInChunkDelegate, this.onGetConfigDisplayPayorsInChunkCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ISettingDisplayPayor")]
    public interface ISettingDisplayPayor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingDisplayPayor/GetSettingDisplayPayors", ReplyAction="http://tempuri.org/ISettingDisplayPayor/GetSettingDisplayPayorsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor> GetSettingDisplayPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISettingDisplayPayor/GetSettingDisplayPayors", ReplyAction="http://tempuri.org/ISettingDisplayPayor/GetSettingDisplayPayorsResponse")]
        System.IAsyncResult BeginGetSettingDisplayPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor> EndGetSettingDisplayPayors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingDisplayPayor/GetSettingDisplayPayorCount", ReplyAction="http://tempuri.org/ISettingDisplayPayor/GetSettingDisplayPayorCountResponse")]
        int GetSettingDisplayPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISettingDisplayPayor/GetSettingDisplayPayorCount", ReplyAction="http://tempuri.org/ISettingDisplayPayor/GetSettingDisplayPayorCountResponse")]
        System.IAsyncResult BeginGetSettingDisplayPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState);
        
        int EndGetSettingDisplayPayorCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingDisplayPayor/GetSettingDisplayPayorsInChunk", ReplyAction="http://tempuri.org/ISettingDisplayPayor/GetSettingDisplayPayorsInChunkResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor> GetSettingDisplayPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISettingDisplayPayor/GetSettingDisplayPayorsInChunk", ReplyAction="http://tempuri.org/ISettingDisplayPayor/GetSettingDisplayPayorsInChunkResponse")]
        System.IAsyncResult BeginGetSettingDisplayPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor> EndGetSettingDisplayPayorsInChunk(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISettingDisplayPayorChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ISettingDisplayPayor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSettingDisplayPayorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSettingDisplayPayorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSettingDisplayPayorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSettingDisplayPayorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSettingDisplayPayorsInChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSettingDisplayPayorsInChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SettingDisplayPayorClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ISettingDisplayPayor>, MyAgencyVault.VM.MyAgencyVaultSvc.ISettingDisplayPayor {
        
        private BeginOperationDelegate onBeginGetSettingDisplayPayorsDelegate;
        
        private EndOperationDelegate onEndGetSettingDisplayPayorsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSettingDisplayPayorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSettingDisplayPayorCountDelegate;
        
        private EndOperationDelegate onEndGetSettingDisplayPayorCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetSettingDisplayPayorCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSettingDisplayPayorsInChunkDelegate;
        
        private EndOperationDelegate onEndGetSettingDisplayPayorsInChunkDelegate;
        
        private System.Threading.SendOrPostCallback onGetSettingDisplayPayorsInChunkCompletedDelegate;
        
        public SettingDisplayPayorClient() {
        }
        
        public SettingDisplayPayorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SettingDisplayPayorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingDisplayPayorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingDisplayPayorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetSettingDisplayPayorsCompletedEventArgs> GetSettingDisplayPayorsCompleted;
        
        public event System.EventHandler<GetSettingDisplayPayorCountCompletedEventArgs> GetSettingDisplayPayorCountCompleted;
        
        public event System.EventHandler<GetSettingDisplayPayorsInChunkCompletedEventArgs> GetSettingDisplayPayorsInChunkCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor> GetSettingDisplayPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            return base.Channel.GetSettingDisplayPayors(LicenseeId, PayerfillInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSettingDisplayPayors(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSettingDisplayPayors(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor> EndGetSettingDisplayPayors(System.IAsyncResult result) {
            return base.Channel.EndGetSettingDisplayPayors(result);
        }
        
        private System.IAsyncResult OnBeginGetSettingDisplayPayors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo)(inValues[1]));
            return this.BeginGetSettingDisplayPayors(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        private object[] OnEndGetSettingDisplayPayors(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor> retVal = this.EndGetSettingDisplayPayors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSettingDisplayPayorsCompleted(object state) {
            if ((this.GetSettingDisplayPayorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSettingDisplayPayorsCompleted(this, new GetSettingDisplayPayorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSettingDisplayPayorsAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            this.GetSettingDisplayPayorsAsync(LicenseeId, PayerfillInfo, null);
        }
        
        public void GetSettingDisplayPayorsAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, object userState) {
            if ((this.onBeginGetSettingDisplayPayorsDelegate == null)) {
                this.onBeginGetSettingDisplayPayorsDelegate = new BeginOperationDelegate(this.OnBeginGetSettingDisplayPayors);
            }
            if ((this.onEndGetSettingDisplayPayorsDelegate == null)) {
                this.onEndGetSettingDisplayPayorsDelegate = new EndOperationDelegate(this.OnEndGetSettingDisplayPayors);
            }
            if ((this.onGetSettingDisplayPayorsCompletedDelegate == null)) {
                this.onGetSettingDisplayPayorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSettingDisplayPayorsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSettingDisplayPayorsDelegate, new object[] {
                        LicenseeId,
                        PayerfillInfo}, this.onEndGetSettingDisplayPayorsDelegate, this.onGetSettingDisplayPayorsCompletedDelegate, userState);
        }
        
        public int GetSettingDisplayPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            return base.Channel.GetSettingDisplayPayorCount(LicenseeId, PayerfillInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSettingDisplayPayorCount(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSettingDisplayPayorCount(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetSettingDisplayPayorCount(System.IAsyncResult result) {
            return base.Channel.EndGetSettingDisplayPayorCount(result);
        }
        
        private System.IAsyncResult OnBeginGetSettingDisplayPayorCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo)(inValues[1]));
            return this.BeginGetSettingDisplayPayorCount(LicenseeId, PayerfillInfo, callback, asyncState);
        }
        
        private object[] OnEndGetSettingDisplayPayorCount(System.IAsyncResult result) {
            int retVal = this.EndGetSettingDisplayPayorCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSettingDisplayPayorCountCompleted(object state) {
            if ((this.GetSettingDisplayPayorCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSettingDisplayPayorCountCompleted(this, new GetSettingDisplayPayorCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSettingDisplayPayorCountAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo) {
            this.GetSettingDisplayPayorCountAsync(LicenseeId, PayerfillInfo, null);
        }
        
        public void GetSettingDisplayPayorCountAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, object userState) {
            if ((this.onBeginGetSettingDisplayPayorCountDelegate == null)) {
                this.onBeginGetSettingDisplayPayorCountDelegate = new BeginOperationDelegate(this.OnBeginGetSettingDisplayPayorCount);
            }
            if ((this.onEndGetSettingDisplayPayorCountDelegate == null)) {
                this.onEndGetSettingDisplayPayorCountDelegate = new EndOperationDelegate(this.OnEndGetSettingDisplayPayorCount);
            }
            if ((this.onGetSettingDisplayPayorCountCompletedDelegate == null)) {
                this.onGetSettingDisplayPayorCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSettingDisplayPayorCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetSettingDisplayPayorCountDelegate, new object[] {
                        LicenseeId,
                        PayerfillInfo}, this.onEndGetSettingDisplayPayorCountDelegate, this.onGetSettingDisplayPayorCountCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor> GetSettingDisplayPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take) {
            return base.Channel.GetSettingDisplayPayorsInChunk(LicenseeId, PayerfillInfo, skip, take);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSettingDisplayPayorsInChunk(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSettingDisplayPayorsInChunk(LicenseeId, PayerfillInfo, skip, take, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor> EndGetSettingDisplayPayorsInChunk(System.IAsyncResult result) {
            return base.Channel.EndGetSettingDisplayPayorsInChunk(result);
        }
        
        private System.IAsyncResult OnBeginGetSettingDisplayPayorsInChunk(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> LicenseeId = ((System.Nullable<System.Guid>)(inValues[0]));
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo)(inValues[1]));
            int skip = ((int)(inValues[2]));
            int take = ((int)(inValues[3]));
            return this.BeginGetSettingDisplayPayorsInChunk(LicenseeId, PayerfillInfo, skip, take, callback, asyncState);
        }
        
        private object[] OnEndGetSettingDisplayPayorsInChunk(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.SettingDisplayedPayor> retVal = this.EndGetSettingDisplayPayorsInChunk(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSettingDisplayPayorsInChunkCompleted(object state) {
            if ((this.GetSettingDisplayPayorsInChunkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSettingDisplayPayorsInChunkCompleted(this, new GetSettingDisplayPayorsInChunkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSettingDisplayPayorsInChunkAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take) {
            this.GetSettingDisplayPayorsInChunkAsync(LicenseeId, PayerfillInfo, skip, take, null);
        }
        
        public void GetSettingDisplayPayorsInChunkAsync(System.Nullable<System.Guid> LicenseeId, MyAgencyVault.VM.MyAgencyVaultSvc.PayorFillInfo PayerfillInfo, int skip, int take, object userState) {
            if ((this.onBeginGetSettingDisplayPayorsInChunkDelegate == null)) {
                this.onBeginGetSettingDisplayPayorsInChunkDelegate = new BeginOperationDelegate(this.OnBeginGetSettingDisplayPayorsInChunk);
            }
            if ((this.onEndGetSettingDisplayPayorsInChunkDelegate == null)) {
                this.onEndGetSettingDisplayPayorsInChunkDelegate = new EndOperationDelegate(this.OnEndGetSettingDisplayPayorsInChunk);
            }
            if ((this.onGetSettingDisplayPayorsInChunkCompletedDelegate == null)) {
                this.onGetSettingDisplayPayorsInChunkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSettingDisplayPayorsInChunkCompleted);
            }
            base.InvokeAsync(this.onBeginGetSettingDisplayPayorsInChunkDelegate, new object[] {
                        LicenseeId,
                        PayerfillInfo,
                        skip,
                        take}, this.onEndGetSettingDisplayPayorsInChunkDelegate, this.onGetSettingDisplayPayorsInChunkCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.IBrokerCode")]
    public interface IBrokerCode {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerCode/AddBrokerCode", ReplyAction="http://tempuri.org/IBrokerCode/AddBrokerCodeResponse")]
        void AddBrokerCode(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrokerCode/AddBrokerCode", ReplyAction="http://tempuri.org/IBrokerCode/AddBrokerCodeResponse")]
        System.IAsyncResult BeginAddBrokerCode(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode, System.AsyncCallback callback, object asyncState);
        
        void EndAddBrokerCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerCode/UpdateBrokerCode", ReplyAction="http://tempuri.org/IBrokerCode/UpdateBrokerCodeResponse")]
        void UpdateBrokerCode(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrokerCode/UpdateBrokerCode", ReplyAction="http://tempuri.org/IBrokerCode/UpdateBrokerCodeResponse")]
        System.IAsyncResult BeginUpdateBrokerCode(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateBrokerCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerCode/ValidateBrokerCode", ReplyAction="http://tempuri.org/IBrokerCode/ValidateBrokerCodeResponse")]
        bool ValidateBrokerCode(string strBrokerCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrokerCode/ValidateBrokerCode", ReplyAction="http://tempuri.org/IBrokerCode/ValidateBrokerCodeResponse")]
        System.IAsyncResult BeginValidateBrokerCode(string strBrokerCode, System.AsyncCallback callback, object asyncState);
        
        bool EndValidateBrokerCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerCode/LoadBrokerCode", ReplyAction="http://tempuri.org/IBrokerCode/LoadBrokerCodeResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode> LoadBrokerCode(System.Nullable<System.Guid> licID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrokerCode/LoadBrokerCode", ReplyAction="http://tempuri.org/IBrokerCode/LoadBrokerCodeResponse")]
        System.IAsyncResult BeginLoadBrokerCode(System.Nullable<System.Guid> licID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode> EndLoadBrokerCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerCode/DeleteBrokerCode", ReplyAction="http://tempuri.org/IBrokerCode/DeleteBrokerCodeResponse")]
        bool DeleteBrokerCode(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrokerCode/DeleteBrokerCode", ReplyAction="http://tempuri.org/IBrokerCode/DeleteBrokerCodeResponse")]
        System.IAsyncResult BeginDeleteBrokerCode(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteBrokerCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerCode/NotifyMail", ReplyAction="http://tempuri.org/IBrokerCode/NotifyMailResponse")]
        void NotifyMail(MyAgencyVault.EmailFax.MailData _MailData, string strSubject, string strMailBody);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrokerCode/NotifyMail", ReplyAction="http://tempuri.org/IBrokerCode/NotifyMailResponse")]
        System.IAsyncResult BeginNotifyMail(MyAgencyVault.EmailFax.MailData _MailData, string strSubject, string strMailBody, System.AsyncCallback callback, object asyncState);
        
        void EndNotifyMail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerCode/AddImportToolBrokerSettings", ReplyAction="http://tempuri.org/IBrokerCode/AddImportToolBrokerSettingsResponse")]
        void AddImportToolBrokerSettings(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting objImportToolBrokerSetting);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrokerCode/AddImportToolBrokerSettings", ReplyAction="http://tempuri.org/IBrokerCode/AddImportToolBrokerSettingsResponse")]
        System.IAsyncResult BeginAddImportToolBrokerSettings(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting objImportToolBrokerSetting, System.AsyncCallback callback, object asyncState);
        
        void EndAddImportToolBrokerSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerCode/LoadImportToolBrokerSetting", ReplyAction="http://tempuri.org/IBrokerCode/LoadImportToolBrokerSettingResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting> LoadImportToolBrokerSetting();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrokerCode/LoadImportToolBrokerSetting", ReplyAction="http://tempuri.org/IBrokerCode/LoadImportToolBrokerSettingResponse")]
        System.IAsyncResult BeginLoadImportToolBrokerSetting(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting> EndLoadImportToolBrokerSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerCode/LoadImportToolMasterStatementData", ReplyAction="http://tempuri.org/IBrokerCode/LoadImportToolMasterStatementDataResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolMasterStatementData> LoadImportToolMasterStatementData();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrokerCode/LoadImportToolMasterStatementData", ReplyAction="http://tempuri.org/IBrokerCode/LoadImportToolMasterStatementDataResponse")]
        System.IAsyncResult BeginLoadImportToolMasterStatementData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolMasterStatementData> EndLoadImportToolMasterStatementData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBrokerCodeChannel : MyAgencyVault.VM.MyAgencyVaultSvc.IBrokerCode, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateBrokerCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateBrokerCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadBrokerCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadBrokerCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteBrokerCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteBrokerCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadImportToolBrokerSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadImportToolBrokerSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadImportToolMasterStatementDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadImportToolMasterStatementDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolMasterStatementData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolMasterStatementData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BrokerCodeClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.IBrokerCode>, MyAgencyVault.VM.MyAgencyVaultSvc.IBrokerCode {
        
        private BeginOperationDelegate onBeginAddBrokerCodeDelegate;
        
        private EndOperationDelegate onEndAddBrokerCodeDelegate;
        
        private System.Threading.SendOrPostCallback onAddBrokerCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateBrokerCodeDelegate;
        
        private EndOperationDelegate onEndUpdateBrokerCodeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateBrokerCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateBrokerCodeDelegate;
        
        private EndOperationDelegate onEndValidateBrokerCodeDelegate;
        
        private System.Threading.SendOrPostCallback onValidateBrokerCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadBrokerCodeDelegate;
        
        private EndOperationDelegate onEndLoadBrokerCodeDelegate;
        
        private System.Threading.SendOrPostCallback onLoadBrokerCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteBrokerCodeDelegate;
        
        private EndOperationDelegate onEndDeleteBrokerCodeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteBrokerCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginNotifyMailDelegate;
        
        private EndOperationDelegate onEndNotifyMailDelegate;
        
        private System.Threading.SendOrPostCallback onNotifyMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddImportToolBrokerSettingsDelegate;
        
        private EndOperationDelegate onEndAddImportToolBrokerSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onAddImportToolBrokerSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadImportToolBrokerSettingDelegate;
        
        private EndOperationDelegate onEndLoadImportToolBrokerSettingDelegate;
        
        private System.Threading.SendOrPostCallback onLoadImportToolBrokerSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadImportToolMasterStatementDataDelegate;
        
        private EndOperationDelegate onEndLoadImportToolMasterStatementDataDelegate;
        
        private System.Threading.SendOrPostCallback onLoadImportToolMasterStatementDataCompletedDelegate;
        
        public BrokerCodeClient() {
        }
        
        public BrokerCodeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BrokerCodeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrokerCodeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrokerCodeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddBrokerCodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateBrokerCodeCompleted;
        
        public event System.EventHandler<ValidateBrokerCodeCompletedEventArgs> ValidateBrokerCodeCompleted;
        
        public event System.EventHandler<LoadBrokerCodeCompletedEventArgs> LoadBrokerCodeCompleted;
        
        public event System.EventHandler<DeleteBrokerCodeCompletedEventArgs> DeleteBrokerCodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> NotifyMailCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddImportToolBrokerSettingsCompleted;
        
        public event System.EventHandler<LoadImportToolBrokerSettingCompletedEventArgs> LoadImportToolBrokerSettingCompleted;
        
        public event System.EventHandler<LoadImportToolMasterStatementDataCompletedEventArgs> LoadImportToolMasterStatementDataCompleted;
        
        public void AddBrokerCode(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode) {
            base.Channel.AddBrokerCode(objDisplayBrokerCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddBrokerCode(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddBrokerCode(objDisplayBrokerCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddBrokerCode(System.IAsyncResult result) {
            base.Channel.EndAddBrokerCode(result);
        }
        
        private System.IAsyncResult OnBeginAddBrokerCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode = ((MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode)(inValues[0]));
            return this.BeginAddBrokerCode(objDisplayBrokerCode, callback, asyncState);
        }
        
        private object[] OnEndAddBrokerCode(System.IAsyncResult result) {
            this.EndAddBrokerCode(result);
            return null;
        }
        
        private void OnAddBrokerCodeCompleted(object state) {
            if ((this.AddBrokerCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddBrokerCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddBrokerCodeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode) {
            this.AddBrokerCodeAsync(objDisplayBrokerCode, null);
        }
        
        public void AddBrokerCodeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode, object userState) {
            if ((this.onBeginAddBrokerCodeDelegate == null)) {
                this.onBeginAddBrokerCodeDelegate = new BeginOperationDelegate(this.OnBeginAddBrokerCode);
            }
            if ((this.onEndAddBrokerCodeDelegate == null)) {
                this.onEndAddBrokerCodeDelegate = new EndOperationDelegate(this.OnEndAddBrokerCode);
            }
            if ((this.onAddBrokerCodeCompletedDelegate == null)) {
                this.onAddBrokerCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddBrokerCodeCompleted);
            }
            base.InvokeAsync(this.onBeginAddBrokerCodeDelegate, new object[] {
                        objDisplayBrokerCode}, this.onEndAddBrokerCodeDelegate, this.onAddBrokerCodeCompletedDelegate, userState);
        }
        
        public void UpdateBrokerCode(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode) {
            base.Channel.UpdateBrokerCode(objDisplayBrokerCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateBrokerCode(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateBrokerCode(objDisplayBrokerCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateBrokerCode(System.IAsyncResult result) {
            base.Channel.EndUpdateBrokerCode(result);
        }
        
        private System.IAsyncResult OnBeginUpdateBrokerCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode = ((MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode)(inValues[0]));
            return this.BeginUpdateBrokerCode(objDisplayBrokerCode, callback, asyncState);
        }
        
        private object[] OnEndUpdateBrokerCode(System.IAsyncResult result) {
            this.EndUpdateBrokerCode(result);
            return null;
        }
        
        private void OnUpdateBrokerCodeCompleted(object state) {
            if ((this.UpdateBrokerCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateBrokerCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateBrokerCodeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode) {
            this.UpdateBrokerCodeAsync(objDisplayBrokerCode, null);
        }
        
        public void UpdateBrokerCodeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode, object userState) {
            if ((this.onBeginUpdateBrokerCodeDelegate == null)) {
                this.onBeginUpdateBrokerCodeDelegate = new BeginOperationDelegate(this.OnBeginUpdateBrokerCode);
            }
            if ((this.onEndUpdateBrokerCodeDelegate == null)) {
                this.onEndUpdateBrokerCodeDelegate = new EndOperationDelegate(this.OnEndUpdateBrokerCode);
            }
            if ((this.onUpdateBrokerCodeCompletedDelegate == null)) {
                this.onUpdateBrokerCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateBrokerCodeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateBrokerCodeDelegate, new object[] {
                        objDisplayBrokerCode}, this.onEndUpdateBrokerCodeDelegate, this.onUpdateBrokerCodeCompletedDelegate, userState);
        }
        
        public bool ValidateBrokerCode(string strBrokerCode) {
            return base.Channel.ValidateBrokerCode(strBrokerCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateBrokerCode(string strBrokerCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateBrokerCode(strBrokerCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndValidateBrokerCode(System.IAsyncResult result) {
            return base.Channel.EndValidateBrokerCode(result);
        }
        
        private System.IAsyncResult OnBeginValidateBrokerCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strBrokerCode = ((string)(inValues[0]));
            return this.BeginValidateBrokerCode(strBrokerCode, callback, asyncState);
        }
        
        private object[] OnEndValidateBrokerCode(System.IAsyncResult result) {
            bool retVal = this.EndValidateBrokerCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateBrokerCodeCompleted(object state) {
            if ((this.ValidateBrokerCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateBrokerCodeCompleted(this, new ValidateBrokerCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateBrokerCodeAsync(string strBrokerCode) {
            this.ValidateBrokerCodeAsync(strBrokerCode, null);
        }
        
        public void ValidateBrokerCodeAsync(string strBrokerCode, object userState) {
            if ((this.onBeginValidateBrokerCodeDelegate == null)) {
                this.onBeginValidateBrokerCodeDelegate = new BeginOperationDelegate(this.OnBeginValidateBrokerCode);
            }
            if ((this.onEndValidateBrokerCodeDelegate == null)) {
                this.onEndValidateBrokerCodeDelegate = new EndOperationDelegate(this.OnEndValidateBrokerCode);
            }
            if ((this.onValidateBrokerCodeCompletedDelegate == null)) {
                this.onValidateBrokerCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateBrokerCodeCompleted);
            }
            base.InvokeAsync(this.onBeginValidateBrokerCodeDelegate, new object[] {
                        strBrokerCode}, this.onEndValidateBrokerCodeDelegate, this.onValidateBrokerCodeCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode> LoadBrokerCode(System.Nullable<System.Guid> licID) {
            return base.Channel.LoadBrokerCode(licID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadBrokerCode(System.Nullable<System.Guid> licID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadBrokerCode(licID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode> EndLoadBrokerCode(System.IAsyncResult result) {
            return base.Channel.EndLoadBrokerCode(result);
        }
        
        private System.IAsyncResult OnBeginLoadBrokerCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> licID = ((System.Nullable<System.Guid>)(inValues[0]));
            return this.BeginLoadBrokerCode(licID, callback, asyncState);
        }
        
        private object[] OnEndLoadBrokerCode(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode> retVal = this.EndLoadBrokerCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadBrokerCodeCompleted(object state) {
            if ((this.LoadBrokerCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadBrokerCodeCompleted(this, new LoadBrokerCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadBrokerCodeAsync(System.Nullable<System.Guid> licID) {
            this.LoadBrokerCodeAsync(licID, null);
        }
        
        public void LoadBrokerCodeAsync(System.Nullable<System.Guid> licID, object userState) {
            if ((this.onBeginLoadBrokerCodeDelegate == null)) {
                this.onBeginLoadBrokerCodeDelegate = new BeginOperationDelegate(this.OnBeginLoadBrokerCode);
            }
            if ((this.onEndLoadBrokerCodeDelegate == null)) {
                this.onEndLoadBrokerCodeDelegate = new EndOperationDelegate(this.OnEndLoadBrokerCode);
            }
            if ((this.onLoadBrokerCodeCompletedDelegate == null)) {
                this.onLoadBrokerCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadBrokerCodeCompleted);
            }
            base.InvokeAsync(this.onBeginLoadBrokerCodeDelegate, new object[] {
                        licID}, this.onEndLoadBrokerCodeDelegate, this.onLoadBrokerCodeCompletedDelegate, userState);
        }
        
        public bool DeleteBrokerCode(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode) {
            return base.Channel.DeleteBrokerCode(objDisplayBrokerCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteBrokerCode(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteBrokerCode(objDisplayBrokerCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteBrokerCode(System.IAsyncResult result) {
            return base.Channel.EndDeleteBrokerCode(result);
        }
        
        private System.IAsyncResult OnBeginDeleteBrokerCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode = ((MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode)(inValues[0]));
            return this.BeginDeleteBrokerCode(objDisplayBrokerCode, callback, asyncState);
        }
        
        private object[] OnEndDeleteBrokerCode(System.IAsyncResult result) {
            bool retVal = this.EndDeleteBrokerCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteBrokerCodeCompleted(object state) {
            if ((this.DeleteBrokerCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteBrokerCodeCompleted(this, new DeleteBrokerCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteBrokerCodeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode) {
            this.DeleteBrokerCodeAsync(objDisplayBrokerCode, null);
        }
        
        public void DeleteBrokerCodeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.DisplayBrokerCode objDisplayBrokerCode, object userState) {
            if ((this.onBeginDeleteBrokerCodeDelegate == null)) {
                this.onBeginDeleteBrokerCodeDelegate = new BeginOperationDelegate(this.OnBeginDeleteBrokerCode);
            }
            if ((this.onEndDeleteBrokerCodeDelegate == null)) {
                this.onEndDeleteBrokerCodeDelegate = new EndOperationDelegate(this.OnEndDeleteBrokerCode);
            }
            if ((this.onDeleteBrokerCodeCompletedDelegate == null)) {
                this.onDeleteBrokerCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteBrokerCodeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteBrokerCodeDelegate, new object[] {
                        objDisplayBrokerCode}, this.onEndDeleteBrokerCodeDelegate, this.onDeleteBrokerCodeCompletedDelegate, userState);
        }
        
        public void NotifyMail(MyAgencyVault.EmailFax.MailData _MailData, string strSubject, string strMailBody) {
            base.Channel.NotifyMail(_MailData, strSubject, strMailBody);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNotifyMail(MyAgencyVault.EmailFax.MailData _MailData, string strSubject, string strMailBody, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNotifyMail(_MailData, strSubject, strMailBody, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndNotifyMail(System.IAsyncResult result) {
            base.Channel.EndNotifyMail(result);
        }
        
        private System.IAsyncResult OnBeginNotifyMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.EmailFax.MailData _MailData = ((MyAgencyVault.EmailFax.MailData)(inValues[0]));
            string strSubject = ((string)(inValues[1]));
            string strMailBody = ((string)(inValues[2]));
            return this.BeginNotifyMail(_MailData, strSubject, strMailBody, callback, asyncState);
        }
        
        private object[] OnEndNotifyMail(System.IAsyncResult result) {
            this.EndNotifyMail(result);
            return null;
        }
        
        private void OnNotifyMailCompleted(object state) {
            if ((this.NotifyMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NotifyMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NotifyMailAsync(MyAgencyVault.EmailFax.MailData _MailData, string strSubject, string strMailBody) {
            this.NotifyMailAsync(_MailData, strSubject, strMailBody, null);
        }
        
        public void NotifyMailAsync(MyAgencyVault.EmailFax.MailData _MailData, string strSubject, string strMailBody, object userState) {
            if ((this.onBeginNotifyMailDelegate == null)) {
                this.onBeginNotifyMailDelegate = new BeginOperationDelegate(this.OnBeginNotifyMail);
            }
            if ((this.onEndNotifyMailDelegate == null)) {
                this.onEndNotifyMailDelegate = new EndOperationDelegate(this.OnEndNotifyMail);
            }
            if ((this.onNotifyMailCompletedDelegate == null)) {
                this.onNotifyMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNotifyMailCompleted);
            }
            base.InvokeAsync(this.onBeginNotifyMailDelegate, new object[] {
                        _MailData,
                        strSubject,
                        strMailBody}, this.onEndNotifyMailDelegate, this.onNotifyMailCompletedDelegate, userState);
        }
        
        public void AddImportToolBrokerSettings(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting objImportToolBrokerSetting) {
            base.Channel.AddImportToolBrokerSettings(objImportToolBrokerSetting);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddImportToolBrokerSettings(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting objImportToolBrokerSetting, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddImportToolBrokerSettings(objImportToolBrokerSetting, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddImportToolBrokerSettings(System.IAsyncResult result) {
            base.Channel.EndAddImportToolBrokerSettings(result);
        }
        
        private System.IAsyncResult OnBeginAddImportToolBrokerSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting objImportToolBrokerSetting = ((MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting)(inValues[0]));
            return this.BeginAddImportToolBrokerSettings(objImportToolBrokerSetting, callback, asyncState);
        }
        
        private object[] OnEndAddImportToolBrokerSettings(System.IAsyncResult result) {
            this.EndAddImportToolBrokerSettings(result);
            return null;
        }
        
        private void OnAddImportToolBrokerSettingsCompleted(object state) {
            if ((this.AddImportToolBrokerSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddImportToolBrokerSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddImportToolBrokerSettingsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting objImportToolBrokerSetting) {
            this.AddImportToolBrokerSettingsAsync(objImportToolBrokerSetting, null);
        }
        
        public void AddImportToolBrokerSettingsAsync(MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting objImportToolBrokerSetting, object userState) {
            if ((this.onBeginAddImportToolBrokerSettingsDelegate == null)) {
                this.onBeginAddImportToolBrokerSettingsDelegate = new BeginOperationDelegate(this.OnBeginAddImportToolBrokerSettings);
            }
            if ((this.onEndAddImportToolBrokerSettingsDelegate == null)) {
                this.onEndAddImportToolBrokerSettingsDelegate = new EndOperationDelegate(this.OnEndAddImportToolBrokerSettings);
            }
            if ((this.onAddImportToolBrokerSettingsCompletedDelegate == null)) {
                this.onAddImportToolBrokerSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddImportToolBrokerSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginAddImportToolBrokerSettingsDelegate, new object[] {
                        objImportToolBrokerSetting}, this.onEndAddImportToolBrokerSettingsDelegate, this.onAddImportToolBrokerSettingsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting> LoadImportToolBrokerSetting() {
            return base.Channel.LoadImportToolBrokerSetting();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadImportToolBrokerSetting(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadImportToolBrokerSetting(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting> EndLoadImportToolBrokerSetting(System.IAsyncResult result) {
            return base.Channel.EndLoadImportToolBrokerSetting(result);
        }
        
        private System.IAsyncResult OnBeginLoadImportToolBrokerSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadImportToolBrokerSetting(callback, asyncState);
        }
        
        private object[] OnEndLoadImportToolBrokerSetting(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolBrokerSetting> retVal = this.EndLoadImportToolBrokerSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadImportToolBrokerSettingCompleted(object state) {
            if ((this.LoadImportToolBrokerSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadImportToolBrokerSettingCompleted(this, new LoadImportToolBrokerSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadImportToolBrokerSettingAsync() {
            this.LoadImportToolBrokerSettingAsync(null);
        }
        
        public void LoadImportToolBrokerSettingAsync(object userState) {
            if ((this.onBeginLoadImportToolBrokerSettingDelegate == null)) {
                this.onBeginLoadImportToolBrokerSettingDelegate = new BeginOperationDelegate(this.OnBeginLoadImportToolBrokerSetting);
            }
            if ((this.onEndLoadImportToolBrokerSettingDelegate == null)) {
                this.onEndLoadImportToolBrokerSettingDelegate = new EndOperationDelegate(this.OnEndLoadImportToolBrokerSetting);
            }
            if ((this.onLoadImportToolBrokerSettingCompletedDelegate == null)) {
                this.onLoadImportToolBrokerSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadImportToolBrokerSettingCompleted);
            }
            base.InvokeAsync(this.onBeginLoadImportToolBrokerSettingDelegate, null, this.onEndLoadImportToolBrokerSettingDelegate, this.onLoadImportToolBrokerSettingCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolMasterStatementData> LoadImportToolMasterStatementData() {
            return base.Channel.LoadImportToolMasterStatementData();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadImportToolMasterStatementData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadImportToolMasterStatementData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolMasterStatementData> EndLoadImportToolMasterStatementData(System.IAsyncResult result) {
            return base.Channel.EndLoadImportToolMasterStatementData(result);
        }
        
        private System.IAsyncResult OnBeginLoadImportToolMasterStatementData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadImportToolMasterStatementData(callback, asyncState);
        }
        
        private object[] OnEndLoadImportToolMasterStatementData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ImportToolMasterStatementData> retVal = this.EndLoadImportToolMasterStatementData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadImportToolMasterStatementDataCompleted(object state) {
            if ((this.LoadImportToolMasterStatementDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadImportToolMasterStatementDataCompleted(this, new LoadImportToolMasterStatementDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadImportToolMasterStatementDataAsync() {
            this.LoadImportToolMasterStatementDataAsync(null);
        }
        
        public void LoadImportToolMasterStatementDataAsync(object userState) {
            if ((this.onBeginLoadImportToolMasterStatementDataDelegate == null)) {
                this.onBeginLoadImportToolMasterStatementDataDelegate = new BeginOperationDelegate(this.OnBeginLoadImportToolMasterStatementData);
            }
            if ((this.onEndLoadImportToolMasterStatementDataDelegate == null)) {
                this.onEndLoadImportToolMasterStatementDataDelegate = new EndOperationDelegate(this.OnEndLoadImportToolMasterStatementData);
            }
            if ((this.onLoadImportToolMasterStatementDataCompletedDelegate == null)) {
                this.onLoadImportToolMasterStatementDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadImportToolMasterStatementDataCompleted);
            }
            base.InvokeAsync(this.onBeginLoadImportToolMasterStatementDataDelegate, null, this.onEndLoadImportToolMasterStatementDataDelegate, this.onLoadImportToolMasterStatementDataCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ICompType")]
    public interface ICompType {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompType/GetAllComptype", ReplyAction="http://tempuri.org/ICompType/GetAllComptypeResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> GetAllComptype();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICompType/GetAllComptype", ReplyAction="http://tempuri.org/ICompType/GetAllComptypeResponse")]
        System.IAsyncResult BeginGetAllComptype(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> EndGetAllComptype(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompType/AddUpdateCompType", ReplyAction="http://tempuri.org/ICompType/AddUpdateCompTypeResponse")]
        void AddUpdateCompType(MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICompType/AddUpdateCompType", ReplyAction="http://tempuri.org/ICompType/AddUpdateCompTypeResponse")]
        System.IAsyncResult BeginAddUpdateCompType(MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateCompType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompType/DeleteCompType", ReplyAction="http://tempuri.org/ICompType/DeleteCompTypeResponse")]
        bool DeleteCompType(MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICompType/DeleteCompType", ReplyAction="http://tempuri.org/ICompType/DeleteCompTypeResponse")]
        System.IAsyncResult BeginDeleteCompType(MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteCompType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompType/FindCompTypeName", ReplyAction="http://tempuri.org/ICompType/FindCompTypeNameResponse")]
        bool FindCompTypeName(string strName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICompType/FindCompTypeName", ReplyAction="http://tempuri.org/ICompType/FindCompTypeNameResponse")]
        System.IAsyncResult BeginFindCompTypeName(string strName, System.AsyncCallback callback, object asyncState);
        
        bool EndFindCompTypeName(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompTypeChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ICompType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllComptypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllComptypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteCompTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteCompTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindCompTypeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindCompTypeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompTypeClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ICompType>, MyAgencyVault.VM.MyAgencyVaultSvc.ICompType {
        
        private BeginOperationDelegate onBeginGetAllComptypeDelegate;
        
        private EndOperationDelegate onEndGetAllComptypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllComptypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateCompTypeDelegate;
        
        private EndOperationDelegate onEndAddUpdateCompTypeDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateCompTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCompTypeDelegate;
        
        private EndOperationDelegate onEndDeleteCompTypeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindCompTypeNameDelegate;
        
        private EndOperationDelegate onEndFindCompTypeNameDelegate;
        
        private System.Threading.SendOrPostCallback onFindCompTypeNameCompletedDelegate;
        
        public CompTypeClient() {
        }
        
        public CompTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetAllComptypeCompletedEventArgs> GetAllComptypeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateCompTypeCompleted;
        
        public event System.EventHandler<DeleteCompTypeCompletedEventArgs> DeleteCompTypeCompleted;
        
        public event System.EventHandler<FindCompTypeNameCompletedEventArgs> FindCompTypeNameCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> GetAllComptype() {
            return base.Channel.GetAllComptype();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllComptype(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllComptype(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> EndGetAllComptype(System.IAsyncResult result) {
            return base.Channel.EndGetAllComptype(result);
        }
        
        private System.IAsyncResult OnBeginGetAllComptype(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllComptype(callback, asyncState);
        }
        
        private object[] OnEndGetAllComptype(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.CompType> retVal = this.EndGetAllComptype(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllComptypeCompleted(object state) {
            if ((this.GetAllComptypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllComptypeCompleted(this, new GetAllComptypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllComptypeAsync() {
            this.GetAllComptypeAsync(null);
        }
        
        public void GetAllComptypeAsync(object userState) {
            if ((this.onBeginGetAllComptypeDelegate == null)) {
                this.onBeginGetAllComptypeDelegate = new BeginOperationDelegate(this.OnBeginGetAllComptype);
            }
            if ((this.onEndGetAllComptypeDelegate == null)) {
                this.onEndGetAllComptypeDelegate = new EndOperationDelegate(this.OnEndGetAllComptype);
            }
            if ((this.onGetAllComptypeCompletedDelegate == null)) {
                this.onGetAllComptypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllComptypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllComptypeDelegate, null, this.onEndGetAllComptypeDelegate, this.onGetAllComptypeCompletedDelegate, userState);
        }
        
        public void AddUpdateCompType(MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType) {
            base.Channel.AddUpdateCompType(objCompType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateCompType(MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateCompType(objCompType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateCompType(System.IAsyncResult result) {
            base.Channel.EndAddUpdateCompType(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateCompType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType = ((MyAgencyVault.VM.MyAgencyVaultSvc.CompType)(inValues[0]));
            return this.BeginAddUpdateCompType(objCompType, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateCompType(System.IAsyncResult result) {
            this.EndAddUpdateCompType(result);
            return null;
        }
        
        private void OnAddUpdateCompTypeCompleted(object state) {
            if ((this.AddUpdateCompTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateCompTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateCompTypeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType) {
            this.AddUpdateCompTypeAsync(objCompType, null);
        }
        
        public void AddUpdateCompTypeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType, object userState) {
            if ((this.onBeginAddUpdateCompTypeDelegate == null)) {
                this.onBeginAddUpdateCompTypeDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateCompType);
            }
            if ((this.onEndAddUpdateCompTypeDelegate == null)) {
                this.onEndAddUpdateCompTypeDelegate = new EndOperationDelegate(this.OnEndAddUpdateCompType);
            }
            if ((this.onAddUpdateCompTypeCompletedDelegate == null)) {
                this.onAddUpdateCompTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateCompTypeCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateCompTypeDelegate, new object[] {
                        objCompType}, this.onEndAddUpdateCompTypeDelegate, this.onAddUpdateCompTypeCompletedDelegate, userState);
        }
        
        public bool DeleteCompType(MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType) {
            return base.Channel.DeleteCompType(objCompType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteCompType(MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteCompType(objCompType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteCompType(System.IAsyncResult result) {
            return base.Channel.EndDeleteCompType(result);
        }
        
        private System.IAsyncResult OnBeginDeleteCompType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType = ((MyAgencyVault.VM.MyAgencyVaultSvc.CompType)(inValues[0]));
            return this.BeginDeleteCompType(objCompType, callback, asyncState);
        }
        
        private object[] OnEndDeleteCompType(System.IAsyncResult result) {
            bool retVal = this.EndDeleteCompType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteCompTypeCompleted(object state) {
            if ((this.DeleteCompTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompTypeCompleted(this, new DeleteCompTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCompTypeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType) {
            this.DeleteCompTypeAsync(objCompType, null);
        }
        
        public void DeleteCompTypeAsync(MyAgencyVault.VM.MyAgencyVaultSvc.CompType objCompType, object userState) {
            if ((this.onBeginDeleteCompTypeDelegate == null)) {
                this.onBeginDeleteCompTypeDelegate = new BeginOperationDelegate(this.OnBeginDeleteCompType);
            }
            if ((this.onEndDeleteCompTypeDelegate == null)) {
                this.onEndDeleteCompTypeDelegate = new EndOperationDelegate(this.OnEndDeleteCompType);
            }
            if ((this.onDeleteCompTypeCompletedDelegate == null)) {
                this.onDeleteCompTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompTypeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCompTypeDelegate, new object[] {
                        objCompType}, this.onEndDeleteCompTypeDelegate, this.onDeleteCompTypeCompletedDelegate, userState);
        }
        
        public bool FindCompTypeName(string strName) {
            return base.Channel.FindCompTypeName(strName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFindCompTypeName(string strName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindCompTypeName(strName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndFindCompTypeName(System.IAsyncResult result) {
            return base.Channel.EndFindCompTypeName(result);
        }
        
        private System.IAsyncResult OnBeginFindCompTypeName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strName = ((string)(inValues[0]));
            return this.BeginFindCompTypeName(strName, callback, asyncState);
        }
        
        private object[] OnEndFindCompTypeName(System.IAsyncResult result) {
            bool retVal = this.EndFindCompTypeName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindCompTypeNameCompleted(object state) {
            if ((this.FindCompTypeNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindCompTypeNameCompleted(this, new FindCompTypeNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindCompTypeNameAsync(string strName) {
            this.FindCompTypeNameAsync(strName, null);
        }
        
        public void FindCompTypeNameAsync(string strName, object userState) {
            if ((this.onBeginFindCompTypeNameDelegate == null)) {
                this.onBeginFindCompTypeNameDelegate = new BeginOperationDelegate(this.OnBeginFindCompTypeName);
            }
            if ((this.onEndFindCompTypeNameDelegate == null)) {
                this.onEndFindCompTypeNameDelegate = new EndOperationDelegate(this.OnEndFindCompTypeName);
            }
            if ((this.onFindCompTypeNameCompletedDelegate == null)) {
                this.onFindCompTypeNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindCompTypeNameCompleted);
            }
            base.InvokeAsync(this.onBeginFindCompTypeNameDelegate, new object[] {
                        strName}, this.onEndFindCompTypeNameDelegate, this.onFindCompTypeNameCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyAgencyVaultSvc.ISettings")]
    public interface ISettings {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettings/GetReportCustomFieldSettings", ReplyAction="http://tempuri.org/ISettings/GetReportCustomFieldSettingsResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ReportCustomFieldSettings> GetReportCustomFieldSettings(System.Guid licenseeId, System.Guid reportID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISettings/GetReportCustomFieldSettings", ReplyAction="http://tempuri.org/ISettings/GetReportCustomFieldSettingsResponse")]
        System.IAsyncResult BeginGetReportCustomFieldSettings(System.Guid licenseeId, System.Guid reportID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ReportCustomFieldSettings> EndGetReportCustomFieldSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettings/AddUpdate", ReplyAction="http://tempuri.org/ISettings/AddUpdateResponse")]
        void AddUpdate(System.Guid licenseeId, System.Guid reportID, string fields);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISettings/AddUpdate", ReplyAction="http://tempuri.org/ISettings/AddUpdateResponse")]
        System.IAsyncResult BeginAddUpdate(System.Guid licenseeId, System.Guid reportID, string fields, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettings/AddUpdateNamedSchedule", ReplyAction="http://tempuri.org/ISettings/AddUpdateNamedScheduleResponse")]
        void AddUpdateNamedSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISettings/AddUpdateNamedSchedule", ReplyAction="http://tempuri.org/ISettings/AddUpdateNamedScheduleResponse")]
        System.IAsyncResult BeginAddUpdateNamedSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule, System.AsyncCallback callback, object asyncState);
        
        void EndAddUpdateNamedSchedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettings/IsNamedScheduleExist", ReplyAction="http://tempuri.org/ISettings/IsNamedScheduleExistResponse")]
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule IsNamedScheduleExist(out bool isExist, string scheduleName, System.Nullable<System.Guid> incomingScheduleId, System.Guid licenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISettings/IsNamedScheduleExist", ReplyAction="http://tempuri.org/ISettings/IsNamedScheduleExistResponse")]
        System.IAsyncResult BeginIsNamedScheduleExist(string scheduleName, System.Nullable<System.Guid> incomingScheduleId, System.Guid licenseeId, System.AsyncCallback callback, object asyncState);
        
        MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule EndIsNamedScheduleExist(out bool isExist, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettings/GetNamedScheduleList", ReplyAction="http://tempuri.org/ISettings/GetNamedScheduleListResponse")]
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule> GetNamedScheduleList(System.Guid LicenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISettings/GetNamedScheduleList", ReplyAction="http://tempuri.org/ISettings/GetNamedScheduleListResponse")]
        System.IAsyncResult BeginGetNamedScheduleList(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule> EndGetNamedScheduleList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettings/CheckNamedscheduleExist", ReplyAction="http://tempuri.org/ISettings/CheckNamedscheduleExistResponse")]
        bool CheckNamedscheduleExist(System.Guid licenseeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISettings/CheckNamedscheduleExist", ReplyAction="http://tempuri.org/ISettings/CheckNamedscheduleExistResponse")]
        System.IAsyncResult BeginCheckNamedscheduleExist(System.Guid licenseeId, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckNamedscheduleExist(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISettingsChannel : MyAgencyVault.VM.MyAgencyVaultSvc.ISettings, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportCustomFieldSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportCustomFieldSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ReportCustomFieldSettings> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ReportCustomFieldSettings>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsNamedScheduleExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsNamedScheduleExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool isExist {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNamedScheduleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNamedScheduleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckNamedscheduleExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckNamedscheduleExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SettingsClient : System.ServiceModel.ClientBase<MyAgencyVault.VM.MyAgencyVaultSvc.ISettings>, MyAgencyVault.VM.MyAgencyVaultSvc.ISettings {
        
        private BeginOperationDelegate onBeginGetReportCustomFieldSettingsDelegate;
        
        private EndOperationDelegate onEndGetReportCustomFieldSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportCustomFieldSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateDelegate;
        
        private EndOperationDelegate onEndAddUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUpdateNamedScheduleDelegate;
        
        private EndOperationDelegate onEndAddUpdateNamedScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onAddUpdateNamedScheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsNamedScheduleExistDelegate;
        
        private EndOperationDelegate onEndIsNamedScheduleExistDelegate;
        
        private System.Threading.SendOrPostCallback onIsNamedScheduleExistCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNamedScheduleListDelegate;
        
        private EndOperationDelegate onEndGetNamedScheduleListDelegate;
        
        private System.Threading.SendOrPostCallback onGetNamedScheduleListCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckNamedscheduleExistDelegate;
        
        private EndOperationDelegate onEndCheckNamedscheduleExistDelegate;
        
        private System.Threading.SendOrPostCallback onCheckNamedscheduleExistCompletedDelegate;
        
        public SettingsClient() {
        }
        
        public SettingsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SettingsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetReportCustomFieldSettingsCompletedEventArgs> GetReportCustomFieldSettingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddUpdateNamedScheduleCompleted;
        
        public event System.EventHandler<IsNamedScheduleExistCompletedEventArgs> IsNamedScheduleExistCompleted;
        
        public event System.EventHandler<GetNamedScheduleListCompletedEventArgs> GetNamedScheduleListCompleted;
        
        public event System.EventHandler<CheckNamedscheduleExistCompletedEventArgs> CheckNamedscheduleExistCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ReportCustomFieldSettings> GetReportCustomFieldSettings(System.Guid licenseeId, System.Guid reportID) {
            return base.Channel.GetReportCustomFieldSettings(licenseeId, reportID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReportCustomFieldSettings(System.Guid licenseeId, System.Guid reportID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReportCustomFieldSettings(licenseeId, reportID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ReportCustomFieldSettings> EndGetReportCustomFieldSettings(System.IAsyncResult result) {
            return base.Channel.EndGetReportCustomFieldSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetReportCustomFieldSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licenseeId = ((System.Guid)(inValues[0]));
            System.Guid reportID = ((System.Guid)(inValues[1]));
            return this.BeginGetReportCustomFieldSettings(licenseeId, reportID, callback, asyncState);
        }
        
        private object[] OnEndGetReportCustomFieldSettings(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.ReportCustomFieldSettings> retVal = this.EndGetReportCustomFieldSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReportCustomFieldSettingsCompleted(object state) {
            if ((this.GetReportCustomFieldSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportCustomFieldSettingsCompleted(this, new GetReportCustomFieldSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportCustomFieldSettingsAsync(System.Guid licenseeId, System.Guid reportID) {
            this.GetReportCustomFieldSettingsAsync(licenseeId, reportID, null);
        }
        
        public void GetReportCustomFieldSettingsAsync(System.Guid licenseeId, System.Guid reportID, object userState) {
            if ((this.onBeginGetReportCustomFieldSettingsDelegate == null)) {
                this.onBeginGetReportCustomFieldSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetReportCustomFieldSettings);
            }
            if ((this.onEndGetReportCustomFieldSettingsDelegate == null)) {
                this.onEndGetReportCustomFieldSettingsDelegate = new EndOperationDelegate(this.OnEndGetReportCustomFieldSettings);
            }
            if ((this.onGetReportCustomFieldSettingsCompletedDelegate == null)) {
                this.onGetReportCustomFieldSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportCustomFieldSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportCustomFieldSettingsDelegate, new object[] {
                        licenseeId,
                        reportID}, this.onEndGetReportCustomFieldSettingsDelegate, this.onGetReportCustomFieldSettingsCompletedDelegate, userState);
        }
        
        public void AddUpdate(System.Guid licenseeId, System.Guid reportID, string fields) {
            base.Channel.AddUpdate(licenseeId, reportID, fields);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdate(System.Guid licenseeId, System.Guid reportID, string fields, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdate(licenseeId, reportID, fields, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdate(System.IAsyncResult result) {
            base.Channel.EndAddUpdate(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licenseeId = ((System.Guid)(inValues[0]));
            System.Guid reportID = ((System.Guid)(inValues[1]));
            string fields = ((string)(inValues[2]));
            return this.BeginAddUpdate(licenseeId, reportID, fields, callback, asyncState);
        }
        
        private object[] OnEndAddUpdate(System.IAsyncResult result) {
            this.EndAddUpdate(result);
            return null;
        }
        
        private void OnAddUpdateCompleted(object state) {
            if ((this.AddUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateAsync(System.Guid licenseeId, System.Guid reportID, string fields) {
            this.AddUpdateAsync(licenseeId, reportID, fields, null);
        }
        
        public void AddUpdateAsync(System.Guid licenseeId, System.Guid reportID, string fields, object userState) {
            if ((this.onBeginAddUpdateDelegate == null)) {
                this.onBeginAddUpdateDelegate = new BeginOperationDelegate(this.OnBeginAddUpdate);
            }
            if ((this.onEndAddUpdateDelegate == null)) {
                this.onEndAddUpdateDelegate = new EndOperationDelegate(this.OnEndAddUpdate);
            }
            if ((this.onAddUpdateCompletedDelegate == null)) {
                this.onAddUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateDelegate, new object[] {
                        licenseeId,
                        reportID,
                        fields}, this.onEndAddUpdateDelegate, this.onAddUpdateCompletedDelegate, userState);
        }
        
        public void AddUpdateNamedSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule) {
            base.Channel.AddUpdateNamedSchedule(schedule);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUpdateNamedSchedule(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUpdateNamedSchedule(schedule, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddUpdateNamedSchedule(System.IAsyncResult result) {
            base.Channel.EndAddUpdateNamedSchedule(result);
        }
        
        private System.IAsyncResult OnBeginAddUpdateNamedSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule = ((MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule)(inValues[0]));
            return this.BeginAddUpdateNamedSchedule(schedule, callback, asyncState);
        }
        
        private object[] OnEndAddUpdateNamedSchedule(System.IAsyncResult result) {
            this.EndAddUpdateNamedSchedule(result);
            return null;
        }
        
        private void OnAddUpdateNamedScheduleCompleted(object state) {
            if ((this.AddUpdateNamedScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUpdateNamedScheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUpdateNamedScheduleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule) {
            this.AddUpdateNamedScheduleAsync(schedule, null);
        }
        
        public void AddUpdateNamedScheduleAsync(MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule schedule, object userState) {
            if ((this.onBeginAddUpdateNamedScheduleDelegate == null)) {
                this.onBeginAddUpdateNamedScheduleDelegate = new BeginOperationDelegate(this.OnBeginAddUpdateNamedSchedule);
            }
            if ((this.onEndAddUpdateNamedScheduleDelegate == null)) {
                this.onEndAddUpdateNamedScheduleDelegate = new EndOperationDelegate(this.OnEndAddUpdateNamedSchedule);
            }
            if ((this.onAddUpdateNamedScheduleCompletedDelegate == null)) {
                this.onAddUpdateNamedScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUpdateNamedScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginAddUpdateNamedScheduleDelegate, new object[] {
                        schedule}, this.onEndAddUpdateNamedScheduleDelegate, this.onAddUpdateNamedScheduleCompletedDelegate, userState);
        }
        
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule IsNamedScheduleExist(out bool isExist, string scheduleName, System.Nullable<System.Guid> incomingScheduleId, System.Guid licenseeId) {
            return base.Channel.IsNamedScheduleExist(out isExist, scheduleName, incomingScheduleId, licenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsNamedScheduleExist(string scheduleName, System.Nullable<System.Guid> incomingScheduleId, System.Guid licenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsNamedScheduleExist(scheduleName, incomingScheduleId, licenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule EndIsNamedScheduleExist(out bool isExist, System.IAsyncResult result) {
            return base.Channel.EndIsNamedScheduleExist(out isExist, result);
        }
        
        private System.IAsyncResult OnBeginIsNamedScheduleExist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string scheduleName = ((string)(inValues[0]));
            System.Nullable<System.Guid> incomingScheduleId = ((System.Nullable<System.Guid>)(inValues[1]));
            System.Guid licenseeId = ((System.Guid)(inValues[2]));
            return this.BeginIsNamedScheduleExist(scheduleName, incomingScheduleId, licenseeId, callback, asyncState);
        }
        
        private object[] OnEndIsNamedScheduleExist(System.IAsyncResult result) {
            bool isExist = this.GetDefaultValueForInitialization<bool>();
            MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule retVal = this.EndIsNamedScheduleExist(out isExist, result);
            return new object[] {
                    isExist,
                    retVal};
        }
        
        private void OnIsNamedScheduleExistCompleted(object state) {
            if ((this.IsNamedScheduleExistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsNamedScheduleExistCompleted(this, new IsNamedScheduleExistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsNamedScheduleExistAsync(string scheduleName, System.Nullable<System.Guid> incomingScheduleId, System.Guid licenseeId) {
            this.IsNamedScheduleExistAsync(scheduleName, incomingScheduleId, licenseeId, null);
        }
        
        public void IsNamedScheduleExistAsync(string scheduleName, System.Nullable<System.Guid> incomingScheduleId, System.Guid licenseeId, object userState) {
            if ((this.onBeginIsNamedScheduleExistDelegate == null)) {
                this.onBeginIsNamedScheduleExistDelegate = new BeginOperationDelegate(this.OnBeginIsNamedScheduleExist);
            }
            if ((this.onEndIsNamedScheduleExistDelegate == null)) {
                this.onEndIsNamedScheduleExistDelegate = new EndOperationDelegate(this.OnEndIsNamedScheduleExist);
            }
            if ((this.onIsNamedScheduleExistCompletedDelegate == null)) {
                this.onIsNamedScheduleExistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsNamedScheduleExistCompleted);
            }
            base.InvokeAsync(this.onBeginIsNamedScheduleExistDelegate, new object[] {
                        scheduleName,
                        incomingScheduleId,
                        licenseeId}, this.onEndIsNamedScheduleExistDelegate, this.onIsNamedScheduleExistCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule> GetNamedScheduleList(System.Guid LicenseeId) {
            return base.Channel.GetNamedScheduleList(LicenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNamedScheduleList(System.Guid LicenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNamedScheduleList(LicenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule> EndGetNamedScheduleList(System.IAsyncResult result) {
            return base.Channel.EndGetNamedScheduleList(result);
        }
        
        private System.IAsyncResult OnBeginGetNamedScheduleList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid LicenseeId = ((System.Guid)(inValues[0]));
            return this.BeginGetNamedScheduleList(LicenseeId, callback, asyncState);
        }
        
        private object[] OnEndGetNamedScheduleList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyAgencyVault.VM.MyAgencyVaultSvc.PayorIncomingSchedule> retVal = this.EndGetNamedScheduleList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNamedScheduleListCompleted(object state) {
            if ((this.GetNamedScheduleListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNamedScheduleListCompleted(this, new GetNamedScheduleListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNamedScheduleListAsync(System.Guid LicenseeId) {
            this.GetNamedScheduleListAsync(LicenseeId, null);
        }
        
        public void GetNamedScheduleListAsync(System.Guid LicenseeId, object userState) {
            if ((this.onBeginGetNamedScheduleListDelegate == null)) {
                this.onBeginGetNamedScheduleListDelegate = new BeginOperationDelegate(this.OnBeginGetNamedScheduleList);
            }
            if ((this.onEndGetNamedScheduleListDelegate == null)) {
                this.onEndGetNamedScheduleListDelegate = new EndOperationDelegate(this.OnEndGetNamedScheduleList);
            }
            if ((this.onGetNamedScheduleListCompletedDelegate == null)) {
                this.onGetNamedScheduleListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNamedScheduleListCompleted);
            }
            base.InvokeAsync(this.onBeginGetNamedScheduleListDelegate, new object[] {
                        LicenseeId}, this.onEndGetNamedScheduleListDelegate, this.onGetNamedScheduleListCompletedDelegate, userState);
        }
        
        public bool CheckNamedscheduleExist(System.Guid licenseeId) {
            return base.Channel.CheckNamedscheduleExist(licenseeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckNamedscheduleExist(System.Guid licenseeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckNamedscheduleExist(licenseeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckNamedscheduleExist(System.IAsyncResult result) {
            return base.Channel.EndCheckNamedscheduleExist(result);
        }
        
        private System.IAsyncResult OnBeginCheckNamedscheduleExist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid licenseeId = ((System.Guid)(inValues[0]));
            return this.BeginCheckNamedscheduleExist(licenseeId, callback, asyncState);
        }
        
        private object[] OnEndCheckNamedscheduleExist(System.IAsyncResult result) {
            bool retVal = this.EndCheckNamedscheduleExist(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckNamedscheduleExistCompleted(object state) {
            if ((this.CheckNamedscheduleExistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckNamedscheduleExistCompleted(this, new CheckNamedscheduleExistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckNamedscheduleExistAsync(System.Guid licenseeId) {
            this.CheckNamedscheduleExistAsync(licenseeId, null);
        }
        
        public void CheckNamedscheduleExistAsync(System.Guid licenseeId, object userState) {
            if ((this.onBeginCheckNamedscheduleExistDelegate == null)) {
                this.onBeginCheckNamedscheduleExistDelegate = new BeginOperationDelegate(this.OnBeginCheckNamedscheduleExist);
            }
            if ((this.onEndCheckNamedscheduleExistDelegate == null)) {
                this.onEndCheckNamedscheduleExistDelegate = new EndOperationDelegate(this.OnEndCheckNamedscheduleExist);
            }
            if ((this.onCheckNamedscheduleExistCompletedDelegate == null)) {
                this.onCheckNamedscheduleExistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckNamedscheduleExistCompleted);
            }
            base.InvokeAsync(this.onBeginCheckNamedscheduleExistDelegate, new object[] {
                        licenseeId}, this.onEndCheckNamedscheduleExistDelegate, this.onCheckNamedscheduleExistCompletedDelegate, userState);
        }
    }
}
